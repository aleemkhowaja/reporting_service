<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="SECURITY" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.SECURITYVO" >
    <id column="CODE" property="CODE" />
    <id column="COMP_CODE" property="COMP_CODE" />
    <result column="SHORT_DESC_ENG" property="SHORT_DESC_ENG" />
    <result column="SHORT_DESC_ARAB" property="SHORT_DESC_ARAB" />
    <result column="LONG_DESC_ENG" property="LONG_DESC_ENG" />
    <result column="LONG_DESC_ARAB" property="LONG_DESC_ARAB" />
    <result column="INDUSTRY_CODE" property="INDUSTRY_CODE" />
    <result column="SEC_INDUSTRY_CODE" property="SEC_INDUSTRY_CODE" />
    <result column="NOMINAL_VALUE" property="NOMINAL_VALUE" />
    <result column="B_HOLDING_CY" property="b_HOLDING_CY" />
    <result column="B_HOLDING_GL" property="b_HOLDING_GL" />
    <result column="B_HOLDING_CIF" property="b_HOLDING_CIF" />
    <result column="B_HOLDING_SL" property="b_HOLDING_SL" />
    <result column="C_HOLDING_CY" property="c_HOLDING_CY" />
    <result column="C_HOLDING_GL" property="c_HOLDING_GL" />
    <result column="C_HOLDING_CIF" property="c_HOLDING_CIF" />
    <result column="C_HOLDING_SL" property="c_HOLDING_SL" />
    <result column="GAIN_ACC_CY" property="GAIN_ACC_CY" />
    <result column="GAIN_ACC_GL" property="GAIN_ACC_GL" />
    <result column="GAIN_ACC_CIF" property="GAIN_ACC_CIF" />
    <result column="GAIN_ACC_SL" property="GAIN_ACC_SL" />
    <result column="LOSS_ACC_CY" property="LOSS_ACC_CY" />
    <result column="LOSS_ACC_GL" property="LOSS_ACC_GL" />
    <result column="LOSS_ACC_CIF" property="LOSS_ACC_CIF" />
    <result column="LOSS_ACC_SL" property="LOSS_ACC_SL" />
    <result column="SECURITY_TYPE" property="SECURITY_TYPE" />
    <result column="TRADE_CY" property="TRADE_CY" />
    <result column="MARKET_VOLUME" property="MARKET_VOLUME" />
    <result column="MANAGEMENT_FEE" property="MANAGEMENT_FEE" />
    <result column="VALUATION_PERCENTAGE" property="VALUATION_PERCENTAGE" />
    <result column="TRANSFERABLE_DATE" property="TRANSFERABLE_DATE" />
    <result column="UNLISTED_SHARE" property="UNLISTED_SHARE" />
    <result column="B_PREMIUM_PAID_CY" property="b_PREMIUM_PAID_CY" />
    <result column="B_PREMIUM_PAID_GL" property="b_PREMIUM_PAID_GL" />
    <result column="B_PREMIUM_PAID_CIF" property="b_PREMIUM_PAID_CIF" />
    <result column="B_PREMIUM_PAID_SL" property="b_PREMIUM_PAID_SL" />
    <result column="C_PREMIUM_PAID_CY" property="c_PREMIUM_PAID_CY" />
    <result column="C_PREMIUM_PAID_GL" property="c_PREMIUM_PAID_GL" />
    <result column="C_PREMIUM_PAID_CIF" property="c_PREMIUM_PAID_CIF" />
    <result column="C_PREMIUM_PAID_SL" property="c_PREMIUM_PAID_SL" />
    <result column="CAPITAL" property="CAPITAL" />
    <result column="KSE_SYMBOL" property="KSE_SYMBOL" />
    <result column="REUTER" property="REUTER" />
    <result column="REUTOR" property="REUTOR" />
    <result column="COST_REPL_GAIN_ACC_CY" property="COST_REPL_GAIN_ACC_CY" />
    <result column="COST_REPL_GAIN_ACC_GL" property="COST_REPL_GAIN_ACC_GL" />
    <result column="COST_REPL_GAIN_ACC_CIF" property="COST_REPL_GAIN_ACC_CIF" />
    <result column="COST_REPL_GAIN_ACC_SL" property="COST_REPL_GAIN_ACC_SL" />
    <result column="COST_REPL_LOSS_ACC_CY" property="COST_REPL_LOSS_ACC_CY" />
    <result column="COST_REPL_LOSS_ACC_GL" property="COST_REPL_LOSS_ACC_GL" />
    <result column="COST_REPL_LOSS_ACC_CIF" property="COST_REPL_LOSS_ACC_CIF" />
    <result column="COST_REPL_LOSS_ACC_SL" property="COST_REPL_LOSS_ACC_SL" />
    <result column="B_ACCR_DIV_CY" property="b_ACCR_DIV_CY" />
    <result column="B_ACCR_DIV_GL" property="b_ACCR_DIV_GL" />
    <result column="B_ACCR_DIV_CIF" property="b_ACCR_DIV_CIF" />
    <result column="B_ACCR_DIV_SL" property="b_ACCR_DIV_SL" />
    <result column="C_ACCR_DIV_CY" property="c_ACCR_DIV_CY" />
    <result column="C_ACCR_DIV_GL" property="c_ACCR_DIV_GL" />
    <result column="C_ACCR_DIV_CIF" property="c_ACCR_DIV_CIF" />
    <result column="C_ACCR_DIV_SL" property="c_ACCR_DIV_SL" />
    <result column="B_DIV_INC_CY" property="b_DIV_INC_CY" />
    <result column="B_DIV_INC_GL" property="b_DIV_INC_GL" />
    <result column="B_DIV_INC_CIF" property="b_DIV_INC_CIF" />
    <result column="B_DIV_INC_SL" property="b_DIV_INC_SL" />
    <result column="PAID_UP_PERCENTAGE" property="PAID_UP_PERCENTAGE" />
    <result column="KCC_CODE" property="KCC_CODE" />
    <result column="REAL_ESTATE" property="REAL_ESTATE" />
    <result column="ADDITIONAL_REFERENCE" property="ADDITIONAL_REFERENCE" />
    <result column="B_FWD_INT_RECEIV_CY" property="b_FWD_INT_RECEIV_CY" />
    <result column="B_FWD_INT_RECEIV_GL" property="b_FWD_INT_RECEIV_GL" />
    <result column="B_FWD_INT_RECEIV_CIF" property="b_FWD_INT_RECEIV_CIF" />
    <result column="B_FWD_INT_RECEIV_SL" property="b_FWD_INT_RECEIV_SL" />
    <result column="B_FWD_INT_INCOME_CY" property="b_FWD_INT_INCOME_CY" />
    <result column="B_FWD_INT_INCOME_GL" property="b_FWD_INT_INCOME_GL" />
    <result column="B_FWD_INT_INCOME_CIF" property="b_FWD_INT_INCOME_CIF" />
    <result column="B_FWD_INT_INCOME_SL" property="b_FWD_INT_INCOME_SL" />
    <result column="C_FWD_INT_RECEIV_CY" property="c_FWD_INT_RECEIV_CY" />
    <result column="C_FWD_INT_RECEIV_GL" property="c_FWD_INT_RECEIV_GL" />
    <result column="C_FWD_INT_RECEIV_CIF" property="c_FWD_INT_RECEIV_CIF" />
    <result column="C_FWD_INT_RECEIV_SL" property="c_FWD_INT_RECEIV_SL" />
    <result column="C_FWD_INT_INCOME_CY" property="c_FWD_INT_INCOME_CY" />
    <result column="C_FWD_INT_INCOME_GL" property="c_FWD_INT_INCOME_GL" />
    <result column="C_FWD_INT_INCOME_CIF" property="c_FWD_INT_INCOME_CIF" />
    <result column="C_FWD_INT_INCOME_SL" property="c_FWD_INT_INCOME_SL" />
    <result column="B_FWD_INT_REFUND_INCOME_CY" property="b_FWD_INT_REFUND_INCOME_CY" />
    <result column="B_FWD_INT_REFUND_INCOME_GL" property="b_FWD_INT_REFUND_INCOME_GL" />
    <result column="B_FWD_INT_REFUND_INCOME_CIF" property="b_FWD_INT_REFUND_INCOME_CIF" />
    <result column="B_FWD_INT_REFUND_INCOME_SL" property="b_FWD_INT_REFUND_INCOME_SL" />
    <result column="C_FWD_INT_REFUND_INCOME_CY" property="c_FWD_INT_REFUND_INCOME_CY" />
    <result column="C_FWD_INT_REFUND_INCOME_GL" property="c_FWD_INT_REFUND_INCOME_GL" />
    <result column="C_FWD_INT_REFUND_INCOME_CIF" property="c_FWD_INT_REFUND_INCOME_CIF" />
    <result column="C_FWD_INT_REFUND_INCOME_SL" property="c_FWD_INT_REFUND_INCOME_SL" />
    <result column="B_FWD_INT_REFUND_EXPENSE_CY" property="b_FWD_INT_REFUND_EXPENSE_CY" />
    <result column="B_FWD_INT_REFUND_EXPENSE_GL" property="b_FWD_INT_REFUND_EXPENSE_GL" />
    <result column="B_FWD_INT_REFUND_EXPENSE_CIF" property="b_FWD_INT_REFUND_EXPENSE_CIF" />
    <result column="B_FWD_INT_REFUND_EXPENSE_SL" property="b_FWD_INT_REFUND_EXPENSE_SL" />
    <result column="C_FWD_INT_REFUND_EXPENSE_CY" property="c_FWD_INT_REFUND_EXPENSE_CY" />
    <result column="C_FWD_INT_REFUND_EXPENSE_GL" property="c_FWD_INT_REFUND_EXPENSE_GL" />
    <result column="C_FWD_INT_REFUND_EXPENSE_CIF" property="c_FWD_INT_REFUND_EXPENSE_CIF" />
    <result column="C_FWD_INT_REFUND_EXPENSE_SL" property="c_FWD_INT_REFUND_EXPENSE_SL" />
    <result column="B_RGHT_SUBS_CY" property="b_RGHT_SUBS_CY" />
    <result column="B_RGHT_SUBS_GL" property="b_RGHT_SUBS_GL" />
    <result column="B_RGHT_SUBS_CIF" property="b_RGHT_SUBS_CIF" />
    <result column="B_RGHT_SUBS_SL" property="b_RGHT_SUBS_SL" />
    <result column="C_RGHT_SUBS_CY" property="c_RGHT_SUBS_CY" />
    <result column="C_RGHT_SUBS_GL" property="c_RGHT_SUBS_GL" />
    <result column="C_RGHT_SUBS_CIF" property="c_RGHT_SUBS_CIF" />
    <result column="C_RGHT_SUBS_SL" property="c_RGHT_SUBS_SL" />
  </resultMap>
  <sql id="Base_Column_List" >
    CODE, COMP_CODE, SHORT_DESC_ENG, SHORT_DESC_ARAB, LONG_DESC_ENG, LONG_DESC_ARAB, 
    INDUSTRY_CODE, SEC_INDUSTRY_CODE, NOMINAL_VALUE, B_HOLDING_CY, B_HOLDING_GL, B_HOLDING_CIF, 
    B_HOLDING_SL, C_HOLDING_CY, C_HOLDING_GL, C_HOLDING_CIF, C_HOLDING_SL, GAIN_ACC_CY, 
    GAIN_ACC_GL, GAIN_ACC_CIF, GAIN_ACC_SL, LOSS_ACC_CY, LOSS_ACC_GL, LOSS_ACC_CIF, LOSS_ACC_SL, 
    SECURITY_TYPE, TRADE_CY, MARKET_VOLUME, MANAGEMENT_FEE, VALUATION_PERCENTAGE, TRANSFERABLE_DATE, 
    UNLISTED_SHARE, B_PREMIUM_PAID_CY, B_PREMIUM_PAID_GL, B_PREMIUM_PAID_CIF, B_PREMIUM_PAID_SL, 
    C_PREMIUM_PAID_CY, C_PREMIUM_PAID_GL, C_PREMIUM_PAID_CIF, C_PREMIUM_PAID_SL, CAPITAL, 
    KSE_SYMBOL, REUTER, REUTOR, COST_REPL_GAIN_ACC_CY, COST_REPL_GAIN_ACC_GL, COST_REPL_GAIN_ACC_CIF, 
    COST_REPL_GAIN_ACC_SL, COST_REPL_LOSS_ACC_CY, COST_REPL_LOSS_ACC_GL, COST_REPL_LOSS_ACC_CIF, 
    COST_REPL_LOSS_ACC_SL, B_ACCR_DIV_CY, B_ACCR_DIV_GL, B_ACCR_DIV_CIF, B_ACCR_DIV_SL, 
    C_ACCR_DIV_CY, C_ACCR_DIV_GL, C_ACCR_DIV_CIF, C_ACCR_DIV_SL, B_DIV_INC_CY, B_DIV_INC_GL, 
    B_DIV_INC_CIF, B_DIV_INC_SL, PAID_UP_PERCENTAGE, KCC_CODE, REAL_ESTATE, ADDITIONAL_REFERENCE, 
    B_FWD_INT_RECEIV_CY, B_FWD_INT_RECEIV_GL, B_FWD_INT_RECEIV_CIF, B_FWD_INT_RECEIV_SL, 
    B_FWD_INT_INCOME_CY, B_FWD_INT_INCOME_GL, B_FWD_INT_INCOME_CIF, B_FWD_INT_INCOME_SL, 
    C_FWD_INT_RECEIV_CY, C_FWD_INT_RECEIV_GL, C_FWD_INT_RECEIV_CIF, C_FWD_INT_RECEIV_SL, 
    C_FWD_INT_INCOME_CY, C_FWD_INT_INCOME_GL, C_FWD_INT_INCOME_CIF, C_FWD_INT_INCOME_SL, 
    B_FWD_INT_REFUND_INCOME_CY, B_FWD_INT_REFUND_INCOME_GL, B_FWD_INT_REFUND_INCOME_CIF, 
    B_FWD_INT_REFUND_INCOME_SL, C_FWD_INT_REFUND_INCOME_CY, C_FWD_INT_REFUND_INCOME_GL, 
    C_FWD_INT_REFUND_INCOME_CIF, C_FWD_INT_REFUND_INCOME_SL, B_FWD_INT_REFUND_EXPENSE_CY, 
    B_FWD_INT_REFUND_EXPENSE_GL, B_FWD_INT_REFUND_EXPENSE_CIF, B_FWD_INT_REFUND_EXPENSE_SL, 
    C_FWD_INT_REFUND_EXPENSE_CY, C_FWD_INT_REFUND_EXPENSE_GL, C_FWD_INT_REFUND_EXPENSE_CIF, 
    C_FWD_INT_REFUND_EXPENSE_SL, B_RGHT_SUBS_CY, B_RGHT_SUBS_GL, B_RGHT_SUBS_CIF, B_RGHT_SUBS_SL, 
    C_RGHT_SUBS_CY, C_RGHT_SUBS_GL, C_RGHT_SUBS_CIF, C_RGHT_SUBS_SL
  </sql>
  <select id="selectSECURITY" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.SECURITYVOKey" >
    select 
    <include refid="Base_Column_List" />
    from SECURITY
    where CODE = #{CODE}
      and COMP_CODE = #{COMP_CODE}
  </select>
  <delete id="deleteSECURITY" parameterType="com.path.dbmaps.vo.SECURITYVOKey" >
    delete from SECURITY
    where CODE = #{CODE}
      and COMP_CODE = #{COMP_CODE}
  </delete>
  <insert id="insertSECURITY" parameterType="com.path.dbmaps.vo.SECURITYVO" >
    insert into SECURITY
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="CODE != null and CODE != emptyBigDecimalValue" >
        CODE,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="SHORT_DESC_ENG != null" >
        SHORT_DESC_ENG,
      </if>
      <if test="SHORT_DESC_ARAB != null" >
        SHORT_DESC_ARAB,
      </if>
      <if test="LONG_DESC_ENG != null" >
        LONG_DESC_ENG,
      </if>
      <if test="LONG_DESC_ARAB != null" >
        LONG_DESC_ARAB,
      </if>
      <if test="INDUSTRY_CODE != null and INDUSTRY_CODE != emptyBigDecimalValue" >
        INDUSTRY_CODE,
      </if>
      <if test="SEC_INDUSTRY_CODE != null and SEC_INDUSTRY_CODE != emptyBigDecimalValue" >
        SEC_INDUSTRY_CODE,
      </if>
      <if test="NOMINAL_VALUE != null and NOMINAL_VALUE != emptyBigDecimalValue" >
        NOMINAL_VALUE,
      </if>
      <if test="b_HOLDING_CY != null and b_HOLDING_CY != emptyBigDecimalValue" >
        B_HOLDING_CY,
      </if>
      <if test="b_HOLDING_GL != null and b_HOLDING_GL != emptyBigDecimalValue" >
        B_HOLDING_GL,
      </if>
      <if test="b_HOLDING_CIF != null and b_HOLDING_CIF != emptyBigDecimalValue" >
        B_HOLDING_CIF,
      </if>
      <if test="b_HOLDING_SL != null and b_HOLDING_SL != emptyBigDecimalValue" >
        B_HOLDING_SL,
      </if>
      <if test="c_HOLDING_CY != null and c_HOLDING_CY != emptyBigDecimalValue" >
        C_HOLDING_CY,
      </if>
      <if test="c_HOLDING_GL != null and c_HOLDING_GL != emptyBigDecimalValue" >
        C_HOLDING_GL,
      </if>
      <if test="c_HOLDING_CIF != null and c_HOLDING_CIF != emptyBigDecimalValue" >
        C_HOLDING_CIF,
      </if>
      <if test="c_HOLDING_SL != null and c_HOLDING_SL != emptyBigDecimalValue" >
        C_HOLDING_SL,
      </if>
      <if test="GAIN_ACC_CY != null and GAIN_ACC_CY != emptyBigDecimalValue" >
        GAIN_ACC_CY,
      </if>
      <if test="GAIN_ACC_GL != null and GAIN_ACC_GL != emptyBigDecimalValue" >
        GAIN_ACC_GL,
      </if>
      <if test="GAIN_ACC_CIF != null and GAIN_ACC_CIF != emptyBigDecimalValue" >
        GAIN_ACC_CIF,
      </if>
      <if test="GAIN_ACC_SL != null and GAIN_ACC_SL != emptyBigDecimalValue" >
        GAIN_ACC_SL,
      </if>
      <if test="LOSS_ACC_CY != null and LOSS_ACC_CY != emptyBigDecimalValue" >
        LOSS_ACC_CY,
      </if>
      <if test="LOSS_ACC_GL != null and LOSS_ACC_GL != emptyBigDecimalValue" >
        LOSS_ACC_GL,
      </if>
      <if test="LOSS_ACC_CIF != null and LOSS_ACC_CIF != emptyBigDecimalValue" >
        LOSS_ACC_CIF,
      </if>
      <if test="LOSS_ACC_SL != null and LOSS_ACC_SL != emptyBigDecimalValue" >
        LOSS_ACC_SL,
      </if>
      <if test="SECURITY_TYPE != null and SECURITY_TYPE != emptyBigDecimalValue" >
        SECURITY_TYPE,
      </if>
      <if test="TRADE_CY != null and TRADE_CY != emptyBigDecimalValue" >
        TRADE_CY,
      </if>
      <if test="MARKET_VOLUME != null and MARKET_VOLUME != emptyBigDecimalValue" >
        MARKET_VOLUME,
      </if>
      <if test="MANAGEMENT_FEE != null" >
        MANAGEMENT_FEE,
      </if>
      <if test="VALUATION_PERCENTAGE != null and VALUATION_PERCENTAGE != emptyBigDecimalValue" >
        VALUATION_PERCENTAGE,
      </if>
      <if test="TRANSFERABLE_DATE != null" >
        TRANSFERABLE_DATE,
      </if>
      <if test="UNLISTED_SHARE != null" >
        UNLISTED_SHARE,
      </if>
      <if test="b_PREMIUM_PAID_CY != null and b_PREMIUM_PAID_CY != emptyBigDecimalValue" >
        B_PREMIUM_PAID_CY,
      </if>
      <if test="b_PREMIUM_PAID_GL != null and b_PREMIUM_PAID_GL != emptyBigDecimalValue" >
        B_PREMIUM_PAID_GL,
      </if>
      <if test="b_PREMIUM_PAID_CIF != null and b_PREMIUM_PAID_CIF != emptyBigDecimalValue" >
        B_PREMIUM_PAID_CIF,
      </if>
      <if test="b_PREMIUM_PAID_SL != null and b_PREMIUM_PAID_SL != emptyBigDecimalValue" >
        B_PREMIUM_PAID_SL,
      </if>
      <if test="c_PREMIUM_PAID_CY != null and c_PREMIUM_PAID_CY != emptyBigDecimalValue" >
        C_PREMIUM_PAID_CY,
      </if>
      <if test="c_PREMIUM_PAID_GL != null and c_PREMIUM_PAID_GL != emptyBigDecimalValue" >
        C_PREMIUM_PAID_GL,
      </if>
      <if test="c_PREMIUM_PAID_CIF != null and c_PREMIUM_PAID_CIF != emptyBigDecimalValue" >
        C_PREMIUM_PAID_CIF,
      </if>
      <if test="c_PREMIUM_PAID_SL != null and c_PREMIUM_PAID_SL != emptyBigDecimalValue" >
        C_PREMIUM_PAID_SL,
      </if>
      <if test="CAPITAL != null and CAPITAL != emptyBigDecimalValue" >
        CAPITAL,
      </if>
      <if test="KSE_SYMBOL != null" >
        KSE_SYMBOL,
      </if>
      <if test="REUTER != null" >
        REUTER,
      </if>
      <if test="REUTOR != null" >
        REUTOR,
      </if>
      <if test="COST_REPL_GAIN_ACC_CY != null and COST_REPL_GAIN_ACC_CY != emptyBigDecimalValue" >
        COST_REPL_GAIN_ACC_CY,
      </if>
      <if test="COST_REPL_GAIN_ACC_GL != null and COST_REPL_GAIN_ACC_GL != emptyBigDecimalValue" >
        COST_REPL_GAIN_ACC_GL,
      </if>
      <if test="COST_REPL_GAIN_ACC_CIF != null and COST_REPL_GAIN_ACC_CIF != emptyBigDecimalValue" >
        COST_REPL_GAIN_ACC_CIF,
      </if>
      <if test="COST_REPL_GAIN_ACC_SL != null and COST_REPL_GAIN_ACC_SL != emptyBigDecimalValue" >
        COST_REPL_GAIN_ACC_SL,
      </if>
      <if test="COST_REPL_LOSS_ACC_CY != null and COST_REPL_LOSS_ACC_CY != emptyBigDecimalValue" >
        COST_REPL_LOSS_ACC_CY,
      </if>
      <if test="COST_REPL_LOSS_ACC_GL != null and COST_REPL_LOSS_ACC_GL != emptyBigDecimalValue" >
        COST_REPL_LOSS_ACC_GL,
      </if>
      <if test="COST_REPL_LOSS_ACC_CIF != null and COST_REPL_LOSS_ACC_CIF != emptyBigDecimalValue" >
        COST_REPL_LOSS_ACC_CIF,
      </if>
      <if test="COST_REPL_LOSS_ACC_SL != null and COST_REPL_LOSS_ACC_SL != emptyBigDecimalValue" >
        COST_REPL_LOSS_ACC_SL,
      </if>
      <if test="b_ACCR_DIV_CY != null and b_ACCR_DIV_CY != emptyBigDecimalValue" >
        B_ACCR_DIV_CY,
      </if>
      <if test="b_ACCR_DIV_GL != null and b_ACCR_DIV_GL != emptyBigDecimalValue" >
        B_ACCR_DIV_GL,
      </if>
      <if test="b_ACCR_DIV_CIF != null and b_ACCR_DIV_CIF != emptyBigDecimalValue" >
        B_ACCR_DIV_CIF,
      </if>
      <if test="b_ACCR_DIV_SL != null and b_ACCR_DIV_SL != emptyBigDecimalValue" >
        B_ACCR_DIV_SL,
      </if>
      <if test="c_ACCR_DIV_CY != null and c_ACCR_DIV_CY != emptyBigDecimalValue" >
        C_ACCR_DIV_CY,
      </if>
      <if test="c_ACCR_DIV_GL != null and c_ACCR_DIV_GL != emptyBigDecimalValue" >
        C_ACCR_DIV_GL,
      </if>
      <if test="c_ACCR_DIV_CIF != null and c_ACCR_DIV_CIF != emptyBigDecimalValue" >
        C_ACCR_DIV_CIF,
      </if>
      <if test="c_ACCR_DIV_SL != null and c_ACCR_DIV_SL != emptyBigDecimalValue" >
        C_ACCR_DIV_SL,
      </if>
      <if test="b_DIV_INC_CY != null and b_DIV_INC_CY != emptyBigDecimalValue" >
        B_DIV_INC_CY,
      </if>
      <if test="b_DIV_INC_GL != null and b_DIV_INC_GL != emptyBigDecimalValue" >
        B_DIV_INC_GL,
      </if>
      <if test="b_DIV_INC_CIF != null and b_DIV_INC_CIF != emptyBigDecimalValue" >
        B_DIV_INC_CIF,
      </if>
      <if test="b_DIV_INC_SL != null and b_DIV_INC_SL != emptyBigDecimalValue" >
        B_DIV_INC_SL,
      </if>
      <if test="PAID_UP_PERCENTAGE != null and PAID_UP_PERCENTAGE != emptyBigDecimalValue" >
        PAID_UP_PERCENTAGE,
      </if>
      <if test="KCC_CODE != null and KCC_CODE != emptyBigDecimalValue" >
        KCC_CODE,
      </if>
      <if test="REAL_ESTATE != null" >
        REAL_ESTATE,
      </if>
      <if test="ADDITIONAL_REFERENCE != null" >
        ADDITIONAL_REFERENCE,
      </if>
      <if test="b_FWD_INT_RECEIV_CY != null and b_FWD_INT_RECEIV_CY != emptyBigDecimalValue" >
        B_FWD_INT_RECEIV_CY,
      </if>
      <if test="b_FWD_INT_RECEIV_GL != null and b_FWD_INT_RECEIV_GL != emptyBigDecimalValue" >
        B_FWD_INT_RECEIV_GL,
      </if>
      <if test="b_FWD_INT_RECEIV_CIF != null and b_FWD_INT_RECEIV_CIF != emptyBigDecimalValue" >
        B_FWD_INT_RECEIV_CIF,
      </if>
      <if test="b_FWD_INT_RECEIV_SL != null and b_FWD_INT_RECEIV_SL != emptyBigDecimalValue" >
        B_FWD_INT_RECEIV_SL,
      </if>
      <if test="b_FWD_INT_INCOME_CY != null and b_FWD_INT_INCOME_CY != emptyBigDecimalValue" >
        B_FWD_INT_INCOME_CY,
      </if>
      <if test="b_FWD_INT_INCOME_GL != null and b_FWD_INT_INCOME_GL != emptyBigDecimalValue" >
        B_FWD_INT_INCOME_GL,
      </if>
      <if test="b_FWD_INT_INCOME_CIF != null and b_FWD_INT_INCOME_CIF != emptyBigDecimalValue" >
        B_FWD_INT_INCOME_CIF,
      </if>
      <if test="b_FWD_INT_INCOME_SL != null and b_FWD_INT_INCOME_SL != emptyBigDecimalValue" >
        B_FWD_INT_INCOME_SL,
      </if>
      <if test="c_FWD_INT_RECEIV_CY != null and c_FWD_INT_RECEIV_CY != emptyBigDecimalValue" >
        C_FWD_INT_RECEIV_CY,
      </if>
      <if test="c_FWD_INT_RECEIV_GL != null and c_FWD_INT_RECEIV_GL != emptyBigDecimalValue" >
        C_FWD_INT_RECEIV_GL,
      </if>
      <if test="c_FWD_INT_RECEIV_CIF != null and c_FWD_INT_RECEIV_CIF != emptyBigDecimalValue" >
        C_FWD_INT_RECEIV_CIF,
      </if>
      <if test="c_FWD_INT_RECEIV_SL != null and c_FWD_INT_RECEIV_SL != emptyBigDecimalValue" >
        C_FWD_INT_RECEIV_SL,
      </if>
      <if test="c_FWD_INT_INCOME_CY != null and c_FWD_INT_INCOME_CY != emptyBigDecimalValue" >
        C_FWD_INT_INCOME_CY,
      </if>
      <if test="c_FWD_INT_INCOME_GL != null and c_FWD_INT_INCOME_GL != emptyBigDecimalValue" >
        C_FWD_INT_INCOME_GL,
      </if>
      <if test="c_FWD_INT_INCOME_CIF != null and c_FWD_INT_INCOME_CIF != emptyBigDecimalValue" >
        C_FWD_INT_INCOME_CIF,
      </if>
      <if test="c_FWD_INT_INCOME_SL != null and c_FWD_INT_INCOME_SL != emptyBigDecimalValue" >
        C_FWD_INT_INCOME_SL,
      </if>
      <if test="b_FWD_INT_REFUND_INCOME_CY != null and b_FWD_INT_REFUND_INCOME_CY != emptyBigDecimalValue" >
        B_FWD_INT_REFUND_INCOME_CY,
      </if>
      <if test="b_FWD_INT_REFUND_INCOME_GL != null and b_FWD_INT_REFUND_INCOME_GL != emptyBigDecimalValue" >
        B_FWD_INT_REFUND_INCOME_GL,
      </if>
      <if test="b_FWD_INT_REFUND_INCOME_CIF != null and b_FWD_INT_REFUND_INCOME_CIF != emptyBigDecimalValue" >
        B_FWD_INT_REFUND_INCOME_CIF,
      </if>
      <if test="b_FWD_INT_REFUND_INCOME_SL != null and b_FWD_INT_REFUND_INCOME_SL != emptyBigDecimalValue" >
        B_FWD_INT_REFUND_INCOME_SL,
      </if>
      <if test="c_FWD_INT_REFUND_INCOME_CY != null and c_FWD_INT_REFUND_INCOME_CY != emptyBigDecimalValue" >
        C_FWD_INT_REFUND_INCOME_CY,
      </if>
      <if test="c_FWD_INT_REFUND_INCOME_GL != null and c_FWD_INT_REFUND_INCOME_GL != emptyBigDecimalValue" >
        C_FWD_INT_REFUND_INCOME_GL,
      </if>
      <if test="c_FWD_INT_REFUND_INCOME_CIF != null and c_FWD_INT_REFUND_INCOME_CIF != emptyBigDecimalValue" >
        C_FWD_INT_REFUND_INCOME_CIF,
      </if>
      <if test="c_FWD_INT_REFUND_INCOME_SL != null and c_FWD_INT_REFUND_INCOME_SL != emptyBigDecimalValue" >
        C_FWD_INT_REFUND_INCOME_SL,
      </if>
      <if test="b_FWD_INT_REFUND_EXPENSE_CY != null and b_FWD_INT_REFUND_EXPENSE_CY != emptyBigDecimalValue" >
        B_FWD_INT_REFUND_EXPENSE_CY,
      </if>
      <if test="b_FWD_INT_REFUND_EXPENSE_GL != null and b_FWD_INT_REFUND_EXPENSE_GL != emptyBigDecimalValue" >
        B_FWD_INT_REFUND_EXPENSE_GL,
      </if>
      <if test="b_FWD_INT_REFUND_EXPENSE_CIF != null and b_FWD_INT_REFUND_EXPENSE_CIF != emptyBigDecimalValue" >
        B_FWD_INT_REFUND_EXPENSE_CIF,
      </if>
      <if test="b_FWD_INT_REFUND_EXPENSE_SL != null and b_FWD_INT_REFUND_EXPENSE_SL != emptyBigDecimalValue" >
        B_FWD_INT_REFUND_EXPENSE_SL,
      </if>
      <if test="c_FWD_INT_REFUND_EXPENSE_CY != null and c_FWD_INT_REFUND_EXPENSE_CY != emptyBigDecimalValue" >
        C_FWD_INT_REFUND_EXPENSE_CY,
      </if>
      <if test="c_FWD_INT_REFUND_EXPENSE_GL != null and c_FWD_INT_REFUND_EXPENSE_GL != emptyBigDecimalValue" >
        C_FWD_INT_REFUND_EXPENSE_GL,
      </if>
      <if test="c_FWD_INT_REFUND_EXPENSE_CIF != null and c_FWD_INT_REFUND_EXPENSE_CIF != emptyBigDecimalValue" >
        C_FWD_INT_REFUND_EXPENSE_CIF,
      </if>
      <if test="c_FWD_INT_REFUND_EXPENSE_SL != null and c_FWD_INT_REFUND_EXPENSE_SL != emptyBigDecimalValue" >
        C_FWD_INT_REFUND_EXPENSE_SL,
      </if>
      <if test="b_RGHT_SUBS_CY != null and b_RGHT_SUBS_CY != emptyBigDecimalValue" >
        B_RGHT_SUBS_CY,
      </if>
      <if test="b_RGHT_SUBS_GL != null and b_RGHT_SUBS_GL != emptyBigDecimalValue" >
        B_RGHT_SUBS_GL,
      </if>
      <if test="b_RGHT_SUBS_CIF != null and b_RGHT_SUBS_CIF != emptyBigDecimalValue" >
        B_RGHT_SUBS_CIF,
      </if>
      <if test="b_RGHT_SUBS_SL != null and b_RGHT_SUBS_SL != emptyBigDecimalValue" >
        B_RGHT_SUBS_SL,
      </if>
      <if test="c_RGHT_SUBS_CY != null and c_RGHT_SUBS_CY != emptyBigDecimalValue" >
        C_RGHT_SUBS_CY,
      </if>
      <if test="c_RGHT_SUBS_GL != null and c_RGHT_SUBS_GL != emptyBigDecimalValue" >
        C_RGHT_SUBS_GL,
      </if>
      <if test="c_RGHT_SUBS_CIF != null and c_RGHT_SUBS_CIF != emptyBigDecimalValue" >
        C_RGHT_SUBS_CIF,
      </if>
      <if test="c_RGHT_SUBS_SL != null and c_RGHT_SUBS_SL != emptyBigDecimalValue" >
        C_RGHT_SUBS_SL,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="CODE != null and CODE != emptyBigDecimalValue" >
        #{CODE},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="SHORT_DESC_ENG != null" >
        #{SHORT_DESC_ENG},
      </if>
      <if test="SHORT_DESC_ARAB != null" >
        #{SHORT_DESC_ARAB},
      </if>
      <if test="LONG_DESC_ENG != null" >
        #{LONG_DESC_ENG},
      </if>
      <if test="LONG_DESC_ARAB != null" >
        #{LONG_DESC_ARAB},
      </if>
      <if test="INDUSTRY_CODE != null and INDUSTRY_CODE != emptyBigDecimalValue" >
        #{INDUSTRY_CODE},
      </if>
      <if test="SEC_INDUSTRY_CODE != null and SEC_INDUSTRY_CODE != emptyBigDecimalValue" >
        #{SEC_INDUSTRY_CODE},
      </if>
      <if test="NOMINAL_VALUE != null and NOMINAL_VALUE != emptyBigDecimalValue" >
        #{NOMINAL_VALUE},
      </if>
      <if test="b_HOLDING_CY != null and b_HOLDING_CY != emptyBigDecimalValue" >
        #{b_HOLDING_CY},
      </if>
      <if test="b_HOLDING_GL != null and b_HOLDING_GL != emptyBigDecimalValue" >
        #{b_HOLDING_GL},
      </if>
      <if test="b_HOLDING_CIF != null and b_HOLDING_CIF != emptyBigDecimalValue" >
        #{b_HOLDING_CIF},
      </if>
      <if test="b_HOLDING_SL != null and b_HOLDING_SL != emptyBigDecimalValue" >
        #{b_HOLDING_SL},
      </if>
      <if test="c_HOLDING_CY != null and c_HOLDING_CY != emptyBigDecimalValue" >
        #{c_HOLDING_CY},
      </if>
      <if test="c_HOLDING_GL != null and c_HOLDING_GL != emptyBigDecimalValue" >
        #{c_HOLDING_GL},
      </if>
      <if test="c_HOLDING_CIF != null and c_HOLDING_CIF != emptyBigDecimalValue" >
        #{c_HOLDING_CIF},
      </if>
      <if test="c_HOLDING_SL != null and c_HOLDING_SL != emptyBigDecimalValue" >
        #{c_HOLDING_SL},
      </if>
      <if test="GAIN_ACC_CY != null and GAIN_ACC_CY != emptyBigDecimalValue" >
        #{GAIN_ACC_CY},
      </if>
      <if test="GAIN_ACC_GL != null and GAIN_ACC_GL != emptyBigDecimalValue" >
        #{GAIN_ACC_GL},
      </if>
      <if test="GAIN_ACC_CIF != null and GAIN_ACC_CIF != emptyBigDecimalValue" >
        #{GAIN_ACC_CIF},
      </if>
      <if test="GAIN_ACC_SL != null and GAIN_ACC_SL != emptyBigDecimalValue" >
        #{GAIN_ACC_SL},
      </if>
      <if test="LOSS_ACC_CY != null and LOSS_ACC_CY != emptyBigDecimalValue" >
        #{LOSS_ACC_CY},
      </if>
      <if test="LOSS_ACC_GL != null and LOSS_ACC_GL != emptyBigDecimalValue" >
        #{LOSS_ACC_GL},
      </if>
      <if test="LOSS_ACC_CIF != null and LOSS_ACC_CIF != emptyBigDecimalValue" >
        #{LOSS_ACC_CIF},
      </if>
      <if test="LOSS_ACC_SL != null and LOSS_ACC_SL != emptyBigDecimalValue" >
        #{LOSS_ACC_SL},
      </if>
      <if test="SECURITY_TYPE != null and SECURITY_TYPE != emptyBigDecimalValue" >
        #{SECURITY_TYPE},
      </if>
      <if test="TRADE_CY != null and TRADE_CY != emptyBigDecimalValue" >
        #{TRADE_CY},
      </if>
      <if test="MARKET_VOLUME != null and MARKET_VOLUME != emptyBigDecimalValue" >
        #{MARKET_VOLUME},
      </if>
      <if test="MANAGEMENT_FEE != null" >
        #{MANAGEMENT_FEE},
      </if>
      <if test="VALUATION_PERCENTAGE != null and VALUATION_PERCENTAGE != emptyBigDecimalValue" >
        #{VALUATION_PERCENTAGE},
      </if>
      <if test="TRANSFERABLE_DATE != null" >
        #{TRANSFERABLE_DATE},
      </if>
      <if test="UNLISTED_SHARE != null" >
        #{UNLISTED_SHARE},
      </if>
      <if test="b_PREMIUM_PAID_CY != null and b_PREMIUM_PAID_CY != emptyBigDecimalValue" >
        #{b_PREMIUM_PAID_CY},
      </if>
      <if test="b_PREMIUM_PAID_GL != null and b_PREMIUM_PAID_GL != emptyBigDecimalValue" >
        #{b_PREMIUM_PAID_GL},
      </if>
      <if test="b_PREMIUM_PAID_CIF != null and b_PREMIUM_PAID_CIF != emptyBigDecimalValue" >
        #{b_PREMIUM_PAID_CIF},
      </if>
      <if test="b_PREMIUM_PAID_SL != null and b_PREMIUM_PAID_SL != emptyBigDecimalValue" >
        #{b_PREMIUM_PAID_SL},
      </if>
      <if test="c_PREMIUM_PAID_CY != null and c_PREMIUM_PAID_CY != emptyBigDecimalValue" >
        #{c_PREMIUM_PAID_CY},
      </if>
      <if test="c_PREMIUM_PAID_GL != null and c_PREMIUM_PAID_GL != emptyBigDecimalValue" >
        #{c_PREMIUM_PAID_GL},
      </if>
      <if test="c_PREMIUM_PAID_CIF != null and c_PREMIUM_PAID_CIF != emptyBigDecimalValue" >
        #{c_PREMIUM_PAID_CIF},
      </if>
      <if test="c_PREMIUM_PAID_SL != null and c_PREMIUM_PAID_SL != emptyBigDecimalValue" >
        #{c_PREMIUM_PAID_SL},
      </if>
      <if test="CAPITAL != null and CAPITAL != emptyBigDecimalValue" >
        #{CAPITAL},
      </if>
      <if test="KSE_SYMBOL != null" >
        #{KSE_SYMBOL},
      </if>
      <if test="REUTER != null" >
        #{REUTER},
      </if>
      <if test="REUTOR != null" >
        #{REUTOR},
      </if>
      <if test="COST_REPL_GAIN_ACC_CY != null and COST_REPL_GAIN_ACC_CY != emptyBigDecimalValue" >
        #{COST_REPL_GAIN_ACC_CY},
      </if>
      <if test="COST_REPL_GAIN_ACC_GL != null and COST_REPL_GAIN_ACC_GL != emptyBigDecimalValue" >
        #{COST_REPL_GAIN_ACC_GL},
      </if>
      <if test="COST_REPL_GAIN_ACC_CIF != null and COST_REPL_GAIN_ACC_CIF != emptyBigDecimalValue" >
        #{COST_REPL_GAIN_ACC_CIF},
      </if>
      <if test="COST_REPL_GAIN_ACC_SL != null and COST_REPL_GAIN_ACC_SL != emptyBigDecimalValue" >
        #{COST_REPL_GAIN_ACC_SL},
      </if>
      <if test="COST_REPL_LOSS_ACC_CY != null and COST_REPL_LOSS_ACC_CY != emptyBigDecimalValue" >
        #{COST_REPL_LOSS_ACC_CY},
      </if>
      <if test="COST_REPL_LOSS_ACC_GL != null and COST_REPL_LOSS_ACC_GL != emptyBigDecimalValue" >
        #{COST_REPL_LOSS_ACC_GL},
      </if>
      <if test="COST_REPL_LOSS_ACC_CIF != null and COST_REPL_LOSS_ACC_CIF != emptyBigDecimalValue" >
        #{COST_REPL_LOSS_ACC_CIF},
      </if>
      <if test="COST_REPL_LOSS_ACC_SL != null and COST_REPL_LOSS_ACC_SL != emptyBigDecimalValue" >
        #{COST_REPL_LOSS_ACC_SL},
      </if>
      <if test="b_ACCR_DIV_CY != null and b_ACCR_DIV_CY != emptyBigDecimalValue" >
        #{b_ACCR_DIV_CY},
      </if>
      <if test="b_ACCR_DIV_GL != null and b_ACCR_DIV_GL != emptyBigDecimalValue" >
        #{b_ACCR_DIV_GL},
      </if>
      <if test="b_ACCR_DIV_CIF != null and b_ACCR_DIV_CIF != emptyBigDecimalValue" >
        #{b_ACCR_DIV_CIF},
      </if>
      <if test="b_ACCR_DIV_SL != null and b_ACCR_DIV_SL != emptyBigDecimalValue" >
        #{b_ACCR_DIV_SL},
      </if>
      <if test="c_ACCR_DIV_CY != null and c_ACCR_DIV_CY != emptyBigDecimalValue" >
        #{c_ACCR_DIV_CY},
      </if>
      <if test="c_ACCR_DIV_GL != null and c_ACCR_DIV_GL != emptyBigDecimalValue" >
        #{c_ACCR_DIV_GL},
      </if>
      <if test="c_ACCR_DIV_CIF != null and c_ACCR_DIV_CIF != emptyBigDecimalValue" >
        #{c_ACCR_DIV_CIF},
      </if>
      <if test="c_ACCR_DIV_SL != null and c_ACCR_DIV_SL != emptyBigDecimalValue" >
        #{c_ACCR_DIV_SL},
      </if>
      <if test="b_DIV_INC_CY != null and b_DIV_INC_CY != emptyBigDecimalValue" >
        #{b_DIV_INC_CY},
      </if>
      <if test="b_DIV_INC_GL != null and b_DIV_INC_GL != emptyBigDecimalValue" >
        #{b_DIV_INC_GL},
      </if>
      <if test="b_DIV_INC_CIF != null and b_DIV_INC_CIF != emptyBigDecimalValue" >
        #{b_DIV_INC_CIF},
      </if>
      <if test="b_DIV_INC_SL != null and b_DIV_INC_SL != emptyBigDecimalValue" >
        #{b_DIV_INC_SL},
      </if>
      <if test="PAID_UP_PERCENTAGE != null and PAID_UP_PERCENTAGE != emptyBigDecimalValue" >
        #{PAID_UP_PERCENTAGE},
      </if>
      <if test="KCC_CODE != null and KCC_CODE != emptyBigDecimalValue" >
        #{KCC_CODE},
      </if>
      <if test="REAL_ESTATE != null" >
        #{REAL_ESTATE},
      </if>
      <if test="ADDITIONAL_REFERENCE != null" >
        #{ADDITIONAL_REFERENCE},
      </if>
      <if test="b_FWD_INT_RECEIV_CY != null and b_FWD_INT_RECEIV_CY != emptyBigDecimalValue" >
        #{b_FWD_INT_RECEIV_CY},
      </if>
      <if test="b_FWD_INT_RECEIV_GL != null and b_FWD_INT_RECEIV_GL != emptyBigDecimalValue" >
        #{b_FWD_INT_RECEIV_GL},
      </if>
      <if test="b_FWD_INT_RECEIV_CIF != null and b_FWD_INT_RECEIV_CIF != emptyBigDecimalValue" >
        #{b_FWD_INT_RECEIV_CIF},
      </if>
      <if test="b_FWD_INT_RECEIV_SL != null and b_FWD_INT_RECEIV_SL != emptyBigDecimalValue" >
        #{b_FWD_INT_RECEIV_SL},
      </if>
      <if test="b_FWD_INT_INCOME_CY != null and b_FWD_INT_INCOME_CY != emptyBigDecimalValue" >
        #{b_FWD_INT_INCOME_CY},
      </if>
      <if test="b_FWD_INT_INCOME_GL != null and b_FWD_INT_INCOME_GL != emptyBigDecimalValue" >
        #{b_FWD_INT_INCOME_GL},
      </if>
      <if test="b_FWD_INT_INCOME_CIF != null and b_FWD_INT_INCOME_CIF != emptyBigDecimalValue" >
        #{b_FWD_INT_INCOME_CIF},
      </if>
      <if test="b_FWD_INT_INCOME_SL != null and b_FWD_INT_INCOME_SL != emptyBigDecimalValue" >
        #{b_FWD_INT_INCOME_SL},
      </if>
      <if test="c_FWD_INT_RECEIV_CY != null and c_FWD_INT_RECEIV_CY != emptyBigDecimalValue" >
        #{c_FWD_INT_RECEIV_CY},
      </if>
      <if test="c_FWD_INT_RECEIV_GL != null and c_FWD_INT_RECEIV_GL != emptyBigDecimalValue" >
        #{c_FWD_INT_RECEIV_GL},
      </if>
      <if test="c_FWD_INT_RECEIV_CIF != null and c_FWD_INT_RECEIV_CIF != emptyBigDecimalValue" >
        #{c_FWD_INT_RECEIV_CIF},
      </if>
      <if test="c_FWD_INT_RECEIV_SL != null and c_FWD_INT_RECEIV_SL != emptyBigDecimalValue" >
        #{c_FWD_INT_RECEIV_SL},
      </if>
      <if test="c_FWD_INT_INCOME_CY != null and c_FWD_INT_INCOME_CY != emptyBigDecimalValue" >
        #{c_FWD_INT_INCOME_CY},
      </if>
      <if test="c_FWD_INT_INCOME_GL != null and c_FWD_INT_INCOME_GL != emptyBigDecimalValue" >
        #{c_FWD_INT_INCOME_GL},
      </if>
      <if test="c_FWD_INT_INCOME_CIF != null and c_FWD_INT_INCOME_CIF != emptyBigDecimalValue" >
        #{c_FWD_INT_INCOME_CIF},
      </if>
      <if test="c_FWD_INT_INCOME_SL != null and c_FWD_INT_INCOME_SL != emptyBigDecimalValue" >
        #{c_FWD_INT_INCOME_SL},
      </if>
      <if test="b_FWD_INT_REFUND_INCOME_CY != null and b_FWD_INT_REFUND_INCOME_CY != emptyBigDecimalValue" >
        #{b_FWD_INT_REFUND_INCOME_CY},
      </if>
      <if test="b_FWD_INT_REFUND_INCOME_GL != null and b_FWD_INT_REFUND_INCOME_GL != emptyBigDecimalValue" >
        #{b_FWD_INT_REFUND_INCOME_GL},
      </if>
      <if test="b_FWD_INT_REFUND_INCOME_CIF != null and b_FWD_INT_REFUND_INCOME_CIF != emptyBigDecimalValue" >
        #{b_FWD_INT_REFUND_INCOME_CIF},
      </if>
      <if test="b_FWD_INT_REFUND_INCOME_SL != null and b_FWD_INT_REFUND_INCOME_SL != emptyBigDecimalValue" >
        #{b_FWD_INT_REFUND_INCOME_SL},
      </if>
      <if test="c_FWD_INT_REFUND_INCOME_CY != null and c_FWD_INT_REFUND_INCOME_CY != emptyBigDecimalValue" >
        #{c_FWD_INT_REFUND_INCOME_CY},
      </if>
      <if test="c_FWD_INT_REFUND_INCOME_GL != null and c_FWD_INT_REFUND_INCOME_GL != emptyBigDecimalValue" >
        #{c_FWD_INT_REFUND_INCOME_GL},
      </if>
      <if test="c_FWD_INT_REFUND_INCOME_CIF != null and c_FWD_INT_REFUND_INCOME_CIF != emptyBigDecimalValue" >
        #{c_FWD_INT_REFUND_INCOME_CIF},
      </if>
      <if test="c_FWD_INT_REFUND_INCOME_SL != null and c_FWD_INT_REFUND_INCOME_SL != emptyBigDecimalValue" >
        #{c_FWD_INT_REFUND_INCOME_SL},
      </if>
      <if test="b_FWD_INT_REFUND_EXPENSE_CY != null and b_FWD_INT_REFUND_EXPENSE_CY != emptyBigDecimalValue" >
        #{b_FWD_INT_REFUND_EXPENSE_CY},
      </if>
      <if test="b_FWD_INT_REFUND_EXPENSE_GL != null and b_FWD_INT_REFUND_EXPENSE_GL != emptyBigDecimalValue" >
        #{b_FWD_INT_REFUND_EXPENSE_GL},
      </if>
      <if test="b_FWD_INT_REFUND_EXPENSE_CIF != null and b_FWD_INT_REFUND_EXPENSE_CIF != emptyBigDecimalValue" >
        #{b_FWD_INT_REFUND_EXPENSE_CIF},
      </if>
      <if test="b_FWD_INT_REFUND_EXPENSE_SL != null and b_FWD_INT_REFUND_EXPENSE_SL != emptyBigDecimalValue" >
        #{b_FWD_INT_REFUND_EXPENSE_SL},
      </if>
      <if test="c_FWD_INT_REFUND_EXPENSE_CY != null and c_FWD_INT_REFUND_EXPENSE_CY != emptyBigDecimalValue" >
        #{c_FWD_INT_REFUND_EXPENSE_CY},
      </if>
      <if test="c_FWD_INT_REFUND_EXPENSE_GL != null and c_FWD_INT_REFUND_EXPENSE_GL != emptyBigDecimalValue" >
        #{c_FWD_INT_REFUND_EXPENSE_GL},
      </if>
      <if test="c_FWD_INT_REFUND_EXPENSE_CIF != null and c_FWD_INT_REFUND_EXPENSE_CIF != emptyBigDecimalValue" >
        #{c_FWD_INT_REFUND_EXPENSE_CIF},
      </if>
      <if test="c_FWD_INT_REFUND_EXPENSE_SL != null and c_FWD_INT_REFUND_EXPENSE_SL != emptyBigDecimalValue" >
        #{c_FWD_INT_REFUND_EXPENSE_SL},
      </if>
      <if test="b_RGHT_SUBS_CY != null and b_RGHT_SUBS_CY != emptyBigDecimalValue" >
        #{b_RGHT_SUBS_CY},
      </if>
      <if test="b_RGHT_SUBS_GL != null and b_RGHT_SUBS_GL != emptyBigDecimalValue" >
        #{b_RGHT_SUBS_GL},
      </if>
      <if test="b_RGHT_SUBS_CIF != null and b_RGHT_SUBS_CIF != emptyBigDecimalValue" >
        #{b_RGHT_SUBS_CIF},
      </if>
      <if test="b_RGHT_SUBS_SL != null and b_RGHT_SUBS_SL != emptyBigDecimalValue" >
        #{b_RGHT_SUBS_SL},
      </if>
      <if test="c_RGHT_SUBS_CY != null and c_RGHT_SUBS_CY != emptyBigDecimalValue" >
        #{c_RGHT_SUBS_CY},
      </if>
      <if test="c_RGHT_SUBS_GL != null and c_RGHT_SUBS_GL != emptyBigDecimalValue" >
        #{c_RGHT_SUBS_GL},
      </if>
      <if test="c_RGHT_SUBS_CIF != null and c_RGHT_SUBS_CIF != emptyBigDecimalValue" >
        #{c_RGHT_SUBS_CIF},
      </if>
      <if test="c_RGHT_SUBS_SL != null and c_RGHT_SUBS_SL != emptyBigDecimalValue" >
        #{c_RGHT_SUBS_SL},
      </if>
    </trim>
  </insert>
  <sql id="sql_updateSECURITY" >
    update SECURITY
    <set >
      <if test="SHORT_DESC_ENG != null" >
        SHORT_DESC_ENG = #{SHORT_DESC_ENG},
      </if>
      <if test="SHORT_DESC_ARAB != null" >
        SHORT_DESC_ARAB = #{SHORT_DESC_ARAB},
      </if>
      <if test="LONG_DESC_ENG != null" >
        LONG_DESC_ENG = #{LONG_DESC_ENG},
      </if>
      <if test="LONG_DESC_ARAB != null" >
        LONG_DESC_ARAB = #{LONG_DESC_ARAB},
      </if>
      <if test="INDUSTRY_CODE != null" >
        <choose >
          <when test="INDUSTRY_CODE == emptyBigDecimalValue" >
            INDUSTRY_CODE = NULL ,
          </when>
          <otherwise >
            INDUSTRY_CODE = #{INDUSTRY_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="SEC_INDUSTRY_CODE != null" >
        <choose >
          <when test="SEC_INDUSTRY_CODE == emptyBigDecimalValue" >
            SEC_INDUSTRY_CODE = NULL ,
          </when>
          <otherwise >
            SEC_INDUSTRY_CODE = #{SEC_INDUSTRY_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="NOMINAL_VALUE != null" >
        <choose >
          <when test="NOMINAL_VALUE == emptyBigDecimalValue" >
            NOMINAL_VALUE = NULL ,
          </when>
          <otherwise >
            NOMINAL_VALUE = #{NOMINAL_VALUE},
          </otherwise>
        </choose>
      </if>
      <if test="b_HOLDING_CY != null" >
        <choose >
          <when test="b_HOLDING_CY == emptyBigDecimalValue" >
            B_HOLDING_CY = NULL ,
          </when>
          <otherwise >
            B_HOLDING_CY = #{b_HOLDING_CY},
          </otherwise>
        </choose>
      </if>
      <if test="b_HOLDING_GL != null" >
        <choose >
          <when test="b_HOLDING_GL == emptyBigDecimalValue" >
            B_HOLDING_GL = NULL ,
          </when>
          <otherwise >
            B_HOLDING_GL = #{b_HOLDING_GL},
          </otherwise>
        </choose>
      </if>
      <if test="b_HOLDING_CIF != null" >
        <choose >
          <when test="b_HOLDING_CIF == emptyBigDecimalValue" >
            B_HOLDING_CIF = NULL ,
          </when>
          <otherwise >
            B_HOLDING_CIF = #{b_HOLDING_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="b_HOLDING_SL != null" >
        <choose >
          <when test="b_HOLDING_SL == emptyBigDecimalValue" >
            B_HOLDING_SL = NULL ,
          </when>
          <otherwise >
            B_HOLDING_SL = #{b_HOLDING_SL},
          </otherwise>
        </choose>
      </if>
      <if test="c_HOLDING_CY != null" >
        <choose >
          <when test="c_HOLDING_CY == emptyBigDecimalValue" >
            C_HOLDING_CY = NULL ,
          </when>
          <otherwise >
            C_HOLDING_CY = #{c_HOLDING_CY},
          </otherwise>
        </choose>
      </if>
      <if test="c_HOLDING_GL != null" >
        <choose >
          <when test="c_HOLDING_GL == emptyBigDecimalValue" >
            C_HOLDING_GL = NULL ,
          </when>
          <otherwise >
            C_HOLDING_GL = #{c_HOLDING_GL},
          </otherwise>
        </choose>
      </if>
      <if test="c_HOLDING_CIF != null" >
        <choose >
          <when test="c_HOLDING_CIF == emptyBigDecimalValue" >
            C_HOLDING_CIF = NULL ,
          </when>
          <otherwise >
            C_HOLDING_CIF = #{c_HOLDING_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="c_HOLDING_SL != null" >
        <choose >
          <when test="c_HOLDING_SL == emptyBigDecimalValue" >
            C_HOLDING_SL = NULL ,
          </when>
          <otherwise >
            C_HOLDING_SL = #{c_HOLDING_SL},
          </otherwise>
        </choose>
      </if>
      <if test="GAIN_ACC_CY != null" >
        <choose >
          <when test="GAIN_ACC_CY == emptyBigDecimalValue" >
            GAIN_ACC_CY = NULL ,
          </when>
          <otherwise >
            GAIN_ACC_CY = #{GAIN_ACC_CY},
          </otherwise>
        </choose>
      </if>
      <if test="GAIN_ACC_GL != null" >
        <choose >
          <when test="GAIN_ACC_GL == emptyBigDecimalValue" >
            GAIN_ACC_GL = NULL ,
          </when>
          <otherwise >
            GAIN_ACC_GL = #{GAIN_ACC_GL},
          </otherwise>
        </choose>
      </if>
      <if test="GAIN_ACC_CIF != null" >
        <choose >
          <when test="GAIN_ACC_CIF == emptyBigDecimalValue" >
            GAIN_ACC_CIF = NULL ,
          </when>
          <otherwise >
            GAIN_ACC_CIF = #{GAIN_ACC_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="GAIN_ACC_SL != null" >
        <choose >
          <when test="GAIN_ACC_SL == emptyBigDecimalValue" >
            GAIN_ACC_SL = NULL ,
          </when>
          <otherwise >
            GAIN_ACC_SL = #{GAIN_ACC_SL},
          </otherwise>
        </choose>
      </if>
      <if test="LOSS_ACC_CY != null" >
        <choose >
          <when test="LOSS_ACC_CY == emptyBigDecimalValue" >
            LOSS_ACC_CY = NULL ,
          </when>
          <otherwise >
            LOSS_ACC_CY = #{LOSS_ACC_CY},
          </otherwise>
        </choose>
      </if>
      <if test="LOSS_ACC_GL != null" >
        <choose >
          <when test="LOSS_ACC_GL == emptyBigDecimalValue" >
            LOSS_ACC_GL = NULL ,
          </when>
          <otherwise >
            LOSS_ACC_GL = #{LOSS_ACC_GL},
          </otherwise>
        </choose>
      </if>
      <if test="LOSS_ACC_CIF != null" >
        <choose >
          <when test="LOSS_ACC_CIF == emptyBigDecimalValue" >
            LOSS_ACC_CIF = NULL ,
          </when>
          <otherwise >
            LOSS_ACC_CIF = #{LOSS_ACC_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="LOSS_ACC_SL != null" >
        <choose >
          <when test="LOSS_ACC_SL == emptyBigDecimalValue" >
            LOSS_ACC_SL = NULL ,
          </when>
          <otherwise >
            LOSS_ACC_SL = #{LOSS_ACC_SL},
          </otherwise>
        </choose>
      </if>
      <if test="SECURITY_TYPE != null" >
        <choose >
          <when test="SECURITY_TYPE == emptyBigDecimalValue" >
            SECURITY_TYPE = NULL ,
          </when>
          <otherwise >
            SECURITY_TYPE = #{SECURITY_TYPE},
          </otherwise>
        </choose>
      </if>
      <if test="TRADE_CY != null" >
        <choose >
          <when test="TRADE_CY == emptyBigDecimalValue" >
            TRADE_CY = NULL ,
          </when>
          <otherwise >
            TRADE_CY = #{TRADE_CY},
          </otherwise>
        </choose>
      </if>
      <if test="MARKET_VOLUME != null" >
        <choose >
          <when test="MARKET_VOLUME == emptyBigDecimalValue" >
            MARKET_VOLUME = NULL ,
          </when>
          <otherwise >
            MARKET_VOLUME = #{MARKET_VOLUME},
          </otherwise>
        </choose>
      </if>
      <if test="MANAGEMENT_FEE != null" >
        MANAGEMENT_FEE = #{MANAGEMENT_FEE},
      </if>
      <if test="VALUATION_PERCENTAGE != null" >
        <choose >
          <when test="VALUATION_PERCENTAGE == emptyBigDecimalValue" >
            VALUATION_PERCENTAGE = NULL ,
          </when>
          <otherwise >
            VALUATION_PERCENTAGE = #{VALUATION_PERCENTAGE},
          </otherwise>
        </choose>
      </if>
      <if test="TRANSFERABLE_DATE != null" >
        TRANSFERABLE_DATE = #{TRANSFERABLE_DATE},
      </if>
      <if test="UNLISTED_SHARE != null" >
        UNLISTED_SHARE = #{UNLISTED_SHARE},
      </if>
      <if test="b_PREMIUM_PAID_CY != null" >
        <choose >
          <when test="b_PREMIUM_PAID_CY == emptyBigDecimalValue" >
            B_PREMIUM_PAID_CY = NULL ,
          </when>
          <otherwise >
            B_PREMIUM_PAID_CY = #{b_PREMIUM_PAID_CY},
          </otherwise>
        </choose>
      </if>
      <if test="b_PREMIUM_PAID_GL != null" >
        <choose >
          <when test="b_PREMIUM_PAID_GL == emptyBigDecimalValue" >
            B_PREMIUM_PAID_GL = NULL ,
          </when>
          <otherwise >
            B_PREMIUM_PAID_GL = #{b_PREMIUM_PAID_GL},
          </otherwise>
        </choose>
      </if>
      <if test="b_PREMIUM_PAID_CIF != null" >
        <choose >
          <when test="b_PREMIUM_PAID_CIF == emptyBigDecimalValue" >
            B_PREMIUM_PAID_CIF = NULL ,
          </when>
          <otherwise >
            B_PREMIUM_PAID_CIF = #{b_PREMIUM_PAID_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="b_PREMIUM_PAID_SL != null" >
        <choose >
          <when test="b_PREMIUM_PAID_SL == emptyBigDecimalValue" >
            B_PREMIUM_PAID_SL = NULL ,
          </when>
          <otherwise >
            B_PREMIUM_PAID_SL = #{b_PREMIUM_PAID_SL},
          </otherwise>
        </choose>
      </if>
      <if test="c_PREMIUM_PAID_CY != null" >
        <choose >
          <when test="c_PREMIUM_PAID_CY == emptyBigDecimalValue" >
            C_PREMIUM_PAID_CY = NULL ,
          </when>
          <otherwise >
            C_PREMIUM_PAID_CY = #{c_PREMIUM_PAID_CY},
          </otherwise>
        </choose>
      </if>
      <if test="c_PREMIUM_PAID_GL != null" >
        <choose >
          <when test="c_PREMIUM_PAID_GL == emptyBigDecimalValue" >
            C_PREMIUM_PAID_GL = NULL ,
          </when>
          <otherwise >
            C_PREMIUM_PAID_GL = #{c_PREMIUM_PAID_GL},
          </otherwise>
        </choose>
      </if>
      <if test="c_PREMIUM_PAID_CIF != null" >
        <choose >
          <when test="c_PREMIUM_PAID_CIF == emptyBigDecimalValue" >
            C_PREMIUM_PAID_CIF = NULL ,
          </when>
          <otherwise >
            C_PREMIUM_PAID_CIF = #{c_PREMIUM_PAID_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="c_PREMIUM_PAID_SL != null" >
        <choose >
          <when test="c_PREMIUM_PAID_SL == emptyBigDecimalValue" >
            C_PREMIUM_PAID_SL = NULL ,
          </when>
          <otherwise >
            C_PREMIUM_PAID_SL = #{c_PREMIUM_PAID_SL},
          </otherwise>
        </choose>
      </if>
      <if test="CAPITAL != null" >
        <choose >
          <when test="CAPITAL == emptyBigDecimalValue" >
            CAPITAL = NULL ,
          </when>
          <otherwise >
            CAPITAL = #{CAPITAL},
          </otherwise>
        </choose>
      </if>
      <if test="KSE_SYMBOL != null" >
        KSE_SYMBOL = #{KSE_SYMBOL},
      </if>
      <if test="REUTER != null" >
        REUTER = #{REUTER},
      </if>
      <if test="REUTOR != null" >
        REUTOR = #{REUTOR},
      </if>
      <if test="COST_REPL_GAIN_ACC_CY != null" >
        <choose >
          <when test="COST_REPL_GAIN_ACC_CY == emptyBigDecimalValue" >
            COST_REPL_GAIN_ACC_CY = NULL ,
          </when>
          <otherwise >
            COST_REPL_GAIN_ACC_CY = #{COST_REPL_GAIN_ACC_CY},
          </otherwise>
        </choose>
      </if>
      <if test="COST_REPL_GAIN_ACC_GL != null" >
        <choose >
          <when test="COST_REPL_GAIN_ACC_GL == emptyBigDecimalValue" >
            COST_REPL_GAIN_ACC_GL = NULL ,
          </when>
          <otherwise >
            COST_REPL_GAIN_ACC_GL = #{COST_REPL_GAIN_ACC_GL},
          </otherwise>
        </choose>
      </if>
      <if test="COST_REPL_GAIN_ACC_CIF != null" >
        <choose >
          <when test="COST_REPL_GAIN_ACC_CIF == emptyBigDecimalValue" >
            COST_REPL_GAIN_ACC_CIF = NULL ,
          </when>
          <otherwise >
            COST_REPL_GAIN_ACC_CIF = #{COST_REPL_GAIN_ACC_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="COST_REPL_GAIN_ACC_SL != null" >
        <choose >
          <when test="COST_REPL_GAIN_ACC_SL == emptyBigDecimalValue" >
            COST_REPL_GAIN_ACC_SL = NULL ,
          </when>
          <otherwise >
            COST_REPL_GAIN_ACC_SL = #{COST_REPL_GAIN_ACC_SL},
          </otherwise>
        </choose>
      </if>
      <if test="COST_REPL_LOSS_ACC_CY != null" >
        <choose >
          <when test="COST_REPL_LOSS_ACC_CY == emptyBigDecimalValue" >
            COST_REPL_LOSS_ACC_CY = NULL ,
          </when>
          <otherwise >
            COST_REPL_LOSS_ACC_CY = #{COST_REPL_LOSS_ACC_CY},
          </otherwise>
        </choose>
      </if>
      <if test="COST_REPL_LOSS_ACC_GL != null" >
        <choose >
          <when test="COST_REPL_LOSS_ACC_GL == emptyBigDecimalValue" >
            COST_REPL_LOSS_ACC_GL = NULL ,
          </when>
          <otherwise >
            COST_REPL_LOSS_ACC_GL = #{COST_REPL_LOSS_ACC_GL},
          </otherwise>
        </choose>
      </if>
      <if test="COST_REPL_LOSS_ACC_CIF != null" >
        <choose >
          <when test="COST_REPL_LOSS_ACC_CIF == emptyBigDecimalValue" >
            COST_REPL_LOSS_ACC_CIF = NULL ,
          </when>
          <otherwise >
            COST_REPL_LOSS_ACC_CIF = #{COST_REPL_LOSS_ACC_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="COST_REPL_LOSS_ACC_SL != null" >
        <choose >
          <when test="COST_REPL_LOSS_ACC_SL == emptyBigDecimalValue" >
            COST_REPL_LOSS_ACC_SL = NULL ,
          </when>
          <otherwise >
            COST_REPL_LOSS_ACC_SL = #{COST_REPL_LOSS_ACC_SL},
          </otherwise>
        </choose>
      </if>
      <if test="b_ACCR_DIV_CY != null" >
        <choose >
          <when test="b_ACCR_DIV_CY == emptyBigDecimalValue" >
            B_ACCR_DIV_CY = NULL ,
          </when>
          <otherwise >
            B_ACCR_DIV_CY = #{b_ACCR_DIV_CY},
          </otherwise>
        </choose>
      </if>
      <if test="b_ACCR_DIV_GL != null" >
        <choose >
          <when test="b_ACCR_DIV_GL == emptyBigDecimalValue" >
            B_ACCR_DIV_GL = NULL ,
          </when>
          <otherwise >
            B_ACCR_DIV_GL = #{b_ACCR_DIV_GL},
          </otherwise>
        </choose>
      </if>
      <if test="b_ACCR_DIV_CIF != null" >
        <choose >
          <when test="b_ACCR_DIV_CIF == emptyBigDecimalValue" >
            B_ACCR_DIV_CIF = NULL ,
          </when>
          <otherwise >
            B_ACCR_DIV_CIF = #{b_ACCR_DIV_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="b_ACCR_DIV_SL != null" >
        <choose >
          <when test="b_ACCR_DIV_SL == emptyBigDecimalValue" >
            B_ACCR_DIV_SL = NULL ,
          </when>
          <otherwise >
            B_ACCR_DIV_SL = #{b_ACCR_DIV_SL},
          </otherwise>
        </choose>
      </if>
      <if test="c_ACCR_DIV_CY != null" >
        <choose >
          <when test="c_ACCR_DIV_CY == emptyBigDecimalValue" >
            C_ACCR_DIV_CY = NULL ,
          </when>
          <otherwise >
            C_ACCR_DIV_CY = #{c_ACCR_DIV_CY},
          </otherwise>
        </choose>
      </if>
      <if test="c_ACCR_DIV_GL != null" >
        <choose >
          <when test="c_ACCR_DIV_GL == emptyBigDecimalValue" >
            C_ACCR_DIV_GL = NULL ,
          </when>
          <otherwise >
            C_ACCR_DIV_GL = #{c_ACCR_DIV_GL},
          </otherwise>
        </choose>
      </if>
      <if test="c_ACCR_DIV_CIF != null" >
        <choose >
          <when test="c_ACCR_DIV_CIF == emptyBigDecimalValue" >
            C_ACCR_DIV_CIF = NULL ,
          </when>
          <otherwise >
            C_ACCR_DIV_CIF = #{c_ACCR_DIV_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="c_ACCR_DIV_SL != null" >
        <choose >
          <when test="c_ACCR_DIV_SL == emptyBigDecimalValue" >
            C_ACCR_DIV_SL = NULL ,
          </when>
          <otherwise >
            C_ACCR_DIV_SL = #{c_ACCR_DIV_SL},
          </otherwise>
        </choose>
      </if>
      <if test="b_DIV_INC_CY != null" >
        <choose >
          <when test="b_DIV_INC_CY == emptyBigDecimalValue" >
            B_DIV_INC_CY = NULL ,
          </when>
          <otherwise >
            B_DIV_INC_CY = #{b_DIV_INC_CY},
          </otherwise>
        </choose>
      </if>
      <if test="b_DIV_INC_GL != null" >
        <choose >
          <when test="b_DIV_INC_GL == emptyBigDecimalValue" >
            B_DIV_INC_GL = NULL ,
          </when>
          <otherwise >
            B_DIV_INC_GL = #{b_DIV_INC_GL},
          </otherwise>
        </choose>
      </if>
      <if test="b_DIV_INC_CIF != null" >
        <choose >
          <when test="b_DIV_INC_CIF == emptyBigDecimalValue" >
            B_DIV_INC_CIF = NULL ,
          </when>
          <otherwise >
            B_DIV_INC_CIF = #{b_DIV_INC_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="b_DIV_INC_SL != null" >
        <choose >
          <when test="b_DIV_INC_SL == emptyBigDecimalValue" >
            B_DIV_INC_SL = NULL ,
          </when>
          <otherwise >
            B_DIV_INC_SL = #{b_DIV_INC_SL},
          </otherwise>
        </choose>
      </if>
      <if test="PAID_UP_PERCENTAGE != null" >
        <choose >
          <when test="PAID_UP_PERCENTAGE == emptyBigDecimalValue" >
            PAID_UP_PERCENTAGE = NULL ,
          </when>
          <otherwise >
            PAID_UP_PERCENTAGE = #{PAID_UP_PERCENTAGE},
          </otherwise>
        </choose>
      </if>
      <if test="KCC_CODE != null" >
        <choose >
          <when test="KCC_CODE == emptyBigDecimalValue" >
            KCC_CODE = NULL ,
          </when>
          <otherwise >
            KCC_CODE = #{KCC_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="REAL_ESTATE != null" >
        REAL_ESTATE = #{REAL_ESTATE},
      </if>
      <if test="ADDITIONAL_REFERENCE != null" >
        ADDITIONAL_REFERENCE = #{ADDITIONAL_REFERENCE},
      </if>
      <if test="b_FWD_INT_RECEIV_CY != null" >
        <choose >
          <when test="b_FWD_INT_RECEIV_CY == emptyBigDecimalValue" >
            B_FWD_INT_RECEIV_CY = NULL ,
          </when>
          <otherwise >
            B_FWD_INT_RECEIV_CY = #{b_FWD_INT_RECEIV_CY},
          </otherwise>
        </choose>
      </if>
      <if test="b_FWD_INT_RECEIV_GL != null" >
        <choose >
          <when test="b_FWD_INT_RECEIV_GL == emptyBigDecimalValue" >
            B_FWD_INT_RECEIV_GL = NULL ,
          </when>
          <otherwise >
            B_FWD_INT_RECEIV_GL = #{b_FWD_INT_RECEIV_GL},
          </otherwise>
        </choose>
      </if>
      <if test="b_FWD_INT_RECEIV_CIF != null" >
        <choose >
          <when test="b_FWD_INT_RECEIV_CIF == emptyBigDecimalValue" >
            B_FWD_INT_RECEIV_CIF = NULL ,
          </when>
          <otherwise >
            B_FWD_INT_RECEIV_CIF = #{b_FWD_INT_RECEIV_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="b_FWD_INT_RECEIV_SL != null" >
        <choose >
          <when test="b_FWD_INT_RECEIV_SL == emptyBigDecimalValue" >
            B_FWD_INT_RECEIV_SL = NULL ,
          </when>
          <otherwise >
            B_FWD_INT_RECEIV_SL = #{b_FWD_INT_RECEIV_SL},
          </otherwise>
        </choose>
      </if>
      <if test="b_FWD_INT_INCOME_CY != null" >
        <choose >
          <when test="b_FWD_INT_INCOME_CY == emptyBigDecimalValue" >
            B_FWD_INT_INCOME_CY = NULL ,
          </when>
          <otherwise >
            B_FWD_INT_INCOME_CY = #{b_FWD_INT_INCOME_CY},
          </otherwise>
        </choose>
      </if>
      <if test="b_FWD_INT_INCOME_GL != null" >
        <choose >
          <when test="b_FWD_INT_INCOME_GL == emptyBigDecimalValue" >
            B_FWD_INT_INCOME_GL = NULL ,
          </when>
          <otherwise >
            B_FWD_INT_INCOME_GL = #{b_FWD_INT_INCOME_GL},
          </otherwise>
        </choose>
      </if>
      <if test="b_FWD_INT_INCOME_CIF != null" >
        <choose >
          <when test="b_FWD_INT_INCOME_CIF == emptyBigDecimalValue" >
            B_FWD_INT_INCOME_CIF = NULL ,
          </when>
          <otherwise >
            B_FWD_INT_INCOME_CIF = #{b_FWD_INT_INCOME_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="b_FWD_INT_INCOME_SL != null" >
        <choose >
          <when test="b_FWD_INT_INCOME_SL == emptyBigDecimalValue" >
            B_FWD_INT_INCOME_SL = NULL ,
          </when>
          <otherwise >
            B_FWD_INT_INCOME_SL = #{b_FWD_INT_INCOME_SL},
          </otherwise>
        </choose>
      </if>
      <if test="c_FWD_INT_RECEIV_CY != null" >
        <choose >
          <when test="c_FWD_INT_RECEIV_CY == emptyBigDecimalValue" >
            C_FWD_INT_RECEIV_CY = NULL ,
          </when>
          <otherwise >
            C_FWD_INT_RECEIV_CY = #{c_FWD_INT_RECEIV_CY},
          </otherwise>
        </choose>
      </if>
      <if test="c_FWD_INT_RECEIV_GL != null" >
        <choose >
          <when test="c_FWD_INT_RECEIV_GL == emptyBigDecimalValue" >
            C_FWD_INT_RECEIV_GL = NULL ,
          </when>
          <otherwise >
            C_FWD_INT_RECEIV_GL = #{c_FWD_INT_RECEIV_GL},
          </otherwise>
        </choose>
      </if>
      <if test="c_FWD_INT_RECEIV_CIF != null" >
        <choose >
          <when test="c_FWD_INT_RECEIV_CIF == emptyBigDecimalValue" >
            C_FWD_INT_RECEIV_CIF = NULL ,
          </when>
          <otherwise >
            C_FWD_INT_RECEIV_CIF = #{c_FWD_INT_RECEIV_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="c_FWD_INT_RECEIV_SL != null" >
        <choose >
          <when test="c_FWD_INT_RECEIV_SL == emptyBigDecimalValue" >
            C_FWD_INT_RECEIV_SL = NULL ,
          </when>
          <otherwise >
            C_FWD_INT_RECEIV_SL = #{c_FWD_INT_RECEIV_SL},
          </otherwise>
        </choose>
      </if>
      <if test="c_FWD_INT_INCOME_CY != null" >
        <choose >
          <when test="c_FWD_INT_INCOME_CY == emptyBigDecimalValue" >
            C_FWD_INT_INCOME_CY = NULL ,
          </when>
          <otherwise >
            C_FWD_INT_INCOME_CY = #{c_FWD_INT_INCOME_CY},
          </otherwise>
        </choose>
      </if>
      <if test="c_FWD_INT_INCOME_GL != null" >
        <choose >
          <when test="c_FWD_INT_INCOME_GL == emptyBigDecimalValue" >
            C_FWD_INT_INCOME_GL = NULL ,
          </when>
          <otherwise >
            C_FWD_INT_INCOME_GL = #{c_FWD_INT_INCOME_GL},
          </otherwise>
        </choose>
      </if>
      <if test="c_FWD_INT_INCOME_CIF != null" >
        <choose >
          <when test="c_FWD_INT_INCOME_CIF == emptyBigDecimalValue" >
            C_FWD_INT_INCOME_CIF = NULL ,
          </when>
          <otherwise >
            C_FWD_INT_INCOME_CIF = #{c_FWD_INT_INCOME_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="c_FWD_INT_INCOME_SL != null" >
        <choose >
          <when test="c_FWD_INT_INCOME_SL == emptyBigDecimalValue" >
            C_FWD_INT_INCOME_SL = NULL ,
          </when>
          <otherwise >
            C_FWD_INT_INCOME_SL = #{c_FWD_INT_INCOME_SL},
          </otherwise>
        </choose>
      </if>
      <if test="b_FWD_INT_REFUND_INCOME_CY != null" >
        <choose >
          <when test="b_FWD_INT_REFUND_INCOME_CY == emptyBigDecimalValue" >
            B_FWD_INT_REFUND_INCOME_CY = NULL ,
          </when>
          <otherwise >
            B_FWD_INT_REFUND_INCOME_CY = #{b_FWD_INT_REFUND_INCOME_CY},
          </otherwise>
        </choose>
      </if>
      <if test="b_FWD_INT_REFUND_INCOME_GL != null" >
        <choose >
          <when test="b_FWD_INT_REFUND_INCOME_GL == emptyBigDecimalValue" >
            B_FWD_INT_REFUND_INCOME_GL = NULL ,
          </when>
          <otherwise >
            B_FWD_INT_REFUND_INCOME_GL = #{b_FWD_INT_REFUND_INCOME_GL},
          </otherwise>
        </choose>
      </if>
      <if test="b_FWD_INT_REFUND_INCOME_CIF != null" >
        <choose >
          <when test="b_FWD_INT_REFUND_INCOME_CIF == emptyBigDecimalValue" >
            B_FWD_INT_REFUND_INCOME_CIF = NULL ,
          </when>
          <otherwise >
            B_FWD_INT_REFUND_INCOME_CIF = #{b_FWD_INT_REFUND_INCOME_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="b_FWD_INT_REFUND_INCOME_SL != null" >
        <choose >
          <when test="b_FWD_INT_REFUND_INCOME_SL == emptyBigDecimalValue" >
            B_FWD_INT_REFUND_INCOME_SL = NULL ,
          </when>
          <otherwise >
            B_FWD_INT_REFUND_INCOME_SL = #{b_FWD_INT_REFUND_INCOME_SL},
          </otherwise>
        </choose>
      </if>
      <if test="c_FWD_INT_REFUND_INCOME_CY != null" >
        <choose >
          <when test="c_FWD_INT_REFUND_INCOME_CY == emptyBigDecimalValue" >
            C_FWD_INT_REFUND_INCOME_CY = NULL ,
          </when>
          <otherwise >
            C_FWD_INT_REFUND_INCOME_CY = #{c_FWD_INT_REFUND_INCOME_CY},
          </otherwise>
        </choose>
      </if>
      <if test="c_FWD_INT_REFUND_INCOME_GL != null" >
        <choose >
          <when test="c_FWD_INT_REFUND_INCOME_GL == emptyBigDecimalValue" >
            C_FWD_INT_REFUND_INCOME_GL = NULL ,
          </when>
          <otherwise >
            C_FWD_INT_REFUND_INCOME_GL = #{c_FWD_INT_REFUND_INCOME_GL},
          </otherwise>
        </choose>
      </if>
      <if test="c_FWD_INT_REFUND_INCOME_CIF != null" >
        <choose >
          <when test="c_FWD_INT_REFUND_INCOME_CIF == emptyBigDecimalValue" >
            C_FWD_INT_REFUND_INCOME_CIF = NULL ,
          </when>
          <otherwise >
            C_FWD_INT_REFUND_INCOME_CIF = #{c_FWD_INT_REFUND_INCOME_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="c_FWD_INT_REFUND_INCOME_SL != null" >
        <choose >
          <when test="c_FWD_INT_REFUND_INCOME_SL == emptyBigDecimalValue" >
            C_FWD_INT_REFUND_INCOME_SL = NULL ,
          </when>
          <otherwise >
            C_FWD_INT_REFUND_INCOME_SL = #{c_FWD_INT_REFUND_INCOME_SL},
          </otherwise>
        </choose>
      </if>
      <if test="b_FWD_INT_REFUND_EXPENSE_CY != null" >
        <choose >
          <when test="b_FWD_INT_REFUND_EXPENSE_CY == emptyBigDecimalValue" >
            B_FWD_INT_REFUND_EXPENSE_CY = NULL ,
          </when>
          <otherwise >
            B_FWD_INT_REFUND_EXPENSE_CY = #{b_FWD_INT_REFUND_EXPENSE_CY},
          </otherwise>
        </choose>
      </if>
      <if test="b_FWD_INT_REFUND_EXPENSE_GL != null" >
        <choose >
          <when test="b_FWD_INT_REFUND_EXPENSE_GL == emptyBigDecimalValue" >
            B_FWD_INT_REFUND_EXPENSE_GL = NULL ,
          </when>
          <otherwise >
            B_FWD_INT_REFUND_EXPENSE_GL = #{b_FWD_INT_REFUND_EXPENSE_GL},
          </otherwise>
        </choose>
      </if>
      <if test="b_FWD_INT_REFUND_EXPENSE_CIF != null" >
        <choose >
          <when test="b_FWD_INT_REFUND_EXPENSE_CIF == emptyBigDecimalValue" >
            B_FWD_INT_REFUND_EXPENSE_CIF = NULL ,
          </when>
          <otherwise >
            B_FWD_INT_REFUND_EXPENSE_CIF = #{b_FWD_INT_REFUND_EXPENSE_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="b_FWD_INT_REFUND_EXPENSE_SL != null" >
        <choose >
          <when test="b_FWD_INT_REFUND_EXPENSE_SL == emptyBigDecimalValue" >
            B_FWD_INT_REFUND_EXPENSE_SL = NULL ,
          </when>
          <otherwise >
            B_FWD_INT_REFUND_EXPENSE_SL = #{b_FWD_INT_REFUND_EXPENSE_SL},
          </otherwise>
        </choose>
      </if>
      <if test="c_FWD_INT_REFUND_EXPENSE_CY != null" >
        <choose >
          <when test="c_FWD_INT_REFUND_EXPENSE_CY == emptyBigDecimalValue" >
            C_FWD_INT_REFUND_EXPENSE_CY = NULL ,
          </when>
          <otherwise >
            C_FWD_INT_REFUND_EXPENSE_CY = #{c_FWD_INT_REFUND_EXPENSE_CY},
          </otherwise>
        </choose>
      </if>
      <if test="c_FWD_INT_REFUND_EXPENSE_GL != null" >
        <choose >
          <when test="c_FWD_INT_REFUND_EXPENSE_GL == emptyBigDecimalValue" >
            C_FWD_INT_REFUND_EXPENSE_GL = NULL ,
          </when>
          <otherwise >
            C_FWD_INT_REFUND_EXPENSE_GL = #{c_FWD_INT_REFUND_EXPENSE_GL},
          </otherwise>
        </choose>
      </if>
      <if test="c_FWD_INT_REFUND_EXPENSE_CIF != null" >
        <choose >
          <when test="c_FWD_INT_REFUND_EXPENSE_CIF == emptyBigDecimalValue" >
            C_FWD_INT_REFUND_EXPENSE_CIF = NULL ,
          </when>
          <otherwise >
            C_FWD_INT_REFUND_EXPENSE_CIF = #{c_FWD_INT_REFUND_EXPENSE_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="c_FWD_INT_REFUND_EXPENSE_SL != null" >
        <choose >
          <when test="c_FWD_INT_REFUND_EXPENSE_SL == emptyBigDecimalValue" >
            C_FWD_INT_REFUND_EXPENSE_SL = NULL ,
          </when>
          <otherwise >
            C_FWD_INT_REFUND_EXPENSE_SL = #{c_FWD_INT_REFUND_EXPENSE_SL},
          </otherwise>
        </choose>
      </if>
      <if test="b_RGHT_SUBS_CY != null" >
        <choose >
          <when test="b_RGHT_SUBS_CY == emptyBigDecimalValue" >
            B_RGHT_SUBS_CY = NULL ,
          </when>
          <otherwise >
            B_RGHT_SUBS_CY = #{b_RGHT_SUBS_CY},
          </otherwise>
        </choose>
      </if>
      <if test="b_RGHT_SUBS_GL != null" >
        <choose >
          <when test="b_RGHT_SUBS_GL == emptyBigDecimalValue" >
            B_RGHT_SUBS_GL = NULL ,
          </when>
          <otherwise >
            B_RGHT_SUBS_GL = #{b_RGHT_SUBS_GL},
          </otherwise>
        </choose>
      </if>
      <if test="b_RGHT_SUBS_CIF != null" >
        <choose >
          <when test="b_RGHT_SUBS_CIF == emptyBigDecimalValue" >
            B_RGHT_SUBS_CIF = NULL ,
          </when>
          <otherwise >
            B_RGHT_SUBS_CIF = #{b_RGHT_SUBS_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="b_RGHT_SUBS_SL != null" >
        <choose >
          <when test="b_RGHT_SUBS_SL == emptyBigDecimalValue" >
            B_RGHT_SUBS_SL = NULL ,
          </when>
          <otherwise >
            B_RGHT_SUBS_SL = #{b_RGHT_SUBS_SL},
          </otherwise>
        </choose>
      </if>
      <if test="c_RGHT_SUBS_CY != null" >
        <choose >
          <when test="c_RGHT_SUBS_CY == emptyBigDecimalValue" >
            C_RGHT_SUBS_CY = NULL ,
          </when>
          <otherwise >
            C_RGHT_SUBS_CY = #{c_RGHT_SUBS_CY},
          </otherwise>
        </choose>
      </if>
      <if test="c_RGHT_SUBS_GL != null" >
        <choose >
          <when test="c_RGHT_SUBS_GL == emptyBigDecimalValue" >
            C_RGHT_SUBS_GL = NULL ,
          </when>
          <otherwise >
            C_RGHT_SUBS_GL = #{c_RGHT_SUBS_GL},
          </otherwise>
        </choose>
      </if>
      <if test="c_RGHT_SUBS_CIF != null" >
        <choose >
          <when test="c_RGHT_SUBS_CIF == emptyBigDecimalValue" >
            C_RGHT_SUBS_CIF = NULL ,
          </when>
          <otherwise >
            C_RGHT_SUBS_CIF = #{c_RGHT_SUBS_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="c_RGHT_SUBS_SL != null" >
        <choose >
          <when test="c_RGHT_SUBS_SL == emptyBigDecimalValue" >
            C_RGHT_SUBS_SL = NULL ,
          </when>
          <otherwise >
            C_RGHT_SUBS_SL = #{c_RGHT_SUBS_SL},
          </otherwise>
        </choose>
      </if>
    </set>
    where CODE = #{CODE}
      and COMP_CODE = #{COMP_CODE}
  </sql>
  <update id="updateSECURITY" parameterType="com.path.dbmaps.vo.SECURITYVO" >
    <include refid="sql_updateSECURITY" />
  </update>
</mapper>