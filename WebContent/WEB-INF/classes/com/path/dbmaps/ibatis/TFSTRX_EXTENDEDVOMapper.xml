<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TFSTRX_EXTENDED" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.TFSTRX_EXTENDEDVO" >
    <id column="BRANCH" property="BRANCH" />
    <id column="COMP_CODE" property="COMP_CODE" />
    <id column="LC_TYPE" property="LC_TYPE" />
    <id column="TRX_NBR" property="TRX_NBR" />
    <id column="TRX_TYPE" property="TRX_TYPE" />
    <result column="AMEND_REFERENCE" property="AMEND_REFERENCE" />
    <result column="AMEND_ADVISING_BANK_CIF" property="AMEND_ADVISING_BANK_CIF" />
    <result column="AMEND_BANK_DEF_BIC_CODE" property="AMEND_BANK_DEF_BIC_CODE" />
    <result column="AMEND_BANK_DEF_BIC_CODE1" property="AMEND_BANK_DEF_BIC_CODE1" />
    <result column="AMEND_BANK_DEF_NAME1" property="AMEND_BANK_DEF_NAME1" />
    <result column="AMEND_BANK_BRANCH" property="AMEND_BANK_BRANCH" />
    <result column="AMEND_BANK_ACCOUNT" property="AMEND_BANK_ACCOUNT" />
    <result column="AMEND_PRINCIPAL_REF" property="AMEND_PRINCIPAL_REF" />
    <result column="AMEND_COUNTRY" property="AMEND_COUNTRY" />
    <result column="AMEND_FULLNAME" property="AMEND_FULLNAME" />
    <result column="AMEND_ADDRESS1" property="AMEND_ADDRESS1" />
    <result column="AMEND_ADDRESS2" property="AMEND_ADDRESS2" />
    <result column="AMEND_ADDRESS3" property="AMEND_ADDRESS3" />
    <result column="CROSS_RATE" property="CROSS_RATE" />
    <result column="MARGIN_AMOUNT" property="MARGIN_AMOUNT" />
    <result column="MARGIN_AMT_CY2" property="MARGIN_AMT_CY2" />
    <result column="MARGIN_PERC" property="MARGIN_PERC" />
    <result column="MARGIN_REQUIRED" property="MARGIN_REQUIRED" />
    <result column="NOSTRO_MARGIN_BR" property="NOSTRO_MARGIN_BR" />
    <result column="NOSTRO_MARGIN_CIF" property="NOSTRO_MARGIN_CIF" />
    <result column="NOSTRO_MARGIN_CY" property="NOSTRO_MARGIN_CY" />
    <result column="NOSTRO_MARGIN_GL" property="NOSTRO_MARGIN_GL" />
    <result column="NOSTRO_MARGIN_SL" property="NOSTRO_MARGIN_SL" />
    <result column="SETTLEMENT_ACC_BR" property="SETTLEMENT_ACC_BR" />
    <result column="SETTLEMENT_ACC_CIF" property="SETTLEMENT_ACC_CIF" />
    <result column="SETTLEMENT_ACC_CY" property="SETTLEMENT_ACC_CY" />
    <result column="SETTLEMENT_ACC_GL" property="SETTLEMENT_ACC_GL" />
    <result column="SETTLEMENT_ACC_SL" property="SETTLEMENT_ACC_SL" />
    <result column="BANK_ACC_CY" property="BANK_ACC_CY" />
    <result column="BANK_PENALIZED_YN" property="BANK_PENALIZED_YN" />
    <result column="BANK_PENALTY_CROSS_RATE" property="BANK_PENALTY_CROSS_RATE" />
    <result column="AMT_IN_CREDIT_CY" property="AMT_IN_CREDIT_CY" />
    <result column="AMT_IN_BANK_CY" property="AMT_IN_BANK_CY" />
    <result column="CREDIT_ACC_CY" property="CREDIT_ACC_CY" />
    <result column="CUSTOMER_ACC_BR" property="CUSTOMER_ACC_BR" />
    <result column="CUSTOMER_ACC_CIF" property="CUSTOMER_ACC_CIF" />
    <result column="CUSTOMER_ACC_CY" property="CUSTOMER_ACC_CY" />
    <result column="CUSTOMER_ACC_GL" property="CUSTOMER_ACC_GL" />
    <result column="CUSTOMER_ACC_SL" property="CUSTOMER_ACC_SL" />
    <result column="CUSTOMER_PENALTY_CROSS_RATE" property="CUSTOMER_PENALTY_CROSS_RATE" />
    <result column="AMT_IN_PENALTY_CY" property="AMT_IN_PENALTY_CY" />
    <result column="AMT_IN_CUSTOMER_CY" property="AMT_IN_CUSTOMER_CY" />
    <result column="DOCUMENTS_RECEIVED_YN" property="DOCUMENTS_RECEIVED_YN" />
    <result column="DOC_DATE_RECEIVED" property="DOC_DATE_RECEIVED" />
    <result column="PENALTY_ACC_CY" property="PENALTY_ACC_CY" />
    <result column="SYNTHESIS_STATUS" property="SYNTHESIS_STATUS" />
  </resultMap>
  <sql id="Base_Column_List" >
    BRANCH, COMP_CODE, LC_TYPE, TRX_NBR, TRX_TYPE, AMEND_REFERENCE, AMEND_ADVISING_BANK_CIF, 
    AMEND_BANK_DEF_BIC_CODE, AMEND_BANK_DEF_BIC_CODE1, AMEND_BANK_DEF_NAME1, AMEND_BANK_BRANCH, 
    AMEND_BANK_ACCOUNT, AMEND_PRINCIPAL_REF, AMEND_COUNTRY, AMEND_FULLNAME, AMEND_ADDRESS1, 
    AMEND_ADDRESS2, AMEND_ADDRESS3, CROSS_RATE, MARGIN_AMOUNT, MARGIN_AMT_CY2, MARGIN_PERC, 
    MARGIN_REQUIRED, NOSTRO_MARGIN_BR, NOSTRO_MARGIN_CIF, NOSTRO_MARGIN_CY, NOSTRO_MARGIN_GL, 
    NOSTRO_MARGIN_SL, SETTLEMENT_ACC_BR, SETTLEMENT_ACC_CIF, SETTLEMENT_ACC_CY, SETTLEMENT_ACC_GL, 
    SETTLEMENT_ACC_SL, BANK_ACC_CY, BANK_PENALIZED_YN, BANK_PENALTY_CROSS_RATE, AMT_IN_CREDIT_CY, AMT_IN_BANK_CY, 
    CREDIT_ACC_CY, CUSTOMER_ACC_BR, CUSTOMER_ACC_CIF, CUSTOMER_ACC_CY, CUSTOMER_ACC_GL, CUSTOMER_ACC_SL, CUSTOMER_PENALTY_CROSS_RATE, 
    AMT_IN_PENALTY_CY, AMT_IN_CUSTOMER_CY, DOCUMENTS_RECEIVED_YN, DOC_DATE_RECEIVED, 
    PENALTY_ACC_CY, SYNTHESIS_STATUS
  </sql>
  <select id="selectTFSTRX_EXTENDED" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.TFSTRX_EXTENDEDVO" >
    select 
    <include refid="Base_Column_List" />
    from TFSTRX_EXTENDED
    where BRANCH = #{BRANCH}
      and COMP_CODE = #{COMP_CODE}
      and LC_TYPE = #{LC_TYPE}
      and TRX_NBR = #{TRX_NBR}
      and TRX_TYPE = #{TRX_TYPE}
  </select>
  <delete id="deleteTFSTRX_EXTENDED" parameterType="com.path.dbmaps.vo.TFSTRX_EXTENDEDVO" >
    delete from TFSTRX_EXTENDED
    where BRANCH = #{BRANCH}
      and COMP_CODE = #{COMP_CODE}
      and LC_TYPE = #{LC_TYPE}
      and TRX_NBR = #{TRX_NBR}
      and TRX_TYPE = #{TRX_TYPE}
  </delete>
  <insert id="insertTFSTRX_EXTENDED" parameterType="com.path.dbmaps.vo.TFSTRX_EXTENDEDVO" >
    insert into TFSTRX_EXTENDED
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="BRANCH != null and BRANCH != emptyBigDecimalValue" >
        BRANCH,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="LC_TYPE != null" >
        LC_TYPE,
      </if>
      <if test="TRX_NBR != null and TRX_NBR != emptyBigDecimalValue" >
        TRX_NBR,
      </if>
      <if test="TRX_TYPE != null and TRX_TYPE != emptyBigDecimalValue" >
        TRX_TYPE,
      </if>
      <if test="AMEND_REFERENCE != null" >
        AMEND_REFERENCE,
      </if>
      <if test="AMEND_ADVISING_BANK_CIF != null and AMEND_ADVISING_BANK_CIF != emptyBigDecimalValue" >
        AMEND_ADVISING_BANK_CIF,
      </if>
      <if test="AMEND_BANK_DEF_BIC_CODE != null" >
        AMEND_BANK_DEF_BIC_CODE,
      </if>
      <if test="AMEND_BANK_DEF_BIC_CODE1 != null" >
        AMEND_BANK_DEF_BIC_CODE1,
      </if>
      <if test="AMEND_BANK_DEF_NAME1 != null" >
        AMEND_BANK_DEF_NAME1,
      </if>
      <if test="AMEND_BANK_BRANCH != null" >
        AMEND_BANK_BRANCH,
      </if>
      <if test="AMEND_BANK_ACCOUNT != null" >
        AMEND_BANK_ACCOUNT,
      </if>
      <if test="AMEND_PRINCIPAL_REF != null" >
        AMEND_PRINCIPAL_REF,
      </if>
      <if test="AMEND_COUNTRY != null and AMEND_COUNTRY != emptyBigDecimalValue" >
        AMEND_COUNTRY,
      </if>
      <if test="AMEND_FULLNAME != null" >
        AMEND_FULLNAME,
      </if>
      <if test="AMEND_ADDRESS1 != null" >
        AMEND_ADDRESS1,
      </if>
      <if test="AMEND_ADDRESS2 != null" >
        AMEND_ADDRESS2,
      </if>
      <if test="AMEND_ADDRESS3 != null" >
        AMEND_ADDRESS3,
      </if>
      <if test="CROSS_RATE != null and CROSS_RATE != emptyBigDecimalValue" >
        CROSS_RATE,
      </if>
      <if test="MARGIN_AMOUNT != null and MARGIN_AMOUNT != emptyBigDecimalValue" >
        MARGIN_AMOUNT,
      </if>
      <if test="MARGIN_AMT_CY2 != null and MARGIN_AMT_CY2 != emptyBigDecimalValue" >
        MARGIN_AMT_CY2,
      </if>
      <if test="MARGIN_PERC != null and MARGIN_PERC != emptyBigDecimalValue" >
        MARGIN_PERC,
      </if>
      <if test="MARGIN_REQUIRED != null and MARGIN_REQUIRED != emptyBigDecimalValue" >
        MARGIN_REQUIRED,
      </if>
      <if test="NOSTRO_MARGIN_BR != null and NOSTRO_MARGIN_BR != emptyBigDecimalValue" >
        NOSTRO_MARGIN_BR,
      </if>
      <if test="NOSTRO_MARGIN_CIF != null and NOSTRO_MARGIN_CIF != emptyBigDecimalValue" >
        NOSTRO_MARGIN_CIF,
      </if>
      <if test="NOSTRO_MARGIN_CY != null and NOSTRO_MARGIN_CY != emptyBigDecimalValue" >
        NOSTRO_MARGIN_CY,
      </if>
      <if test="NOSTRO_MARGIN_GL != null and NOSTRO_MARGIN_GL != emptyBigDecimalValue" >
        NOSTRO_MARGIN_GL,
      </if>
      <if test="NOSTRO_MARGIN_SL != null and NOSTRO_MARGIN_SL != emptyBigDecimalValue" >
        NOSTRO_MARGIN_SL,
      </if>
      <if test="SETTLEMENT_ACC_BR != null and SETTLEMENT_ACC_BR != emptyBigDecimalValue" >
        SETTLEMENT_ACC_BR,
      </if>
      <if test="SETTLEMENT_ACC_CIF != null and SETTLEMENT_ACC_CIF != emptyBigDecimalValue" >
        SETTLEMENT_ACC_CIF,
      </if>
      <if test="SETTLEMENT_ACC_CY != null and SETTLEMENT_ACC_CY != emptyBigDecimalValue" >
        SETTLEMENT_ACC_CY,
      </if>
      <if test="SETTLEMENT_ACC_GL != null and SETTLEMENT_ACC_GL != emptyBigDecimalValue" >
        SETTLEMENT_ACC_GL,
      </if>
      <if test="SETTLEMENT_ACC_SL != null and SETTLEMENT_ACC_SL != emptyBigDecimalValue" >
        SETTLEMENT_ACC_SL,
      </if>
      <if test="BANK_ACC_CY != null and BANK_ACC_CY != emptyBigDecimalValue" >
        BANK_ACC_CY,
      </if>
      <if test="BANK_PENALIZED_YN != null" >
        BANK_PENALIZED_YN,
      </if>
      <if test="BANK_PENALTY_CROSS_RATE != null and BANK_PENALTY_CROSS_RATE != emptyBigDecimalValue" >
        BANK_PENALTY_CROSS_RATE,
      </if>
      <if test="AMT_IN_CREDIT_CY != null and AMT_IN_CREDIT_CY != emptyBigDecimalValue" >
        AMT_IN_CREDIT_CY,
      </if>
      <if test="AMT_IN_BANK_CY != null and AMT_IN_BANK_CY != emptyBigDecimalValue" >
        AMT_IN_BANK_CY,
      </if>
      <if test="CREDIT_ACC_CY != null and CREDIT_ACC_CY != emptyBigDecimalValue" >
        CREDIT_ACC_CY,
      </if>
      <if test="CUSTOMER_ACC_BR != null and CUSTOMER_ACC_BR != emptyBigDecimalValue" >
        CUSTOMER_ACC_BR,
      </if>
      <if test="CUSTOMER_ACC_CIF != null and CUSTOMER_ACC_CIF != emptyBigDecimalValue" >
        CUSTOMER_ACC_CIF,
      </if>
      <if test="CUSTOMER_ACC_CY != null and CUSTOMER_ACC_CY != emptyBigDecimalValue" >
        CUSTOMER_ACC_CY,
      </if>
      <if test="CUSTOMER_ACC_GL != null and CUSTOMER_ACC_GL != emptyBigDecimalValue" >
        CUSTOMER_ACC_GL,
      </if>
      <if test="CUSTOMER_ACC_SL != null and CUSTOMER_ACC_SL != emptyBigDecimalValue" >
        CUSTOMER_ACC_SL,
      </if>
      <if test="CUSTOMER_PENALTY_CROSS_RATE != null and CUSTOMER_PENALTY_CROSS_RATE != emptyBigDecimalValue" >
        CUSTOMER_PENALTY_CROSS_RATE,
      </if>
      <if test="AMT_IN_PENALTY_CY != null and AMT_IN_PENALTY_CY != emptyBigDecimalValue" >
        AMT_IN_PENALTY_CY,
      </if>
      <if test="AMT_IN_CUSTOMER_CY != null and AMT_IN_CUSTOMER_CY != emptyBigDecimalValue" >
        AMT_IN_CUSTOMER_CY,
      </if>
      <if test="DOCUMENTS_RECEIVED_YN != null" >
        DOCUMENTS_RECEIVED_YN,
      </if>
      <if test="DOC_DATE_RECEIVED != null" >
        DOC_DATE_RECEIVED,
      </if>
      <if test="PENALTY_ACC_CY != null and PENALTY_ACC_CY != emptyBigDecimalValue" >
        PENALTY_ACC_CY,
      </if>
      <if test="SYNTHESIS_STATUS != null" >
        SYNTHESIS_STATUS,
      </if>
      
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="BRANCH != null and BRANCH != emptyBigDecimalValue" >
        #{BRANCH},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="LC_TYPE != null" >
        #{LC_TYPE},
      </if>
      <if test="TRX_NBR != null and TRX_NBR != emptyBigDecimalValue" >
        #{TRX_NBR},
      </if>
      <if test="TRX_TYPE != null and TRX_TYPE != emptyBigDecimalValue" >
        #{TRX_TYPE},
      </if>
      <if test="AMEND_REFERENCE != null" >
        #{AMEND_REFERENCE},
      </if>
      <if test="AMEND_ADVISING_BANK_CIF != null and AMEND_ADVISING_BANK_CIF != emptyBigDecimalValue" >
        #{AMEND_ADVISING_BANK_CIF},
      </if>
      <if test="AMEND_BANK_DEF_BIC_CODE != null" >
        #{AMEND_BANK_DEF_BIC_CODE},
      </if>
      <if test="AMEND_BANK_DEF_BIC_CODE1 != null" >
        #{AMEND_BANK_DEF_BIC_CODE1},
      </if>
      <if test="AMEND_BANK_DEF_NAME1 != null" >
        #{AMEND_BANK_DEF_NAME1},
      </if>
      <if test="AMEND_BANK_BRANCH != null" >
        #{AMEND_BANK_BRANCH},
      </if>
      <if test="AMEND_BANK_ACCOUNT != null" >
        #{AMEND_BANK_ACCOUNT},
      </if>
      <if test="AMEND_PRINCIPAL_REF != null" >
        #{AMEND_PRINCIPAL_REF},
      </if>
      <if test="AMEND_COUNTRY != null and AMEND_COUNTRY != emptyBigDecimalValue" >
        #{AMEND_COUNTRY},
      </if>
      <if test="AMEND_FULLNAME != null" >
        #{AMEND_FULLNAME},
      </if>
      <if test="AMEND_ADDRESS1 != null" >
        #{AMEND_ADDRESS1},
      </if>
      <if test="AMEND_ADDRESS2 != null" >
        #{AMEND_ADDRESS2},
      </if>
      <if test="AMEND_ADDRESS3 != null" >
        #{AMEND_ADDRESS3},
      </if>
      <if test="CROSS_RATE != null and CROSS_RATE != emptyBigDecimalValue" >
        #{CROSS_RATE},
      </if>
      <if test="MARGIN_AMOUNT != null and MARGIN_AMOUNT != emptyBigDecimalValue" >
        #{MARGIN_AMOUNT},
      </if>
      <if test="MARGIN_AMT_CY2 != null and MARGIN_AMT_CY2 != emptyBigDecimalValue" >
        #{MARGIN_AMT_CY2},
      </if>
      <if test="MARGIN_PERC != null and MARGIN_PERC != emptyBigDecimalValue" >
        #{MARGIN_PERC},
      </if>
      <if test="MARGIN_REQUIRED != null and MARGIN_REQUIRED != emptyBigDecimalValue" >
        #{MARGIN_REQUIRED},
      </if>
      <if test="NOSTRO_MARGIN_BR != null and NOSTRO_MARGIN_BR != emptyBigDecimalValue" >
        #{NOSTRO_MARGIN_BR},
      </if>
      <if test="NOSTRO_MARGIN_CIF != null and NOSTRO_MARGIN_CIF != emptyBigDecimalValue" >
        #{NOSTRO_MARGIN_CIF},
      </if>
      <if test="NOSTRO_MARGIN_CY != null and NOSTRO_MARGIN_CY != emptyBigDecimalValue" >
        #{NOSTRO_MARGIN_CY},
      </if>
      <if test="NOSTRO_MARGIN_GL != null and NOSTRO_MARGIN_GL != emptyBigDecimalValue" >
        #{NOSTRO_MARGIN_GL},
      </if>
      <if test="NOSTRO_MARGIN_SL != null and NOSTRO_MARGIN_SL != emptyBigDecimalValue" >
        #{NOSTRO_MARGIN_SL},
      </if>
      <if test="SETTLEMENT_ACC_BR != null and SETTLEMENT_ACC_BR != emptyBigDecimalValue" >
        #{SETTLEMENT_ACC_BR},
      </if>
      <if test="SETTLEMENT_ACC_CIF != null and SETTLEMENT_ACC_CIF != emptyBigDecimalValue" >
        #{SETTLEMENT_ACC_CIF},
      </if>
      <if test="SETTLEMENT_ACC_CY != null and SETTLEMENT_ACC_CY != emptyBigDecimalValue" >
        #{SETTLEMENT_ACC_CY},
      </if>
      <if test="SETTLEMENT_ACC_GL != null and SETTLEMENT_ACC_GL != emptyBigDecimalValue" >
        #{SETTLEMENT_ACC_GL},
      </if>
      <if test="SETTLEMENT_ACC_SL != null and SETTLEMENT_ACC_SL != emptyBigDecimalValue" >
        #{SETTLEMENT_ACC_SL},
      </if>
      <if test="BANK_ACC_CY != null and BANK_ACC_CY != emptyBigDecimalValue" >
        #{BANK_ACC_CY},
      </if>
      <if test="BANK_PENALIZED_YN != null" >
        #{BANK_PENALIZED_YN},
      </if>
      <if test="BANK_PENALTY_CROSS_RATE != null and BANK_PENALTY_CROSS_RATE != emptyBigDecimalValue" >
        #{BANK_PENALTY_CROSS_RATE},
      </if>
      <if test="AMT_IN_CREDIT_CY != null and AMT_IN_CREDIT_CY != emptyBigDecimalValue" >
        #{AMT_IN_CREDIT_CY},
      </if>
      <if test="AMT_IN_BANK_CY != null and AMT_IN_BANK_CY != emptyBigDecimalValue" >
        #{AMT_IN_BANK_CY},
      </if>
      <if test="CREDIT_ACC_CY != null and CREDIT_ACC_CY != emptyBigDecimalValue" >
        #{CREDIT_ACC_CY},
      </if>
      <if test="CUSTOMER_ACC_BR != null and CUSTOMER_ACC_BR != emptyBigDecimalValue" >
        #{CUSTOMER_ACC_BR},
      </if>
      <if test="CUSTOMER_ACC_CIF != null and CUSTOMER_ACC_CIF != emptyBigDecimalValue" >
        #{CUSTOMER_ACC_CIF},
      </if>
      <if test="CUSTOMER_ACC_CY != null and CUSTOMER_ACC_CY != emptyBigDecimalValue" >
        #{CUSTOMER_ACC_CY},
      </if>
      <if test="CUSTOMER_ACC_GL != null and CUSTOMER_ACC_GL != emptyBigDecimalValue" >
        #{CUSTOMER_ACC_GL},
      </if>
      <if test="CUSTOMER_ACC_SL != null and CUSTOMER_ACC_SL != emptyBigDecimalValue" >
        #{CUSTOMER_ACC_SL},
      </if>
      <if test="CUSTOMER_PENALTY_CROSS_RATE != null and CUSTOMER_PENALTY_CROSS_RATE != emptyBigDecimalValue" >
        #{CUSTOMER_PENALTY_CROSS_RATE},
      </if>
      <if test="AMT_IN_PENALTY_CY != null and AMT_IN_PENALTY_CY != emptyBigDecimalValue" >
        #{AMT_IN_PENALTY_CY},
      </if>
      <if test="AMT_IN_CUSTOMER_CY != null and AMT_IN_CUSTOMER_CY != emptyBigDecimalValue" >
        #{AMT_IN_CUSTOMER_CY},
      </if>
      <if test="DOCUMENTS_RECEIVED_YN != null" >
        #{DOCUMENTS_RECEIVED_YN},
      </if>
      <if test="DOC_DATE_RECEIVED != null" >
        #{DOC_DATE_RECEIVED},
      </if>
      <if test="PENALTY_ACC_CY != null and PENALTY_ACC_CY != emptyBigDecimalValue" >
        #{PENALTY_ACC_CY},
      </if>
      <if test="SYNTHESIS_STATUS != null" >
        #{SYNTHESIS_STATUS},
      </if>  
      
    </trim>
  </insert>
  <sql id="sql_updateTFSTRX_EXTENDED" >
    update TFSTRX_EXTENDED
    <set >
      <if test="AMEND_REFERENCE != null" >
        AMEND_REFERENCE = #{AMEND_REFERENCE},
      </if>
      <if test="AMEND_ADVISING_BANK_CIF != null" >
        <choose >
          <when test="AMEND_ADVISING_BANK_CIF == emptyBigDecimalValue" >
            AMEND_ADVISING_BANK_CIF = NULL ,
          </when>
          <otherwise >
            AMEND_ADVISING_BANK_CIF = #{AMEND_ADVISING_BANK_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="AMEND_BANK_DEF_BIC_CODE != null" >
        AMEND_BANK_DEF_BIC_CODE = #{AMEND_BANK_DEF_BIC_CODE},
      </if>
      <if test="AMEND_BANK_DEF_BIC_CODE1 != null" >
        AMEND_BANK_DEF_BIC_CODE1 = #{AMEND_BANK_DEF_BIC_CODE1},
      </if>
      <if test="AMEND_BANK_DEF_NAME1 != null" >
        AMEND_BANK_DEF_NAME1 = #{AMEND_BANK_DEF_NAME1},
      </if>
      <if test="AMEND_BANK_BRANCH != null" >
        AMEND_BANK_BRANCH = #{AMEND_BANK_BRANCH},
      </if>
      <if test="AMEND_BANK_ACCOUNT != null" >
        AMEND_BANK_ACCOUNT = #{AMEND_BANK_ACCOUNT},
      </if>
      <if test="AMEND_PRINCIPAL_REF != null" >
        AMEND_PRINCIPAL_REF = #{AMEND_PRINCIPAL_REF},
      </if>
      <if test="AMEND_COUNTRY != null" >
        <choose >
          <when test="AMEND_COUNTRY == emptyBigDecimalValue" >
            AMEND_COUNTRY = NULL ,
          </when>
          <otherwise >
            AMEND_COUNTRY = #{AMEND_COUNTRY},
          </otherwise>
        </choose>
      </if>
      <if test="AMEND_FULLNAME != null" >
        AMEND_FULLNAME = #{AMEND_FULLNAME},
      </if>
      <if test="AMEND_ADDRESS1 != null" >
        AMEND_ADDRESS1 = #{AMEND_ADDRESS1},
      </if>
      <if test="AMEND_ADDRESS2 != null" >
        AMEND_ADDRESS2 = #{AMEND_ADDRESS2},
      </if>
      <if test="AMEND_ADDRESS3 != null" >
        AMEND_ADDRESS3 = #{AMEND_ADDRESS3},
      </if>
      <if test="CROSS_RATE != null" >
        <choose >
          <when test="CROSS_RATE == emptyBigDecimalValue" >
            CROSS_RATE = NULL ,
          </when>
          <otherwise >
            CROSS_RATE = #{CROSS_RATE},
          </otherwise>
        </choose>
      </if>
      <if test="MARGIN_AMOUNT != null" >
        <choose >
          <when test="MARGIN_AMOUNT == emptyBigDecimalValue" >
            MARGIN_AMOUNT = NULL ,
          </when>
          <otherwise >
            MARGIN_AMOUNT = #{MARGIN_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="MARGIN_AMT_CY2 != null" >
        <choose >
          <when test="MARGIN_AMT_CY2 == emptyBigDecimalValue" >
            MARGIN_AMT_CY2 = NULL ,
          </when>
          <otherwise >
            MARGIN_AMT_CY2 = #{MARGIN_AMT_CY2},
          </otherwise>
        </choose>
      </if>
      <if test="MARGIN_PERC != null" >
        <choose >
          <when test="MARGIN_PERC == emptyBigDecimalValue" >
            MARGIN_PERC = NULL ,
          </when>
          <otherwise >
            MARGIN_PERC = #{MARGIN_PERC},
          </otherwise>
        </choose>
      </if>
      <if test="MARGIN_REQUIRED != null" >
        <choose >
          <when test="MARGIN_REQUIRED == emptyBigDecimalValue" >
            MARGIN_REQUIRED = NULL ,
          </when>
          <otherwise >
            MARGIN_REQUIRED = #{MARGIN_REQUIRED},
          </otherwise>
        </choose>
      </if>
      <if test="NOSTRO_MARGIN_BR != null" >
        <choose >
          <when test="NOSTRO_MARGIN_BR == emptyBigDecimalValue" >
            NOSTRO_MARGIN_BR = NULL ,
          </when>
          <otherwise >
            NOSTRO_MARGIN_BR = #{NOSTRO_MARGIN_BR},
          </otherwise>
        </choose>
      </if>
      <if test="NOSTRO_MARGIN_CIF != null" >
        <choose >
          <when test="NOSTRO_MARGIN_CIF == emptyBigDecimalValue" >
            NOSTRO_MARGIN_CIF = NULL ,
          </when>
          <otherwise >
            NOSTRO_MARGIN_CIF = #{NOSTRO_MARGIN_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="NOSTRO_MARGIN_CY != null" >
        <choose >
          <when test="NOSTRO_MARGIN_CY == emptyBigDecimalValue" >
            NOSTRO_MARGIN_CY = NULL ,
          </when>
          <otherwise >
            NOSTRO_MARGIN_CY = #{NOSTRO_MARGIN_CY},
          </otherwise>
        </choose>
      </if>
      <if test="NOSTRO_MARGIN_GL != null" >
        <choose >
          <when test="NOSTRO_MARGIN_GL == emptyBigDecimalValue" >
            NOSTRO_MARGIN_GL = NULL ,
          </when>
          <otherwise >
            NOSTRO_MARGIN_GL = #{NOSTRO_MARGIN_GL},
          </otherwise>
        </choose>
      </if>
      <if test="NOSTRO_MARGIN_SL != null" >
        <choose >
          <when test="NOSTRO_MARGIN_SL == emptyBigDecimalValue" >
            NOSTRO_MARGIN_SL = NULL ,
          </when>
          <otherwise >
            NOSTRO_MARGIN_SL = #{NOSTRO_MARGIN_SL},
          </otherwise>
        </choose>
      </if>
      <if test="SETTLEMENT_ACC_BR != null" >
        <choose >
          <when test="SETTLEMENT_ACC_BR == emptyBigDecimalValue" >
            SETTLEMENT_ACC_BR = NULL ,
          </when>
          <otherwise >
            SETTLEMENT_ACC_BR = #{SETTLEMENT_ACC_BR},
          </otherwise>
        </choose>
      </if>
      <if test="SETTLEMENT_ACC_CIF != null" >
        <choose >
          <when test="SETTLEMENT_ACC_CIF == emptyBigDecimalValue" >
            SETTLEMENT_ACC_CIF = NULL ,
          </when>
          <otherwise >
            SETTLEMENT_ACC_CIF = #{SETTLEMENT_ACC_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="SETTLEMENT_ACC_CY != null" >
        <choose >
          <when test="SETTLEMENT_ACC_CY == emptyBigDecimalValue" >
            SETTLEMENT_ACC_CY = NULL ,
          </when>
          <otherwise >
            SETTLEMENT_ACC_CY = #{SETTLEMENT_ACC_CY},
          </otherwise>
        </choose>
      </if>
      <if test="SETTLEMENT_ACC_GL != null" >
        <choose >
          <when test="SETTLEMENT_ACC_GL == emptyBigDecimalValue" >
            SETTLEMENT_ACC_GL = NULL ,
          </when>
          <otherwise >
            SETTLEMENT_ACC_GL = #{SETTLEMENT_ACC_GL},
          </otherwise>
        </choose>
      </if>
      <if test="SETTLEMENT_ACC_SL != null" >
        <choose >
          <when test="SETTLEMENT_ACC_SL == emptyBigDecimalValue" >
            SETTLEMENT_ACC_SL = NULL ,
          </when>
          <otherwise >
            SETTLEMENT_ACC_SL = #{SETTLEMENT_ACC_SL},
          </otherwise>
        </choose>
      </if>
      <if test="BANK_ACC_CY != null" >
        <choose >
          <when test="BANK_ACC_CY == emptyBigDecimalValue" >
            BANK_ACC_CY = NULL ,
          </when>
          <otherwise >
            BANK_ACC_CY = #{BANK_ACC_CY},
          </otherwise>
        </choose>
      </if>
      <if test="BANK_PENALIZED_YN != null" >
        BANK_PENALIZED_YN = #{BANK_PENALIZED_YN},
      </if>
      <if test="BANK_PENALTY_CROSS_RATE != null" >
        <choose >
          <when test="BANK_PENALTY_CROSS_RATE == emptyBigDecimalValue" >
            BANK_PENALTY_CROSS_RATE = NULL ,
          </when>
          <otherwise >
            BANK_PENALTY_CROSS_RATE = #{BANK_PENALTY_CROSS_RATE},
          </otherwise>
        </choose>
      </if>
      <if test="AMT_IN_CREDIT_CY != null" >
        <choose >
          <when test="AMT_IN_CREDIT_CY == emptyBigDecimalValue" >
            AMT_IN_CREDIT_CY = NULL ,
          </when>
          <otherwise >
            AMT_IN_CREDIT_CY = #{AMT_IN_CREDIT_CY},
          </otherwise>
        </choose>
      </if>
      <if test="AMT_IN_BANK_CY != null" >
        <choose >
          <when test="AMT_IN_BANK_CY == emptyBigDecimalValue" >
            AMT_IN_BANK_CY = NULL ,
          </when>
          <otherwise >
            AMT_IN_BANK_CY = #{AMT_IN_BANK_CY},
          </otherwise>
        </choose>
      </if>
      <if test="CREDIT_ACC_CY != null" >
        <choose >
          <when test="CREDIT_ACC_CY == emptyBigDecimalValue" >
            CREDIT_ACC_CY = NULL ,
          </when>
          <otherwise >
            CREDIT_ACC_CY = #{CREDIT_ACC_CY},
          </otherwise>
        </choose>
      </if>
      <if test="CUSTOMER_ACC_BR != null" >
        <choose >
          <when test="CUSTOMER_ACC_BR == emptyBigDecimalValue" >
            CUSTOMER_ACC_BR = NULL ,
          </when>
          <otherwise >
            CUSTOMER_ACC_BR = #{CUSTOMER_ACC_BR},
          </otherwise>
        </choose>
      </if>
      <if test="CUSTOMER_ACC_CIF != null" >
        <choose >
          <when test="CUSTOMER_ACC_CIF == emptyBigDecimalValue" >
            CUSTOMER_ACC_CIF = NULL ,
          </when>
          <otherwise >
            CUSTOMER_ACC_CIF = #{CUSTOMER_ACC_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="CUSTOMER_ACC_CY != null" >
        <choose >
          <when test="CUSTOMER_ACC_CY == emptyBigDecimalValue" >
            CUSTOMER_ACC_CY = NULL ,
          </when>
          <otherwise >
            CUSTOMER_ACC_CY = #{CUSTOMER_ACC_CY},
          </otherwise>
        </choose>
      </if>
      <if test="CUSTOMER_ACC_GL != null" >
        <choose >
          <when test="CUSTOMER_ACC_GL == emptyBigDecimalValue" >
            CUSTOMER_ACC_GL = NULL ,
          </when>
          <otherwise >
            CUSTOMER_ACC_GL = #{CUSTOMER_ACC_GL},
          </otherwise>
        </choose>
      </if>
      <if test="CUSTOMER_ACC_SL != null" >
        <choose >
          <when test="CUSTOMER_ACC_SL == emptyBigDecimalValue" >
            CUSTOMER_ACC_SL = NULL ,
          </when>
          <otherwise >
            CUSTOMER_ACC_SL = #{CUSTOMER_ACC_SL},
          </otherwise>
        </choose>
      </if>
      <if test="CUSTOMER_PENALTY_CROSS_RATE != null" >
        <choose >
          <when test="CUSTOMER_PENALTY_CROSS_RATE == emptyBigDecimalValue" >
            CUSTOMER_PENALTY_CROSS_RATE = NULL ,
          </when>
          <otherwise >
            CUSTOMER_PENALTY_CROSS_RATE = #{CUSTOMER_PENALTY_CROSS_RATE},
          </otherwise>
        </choose>
      </if>
      <if test="AMT_IN_PENALTY_CY != null" >
        <choose >
          <when test="AMT_IN_PENALTY_CY == emptyBigDecimalValue" >
            AMT_IN_PENALTY_CY = NULL ,
          </when>
          <otherwise >
            AMT_IN_PENALTY_CY = #{AMT_IN_PENALTY_CY},
          </otherwise>
        </choose>
      </if>
      <if test="AMT_IN_CUSTOMER_CY != null" >
        <choose >
          <when test="AMT_IN_CUSTOMER_CY == emptyBigDecimalValue" >
            AMT_IN_CUSTOMER_CY = NULL ,
          </when>
          <otherwise >
            AMT_IN_CUSTOMER_CY = #{AMT_IN_CUSTOMER_CY},
          </otherwise>
        </choose>
      </if>
      <if test="DOCUMENTS_RECEIVED_YN != null" >
        DOCUMENTS_RECEIVED_YN = #{DOCUMENTS_RECEIVED_YN},
      </if>
      <if test="DOC_DATE_RECEIVED != null" >
        DOC_DATE_RECEIVED = #{DOC_DATE_RECEIVED},
      </if>
      <if test="PENALTY_ACC_CY != null" >
        <choose >
          <when test="PENALTY_ACC_CY == emptyBigDecimalValue" >
            PENALTY_ACC_CY = NULL ,
          </when>
          <otherwise >
            PENALTY_ACC_CY = #{PENALTY_ACC_CY},
          </otherwise>
        </choose>
      </if>
       <if test="SYNTHESIS_STATUS != null" >
        SYNTHESIS_STATUS = #{SYNTHESIS_STATUS},
      </if>
      
    </set>
    where BRANCH = #{BRANCH}
      and COMP_CODE = #{COMP_CODE}
      and LC_TYPE = #{LC_TYPE}
      and TRX_NBR = #{TRX_NBR}
      and TRX_TYPE = #{TRX_TYPE}
  </sql>
  <update id="updateTFSTRX_EXTENDED" parameterType="com.path.dbmaps.vo.TFSTRX_EXTENDEDVO" >
    <include refid="sql_updateTFSTRX_EXTENDED" />
  </update>
</mapper>