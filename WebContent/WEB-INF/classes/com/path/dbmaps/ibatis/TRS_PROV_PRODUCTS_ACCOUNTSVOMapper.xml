<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TRS_PROV_PRODUCTS_ACCOUNTS" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.TRS_PROV_PRODUCTS_ACCOUNTSVO" >
    <id column="CATEGORY_CODE" property="CATEGORY_CODE" />
    <id column="COMP_CODE" property="COMP_CODE" />
    <id column="OVERDRAWN_GL_CODE" property="OVERDRAWN_GL_CODE" />
    <id column="PRODUCT_TYPE_CODE" property="PRODUCT_TYPE_CODE" />
    <result column="TEMPLATE_TYPE" property="TEMPLATE_TYPE" />
    <result column="TEMPLATE_CODE" property="TEMPLATE_CODE" />
    <result column="DR_PROV_GL" property="DR_PROV_GL" />
    <result column="DR_PROV_CIF" property="DR_PROV_CIF" />
    <result column="DR_PROV_SL" property="DR_PROV_SL" />
    <result column="CR_PROV_GL" property="CR_PROV_GL" />
    <result column="CR_PROV_CIF" property="CR_PROV_CIF" />
    <result column="CR_PROV_SL" property="CR_PROV_SL" />
  </resultMap>
  <sql id="Base_Column_List" >
    CATEGORY_CODE, COMP_CODE, OVERDRAWN_GL_CODE, PRODUCT_TYPE_CODE, TEMPLATE_TYPE, TEMPLATE_CODE, 
    DR_PROV_GL, DR_PROV_CIF, DR_PROV_SL, CR_PROV_GL, CR_PROV_CIF, CR_PROV_SL
  </sql>
  <select id="selectTRS_PROV_PRODUCTS_ACCOUNTS" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.TRS_PROV_PRODUCTS_ACCOUNTSVOKey" >
    select 
    <include refid="Base_Column_List" />
    from TRS_PROV_PRODUCTS_ACCOUNTS
    where CATEGORY_CODE = #{CATEGORY_CODE}
      and COMP_CODE = #{COMP_CODE}
      and OVERDRAWN_GL_CODE = #{OVERDRAWN_GL_CODE}
      and PRODUCT_TYPE_CODE = #{PRODUCT_TYPE_CODE}
  </select>
  <delete id="deleteTRS_PROV_PRODUCTS_ACCOUNTS" parameterType="com.path.dbmaps.vo.TRS_PROV_PRODUCTS_ACCOUNTSVOKey" >
    delete from TRS_PROV_PRODUCTS_ACCOUNTS
    where CATEGORY_CODE = #{CATEGORY_CODE}
      and COMP_CODE = #{COMP_CODE}
      and OVERDRAWN_GL_CODE = #{OVERDRAWN_GL_CODE}
      and PRODUCT_TYPE_CODE = #{PRODUCT_TYPE_CODE}
  </delete>
  <insert id="insertTRS_PROV_PRODUCTS_ACCOUNTS" parameterType="com.path.dbmaps.vo.TRS_PROV_PRODUCTS_ACCOUNTSVO" >
    insert into TRS_PROV_PRODUCTS_ACCOUNTS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="CATEGORY_CODE != null and CATEGORY_CODE != emptyBigDecimalValue" >
        CATEGORY_CODE,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="OVERDRAWN_GL_CODE != null and OVERDRAWN_GL_CODE != emptyBigDecimalValue" >
        OVERDRAWN_GL_CODE,
      </if>
      <if test="PRODUCT_TYPE_CODE != null and PRODUCT_TYPE_CODE != emptyBigDecimalValue" >
        PRODUCT_TYPE_CODE,
      </if>
      <if test="TEMPLATE_TYPE != null and TEMPLATE_TYPE != emptyBigDecimalValue" >
        TEMPLATE_TYPE,
      </if>
      <if test="TEMPLATE_CODE != null and TEMPLATE_CODE != emptyBigDecimalValue" >
        TEMPLATE_CODE,
      </if>
      <if test="DR_PROV_GL != null and DR_PROV_GL != emptyBigDecimalValue" >
        DR_PROV_GL,
      </if>
      <if test="DR_PROV_CIF != null and DR_PROV_CIF != emptyBigDecimalValue" >
        DR_PROV_CIF,
      </if>
      <if test="DR_PROV_SL != null and DR_PROV_SL != emptyBigDecimalValue" >
        DR_PROV_SL,
      </if>
      <if test="CR_PROV_GL != null and CR_PROV_GL != emptyBigDecimalValue" >
        CR_PROV_GL,
      </if>
      <if test="CR_PROV_CIF != null and CR_PROV_CIF != emptyBigDecimalValue" >
        CR_PROV_CIF,
      </if>
      <if test="CR_PROV_SL != null and CR_PROV_SL != emptyBigDecimalValue" >
        CR_PROV_SL,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="CATEGORY_CODE != null and CATEGORY_CODE != emptyBigDecimalValue" >
        #{CATEGORY_CODE},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="OVERDRAWN_GL_CODE != null and OVERDRAWN_GL_CODE != emptyBigDecimalValue" >
        #{OVERDRAWN_GL_CODE},
      </if>
      <if test="PRODUCT_TYPE_CODE != null and PRODUCT_TYPE_CODE != emptyBigDecimalValue" >
        #{PRODUCT_TYPE_CODE},
      </if>
      <if test="TEMPLATE_TYPE != null and TEMPLATE_TYPE != emptyBigDecimalValue" >
        #{TEMPLATE_TYPE},
      </if>
      <if test="TEMPLATE_CODE != null and TEMPLATE_CODE != emptyBigDecimalValue" >
        #{TEMPLATE_CODE},
      </if>
      <if test="DR_PROV_GL != null and DR_PROV_GL != emptyBigDecimalValue" >
        #{DR_PROV_GL},
      </if>
      <if test="DR_PROV_CIF != null and DR_PROV_CIF != emptyBigDecimalValue" >
        #{DR_PROV_CIF},
      </if>
      <if test="DR_PROV_SL != null and DR_PROV_SL != emptyBigDecimalValue" >
        #{DR_PROV_SL},
      </if>
      <if test="CR_PROV_GL != null and CR_PROV_GL != emptyBigDecimalValue" >
        #{CR_PROV_GL},
      </if>
      <if test="CR_PROV_CIF != null and CR_PROV_CIF != emptyBigDecimalValue" >
        #{CR_PROV_CIF},
      </if>
      <if test="CR_PROV_SL != null and CR_PROV_SL != emptyBigDecimalValue" >
        #{CR_PROV_SL},
      </if>
    </trim>
  </insert>
  <sql id="sql_updateTRS_PROV_PRODUCTS_ACCOUNTS" >
    update TRS_PROV_PRODUCTS_ACCOUNTS
    <set >
      <if test="TEMPLATE_TYPE != null" >
        <choose >
          <when test="TEMPLATE_TYPE == emptyBigDecimalValue" >
            TEMPLATE_TYPE = NULL ,
          </when>
          <otherwise >
            TEMPLATE_TYPE = #{TEMPLATE_TYPE},
          </otherwise>
        </choose>
      </if>
      <if test="TEMPLATE_CODE != null" >
        <choose >
          <when test="TEMPLATE_CODE == emptyBigDecimalValue" >
            TEMPLATE_CODE = NULL ,
          </when>
          <otherwise >
            TEMPLATE_CODE = #{TEMPLATE_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="DR_PROV_GL != null" >
        <choose >
          <when test="DR_PROV_GL == emptyBigDecimalValue" >
            DR_PROV_GL = NULL ,
          </when>
          <otherwise >
            DR_PROV_GL = #{DR_PROV_GL},
          </otherwise>
        </choose>
      </if>
      <if test="DR_PROV_CIF != null" >
        <choose >
          <when test="DR_PROV_CIF == emptyBigDecimalValue" >
            DR_PROV_CIF = NULL ,
          </when>
          <otherwise >
            DR_PROV_CIF = #{DR_PROV_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="DR_PROV_SL != null" >
        <choose >
          <when test="DR_PROV_SL == emptyBigDecimalValue" >
            DR_PROV_SL = NULL ,
          </when>
          <otherwise >
            DR_PROV_SL = #{DR_PROV_SL},
          </otherwise>
        </choose>
      </if>
      <if test="CR_PROV_GL != null" >
        <choose >
          <when test="CR_PROV_GL == emptyBigDecimalValue" >
            CR_PROV_GL = NULL ,
          </when>
          <otherwise >
            CR_PROV_GL = #{CR_PROV_GL},
          </otherwise>
        </choose>
      </if>
      <if test="CR_PROV_CIF != null" >
        <choose >
          <when test="CR_PROV_CIF == emptyBigDecimalValue" >
            CR_PROV_CIF = NULL ,
          </when>
          <otherwise >
            CR_PROV_CIF = #{CR_PROV_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="CR_PROV_SL != null" >
        <choose >
          <when test="CR_PROV_SL == emptyBigDecimalValue" >
            CR_PROV_SL = NULL ,
          </when>
          <otherwise >
            CR_PROV_SL = #{CR_PROV_SL},
          </otherwise>
        </choose>
      </if>
    </set>
    where CATEGORY_CODE = #{CATEGORY_CODE}
      and COMP_CODE = #{COMP_CODE}
      and OVERDRAWN_GL_CODE = #{OVERDRAWN_GL_CODE}
      and PRODUCT_TYPE_CODE = #{PRODUCT_TYPE_CODE}
  </sql>
  <update id="updateTRS_PROV_PRODUCTS_ACCOUNTS" parameterType="com.path.dbmaps.vo.TRS_PROV_PRODUCTS_ACCOUNTSVO" >
    <include refid="sql_updateTRS_PROV_PRODUCTS_ACCOUNTS" />
  </update>
</mapper>