<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TRSDEAL_SD_DETAILS" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.TRSDEAL_SD_DETAILSVO" >
    <id column="BRANCH_CODE" property="BRANCH_CODE" />
    <id column="COMP_CODE" property="COMP_CODE" />
    <id column="SERIAL_NO" property="SERIAL_NO" />
    <result column="MINIMUM_SD_AMOUNT" property="MINIMUM_SD_AMOUNT" />
    <result column="SD_ACC_BRANCH" property="SD_ACC_BRANCH" />
    <result column="SD_ACC_CURRENCY" property="SD_ACC_CURRENCY" />
    <result column="SD_ACC_GL_CODE" property="SD_ACC_GL_CODE" />
    <result column="SD_ACC_CIF_NO" property="SD_ACC_CIF_NO" />
    <result column="SD_ACC_SL_NO" property="SD_ACC_SL_NO" />
    <result column="BLOCKED_AMT_FOR_RECOVERY" property="BLOCKED_AMT_FOR_RECOVERY" />
    <result column="ORIGINAL_AMOUNT" property="ORIGINAL_AMOUNT" />
    <result column="AMENDMENT_REASON" property="AMENDMENT_REASON" />
    <result column="AMOUNT_TRANSFER_TO_SD_YN" property="AMOUNT_TRANSFER_TO_SD_YN" />
  </resultMap>
  <sql id="Base_Column_List" >
    BRANCH_CODE, COMP_CODE, SERIAL_NO, MINIMUM_SD_AMOUNT, SD_ACC_BRANCH, SD_ACC_CURRENCY, 
    SD_ACC_GL_CODE, SD_ACC_CIF_NO, SD_ACC_SL_NO, BLOCKED_AMT_FOR_RECOVERY, ORIGINAL_AMOUNT, 
    AMENDMENT_REASON, AMOUNT_TRANSFER_TO_SD_YN
  </sql>
  <select id="selectTRSDEAL_SD_DETAILS" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.TRSDEAL_SD_DETAILSVOKey" >
    select 
    <include refid="Base_Column_List" />
    from TRSDEAL_SD_DETAILS
    where BRANCH_CODE = #{BRANCH_CODE}
      and COMP_CODE = #{COMP_CODE}
      and SERIAL_NO = #{SERIAL_NO}
  </select>
  <delete id="deleteTRSDEAL_SD_DETAILS" parameterType="com.path.dbmaps.vo.TRSDEAL_SD_DETAILSVOKey" >
    delete from TRSDEAL_SD_DETAILS
    where BRANCH_CODE = #{BRANCH_CODE}
      and COMP_CODE = #{COMP_CODE}
      and SERIAL_NO = #{SERIAL_NO}
  </delete>
  <insert id="insertTRSDEAL_SD_DETAILS" parameterType="com.path.dbmaps.vo.TRSDEAL_SD_DETAILSVO" >
    insert into TRSDEAL_SD_DETAILS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        BRANCH_CODE,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="SERIAL_NO != null and SERIAL_NO != emptyBigDecimalValue" >
        SERIAL_NO,
      </if>
      <if test="MINIMUM_SD_AMOUNT != null and MINIMUM_SD_AMOUNT != emptyBigDecimalValue" >
        MINIMUM_SD_AMOUNT,
      </if>
      <if test="SD_ACC_BRANCH != null and SD_ACC_BRANCH != emptyBigDecimalValue" >
        SD_ACC_BRANCH,
      </if>
      <if test="SD_ACC_CURRENCY != null and SD_ACC_CURRENCY != emptyBigDecimalValue" >
        SD_ACC_CURRENCY,
      </if>
      <if test="SD_ACC_GL_CODE != null and SD_ACC_GL_CODE != emptyBigDecimalValue" >
        SD_ACC_GL_CODE,
      </if>
      <if test="SD_ACC_CIF_NO != null and SD_ACC_CIF_NO != emptyBigDecimalValue" >
        SD_ACC_CIF_NO,
      </if>
      <if test="SD_ACC_SL_NO != null and SD_ACC_SL_NO != emptyBigDecimalValue" >
        SD_ACC_SL_NO,
      </if>
      <if test="BLOCKED_AMT_FOR_RECOVERY != null and BLOCKED_AMT_FOR_RECOVERY != emptyBigDecimalValue" >
        BLOCKED_AMT_FOR_RECOVERY,
      </if>
      <if test="ORIGINAL_AMOUNT != null and ORIGINAL_AMOUNT != emptyBigDecimalValue" >
        ORIGINAL_AMOUNT,
      </if>
      <if test="AMENDMENT_REASON != null" >
        AMENDMENT_REASON,
      </if>
      <if test="AMOUNT_TRANSFER_TO_SD_YN != null" >
        AMOUNT_TRANSFER_TO_SD_YN,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        #{BRANCH_CODE},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="SERIAL_NO != null and SERIAL_NO != emptyBigDecimalValue" >
        #{SERIAL_NO},
      </if>
      <if test="MINIMUM_SD_AMOUNT != null and MINIMUM_SD_AMOUNT != emptyBigDecimalValue" >
        #{MINIMUM_SD_AMOUNT},
      </if>
      <if test="SD_ACC_BRANCH != null and SD_ACC_BRANCH != emptyBigDecimalValue" >
        #{SD_ACC_BRANCH},
      </if>
      <if test="SD_ACC_CURRENCY != null and SD_ACC_CURRENCY != emptyBigDecimalValue" >
        #{SD_ACC_CURRENCY},
      </if>
      <if test="SD_ACC_GL_CODE != null and SD_ACC_GL_CODE != emptyBigDecimalValue" >
        #{SD_ACC_GL_CODE},
      </if>
      <if test="SD_ACC_CIF_NO != null and SD_ACC_CIF_NO != emptyBigDecimalValue" >
        #{SD_ACC_CIF_NO},
      </if>
      <if test="SD_ACC_SL_NO != null and SD_ACC_SL_NO != emptyBigDecimalValue" >
        #{SD_ACC_SL_NO},
      </if>
      <if test="BLOCKED_AMT_FOR_RECOVERY != null and BLOCKED_AMT_FOR_RECOVERY != emptyBigDecimalValue" >
        #{BLOCKED_AMT_FOR_RECOVERY},
      </if>
      <if test="ORIGINAL_AMOUNT != null and ORIGINAL_AMOUNT != emptyBigDecimalValue" >
        #{ORIGINAL_AMOUNT},
      </if>
      <if test="AMENDMENT_REASON != null" >
        #{AMENDMENT_REASON},
      </if>
      <if test="AMOUNT_TRANSFER_TO_SD_YN != null" >
        #{AMOUNT_TRANSFER_TO_SD_YN},
      </if>
    </trim>
  </insert>
  <sql id="sql_updateTRSDEAL_SD_DETAILS" >
    update TRSDEAL_SD_DETAILS
    <set >
      <if test="MINIMUM_SD_AMOUNT != null" >
        <choose >
          <when test="MINIMUM_SD_AMOUNT == emptyBigDecimalValue" >
            MINIMUM_SD_AMOUNT = NULL ,
          </when>
          <otherwise >
            MINIMUM_SD_AMOUNT = #{MINIMUM_SD_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="SD_ACC_BRANCH != null" >
        <choose >
          <when test="SD_ACC_BRANCH == emptyBigDecimalValue" >
            SD_ACC_BRANCH = NULL ,
          </when>
          <otherwise >
            SD_ACC_BRANCH = #{SD_ACC_BRANCH},
          </otherwise>
        </choose>
      </if>
      <if test="SD_ACC_CURRENCY != null" >
        <choose >
          <when test="SD_ACC_CURRENCY == emptyBigDecimalValue" >
            SD_ACC_CURRENCY = NULL ,
          </when>
          <otherwise >
            SD_ACC_CURRENCY = #{SD_ACC_CURRENCY},
          </otherwise>
        </choose>
      </if>
      <if test="SD_ACC_GL_CODE != null" >
        <choose >
          <when test="SD_ACC_GL_CODE == emptyBigDecimalValue" >
            SD_ACC_GL_CODE = NULL ,
          </when>
          <otherwise >
            SD_ACC_GL_CODE = #{SD_ACC_GL_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="SD_ACC_CIF_NO != null" >
        <choose >
          <when test="SD_ACC_CIF_NO == emptyBigDecimalValue" >
            SD_ACC_CIF_NO = NULL ,
          </when>
          <otherwise >
            SD_ACC_CIF_NO = #{SD_ACC_CIF_NO},
          </otherwise>
        </choose>
      </if>
      <if test="SD_ACC_SL_NO != null" >
        <choose >
          <when test="SD_ACC_SL_NO == emptyBigDecimalValue" >
            SD_ACC_SL_NO = NULL ,
          </when>
          <otherwise >
            SD_ACC_SL_NO = #{SD_ACC_SL_NO},
          </otherwise>
        </choose>
      </if>
      <if test="BLOCKED_AMT_FOR_RECOVERY != null" >
        <choose >
          <when test="BLOCKED_AMT_FOR_RECOVERY == emptyBigDecimalValue" >
            BLOCKED_AMT_FOR_RECOVERY = NULL ,
          </when>
          <otherwise >
            BLOCKED_AMT_FOR_RECOVERY = #{BLOCKED_AMT_FOR_RECOVERY},
          </otherwise>
        </choose>
      </if>
      <if test="ORIGINAL_AMOUNT != null" >
        <choose >
          <when test="ORIGINAL_AMOUNT == emptyBigDecimalValue" >
            ORIGINAL_AMOUNT = NULL ,
          </when>
          <otherwise >
            ORIGINAL_AMOUNT = #{ORIGINAL_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="AMENDMENT_REASON != null" >
        AMENDMENT_REASON = #{AMENDMENT_REASON},
      </if>
      <if test="AMOUNT_TRANSFER_TO_SD_YN != null" >
        AMOUNT_TRANSFER_TO_SD_YN = #{AMOUNT_TRANSFER_TO_SD_YN},
      </if>
    </set>
    where BRANCH_CODE = #{BRANCH_CODE}
      and COMP_CODE = #{COMP_CODE}
      and SERIAL_NO = #{SERIAL_NO}
  </sql>
  <update id="updateTRSDEAL_SD_DETAILS" parameterType="com.path.dbmaps.vo.TRSDEAL_SD_DETAILSVO" >
    <include refid="sql_updateTRSDEAL_SD_DETAILS" />
  </update>
</mapper>