<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TRSCLASS_PROVISION_ACCOUNTS" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.TRSCLASS_PROVISION_ACCOUNTSVO" >
    <id column="CATEGORY_CODE" property="CATEGORY_CODE" />
    <id column="CLASS" property="CLASS" />
    <id column="COMP_CODE" property="COMP_CODE" />
    <result column="BRANCH_CODE" property="BRANCH_CODE" />
    <result column="CLIENT_TEMPLATE_CODE" property="CLIENT_TEMPLATE_CODE" />
    <result column="BANK_TEMPLATE_CODE" property="BANK_TEMPLATE_CODE" />
    <result column="TEMPLATE_TYPE_PROVISION" property="TEMPLATE_TYPE_PROVISION" />
    <result column="TEMPLATE_TYPE_TRANSFER" property="TEMPLATE_TYPE_TRANSFER" />
    <result column="TEMPLATE_CODE_TRANSFER_CLIENT" property="TEMPLATE_CODE_TRANSFER_CLIENT" />
    <result column="TEMPLATE_CODE_TRANSFER_COMP" property="TEMPLATE_CODE_TRANSFER_COMP" />
    <result column="TRANSFER_GL" property="TRANSFER_GL" />
    <result column="CLI_TRANSFER_GL" property="CLI_TRANSFER_GL" />
    <result column="DR_PROV_GL" property="DR_PROV_GL" />
    <result column="DR_PROV_CIF" property="DR_PROV_CIF" />
    <result column="DR_PROV_SL" property="DR_PROV_SL" />
    <result column="CR_PROV_GL" property="CR_PROV_GL" />
    <result column="CR_PROV_CIF" property="CR_PROV_CIF" />
    <result column="CR_PROV_SL" property="CR_PROV_SL" />
    <result column="DR_CLI_PROV_GL" property="DR_CLI_PROV_GL" />
    <result column="DR_CLI_PROV_CIF" property="DR_CLI_PROV_CIF" />
    <result column="DR_CLI_PROV_SL" property="DR_CLI_PROV_SL" />
    <result column="CR_CLI_PROV_GL" property="CR_CLI_PROV_GL" />
    <result column="CR_CLI_PROV_CIF" property="CR_CLI_PROV_CIF" />
    <result column="CR_CLI_PROV_SL" property="CR_CLI_PROV_SL" />
    <result column="CR_RECOVERY_PROV_GL" property="CR_RECOVERY_PROV_GL" />
    <result column="CR_RECOVERY_PROV_CIF" property="CR_RECOVERY_PROV_CIF" />
    <result column="CR_RECOVERY_PROV_SL" property="CR_RECOVERY_PROV_SL" />
    <result column="CONSIDER_FOR_ACCRUAL" property="CONSIDER_FOR_ACCRUAL" />
    <result column="SUSPENSE_ACC_CIF" property="SUSPENSE_ACC_CIF" />
    <result column="SUSPENSE_ACC_GL" property="SUSPENSE_ACC_GL" />
    <result column="SUSPENSE_ACC_SL" property="SUSPENSE_ACC_SL" />
  </resultMap>
  <sql id="Base_Column_List" >
    CATEGORY_CODE, CLASS, COMP_CODE, BRANCH_CODE, CLIENT_TEMPLATE_CODE, BANK_TEMPLATE_CODE, 
    TEMPLATE_TYPE_PROVISION, TEMPLATE_TYPE_TRANSFER, TEMPLATE_CODE_TRANSFER_CLIENT, TEMPLATE_CODE_TRANSFER_COMP, 
    TRANSFER_GL, CLI_TRANSFER_GL, DR_PROV_GL, DR_PROV_CIF, DR_PROV_SL, CR_PROV_GL, CR_PROV_CIF, 
    CR_PROV_SL, DR_CLI_PROV_GL, DR_CLI_PROV_CIF, DR_CLI_PROV_SL, CR_CLI_PROV_GL, CR_CLI_PROV_CIF, 
    CR_CLI_PROV_SL, CR_RECOVERY_PROV_GL, CR_RECOVERY_PROV_CIF, CR_RECOVERY_PROV_SL, CONSIDER_FOR_ACCRUAL, 
    SUSPENSE_ACC_CIF, SUSPENSE_ACC_GL, SUSPENSE_ACC_SL
  </sql>
  <select id="selectTRSCLASS_PROVISION_ACCOUNTS" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.TRSCLASS_PROVISION_ACCOUNTSVOKey" >
    select 
    <include refid="Base_Column_List" />
    from TRSCLASS_PROVISION_ACCOUNTS
    where CATEGORY_CODE = #{CATEGORY_CODE}
      and CLASS = #{CLASS}
      and COMP_CODE = #{COMP_CODE}
  </select>
  <delete id="deleteTRSCLASS_PROVISION_ACCOUNTS" parameterType="com.path.dbmaps.vo.TRSCLASS_PROVISION_ACCOUNTSVOKey" >
    delete from TRSCLASS_PROVISION_ACCOUNTS
    where CATEGORY_CODE = #{CATEGORY_CODE}
      and CLASS = #{CLASS}
      and COMP_CODE = #{COMP_CODE}
  </delete>
  <insert id="insertTRSCLASS_PROVISION_ACCOUNTS" parameterType="com.path.dbmaps.vo.TRSCLASS_PROVISION_ACCOUNTSVO" >
    insert into TRSCLASS_PROVISION_ACCOUNTS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="CATEGORY_CODE != null and CATEGORY_CODE != emptyBigDecimalValue" >
        CATEGORY_CODE,
      </if>
      <if test="CLASS != null and CLASS != emptyBigDecimalValue" >
        CLASS,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        BRANCH_CODE,
      </if>
      <if test="CLIENT_TEMPLATE_CODE != null and CLIENT_TEMPLATE_CODE != emptyBigDecimalValue" >
        CLIENT_TEMPLATE_CODE,
      </if>
      <if test="BANK_TEMPLATE_CODE != null and BANK_TEMPLATE_CODE != emptyBigDecimalValue" >
        BANK_TEMPLATE_CODE,
      </if>
      <if test="TEMPLATE_TYPE_PROVISION != null and TEMPLATE_TYPE_PROVISION != emptyBigDecimalValue" >
        TEMPLATE_TYPE_PROVISION,
      </if>
      <if test="TEMPLATE_TYPE_TRANSFER != null and TEMPLATE_TYPE_TRANSFER != emptyBigDecimalValue" >
        TEMPLATE_TYPE_TRANSFER,
      </if>
      <if test="TEMPLATE_CODE_TRANSFER_CLIENT != null and TEMPLATE_CODE_TRANSFER_CLIENT != emptyBigDecimalValue" >
        TEMPLATE_CODE_TRANSFER_CLIENT,
      </if>
      <if test="TEMPLATE_CODE_TRANSFER_COMP != null and TEMPLATE_CODE_TRANSFER_COMP != emptyBigDecimalValue" >
        TEMPLATE_CODE_TRANSFER_COMP,
      </if>
      <if test="TRANSFER_GL != null and TRANSFER_GL != emptyBigDecimalValue" >
        TRANSFER_GL,
      </if>
      <if test="CLI_TRANSFER_GL != null and CLI_TRANSFER_GL != emptyBigDecimalValue" >
        CLI_TRANSFER_GL,
      </if>
      <if test="DR_PROV_GL != null and DR_PROV_GL != emptyBigDecimalValue" >
        DR_PROV_GL,
      </if>
      <if test="DR_PROV_CIF != null and DR_PROV_CIF != emptyBigDecimalValue" >
        DR_PROV_CIF,
      </if>
      <if test="DR_PROV_SL != null and DR_PROV_SL != emptyBigDecimalValue" >
        DR_PROV_SL,
      </if>
      <if test="CR_PROV_GL != null and CR_PROV_GL != emptyBigDecimalValue" >
        CR_PROV_GL,
      </if>
      <if test="CR_PROV_CIF != null and CR_PROV_CIF != emptyBigDecimalValue" >
        CR_PROV_CIF,
      </if>
      <if test="CR_PROV_SL != null and CR_PROV_SL != emptyBigDecimalValue" >
        CR_PROV_SL,
      </if>
      <if test="DR_CLI_PROV_GL != null and DR_CLI_PROV_GL != emptyBigDecimalValue" >
        DR_CLI_PROV_GL,
      </if>
      <if test="DR_CLI_PROV_CIF != null and DR_CLI_PROV_CIF != emptyBigDecimalValue" >
        DR_CLI_PROV_CIF,
      </if>
      <if test="DR_CLI_PROV_SL != null and DR_CLI_PROV_SL != emptyBigDecimalValue" >
        DR_CLI_PROV_SL,
      </if>
      <if test="CR_CLI_PROV_GL != null and CR_CLI_PROV_GL != emptyBigDecimalValue" >
        CR_CLI_PROV_GL,
      </if>
      <if test="CR_CLI_PROV_CIF != null and CR_CLI_PROV_CIF != emptyBigDecimalValue" >
        CR_CLI_PROV_CIF,
      </if>
      <if test="CR_CLI_PROV_SL != null and CR_CLI_PROV_SL != emptyBigDecimalValue" >
        CR_CLI_PROV_SL,
      </if>
      <if test="CR_RECOVERY_PROV_GL != null and CR_RECOVERY_PROV_GL != emptyBigDecimalValue" >
        CR_RECOVERY_PROV_GL,
      </if>
      <if test="CR_RECOVERY_PROV_CIF != null and CR_RECOVERY_PROV_CIF != emptyBigDecimalValue" >
        CR_RECOVERY_PROV_CIF,
      </if>
      <if test="CR_RECOVERY_PROV_SL != null and CR_RECOVERY_PROV_SL != emptyBigDecimalValue" >
        CR_RECOVERY_PROV_SL,
      </if>
      <if test="CONSIDER_FOR_ACCRUAL != null" >
        CONSIDER_FOR_ACCRUAL,
      </if>
      <if test="SUSPENSE_ACC_CIF != null and SUSPENSE_ACC_CIF != emptyBigDecimalValue" >
        SUSPENSE_ACC_CIF,
      </if>
      <if test="SUSPENSE_ACC_GL != null and SUSPENSE_ACC_GL != emptyBigDecimalValue" >
        SUSPENSE_ACC_GL,
      </if>
      <if test="SUSPENSE_ACC_SL != null and SUSPENSE_ACC_SL != emptyBigDecimalValue" >
        SUSPENSE_ACC_SL,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="CATEGORY_CODE != null and CATEGORY_CODE != emptyBigDecimalValue" >
        #{CATEGORY_CODE},
      </if>
      <if test="CLASS != null and CLASS != emptyBigDecimalValue" >
        #{CLASS},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        #{BRANCH_CODE},
      </if>
      <if test="CLIENT_TEMPLATE_CODE != null and CLIENT_TEMPLATE_CODE != emptyBigDecimalValue" >
        #{CLIENT_TEMPLATE_CODE},
      </if>
      <if test="BANK_TEMPLATE_CODE != null and BANK_TEMPLATE_CODE != emptyBigDecimalValue" >
        #{BANK_TEMPLATE_CODE},
      </if>
      <if test="TEMPLATE_TYPE_PROVISION != null and TEMPLATE_TYPE_PROVISION != emptyBigDecimalValue" >
        #{TEMPLATE_TYPE_PROVISION},
      </if>
      <if test="TEMPLATE_TYPE_TRANSFER != null and TEMPLATE_TYPE_TRANSFER != emptyBigDecimalValue" >
        #{TEMPLATE_TYPE_TRANSFER},
      </if>
      <if test="TEMPLATE_CODE_TRANSFER_CLIENT != null and TEMPLATE_CODE_TRANSFER_CLIENT != emptyBigDecimalValue" >
        #{TEMPLATE_CODE_TRANSFER_CLIENT},
      </if>
      <if test="TEMPLATE_CODE_TRANSFER_COMP != null and TEMPLATE_CODE_TRANSFER_COMP != emptyBigDecimalValue" >
        #{TEMPLATE_CODE_TRANSFER_COMP},
      </if>
      <if test="TRANSFER_GL != null and TRANSFER_GL != emptyBigDecimalValue" >
        #{TRANSFER_GL},
      </if>
      <if test="CLI_TRANSFER_GL != null and CLI_TRANSFER_GL != emptyBigDecimalValue" >
        #{CLI_TRANSFER_GL},
      </if>
      <if test="DR_PROV_GL != null and DR_PROV_GL != emptyBigDecimalValue" >
        #{DR_PROV_GL},
      </if>
      <if test="DR_PROV_CIF != null and DR_PROV_CIF != emptyBigDecimalValue" >
        #{DR_PROV_CIF},
      </if>
      <if test="DR_PROV_SL != null and DR_PROV_SL != emptyBigDecimalValue" >
        #{DR_PROV_SL},
      </if>
      <if test="CR_PROV_GL != null and CR_PROV_GL != emptyBigDecimalValue" >
        #{CR_PROV_GL},
      </if>
      <if test="CR_PROV_CIF != null and CR_PROV_CIF != emptyBigDecimalValue" >
        #{CR_PROV_CIF},
      </if>
      <if test="CR_PROV_SL != null and CR_PROV_SL != emptyBigDecimalValue" >
        #{CR_PROV_SL},
      </if>
      <if test="DR_CLI_PROV_GL != null and DR_CLI_PROV_GL != emptyBigDecimalValue" >
        #{DR_CLI_PROV_GL},
      </if>
      <if test="DR_CLI_PROV_CIF != null and DR_CLI_PROV_CIF != emptyBigDecimalValue" >
        #{DR_CLI_PROV_CIF},
      </if>
      <if test="DR_CLI_PROV_SL != null and DR_CLI_PROV_SL != emptyBigDecimalValue" >
        #{DR_CLI_PROV_SL},
      </if>
      <if test="CR_CLI_PROV_GL != null and CR_CLI_PROV_GL != emptyBigDecimalValue" >
        #{CR_CLI_PROV_GL},
      </if>
      <if test="CR_CLI_PROV_CIF != null and CR_CLI_PROV_CIF != emptyBigDecimalValue" >
        #{CR_CLI_PROV_CIF},
      </if>
      <if test="CR_CLI_PROV_SL != null and CR_CLI_PROV_SL != emptyBigDecimalValue" >
        #{CR_CLI_PROV_SL},
      </if>
      <if test="CR_RECOVERY_PROV_GL != null and CR_RECOVERY_PROV_GL != emptyBigDecimalValue" >
        #{CR_RECOVERY_PROV_GL},
      </if>
      <if test="CR_RECOVERY_PROV_CIF != null and CR_RECOVERY_PROV_CIF != emptyBigDecimalValue" >
        #{CR_RECOVERY_PROV_CIF},
      </if>
      <if test="CR_RECOVERY_PROV_SL != null and CR_RECOVERY_PROV_SL != emptyBigDecimalValue" >
        #{CR_RECOVERY_PROV_SL},
      </if>
      <if test="CONSIDER_FOR_ACCRUAL != null" >
        #{CONSIDER_FOR_ACCRUAL},
      </if>
      <if test="SUSPENSE_ACC_CIF != null and SUSPENSE_ACC_CIF != emptyBigDecimalValue" >
        #{SUSPENSE_ACC_CIF},
      </if>
      <if test="SUSPENSE_ACC_GL != null and SUSPENSE_ACC_GL != emptyBigDecimalValue" >
        #{SUSPENSE_ACC_GL},
      </if>
      <if test="SUSPENSE_ACC_SL != null and SUSPENSE_ACC_SL != emptyBigDecimalValue" >
        #{SUSPENSE_ACC_SL},
      </if>
    </trim>
  </insert>
  <sql id="sql_updateTRSCLASS_PROVISION_ACCOUNTS" >
    update TRSCLASS_PROVISION_ACCOUNTS
    <set >
      <if test="BRANCH_CODE != null" >
        <choose >
          <when test="BRANCH_CODE == emptyBigDecimalValue" >
            BRANCH_CODE = NULL ,
          </when>
          <otherwise >
            BRANCH_CODE = #{BRANCH_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="CLIENT_TEMPLATE_CODE != null" >
        <choose >
          <when test="CLIENT_TEMPLATE_CODE == emptyBigDecimalValue" >
            CLIENT_TEMPLATE_CODE = NULL ,
          </when>
          <otherwise >
            CLIENT_TEMPLATE_CODE = #{CLIENT_TEMPLATE_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="BANK_TEMPLATE_CODE != null" >
        <choose >
          <when test="BANK_TEMPLATE_CODE == emptyBigDecimalValue" >
            BANK_TEMPLATE_CODE = NULL ,
          </when>
          <otherwise >
            BANK_TEMPLATE_CODE = #{BANK_TEMPLATE_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="TEMPLATE_TYPE_PROVISION != null" >
        <choose >
          <when test="TEMPLATE_TYPE_PROVISION == emptyBigDecimalValue" >
            TEMPLATE_TYPE_PROVISION = NULL ,
          </when>
          <otherwise >
            TEMPLATE_TYPE_PROVISION = #{TEMPLATE_TYPE_PROVISION},
          </otherwise>
        </choose>
      </if>
      <if test="TEMPLATE_TYPE_TRANSFER != null" >
        <choose >
          <when test="TEMPLATE_TYPE_TRANSFER == emptyBigDecimalValue" >
            TEMPLATE_TYPE_TRANSFER = NULL ,
          </when>
          <otherwise >
            TEMPLATE_TYPE_TRANSFER = #{TEMPLATE_TYPE_TRANSFER},
          </otherwise>
        </choose>
      </if>
      <if test="TEMPLATE_CODE_TRANSFER_CLIENT != null" >
        <choose >
          <when test="TEMPLATE_CODE_TRANSFER_CLIENT == emptyBigDecimalValue" >
            TEMPLATE_CODE_TRANSFER_CLIENT = NULL ,
          </when>
          <otherwise >
            TEMPLATE_CODE_TRANSFER_CLIENT = #{TEMPLATE_CODE_TRANSFER_CLIENT},
          </otherwise>
        </choose>
      </if>
      <if test="TEMPLATE_CODE_TRANSFER_COMP != null" >
        <choose >
          <when test="TEMPLATE_CODE_TRANSFER_COMP == emptyBigDecimalValue" >
            TEMPLATE_CODE_TRANSFER_COMP = NULL ,
          </when>
          <otherwise >
            TEMPLATE_CODE_TRANSFER_COMP = #{TEMPLATE_CODE_TRANSFER_COMP},
          </otherwise>
        </choose>
      </if>
      <if test="TRANSFER_GL != null" >
        <choose >
          <when test="TRANSFER_GL == emptyBigDecimalValue" >
            TRANSFER_GL = NULL ,
          </when>
          <otherwise >
            TRANSFER_GL = #{TRANSFER_GL},
          </otherwise>
        </choose>
      </if>
      <if test="CLI_TRANSFER_GL != null" >
        <choose >
          <when test="CLI_TRANSFER_GL == emptyBigDecimalValue" >
            CLI_TRANSFER_GL = NULL ,
          </when>
          <otherwise >
            CLI_TRANSFER_GL = #{CLI_TRANSFER_GL},
          </otherwise>
        </choose>
      </if>
      <if test="DR_PROV_GL != null" >
        <choose >
          <when test="DR_PROV_GL == emptyBigDecimalValue" >
            DR_PROV_GL = NULL ,
          </when>
          <otherwise >
            DR_PROV_GL = #{DR_PROV_GL},
          </otherwise>
        </choose>
      </if>
      <if test="DR_PROV_CIF != null" >
        <choose >
          <when test="DR_PROV_CIF == emptyBigDecimalValue" >
            DR_PROV_CIF = NULL ,
          </when>
          <otherwise >
            DR_PROV_CIF = #{DR_PROV_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="DR_PROV_SL != null" >
        <choose >
          <when test="DR_PROV_SL == emptyBigDecimalValue" >
            DR_PROV_SL = NULL ,
          </when>
          <otherwise >
            DR_PROV_SL = #{DR_PROV_SL},
          </otherwise>
        </choose>
      </if>
      <if test="CR_PROV_GL != null" >
        <choose >
          <when test="CR_PROV_GL == emptyBigDecimalValue" >
            CR_PROV_GL = NULL ,
          </when>
          <otherwise >
            CR_PROV_GL = #{CR_PROV_GL},
          </otherwise>
        </choose>
      </if>
      <if test="CR_PROV_CIF != null" >
        <choose >
          <when test="CR_PROV_CIF == emptyBigDecimalValue" >
            CR_PROV_CIF = NULL ,
          </when>
          <otherwise >
            CR_PROV_CIF = #{CR_PROV_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="CR_PROV_SL != null" >
        <choose >
          <when test="CR_PROV_SL == emptyBigDecimalValue" >
            CR_PROV_SL = NULL ,
          </when>
          <otherwise >
            CR_PROV_SL = #{CR_PROV_SL},
          </otherwise>
        </choose>
      </if>
      <if test="DR_CLI_PROV_GL != null" >
        <choose >
          <when test="DR_CLI_PROV_GL == emptyBigDecimalValue" >
            DR_CLI_PROV_GL = NULL ,
          </when>
          <otherwise >
            DR_CLI_PROV_GL = #{DR_CLI_PROV_GL},
          </otherwise>
        </choose>
      </if>
      <if test="DR_CLI_PROV_CIF != null" >
        <choose >
          <when test="DR_CLI_PROV_CIF == emptyBigDecimalValue" >
            DR_CLI_PROV_CIF = NULL ,
          </when>
          <otherwise >
            DR_CLI_PROV_CIF = #{DR_CLI_PROV_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="DR_CLI_PROV_SL != null" >
        <choose >
          <when test="DR_CLI_PROV_SL == emptyBigDecimalValue" >
            DR_CLI_PROV_SL = NULL ,
          </when>
          <otherwise >
            DR_CLI_PROV_SL = #{DR_CLI_PROV_SL},
          </otherwise>
        </choose>
      </if>
      <if test="CR_CLI_PROV_GL != null" >
        <choose >
          <when test="CR_CLI_PROV_GL == emptyBigDecimalValue" >
            CR_CLI_PROV_GL = NULL ,
          </when>
          <otherwise >
            CR_CLI_PROV_GL = #{CR_CLI_PROV_GL},
          </otherwise>
        </choose>
      </if>
      <if test="CR_CLI_PROV_CIF != null" >
        <choose >
          <when test="CR_CLI_PROV_CIF == emptyBigDecimalValue" >
            CR_CLI_PROV_CIF = NULL ,
          </when>
          <otherwise >
            CR_CLI_PROV_CIF = #{CR_CLI_PROV_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="CR_CLI_PROV_SL != null" >
        <choose >
          <when test="CR_CLI_PROV_SL == emptyBigDecimalValue" >
            CR_CLI_PROV_SL = NULL ,
          </when>
          <otherwise >
            CR_CLI_PROV_SL = #{CR_CLI_PROV_SL},
          </otherwise>
        </choose>
      </if>
      <if test="CR_RECOVERY_PROV_GL != null" >
        <choose >
          <when test="CR_RECOVERY_PROV_GL == emptyBigDecimalValue" >
            CR_RECOVERY_PROV_GL = NULL ,
          </when>
          <otherwise >
            CR_RECOVERY_PROV_GL = #{CR_RECOVERY_PROV_GL},
          </otherwise>
        </choose>
      </if>
      <if test="CR_RECOVERY_PROV_CIF != null" >
        <choose >
          <when test="CR_RECOVERY_PROV_CIF == emptyBigDecimalValue" >
            CR_RECOVERY_PROV_CIF = NULL ,
          </when>
          <otherwise >
            CR_RECOVERY_PROV_CIF = #{CR_RECOVERY_PROV_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="CR_RECOVERY_PROV_SL != null" >
        <choose >
          <when test="CR_RECOVERY_PROV_SL == emptyBigDecimalValue" >
            CR_RECOVERY_PROV_SL = NULL ,
          </when>
          <otherwise >
            CR_RECOVERY_PROV_SL = #{CR_RECOVERY_PROV_SL},
          </otherwise>
        </choose>
      </if>
      <if test="CONSIDER_FOR_ACCRUAL != null" >
        CONSIDER_FOR_ACCRUAL = #{CONSIDER_FOR_ACCRUAL},
      </if>
      <if test="SUSPENSE_ACC_CIF != null" >
        <choose >
          <when test="SUSPENSE_ACC_CIF == emptyBigDecimalValue" >
            SUSPENSE_ACC_CIF = NULL ,
          </when>
          <otherwise >
            SUSPENSE_ACC_CIF = #{SUSPENSE_ACC_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="SUSPENSE_ACC_GL != null" >
        <choose >
          <when test="SUSPENSE_ACC_GL == emptyBigDecimalValue" >
            SUSPENSE_ACC_GL = NULL ,
          </when>
          <otherwise >
            SUSPENSE_ACC_GL = #{SUSPENSE_ACC_GL},
          </otherwise>
        </choose>
      </if>
      <if test="SUSPENSE_ACC_SL != null" >
        <choose >
          <when test="SUSPENSE_ACC_SL == emptyBigDecimalValue" >
            SUSPENSE_ACC_SL = NULL ,
          </when>
          <otherwise >
            SUSPENSE_ACC_SL = #{SUSPENSE_ACC_SL},
          </otherwise>
        </choose>
      </if>
    </set>
    where CATEGORY_CODE = #{CATEGORY_CODE}
      and CLASS = #{CLASS}
      and COMP_CODE = #{COMP_CODE}
  </sql>
  <update id="updateTRSCLASS_PROVISION_ACCOUNTS" parameterType="com.path.dbmaps.vo.TRSCLASS_PROVISION_ACCOUNTSVO" >
    <include refid="sql_updateTRSCLASS_PROVISION_ACCOUNTS" />
  </update>
</mapper>