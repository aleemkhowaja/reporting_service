<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TFS_ADDITIONAL_CHARGES" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.TFS_ADDITIONAL_CHARGESVO" >
    <id column="BRANCH_CODE" property="BRANCH_CODE" />
    <id column="COMP_CODE" property="COMP_CODE" />
    <id column="DOC_TYPE" property="DOC_TYPE" />
    <id column="LINE_NBR" property="LINE_NBR" />
    <id column="TRX_NBR" property="TRX_NBR" />
    <id column="TRX_TYPE" property="TRX_TYPE" />
    <result column="DESCRIPTION" property="DESCRIPTION" />
    <result column="AMOUNT" property="AMOUNT" />
    <result column="CHARGE_CODE" property="CHARGE_CODE" />
    <result column="PERCENTAGE" property="PERCENTAGE" />
    <result column="CHARGE_AMT_IN_NOSTRO_CY" property="CHARGE_AMT_IN_NOSTRO_CY" />
    <result column="CHARGE_AMT_IN_ACC_CY" property="CHARGE_AMT_IN_ACC_CY" />
    <result column="CY_RATE" property="CY_RATE" />
    <result column="CR_ACC_BR" property="CR_ACC_BR" />
    <result column="CR_ACC_CY" property="CR_ACC_CY" />
    <result column="CR_ACC_GL" property="CR_ACC_GL" />
    <result column="CR_ACC_CIF" property="CR_ACC_CIF" />
    <result column="CR_ACC_SL" property="CR_ACC_SL" />
  </resultMap>
  <sql id="Base_Column_List" >
    BRANCH_CODE, COMP_CODE, DOC_TYPE, LINE_NBR, TRX_NBR, TRX_TYPE, DESCRIPTION, AMOUNT, 
    CHARGE_CODE, PERCENTAGE, CHARGE_AMT_IN_NOSTRO_CY, CHARGE_AMT_IN_ACC_CY, CY_RATE, 
    CR_ACC_BR, CR_ACC_CY, CR_ACC_GL, CR_ACC_CIF, CR_ACC_SL
  </sql>
  <select id="selectTFS_ADDITIONAL_CHARGES" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.TFS_ADDITIONAL_CHARGESVO" >
    select 
    <include refid="Base_Column_List" />
    from TFS_ADDITIONAL_CHARGES
    where BRANCH_CODE = #{BRANCH_CODE}
      and COMP_CODE = #{COMP_CODE}
      and DOC_TYPE = #{DOC_TYPE}
      and LINE_NBR = #{LINE_NBR}
      and TRX_NBR = #{TRX_NBR}
      and TRX_TYPE = #{TRX_TYPE}
  </select>
  <delete id="deleteTFS_ADDITIONAL_CHARGES" parameterType="com.path.dbmaps.vo.TFS_ADDITIONAL_CHARGESVO" >
    delete from TFS_ADDITIONAL_CHARGES
    where BRANCH_CODE = #{BRANCH_CODE}
      and COMP_CODE = #{COMP_CODE}
      and DOC_TYPE = #{DOC_TYPE}
      and LINE_NBR = #{LINE_NBR}
      and TRX_NBR = #{TRX_NBR}
      and TRX_TYPE = #{TRX_TYPE}
  </delete>
  <insert id="insertTFS_ADDITIONAL_CHARGES" parameterType="com.path.dbmaps.vo.TFS_ADDITIONAL_CHARGESVO" >
    insert into TFS_ADDITIONAL_CHARGES
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        BRANCH_CODE,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="DOC_TYPE != null" >
        DOC_TYPE,
      </if>
      <if test="LINE_NBR != null and LINE_NBR != emptyBigDecimalValue" >
        LINE_NBR,
      </if>
      <if test="TRX_NBR != null and TRX_NBR != emptyBigDecimalValue" >
        TRX_NBR,
      </if>
      <if test="TRX_TYPE != null and TRX_TYPE != emptyBigDecimalValue" >
        TRX_TYPE,
      </if>
      <if test="DESCRIPTION != null" >
        DESCRIPTION,
      </if>
      <if test="AMOUNT != null and AMOUNT != emptyBigDecimalValue" >
        AMOUNT,
      </if>
      <if test="CHARGE_CODE != null and CHARGE_CODE != emptyBigDecimalValue" >
        CHARGE_CODE,
      </if>
      <if test="PERCENTAGE != null and PERCENTAGE != emptyBigDecimalValue" >
        PERCENTAGE,
      </if>
      <if test="CHARGE_AMT_IN_NOSTRO_CY != null and CHARGE_AMT_IN_NOSTRO_CY != emptyBigDecimalValue" >
        CHARGE_AMT_IN_NOSTRO_CY,
      </if>
      <if test="CHARGE_AMT_IN_ACC_CY != null and CHARGE_AMT_IN_ACC_CY != emptyBigDecimalValue" >
        CHARGE_AMT_IN_ACC_CY,
      </if>
      <if test="CY_RATE != null and CY_RATE != emptyBigDecimalValue" >
        CY_RATE,
      </if>
      <if test="CR_ACC_BR != null and CR_ACC_BR != emptyBigDecimalValue" >
        CR_ACC_BR,
      </if>
      <if test="CR_ACC_CY != null and CR_ACC_CY != emptyBigDecimalValue" >
        CR_ACC_CY,
      </if>
      <if test="CR_ACC_GL != null and CR_ACC_GL != emptyBigDecimalValue" >
        CR_ACC_GL,
      </if>
      <if test="CR_ACC_CIF != null and CR_ACC_CIF != emptyBigDecimalValue" >
        CR_ACC_CIF,
      </if>
      <if test="CR_ACC_SL != null and CR_ACC_SL != emptyBigDecimalValue" >
        CR_ACC_SL,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        #{BRANCH_CODE},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="DOC_TYPE != null" >
        #{DOC_TYPE},
      </if>
      <if test="LINE_NBR != null and LINE_NBR != emptyBigDecimalValue" >
        #{LINE_NBR},
      </if>
      <if test="TRX_NBR != null and TRX_NBR != emptyBigDecimalValue" >
        #{TRX_NBR},
      </if>
      <if test="TRX_TYPE != null and TRX_TYPE != emptyBigDecimalValue" >
        #{TRX_TYPE},
      </if>
      <if test="DESCRIPTION != null" >
        #{DESCRIPTION},
      </if>
      <if test="AMOUNT != null and AMOUNT != emptyBigDecimalValue" >
        #{AMOUNT},
      </if>
      <if test="CHARGE_CODE != null and CHARGE_CODE != emptyBigDecimalValue" >
        #{CHARGE_CODE},
      </if>
      <if test="PERCENTAGE != null and PERCENTAGE != emptyBigDecimalValue" >
        #{PERCENTAGE},
      </if>
      <if test="CHARGE_AMT_IN_NOSTRO_CY != null and CHARGE_AMT_IN_NOSTRO_CY != emptyBigDecimalValue" >
        #{CHARGE_AMT_IN_NOSTRO_CY},
      </if>
      <if test="CHARGE_AMT_IN_ACC_CY != null and CHARGE_AMT_IN_ACC_CY != emptyBigDecimalValue" >
        #{CHARGE_AMT_IN_ACC_CY},
      </if>
      <if test="CY_RATE != null and CY_RATE != emptyBigDecimalValue" >
        #{CY_RATE},
      </if>
      <if test="CR_ACC_BR != null and CR_ACC_BR != emptyBigDecimalValue" >
        #{CR_ACC_BR},
      </if>
      <if test="CR_ACC_CY != null and CR_ACC_CY != emptyBigDecimalValue" >
        #{CR_ACC_CY},
      </if>
      <if test="CR_ACC_GL != null and CR_ACC_GL != emptyBigDecimalValue" >
        #{CR_ACC_GL},
      </if>
      <if test="CR_ACC_CIF != null and CR_ACC_CIF != emptyBigDecimalValue" >
        #{CR_ACC_CIF},
      </if>
      <if test="CR_ACC_SL != null and CR_ACC_SL != emptyBigDecimalValue" >
        #{CR_ACC_SL},
      </if>
    </trim>
  </insert>
  <sql id="sql_updateTFS_ADDITIONAL_CHARGES" >
    update TFS_ADDITIONAL_CHARGES
    <set >
      <if test="DESCRIPTION != null" >
        DESCRIPTION = #{DESCRIPTION},
      </if>
      <if test="AMOUNT != null" >
        <choose >
          <when test="AMOUNT == emptyBigDecimalValue" >
            AMOUNT = NULL ,
          </when>
          <otherwise >
            AMOUNT = #{AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="CHARGE_CODE != null" >
        <choose >
          <when test="CHARGE_CODE == emptyBigDecimalValue" >
            CHARGE_CODE = NULL ,
          </when>
          <otherwise >
            CHARGE_CODE = #{CHARGE_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="PERCENTAGE != null" >
        <choose >
          <when test="PERCENTAGE == emptyBigDecimalValue" >
            PERCENTAGE = NULL ,
          </when>
          <otherwise >
            PERCENTAGE = #{PERCENTAGE},
          </otherwise>
        </choose>
      </if>
      <if test="CHARGE_AMT_IN_NOSTRO_CY != null" >
        <choose >
          <when test="CHARGE_AMT_IN_NOSTRO_CY == emptyBigDecimalValue" >
            CHARGE_AMT_IN_NOSTRO_CY = NULL ,
          </when>
          <otherwise >
            CHARGE_AMT_IN_NOSTRO_CY = #{CHARGE_AMT_IN_NOSTRO_CY},
          </otherwise>
        </choose>
      </if>
      <if test="CHARGE_AMT_IN_ACC_CY != null" >
        <choose >
          <when test="CHARGE_AMT_IN_ACC_CY == emptyBigDecimalValue" >
            CHARGE_AMT_IN_ACC_CY = NULL ,
          </when>
          <otherwise >
            CHARGE_AMT_IN_ACC_CY = #{CHARGE_AMT_IN_ACC_CY},
          </otherwise>
        </choose>
      </if>
      <if test="CY_RATE != null" >
        <choose >
          <when test="CY_RATE == emptyBigDecimalValue" >
            CY_RATE = NULL ,
          </when>
          <otherwise >
            CY_RATE = #{CY_RATE},
          </otherwise>
        </choose>
      </if>
      <if test="CR_ACC_BR != null" >
        <choose >
          <when test="CR_ACC_BR == emptyBigDecimalValue" >
            CR_ACC_BR = NULL ,
          </when>
          <otherwise >
            CR_ACC_BR = #{CR_ACC_BR},
          </otherwise>
        </choose>
      </if>
      <if test="CR_ACC_CY != null" >
        <choose >
          <when test="CR_ACC_CY == emptyBigDecimalValue" >
            CR_ACC_CY = NULL ,
          </when>
          <otherwise >
            CR_ACC_CY = #{CR_ACC_CY},
          </otherwise>
        </choose>
      </if>
      <if test="CR_ACC_GL != null" >
        <choose >
          <when test="CR_ACC_GL == emptyBigDecimalValue" >
            CR_ACC_GL = NULL ,
          </when>
          <otherwise >
            CR_ACC_GL = #{CR_ACC_GL},
          </otherwise>
        </choose>
      </if>
      <if test="CR_ACC_CIF != null" >
        <choose >
          <when test="CR_ACC_CIF == emptyBigDecimalValue" >
            CR_ACC_CIF = NULL ,
          </when>
          <otherwise >
            CR_ACC_CIF = #{CR_ACC_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="CR_ACC_SL != null" >
        <choose >
          <when test="CR_ACC_SL == emptyBigDecimalValue" >
            CR_ACC_SL = NULL ,
          </when>
          <otherwise >
            CR_ACC_SL = #{CR_ACC_SL},
          </otherwise>
        </choose>
      </if>
    </set>
    where BRANCH_CODE = #{BRANCH_CODE}
      and COMP_CODE = #{COMP_CODE}
      and DOC_TYPE = #{DOC_TYPE}
      and LINE_NBR = #{LINE_NBR}
      and TRX_NBR = #{TRX_NBR}
      and TRX_TYPE = #{TRX_TYPE}
  </sql>
  <update id="updateTFS_ADDITIONAL_CHARGES" parameterType="com.path.dbmaps.vo.TFS_ADDITIONAL_CHARGESVO" >
    <include refid="sql_updateTFS_ADDITIONAL_CHARGES" />
  </update>
</mapper>