<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="CTS_CIF_SEGMENT_HISTORY" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.CTS_CIF_SEGMENT_HISTORYVO" >
    <id column="CIF_NO" property="CIF_NO" />
    <id column="COMP_CODE" property="COMP_CODE" />
    <id column="LINE_NO" property="LINE_NO" />
    <result column="OLD_SEGMENT" property="OLD_SEGMENT" />
    <result column="NEW_SEGMENT" property="NEW_SEGMENT" />
    <result column="MANUAL_MODIFIED_YN" property="MANUAL_MODIFIED_YN" />
    <result column="CREATED_BY" property="CREATED_BY" />
    <result column="CREATED_DATE" property="CREATED_DATE" />
    <result column="MODIFIED_BY" property="MODIFIED_BY" />
    <result column="NODIFIED_DATE" property="NODIFIED_DATE" />
    <result column="LAST_RUN" property="LAST_RUN" />
  </resultMap>
  <sql id="Base_Column_List" >
    CIF_NO, COMP_CODE, LINE_NO, OLD_SEGMENT, NEW_SEGMENT, MANUAL_MODIFIED_YN, CREATED_BY, 
    CREATED_DATE, MODIFIED_BY, NODIFIED_DATE, LAST_RUN
  </sql>
  <select id="selectCTS_CIF_SEGMENT_HISTORY" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.CTS_CIF_SEGMENT_HISTORYVOKey" >
    select 
    <include refid="Base_Column_List" />
    from CTS_CIF_SEGMENT_HISTORY
    where CIF_NO = #{CIF_NO}
      and COMP_CODE = #{COMP_CODE}
      and LINE_NO = #{LINE_NO}
  </select>
  <delete id="deleteCTS_CIF_SEGMENT_HISTORY" parameterType="com.path.dbmaps.vo.CTS_CIF_SEGMENT_HISTORYVOKey" >
    delete from CTS_CIF_SEGMENT_HISTORY
    where CIF_NO = #{CIF_NO}
      and COMP_CODE = #{COMP_CODE}
      and LINE_NO = #{LINE_NO}
  </delete>
  <insert id="insertCTS_CIF_SEGMENT_HISTORY" parameterType="com.path.dbmaps.vo.CTS_CIF_SEGMENT_HISTORYVO" >
    insert into CTS_CIF_SEGMENT_HISTORY
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="CIF_NO != null and CIF_NO != emptyBigDecimalValue" >
        CIF_NO,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
	  <if test="LINE_NO != null and LINE_NO != emptyBigDecimalValue" >
        LINE_NO,
      </if>
      <if test="OLD_SEGMENT != null and OLD_SEGMENT != emptyBigDecimalValue" >
        OLD_SEGMENT,
      </if>
      <if test="NEW_SEGMENT != null and NEW_SEGMENT != emptyBigDecimalValue" >
        NEW_SEGMENT,
      </if>
      <if test="MANUAL_MODIFIED_YN != null and !&quot;&quot;.equals(MANUAL_MODIFIED_YN)" >
        MANUAL_MODIFIED_YN,
      </if>
      <if test="CREATED_BY != null and !&quot;&quot;.equals(CREATED_BY)" >
        CREATED_BY,
      </if>
      <if test="CREATED_DATE != null" >
        CREATED_DATE,
      </if>
      <if test="MODIFIED_BY != null and !&quot;&quot;.equals(MODIFIED_BY)" >
        MODIFIED_BY,
      </if>
      <if test="NODIFIED_DATE != null" >
        NODIFIED_DATE,
      </if>
      <if test="LAST_RUN != null and !&quot;&quot;.equals(LAST_RUN)" >
        LAST_RUN,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="CIF_NO != null and CIF_NO != emptyBigDecimalValue" >
        #{CIF_NO},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="LINE_NO != null and LINE_NO != emptyBigDecimalValue" >
        #{LINE_NO},
      </if>
      <if test="OLD_SEGMENT != null and OLD_SEGMENT != emptyBigDecimalValue" >
        #{OLD_SEGMENT},
      </if>
      <if test="NEW_SEGMENT != null and NEW_SEGMENT != emptyBigDecimalValue" >
        #{NEW_SEGMENT},
      </if>
      <if test="MANUAL_MODIFIED_YN != null and !&quot;&quot;.equals(MANUAL_MODIFIED_YN)" >
        #{MANUAL_MODIFIED_YN},
      </if>
      <if test="CREATED_BY != null and !&quot;&quot;.equals(CREATED_BY)" >
        #{CREATED_BY},
      </if>
      <if test="CREATED_DATE != null" >
        #{CREATED_DATE},
      </if>
      <if test="MODIFIED_BY != null and !&quot;&quot;.equals(MODIFIED_BY)" >
        #{MODIFIED_BY},
      </if>
      <if test="NODIFIED_DATE != null" >
        #{NODIFIED_DATE},
      </if>
      <if test="LAST_RUN != null and !&quot;&quot;.equals(LAST_RUN)" >
        #{LAST_RUN},
      </if>
    </trim>
  </insert>
  <sql id="sql_updateCTS_CIF_SEGMENT_HISTORY" >
    update CTS_CIF_SEGMENT_HISTORY
    <set >
      <if test="OLD_SEGMENT != null" >
        <choose >
          <when test="OLD_SEGMENT == emptyBigDecimalValue" >
            OLD_SEGMENT = NULL ,
          </when>
          <otherwise >
            OLD_SEGMENT = #{OLD_SEGMENT},
          </otherwise>
        </choose>
      </if>
      <if test="NEW_SEGMENT != null" >
        <choose >
          <when test="NEW_SEGMENT == emptyBigDecimalValue" >
            NEW_SEGMENT = NULL ,
          </when>
          <otherwise >
            NEW_SEGMENT = #{NEW_SEGMENT},
          </otherwise>
        </choose>
      </if>
      <if test="MANUAL_MODIFIED_YN != null" >
        MANUAL_MODIFIED_YN = #{MANUAL_MODIFIED_YN},
      </if>
      <if test="CREATED_BY != null" >
        CREATED_BY = #{CREATED_BY},
      </if>
      <if test="CREATED_DATE != null" >
        CREATED_DATE = #{CREATED_DATE},
      </if>
      <if test="MODIFIED_BY != null" >
		 MODIFIED_BY = #{MODIFIED_BY},
      </if>
      <if test="NODIFIED_DATE != null" >
        NODIFIED_DATE = #{NODIFIED_DATE},
      </if>
      <if test="LAST_RUN != null" >
        <choose >
          <when test="LAST_RUN.equals(&quot;&quot;)" >
            LAST_RUN = NULL ,
          </when>
          <otherwise >
            LAST_RUN = #{LAST_RUN},
          </otherwise>
        </choose>
      </if>
    </set>
    where CIF_NO = #{CIF_NO}
      and COMP_CODE = #{COMP_CODE}
      and LINE_NO = #{LINE_NO}
  </sql>
  <update id="updateCTS_CIF_SEGMENT_HISTORY" parameterType="com.path.dbmaps.vo.CTS_CIF_SEGMENT_HISTORYVO" >
    <include refid="sql_updateCTS_CIF_SEGMENT_HISTORY" />
  </update>
</mapper>