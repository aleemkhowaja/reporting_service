<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="CTS_CHARGES_ENTITY" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.CTS_CHARGES_ENTITYVO" >
    <id column="BRANCH_CODE" property="BRANCH_CODE" />
    <id column="CHARGE_CODE" property="CHARGE_CODE" />
    <id column="COMP_CODE" property="COMP_CODE" />
    <id column="ENTITY_CODE" property="ENTITY_CODE" />
    <id column="ENTITY_TYPE" property="ENTITY_TYPE" />
    <id column="TYPE_IND" property="TYPE_IND" />
    <result column="AMOUNT" property="AMOUNT" />
    <result column="AMOUNT_FC" property="AMOUNT_FC" />
    <result column="OPT_TYPE" property="OPT_TYPE" />
    <result column="ACC_BR" property="ACC_BR" />
    <result column="ACC_CIF" property="ACC_CIF" />
    <result column="ACC_CY" property="ACC_CY" />
    <result column="ACC_GL" property="ACC_GL" />
    <result column="ACC_SL" property="ACC_SL" />
    <result column="AMOUNT_NEW" property="AMOUNT_NEW" />
    <result column="APPLY_TVA" property="APPLY_TVA" />
    <result column="CHARGE_PERC" property="CHARGE_PERC" />
    <result column="DEDUCT_FROM_ACC_BR" property="DEDUCT_FROM_ACC_BR" />
    <result column="DEDUCT_FROM_ACC_CIF" property="DEDUCT_FROM_ACC_CIF" />
    <result column="DEDUCT_FROM_ACC_CY" property="DEDUCT_FROM_ACC_CY" />
    <result column="DEDUCT_FROM_ACC_GL" property="DEDUCT_FROM_ACC_GL" />
    <result column="DEDUCT_FROM_ACC_SL" property="DEDUCT_FROM_ACC_SL" />
    <result column="DR_ACC_CIF" property="DR_ACC_CIF" />
    <result column="DR_ACC_GL" property="DR_ACC_GL" />
    <result column="DR_ACC_SL" property="DR_ACC_SL" />
    <result column="DR_CRITERIA" property="DR_CRITERIA" />
    <result column="PASS_SEPARATELY" property="PASS_SEPARATELY" />
    <result column="SCHEMA_CODE" property="SCHEMA_CODE" />
    <result column="VAT_CODE" property="VAT_CODE" />
    <result column="AMOUNT_ORIGINAL" property="AMOUNT_ORIGINAL" />
    <result column="AMOUNT_ORIGINAL_FC" property="AMOUNT_ORIGINAL_FC" />
    <result column="DUES_COLLECTION_TYPE" property="DUES_COLLECTION_TYPE" />
    <result column="DUES_MODE_PAY" property="DUES_MODE_PAY" />
  </resultMap>
  <sql id="Base_Column_List" >
    BRANCH_CODE, CHARGE_CODE, COMP_CODE, ENTITY_CODE, ENTITY_TYPE, TYPE_IND, AMOUNT, 
    AMOUNT_FC, OPT_TYPE, ACC_BR, ACC_CIF, ACC_CY, ACC_GL, ACC_SL, AMOUNT_NEW, APPLY_TVA, 
    CHARGE_PERC, DEDUCT_FROM_ACC_BR, DEDUCT_FROM_ACC_CIF, DEDUCT_FROM_ACC_CY, DEDUCT_FROM_ACC_GL, 
    DEDUCT_FROM_ACC_SL, DR_ACC_CIF, DR_ACC_GL, DR_ACC_SL, DR_CRITERIA, PASS_SEPARATELY, 
    SCHEMA_CODE, VAT_CODE, AMOUNT_ORIGINAL, AMOUNT_ORIGINAL_FC, DUES_COLLECTION_TYPE, 
    DUES_MODE_PAY
  </sql>
  <select id="selectCTS_CHARGES_ENTITY" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.CTS_CHARGES_ENTITYVOKey" >
    select 
    <include refid="Base_Column_List" />
    from CTS_CHARGES_ENTITY
    where BRANCH_CODE = #{BRANCH_CODE}
      and CHARGE_CODE = #{CHARGE_CODE}
      and COMP_CODE = #{COMP_CODE}
      and ENTITY_CODE = #{ENTITY_CODE}
      and ENTITY_TYPE = #{ENTITY_TYPE}
      and TYPE_IND = #{TYPE_IND}
  </select>
  <delete id="deleteCTS_CHARGES_ENTITY" parameterType="com.path.dbmaps.vo.CTS_CHARGES_ENTITYVOKey" >
    delete from CTS_CHARGES_ENTITY
    where BRANCH_CODE = #{BRANCH_CODE}
      and CHARGE_CODE = #{CHARGE_CODE}
      and COMP_CODE = #{COMP_CODE}
      and ENTITY_CODE = #{ENTITY_CODE}
      and ENTITY_TYPE = #{ENTITY_TYPE}
      and TYPE_IND = #{TYPE_IND}
  </delete>
  <insert id="insertCTS_CHARGES_ENTITY" parameterType="com.path.dbmaps.vo.CTS_CHARGES_ENTITYVO" >
    insert into CTS_CHARGES_ENTITY
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        BRANCH_CODE,
      </if>
      <if test="CHARGE_CODE != null and CHARGE_CODE != emptyBigDecimalValue" >
        CHARGE_CODE,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="ENTITY_CODE != null and ENTITY_CODE != emptyBigDecimalValue" >
        ENTITY_CODE,
      </if>
      <if test="ENTITY_TYPE != null" >
        ENTITY_TYPE,
      </if>
      <if test="TYPE_IND != null" >
        TYPE_IND,
      </if>
      <if test="AMOUNT != null and AMOUNT != emptyBigDecimalValue" >
        AMOUNT,
      </if>
      <if test="AMOUNT_FC != null and AMOUNT_FC != emptyBigDecimalValue" >
        AMOUNT_FC,
      </if>
      <if test="OPT_TYPE != null" >
        OPT_TYPE,
      </if>
      <if test="ACC_BR != null and ACC_BR != emptyBigDecimalValue" >
        ACC_BR,
      </if>
      <if test="ACC_CIF != null and ACC_CIF != emptyBigDecimalValue" >
        ACC_CIF,
      </if>
      <if test="ACC_CY != null and ACC_CY != emptyBigDecimalValue" >
        ACC_CY,
      </if>
      <if test="ACC_GL != null and ACC_GL != emptyBigDecimalValue" >
        ACC_GL,
      </if>
      <if test="ACC_SL != null and ACC_SL != emptyBigDecimalValue" >
        ACC_SL,
      </if>
      <if test="AMOUNT_NEW != null and AMOUNT_NEW != emptyBigDecimalValue" >
        AMOUNT_NEW,
      </if>
      <if test="APPLY_TVA != null" >
        APPLY_TVA,
      </if>
      <if test="CHARGE_PERC != null and CHARGE_PERC != emptyBigDecimalValue" >
        CHARGE_PERC,
      </if>
      <if test="DEDUCT_FROM_ACC_BR != null and DEDUCT_FROM_ACC_BR != emptyBigDecimalValue" >
        DEDUCT_FROM_ACC_BR,
      </if>
      <if test="DEDUCT_FROM_ACC_CIF != null and DEDUCT_FROM_ACC_CIF != emptyBigDecimalValue" >
        DEDUCT_FROM_ACC_CIF,
      </if>
      <if test="DEDUCT_FROM_ACC_CY != null and DEDUCT_FROM_ACC_CY != emptyBigDecimalValue" >
        DEDUCT_FROM_ACC_CY,
      </if>
      <if test="DEDUCT_FROM_ACC_GL != null and DEDUCT_FROM_ACC_GL != emptyBigDecimalValue" >
        DEDUCT_FROM_ACC_GL,
      </if>
      <if test="DEDUCT_FROM_ACC_SL != null and DEDUCT_FROM_ACC_SL != emptyBigDecimalValue" >
        DEDUCT_FROM_ACC_SL,
      </if>
      <if test="DR_ACC_CIF != null and DR_ACC_CIF != emptyBigDecimalValue" >
        DR_ACC_CIF,
      </if>
      <if test="DR_ACC_GL != null and DR_ACC_GL != emptyBigDecimalValue" >
        DR_ACC_GL,
      </if>
      <if test="DR_ACC_SL != null and DR_ACC_SL != emptyBigDecimalValue" >
        DR_ACC_SL,
      </if>
      <if test="DR_CRITERIA != null" >
        DR_CRITERIA,
      </if>
      <if test="PASS_SEPARATELY != null" >
        PASS_SEPARATELY,
      </if>
      <if test="SCHEMA_CODE != null and SCHEMA_CODE != emptyBigDecimalValue" >
        SCHEMA_CODE,
      </if>
      <if test="VAT_CODE != null and VAT_CODE != emptyBigDecimalValue" >
        VAT_CODE,
      </if>
      <if test="AMOUNT_ORIGINAL != null and AMOUNT_ORIGINAL != emptyBigDecimalValue" >
        AMOUNT_ORIGINAL,
      </if>
      <if test="AMOUNT_ORIGINAL_FC != null and AMOUNT_ORIGINAL_FC != emptyBigDecimalValue" >
        AMOUNT_ORIGINAL_FC,
      </if>
      <if test="DUES_COLLECTION_TYPE != null" >
        DUES_COLLECTION_TYPE,
      </if>
      <if test="DUES_MODE_PAY != null" >
        DUES_MODE_PAY,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        #{BRANCH_CODE},
      </if>
      <if test="CHARGE_CODE != null and CHARGE_CODE != emptyBigDecimalValue" >
        #{CHARGE_CODE},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="ENTITY_CODE != null and ENTITY_CODE != emptyBigDecimalValue" >
        #{ENTITY_CODE},
      </if>
      <if test="ENTITY_TYPE != null" >
        #{ENTITY_TYPE},
      </if>
      <if test="TYPE_IND != null" >
        #{TYPE_IND},
      </if>
      <if test="AMOUNT != null and AMOUNT != emptyBigDecimalValue" >
        #{AMOUNT},
      </if>
      <if test="AMOUNT_FC != null and AMOUNT_FC != emptyBigDecimalValue" >
        #{AMOUNT_FC},
      </if>
      <if test="OPT_TYPE != null" >
        #{OPT_TYPE},
      </if>
      <if test="ACC_BR != null and ACC_BR != emptyBigDecimalValue" >
        #{ACC_BR},
      </if>
      <if test="ACC_CIF != null and ACC_CIF != emptyBigDecimalValue" >
        #{ACC_CIF},
      </if>
      <if test="ACC_CY != null and ACC_CY != emptyBigDecimalValue" >
        #{ACC_CY},
      </if>
      <if test="ACC_GL != null and ACC_GL != emptyBigDecimalValue" >
        #{ACC_GL},
      </if>
      <if test="ACC_SL != null and ACC_SL != emptyBigDecimalValue" >
        #{ACC_SL},
      </if>
      <if test="AMOUNT_NEW != null and AMOUNT_NEW != emptyBigDecimalValue" >
        #{AMOUNT_NEW},
      </if>
      <if test="APPLY_TVA != null" >
        #{APPLY_TVA},
      </if>
      <if test="CHARGE_PERC != null and CHARGE_PERC != emptyBigDecimalValue" >
        #{CHARGE_PERC},
      </if>
      <if test="DEDUCT_FROM_ACC_BR != null and DEDUCT_FROM_ACC_BR != emptyBigDecimalValue" >
        #{DEDUCT_FROM_ACC_BR},
      </if>
      <if test="DEDUCT_FROM_ACC_CIF != null and DEDUCT_FROM_ACC_CIF != emptyBigDecimalValue" >
        #{DEDUCT_FROM_ACC_CIF},
      </if>
      <if test="DEDUCT_FROM_ACC_CY != null and DEDUCT_FROM_ACC_CY != emptyBigDecimalValue" >
        #{DEDUCT_FROM_ACC_CY},
      </if>
      <if test="DEDUCT_FROM_ACC_GL != null and DEDUCT_FROM_ACC_GL != emptyBigDecimalValue" >
        #{DEDUCT_FROM_ACC_GL},
      </if>
      <if test="DEDUCT_FROM_ACC_SL != null and DEDUCT_FROM_ACC_SL != emptyBigDecimalValue" >
        #{DEDUCT_FROM_ACC_SL},
      </if>
      <if test="DR_ACC_CIF != null and DR_ACC_CIF != emptyBigDecimalValue" >
        #{DR_ACC_CIF},
      </if>
      <if test="DR_ACC_GL != null and DR_ACC_GL != emptyBigDecimalValue" >
        #{DR_ACC_GL},
      </if>
      <if test="DR_ACC_SL != null and DR_ACC_SL != emptyBigDecimalValue" >
        #{DR_ACC_SL},
      </if>
      <if test="DR_CRITERIA != null" >
        #{DR_CRITERIA},
      </if>
      <if test="PASS_SEPARATELY != null" >
        #{PASS_SEPARATELY},
      </if>
      <if test="SCHEMA_CODE != null and SCHEMA_CODE != emptyBigDecimalValue" >
        #{SCHEMA_CODE},
      </if>
      <if test="VAT_CODE != null and VAT_CODE != emptyBigDecimalValue" >
        #{VAT_CODE},
      </if>
      <if test="AMOUNT_ORIGINAL != null and AMOUNT_ORIGINAL != emptyBigDecimalValue" >
        #{AMOUNT_ORIGINAL},
      </if>
      <if test="AMOUNT_ORIGINAL_FC != null and AMOUNT_ORIGINAL_FC != emptyBigDecimalValue" >
        #{AMOUNT_ORIGINAL_FC},
      </if>
      <if test="DUES_COLLECTION_TYPE != null" >
        #{DUES_COLLECTION_TYPE},
      </if>
      <if test="DUES_MODE_PAY != null" >
        #{DUES_MODE_PAY},
      </if>
    </trim>
  </insert>
  <sql id="sql_updateCTS_CHARGES_ENTITY" >
    update CTS_CHARGES_ENTITY
    <set >
      <if test="AMOUNT != null" >
        <choose >
          <when test="AMOUNT == emptyBigDecimalValue" >
            AMOUNT = NULL ,
          </when>
          <otherwise >
            AMOUNT = #{AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="AMOUNT_FC != null" >
        <choose >
          <when test="AMOUNT_FC == emptyBigDecimalValue" >
            AMOUNT_FC = NULL ,
          </when>
          <otherwise >
            AMOUNT_FC = #{AMOUNT_FC},
          </otherwise>
        </choose>
      </if>
      <if test="OPT_TYPE != null" >
        OPT_TYPE = #{OPT_TYPE},
      </if>
      <if test="ACC_BR != null" >
        <choose >
          <when test="ACC_BR == emptyBigDecimalValue" >
            ACC_BR = NULL ,
          </when>
          <otherwise >
            ACC_BR = #{ACC_BR},
          </otherwise>
        </choose>
      </if>
      <if test="ACC_CIF != null" >
        <choose >
          <when test="ACC_CIF == emptyBigDecimalValue" >
            ACC_CIF = NULL ,
          </when>
          <otherwise >
            ACC_CIF = #{ACC_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="ACC_CY != null" >
        <choose >
          <when test="ACC_CY == emptyBigDecimalValue" >
            ACC_CY = NULL ,
          </when>
          <otherwise >
            ACC_CY = #{ACC_CY},
          </otherwise>
        </choose>
      </if>
      <if test="ACC_GL != null" >
        <choose >
          <when test="ACC_GL == emptyBigDecimalValue" >
            ACC_GL = NULL ,
          </when>
          <otherwise >
            ACC_GL = #{ACC_GL},
          </otherwise>
        </choose>
      </if>
      <if test="ACC_SL != null" >
        <choose >
          <when test="ACC_SL == emptyBigDecimalValue" >
            ACC_SL = NULL ,
          </when>
          <otherwise >
            ACC_SL = #{ACC_SL},
          </otherwise>
        </choose>
      </if>
      <if test="AMOUNT_NEW != null" >
        <choose >
          <when test="AMOUNT_NEW == emptyBigDecimalValue" >
            AMOUNT_NEW = NULL ,
          </when>
          <otherwise >
            AMOUNT_NEW = #{AMOUNT_NEW},
          </otherwise>
        </choose>
      </if>
      <if test="APPLY_TVA != null" >
        APPLY_TVA = #{APPLY_TVA},
      </if>
      <if test="CHARGE_PERC != null" >
        <choose >
          <when test="CHARGE_PERC == emptyBigDecimalValue" >
            CHARGE_PERC = NULL ,
          </when>
          <otherwise >
            CHARGE_PERC = #{CHARGE_PERC},
          </otherwise>
        </choose>
      </if>
      <if test="DEDUCT_FROM_ACC_BR != null" >
        <choose >
          <when test="DEDUCT_FROM_ACC_BR == emptyBigDecimalValue" >
            DEDUCT_FROM_ACC_BR = NULL ,
          </when>
          <otherwise >
            DEDUCT_FROM_ACC_BR = #{DEDUCT_FROM_ACC_BR},
          </otherwise>
        </choose>
      </if>
      <if test="DEDUCT_FROM_ACC_CIF != null" >
        <choose >
          <when test="DEDUCT_FROM_ACC_CIF == emptyBigDecimalValue" >
            DEDUCT_FROM_ACC_CIF = NULL ,
          </when>
          <otherwise >
            DEDUCT_FROM_ACC_CIF = #{DEDUCT_FROM_ACC_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="DEDUCT_FROM_ACC_CY != null" >
        <choose >
          <when test="DEDUCT_FROM_ACC_CY == emptyBigDecimalValue" >
            DEDUCT_FROM_ACC_CY = NULL ,
          </when>
          <otherwise >
            DEDUCT_FROM_ACC_CY = #{DEDUCT_FROM_ACC_CY},
          </otherwise>
        </choose>
      </if>
      <if test="DEDUCT_FROM_ACC_GL != null" >
        <choose >
          <when test="DEDUCT_FROM_ACC_GL == emptyBigDecimalValue" >
            DEDUCT_FROM_ACC_GL = NULL ,
          </when>
          <otherwise >
            DEDUCT_FROM_ACC_GL = #{DEDUCT_FROM_ACC_GL},
          </otherwise>
        </choose>
      </if>
      <if test="DEDUCT_FROM_ACC_SL != null" >
        <choose >
          <when test="DEDUCT_FROM_ACC_SL == emptyBigDecimalValue" >
            DEDUCT_FROM_ACC_SL = NULL ,
          </when>
          <otherwise >
            DEDUCT_FROM_ACC_SL = #{DEDUCT_FROM_ACC_SL},
          </otherwise>
        </choose>
      </if>
      <if test="DR_ACC_CIF != null" >
        <choose >
          <when test="DR_ACC_CIF == emptyBigDecimalValue" >
            DR_ACC_CIF = NULL ,
          </when>
          <otherwise >
            DR_ACC_CIF = #{DR_ACC_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="DR_ACC_GL != null" >
        <choose >
          <when test="DR_ACC_GL == emptyBigDecimalValue" >
            DR_ACC_GL = NULL ,
          </when>
          <otherwise >
            DR_ACC_GL = #{DR_ACC_GL},
          </otherwise>
        </choose>
      </if>
      <if test="DR_ACC_SL != null" >
        <choose >
          <when test="DR_ACC_SL == emptyBigDecimalValue" >
            DR_ACC_SL = NULL ,
          </when>
          <otherwise >
            DR_ACC_SL = #{DR_ACC_SL},
          </otherwise>
        </choose>
      </if>
      <if test="DR_CRITERIA != null" >
        DR_CRITERIA = #{DR_CRITERIA},
      </if>
      <if test="PASS_SEPARATELY != null" >
        PASS_SEPARATELY = #{PASS_SEPARATELY},
      </if>
      <if test="SCHEMA_CODE != null" >
        <choose >
          <when test="SCHEMA_CODE == emptyBigDecimalValue" >
            SCHEMA_CODE = NULL ,
          </when>
          <otherwise >
            SCHEMA_CODE = #{SCHEMA_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="VAT_CODE != null" >
        <choose >
          <when test="VAT_CODE == emptyBigDecimalValue" >
            VAT_CODE = NULL ,
          </when>
          <otherwise >
            VAT_CODE = #{VAT_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="AMOUNT_ORIGINAL != null" >
        <choose >
          <when test="AMOUNT_ORIGINAL == emptyBigDecimalValue" >
            AMOUNT_ORIGINAL = NULL ,
          </when>
          <otherwise >
            AMOUNT_ORIGINAL = #{AMOUNT_ORIGINAL},
          </otherwise>
        </choose>
      </if>
      <if test="AMOUNT_ORIGINAL_FC != null" >
        <choose >
          <when test="AMOUNT_ORIGINAL_FC == emptyBigDecimalValue" >
            AMOUNT_ORIGINAL_FC = NULL ,
          </when>
          <otherwise >
            AMOUNT_ORIGINAL_FC = #{AMOUNT_ORIGINAL_FC},
          </otherwise>
        </choose>
      </if>
      <if test="DUES_COLLECTION_TYPE != null" >
        DUES_COLLECTION_TYPE = #{DUES_COLLECTION_TYPE},
      </if>
      <if test="DUES_MODE_PAY != null" >
        DUES_MODE_PAY = #{DUES_MODE_PAY},
      </if>
    </set>
    where BRANCH_CODE = #{BRANCH_CODE}
      and CHARGE_CODE = #{CHARGE_CODE}
      and COMP_CODE = #{COMP_CODE}
      and ENTITY_CODE = #{ENTITY_CODE}
      and ENTITY_TYPE = #{ENTITY_TYPE}
      and TYPE_IND = #{TYPE_IND}
  </sql>
  <update id="updateCTS_CHARGES_ENTITY" parameterType="com.path.dbmaps.vo.CTS_CHARGES_ENTITYVO" >
    <include refid="sql_updateCTS_CHARGES_ENTITY" />
  </update>
</mapper>