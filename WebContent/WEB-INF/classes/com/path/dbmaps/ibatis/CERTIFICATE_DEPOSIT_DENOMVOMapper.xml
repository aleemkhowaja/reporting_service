<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="CERTIFICATE_DEPOSIT_DENOM" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.CERTIFICATE_DEPOSIT_DENOMVO" >
    <id column="BRANCH_CODE" property="BRANCH_CODE" />
    <id column="CIF_SUB_NO" property="CIF_SUB_NO" />
    <id column="COMP_CODE" property="COMP_CODE" />
    <id column="CURRENCY_CODE" property="CURRENCY_CODE" />
    <id column="GL_CODE" property="GL_CODE" />
    <id column="LINE_NO" property="LINE_NO" />
    <id column="SL_NO" property="SL_NO" />
    <result column="SERIAL_NO" property="SERIAL_NO" />
    <result column="SEQUENCE_FR" property="SEQUENCE_FR" />
    <result column="SEQUENCE_TO" property="SEQUENCE_TO" />
    <result column="QTY" property="QTY" />
    <result column="VALUE" property="VALUE" />
    <result column="TRS_BR" property="TRS_BR" />
    <result column="TRS_CY" property="TRS_CY" />
    <result column="TRS_GL" property="TRS_GL" />
    <result column="TRS_CIF" property="TRS_CIF" />
    <result column="TRS_SL" property="TRS_SL" />
    <result column="TRX_TYPE" property="TRX_TYPE" />
    <result column="ACC_TYPE" property="ACC_TYPE" />
  </resultMap>
  <sql id="Base_Column_List" >
    BRANCH_CODE, CIF_SUB_NO, COMP_CODE, CURRENCY_CODE, GL_CODE, LINE_NO, SL_NO, SERIAL_NO, 
    SEQUENCE_FR, SEQUENCE_TO, QTY, VALUE, TRS_BR, TRS_CY, TRS_GL, TRS_CIF, TRS_SL, TRX_TYPE, 
    ACC_TYPE
  </sql>
  <select id="selectCERTIFICATE_DEPOSIT_DENOM" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.CERTIFICATE_DEPOSIT_DENOMVOKey" >
    select 
    <include refid="Base_Column_List" />
    from CERTIFICATE_DEPOSIT_DENOM
    where BRANCH_CODE = #{BRANCH_CODE}
      and CIF_SUB_NO = #{CIF_SUB_NO}
      and COMP_CODE = #{COMP_CODE}
      and CURRENCY_CODE = #{CURRENCY_CODE}
      and GL_CODE = #{GL_CODE}
      and LINE_NO = #{LINE_NO}
      and SL_NO = #{SL_NO}
  </select>
  <delete id="deleteCERTIFICATE_DEPOSIT_DENOM" parameterType="com.path.dbmaps.vo.CERTIFICATE_DEPOSIT_DENOMVOKey" >
    delete from CERTIFICATE_DEPOSIT_DENOM
    where BRANCH_CODE = #{BRANCH_CODE}
      and CIF_SUB_NO = #{CIF_SUB_NO}
      and COMP_CODE = #{COMP_CODE}
      and CURRENCY_CODE = #{CURRENCY_CODE}
      and GL_CODE = #{GL_CODE}
      and LINE_NO = #{LINE_NO}
      and SL_NO = #{SL_NO}
  </delete>
  <insert id="insertCERTIFICATE_DEPOSIT_DENOM" parameterType="com.path.dbmaps.vo.CERTIFICATE_DEPOSIT_DENOMVO" >
    insert into CERTIFICATE_DEPOSIT_DENOM
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        BRANCH_CODE,
      </if>
      <if test="CIF_SUB_NO != null and CIF_SUB_NO != emptyBigDecimalValue" >
        CIF_SUB_NO,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="CURRENCY_CODE != null and CURRENCY_CODE != emptyBigDecimalValue" >
        CURRENCY_CODE,
      </if>
      <if test="GL_CODE != null and GL_CODE != emptyBigDecimalValue" >
        GL_CODE,
      </if>
      <if test="LINE_NO != null and LINE_NO != emptyBigDecimalValue" >
        LINE_NO,
      </if>
      <if test="SL_NO != null and SL_NO != emptyBigDecimalValue" >
        SL_NO,
      </if>
      <if test="SERIAL_NO != null" >
        SERIAL_NO,
      </if>
      <if test="SEQUENCE_FR != null and SEQUENCE_FR != emptyBigDecimalValue" >
        SEQUENCE_FR,
      </if>
      <if test="SEQUENCE_TO != null and SEQUENCE_TO != emptyBigDecimalValue" >
        SEQUENCE_TO,
      </if>
      <if test="QTY != null and QTY != emptyBigDecimalValue" >
        QTY,
      </if>
      <if test="VALUE != null and VALUE != emptyBigDecimalValue" >
        VALUE,
      </if>
      <if test="TRS_BR != null and TRS_BR != emptyBigDecimalValue" >
        TRS_BR,
      </if>
      <if test="TRS_CY != null and TRS_CY != emptyBigDecimalValue" >
        TRS_CY,
      </if>
      <if test="TRS_GL != null and TRS_GL != emptyBigDecimalValue" >
        TRS_GL,
      </if>
      <if test="TRS_CIF != null and TRS_CIF != emptyBigDecimalValue" >
        TRS_CIF,
      </if>
      <if test="TRS_SL != null and TRS_SL != emptyBigDecimalValue" >
        TRS_SL,
      </if>
      <if test="TRX_TYPE != null and TRX_TYPE != emptyBigDecimalValue" >
        TRX_TYPE,
      </if>
      <if test="ACC_TYPE != null" >
        ACC_TYPE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        #{BRANCH_CODE},
      </if>
      <if test="CIF_SUB_NO != null and CIF_SUB_NO != emptyBigDecimalValue" >
        #{CIF_SUB_NO},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="CURRENCY_CODE != null and CURRENCY_CODE != emptyBigDecimalValue" >
        #{CURRENCY_CODE},
      </if>
      <if test="GL_CODE != null and GL_CODE != emptyBigDecimalValue" >
        #{GL_CODE},
      </if>
      <if test="LINE_NO != null and LINE_NO != emptyBigDecimalValue" >
        #{LINE_NO},
      </if>
      <if test="SL_NO != null and SL_NO != emptyBigDecimalValue" >
        #{SL_NO},
      </if>
      <if test="SERIAL_NO != null" >
        #{SERIAL_NO},
      </if>
      <if test="SEQUENCE_FR != null and SEQUENCE_FR != emptyBigDecimalValue" >
        #{SEQUENCE_FR},
      </if>
      <if test="SEQUENCE_TO != null and SEQUENCE_TO != emptyBigDecimalValue" >
        #{SEQUENCE_TO},
      </if>
      <if test="QTY != null and QTY != emptyBigDecimalValue" >
        #{QTY},
      </if>
      <if test="VALUE != null and VALUE != emptyBigDecimalValue" >
        #{VALUE},
      </if>
      <if test="TRS_BR != null and TRS_BR != emptyBigDecimalValue" >
        #{TRS_BR},
      </if>
      <if test="TRS_CY != null and TRS_CY != emptyBigDecimalValue" >
        #{TRS_CY},
      </if>
      <if test="TRS_GL != null and TRS_GL != emptyBigDecimalValue" >
        #{TRS_GL},
      </if>
      <if test="TRS_CIF != null and TRS_CIF != emptyBigDecimalValue" >
        #{TRS_CIF},
      </if>
      <if test="TRS_SL != null and TRS_SL != emptyBigDecimalValue" >
        #{TRS_SL},
      </if>
      <if test="TRX_TYPE != null and TRX_TYPE != emptyBigDecimalValue" >
        #{TRX_TYPE},
      </if>
      <if test="ACC_TYPE != null" >
        #{ACC_TYPE},
      </if>
    </trim>
  </insert>
  <sql id="sql_updateCERTIFICATE_DEPOSIT_DENOM" >
    update CERTIFICATE_DEPOSIT_DENOM
    <set >
      <if test="SERIAL_NO != null" >
        SERIAL_NO = #{SERIAL_NO},
      </if>
      <if test="SEQUENCE_FR != null" >
        <choose >
          <when test="SEQUENCE_FR == emptyBigDecimalValue" >
            SEQUENCE_FR = NULL ,
          </when>
          <otherwise >
            SEQUENCE_FR = #{SEQUENCE_FR},
          </otherwise>
        </choose>
      </if>
      <if test="SEQUENCE_TO != null" >
        <choose >
          <when test="SEQUENCE_TO == emptyBigDecimalValue" >
            SEQUENCE_TO = NULL ,
          </when>
          <otherwise >
            SEQUENCE_TO = #{SEQUENCE_TO},
          </otherwise>
        </choose>
      </if>
      <if test="QTY != null" >
        <choose >
          <when test="QTY == emptyBigDecimalValue" >
            QTY = NULL ,
          </when>
          <otherwise >
            QTY = #{QTY},
          </otherwise>
        </choose>
      </if>
      <if test="VALUE != null" >
        <choose >
          <when test="VALUE == emptyBigDecimalValue" >
            VALUE = NULL ,
          </when>
          <otherwise >
            VALUE = #{VALUE},
          </otherwise>
        </choose>
      </if>
      <if test="TRS_BR != null" >
        <choose >
          <when test="TRS_BR == emptyBigDecimalValue" >
            TRS_BR = NULL ,
          </when>
          <otherwise >
            TRS_BR = #{TRS_BR},
          </otherwise>
        </choose>
      </if>
      <if test="TRS_CY != null" >
        <choose >
          <when test="TRS_CY == emptyBigDecimalValue" >
            TRS_CY = NULL ,
          </when>
          <otherwise >
            TRS_CY = #{TRS_CY},
          </otherwise>
        </choose>
      </if>
      <if test="TRS_GL != null" >
        <choose >
          <when test="TRS_GL == emptyBigDecimalValue" >
            TRS_GL = NULL ,
          </when>
          <otherwise >
            TRS_GL = #{TRS_GL},
          </otherwise>
        </choose>
      </if>
      <if test="TRS_CIF != null" >
        <choose >
          <when test="TRS_CIF == emptyBigDecimalValue" >
            TRS_CIF = NULL ,
          </when>
          <otherwise >
            TRS_CIF = #{TRS_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="TRS_SL != null" >
        <choose >
          <when test="TRS_SL == emptyBigDecimalValue" >
            TRS_SL = NULL ,
          </when>
          <otherwise >
            TRS_SL = #{TRS_SL},
          </otherwise>
        </choose>
      </if>
      <if test="TRX_TYPE != null" >
        <choose >
          <when test="TRX_TYPE == emptyBigDecimalValue" >
            TRX_TYPE = NULL ,
          </when>
          <otherwise >
            TRX_TYPE = #{TRX_TYPE},
          </otherwise>
        </choose>
      </if>
      <if test="ACC_TYPE != null" >
        ACC_TYPE = #{ACC_TYPE},
      </if>
    </set>
    where BRANCH_CODE = #{BRANCH_CODE}
      and CIF_SUB_NO = #{CIF_SUB_NO}
      and COMP_CODE = #{COMP_CODE}
      and CURRENCY_CODE = #{CURRENCY_CODE}
      and GL_CODE = #{GL_CODE}
      and LINE_NO = #{LINE_NO}
      and SL_NO = #{SL_NO}
  </sql>
  <update id="updateCERTIFICATE_DEPOSIT_DENOM" parameterType="com.path.dbmaps.vo.CERTIFICATE_DEPOSIT_DENOMVO" >
    <include refid="sql_updateCERTIFICATE_DEPOSIT_DENOM" />
  </update>
</mapper>