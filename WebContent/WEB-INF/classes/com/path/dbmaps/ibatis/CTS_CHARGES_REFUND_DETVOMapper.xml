<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="CTS_CHARGES_REFUND_DET" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.CTS_CHARGES_REFUND_DETVO" >
    <id column="COMP_CODE" property="COMP_CODE" />
    <id column="BRANCH_CODE" property="BRANCH_CODE" />
    <id column="REFUND_CODE" property="REFUND_CODE" />
    <id column="LINE_NO" property="LINE_NO" />    
    <result column="MODULE" property="MODULE" />
    <result column="ORIG_TRX_DEAL_NO" property="ORIG_TRX_DEAL_NO" />
    <result column="CREATED_DATE" property="CREATED_DATE" />
    <result column="VALUE_DATE" property="VALUE_DATE" />
    <result column="CUST_ACC_BR" property="CUST_ACC_BR" />
    <result column="CUST_ACC_CY" property="CUST_ACC_CY" />
    <result column="CUST_ACC_GL" property="CUST_ACC_GL" />
    <result column="CUST_ACC_CIF" property="CUST_ACC_CIF" />
    <result column="CUST_ACC_SL" property="CUST_ACC_SL" />
    <result column="CHARGE_CODE" property="CHARGE_CODE" />
    <result column="CHARGE_CURRENCY" property="CHARGE_CURRENCY" />
    <result column="CHARGE_AMOUNT_FC" property="CHARGE_AMOUNT_FC" />
    <result column="CHARGE_AMOUNT_CV" property="CHARGE_AMOUNT_CV" />
    <result column="CHRG_ACC_BR" property="CHRG_ACC_BR" />
    <result column="CHRG_ACC_CY" property="CHRG_ACC_CY" />
    <result column="CHRG_ACC_GL" property="CHRG_ACC_GL" />
    <result column="CHRG_ACC_CIF" property="CHRG_ACC_CIF" />
    <result column="CHRG_ACC_SL" property="CHRG_ACC_SL" />
    <result column="REFUND_PERC" property="REFUND_PERC" />
    <result column="REFUND_AMOUNT_FC" property="REFUND_AMOUNT_FC" />
    <result column="REFUND_AMOUNT_CV" property="REFUND_AMOUNT_CV" />
    <result column="NEW_CHARGE_AMOUNT_FC" property="NEW_CHARGE_AMOUNT_FC" />
    <result column="NEW_CHARGE_AMOUNT_CV" property="NEW_CHARGE_AMOUNT_CV" />
    <result column="ORIG_TRX_COMP_CODE" property="ORIG_TRX_COMP_CODE" />
    <result column="ORIG_TRX_BRANCH_CODE" property="ORIG_TRX_BRANCH_CODE" />
    <result column="ORIG_TRX_CB_IND" property="ORIG_TRX_CB_IND" />
    <result column="ORIG_TRX_TRS_TYPE" property="ORIG_TRX_TRS_TYPE" />
    <result column="ORIG_TRX_CHARGE_TYPE" property="ORIG_TRX_CHARGE_TYPE" />
    <result column="ORIG_TRX_CHARGE_CODE" property="ORIG_TRX_CHARGE_CODE" />
    <result column="ORIG_TRX_OP_NO" property="ORIG_TRX_OP_NO" />
    <result column="NEW_TRX_OP_NO" property="NEW_TRX_OP_NO" />
    <result column="JV_NO" property="JV_NO" />
    <result column="EXCH_RATE" property="EXCH_RATE" />
  </resultMap>
  <sql id="Base_Column_List" >
    COMP_CODE, BRANCH_CODE, REFUND_CODE, LINE_NO, MODULE, ORIG_TRX_DEAL_NO, CREATED_DATE, VALUE_DATE,
    CUST_ACC_BR, CUST_ACC_CY, CUST_ACC_GL, CUST_ACC_CIF, CUST_ACC_SL, CHARGE_CODE, CHARGE_CURRENCY,
    CHARGE_AMOUNT_FC, CHARGE_AMOUNT_CV, CHRG_ACC_BR, CHRG_ACC_CY, CHRG_ACC_CIF, CHRG_ACC_SL, REFUND_PERC,
    REFUND_AMOUNT_FC, REFUND_AMOUNT_CV, NEW_CHARGE_AMOUNT_FC, NEW_CHARGE_AMOUNT_CV, ORIG_TRX_COMP_CODE,
    ORIG_TRX_BRANCH_CODE, ORIG_TRX_CB_IND, ORIG_TRX_TRS_TYPE, ORIG_TRX_CHARGE_TYPE, ORIG_TRX_CHARGE_CODE,
    ORIG_TRX_OP_NO, NEW_TRX_OP_NO, JV_NO, EXCH_RATE
  </sql>
  <select id="selectCTS_CHARGES_REFUND_DET" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.CTS_CHARGES_REFUND_DETVOKey" >
    select 
    <include refid="Base_Column_List" />
    from CTS_CHARGES_REFUND_DET
    where COMP_CODE = #{COMP_CODE} 
      and BRANCH_CODE = #{BRANCH_CODE}
      and REFUND_CODE = #{REFUND_CODE}
      and LINE_NO = #{LINE_NO}
  </select>
  <delete id="deleteCTS_CHARGES_REFUND_DET" parameterType="com.path.dbmaps.vo.CTS_CHARGES_REFUND_DETVOKey" >
    delete from CTS_CHARGES_REFUND_DET
    where COMP_CODE = #{COMP_CODE} 
      and BRANCH_CODE = #{BRANCH_CODE}
      and REFUND_CODE = #{REFUND_CODE}
      and LINE_NO = #{LINE_NO}
  </delete>
  <insert id="insertCTS_CHARGES_REFUND_DET" parameterType="com.path.dbmaps.vo.CTS_CHARGES_REFUND_DETVO" >
    insert into CTS_CHARGES_REFUND_DET
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        BRANCH_CODE,
      </if>
      <if test="REFUND_CODE != null and REFUND_CODE != emptyBigDecimalValue" >
        REFUND_CODE,
      </if>
      <if test="LINE_NO != null and LINE_NO != emptyBigDecimalValue" >
        LINE_NO,
      </if>
      <if test="MODULE != null" >
        MODULE,
      </if>
      <if test="ORIG_TRX_DEAL_NO != null and ORIG_TRX_DEAL_NO != emptyBigDecimalValue" >
        ORIG_TRX_DEAL_NO,
      </if>
      <if test="CREATED_DATE != null" >
        CREATED_DATE,
      </if>
      <if test="VALUE_DATE != null" >
        VALUE_DATE,
      </if>
      <if test="CUST_ACC_BR != null and CUST_ACC_BR != emptyBigDecimalValue" >
        CUST_ACC_BR,
      </if>
      <if test="CUST_ACC_CY != null and CUST_ACC_CY != emptyBigDecimalValue" >
        CUST_ACC_CY,
      </if>
      <if test="CUST_ACC_GL != null and CUST_ACC_GL != emptyBigDecimalValue" >
        CUST_ACC_GL,
      </if>
      <if test="CUST_ACC_CIF != null and CUST_ACC_CIF != emptyBigDecimalValue" >
        CUST_ACC_CIF,
      </if>
      <if test="CUST_ACC_SL != null and CUST_ACC_SL != emptyBigDecimalValue" >
        CUST_ACC_SL,
      </if>
      <if test="CHARGE_CODE != null and CHARGE_CODE != emptyBigDecimalValue" >
        CHARGE_CODE,
      </if>
      <if test="CHARGE_CURRENCY != null and CHARGE_CURRENCY != emptyBigDecimalValue" >
        CHARGE_CURRENCY,
      </if>
      <if test="CHARGE_AMOUNT_FC != null and CHARGE_AMOUNT_FC != emptyBigDecimalValue" >
        CHARGE_AMOUNT_FC,
      </if>
      <if test="CHARGE_AMOUNT_CV != null and CHARGE_AMOUNT_CV != emptyBigDecimalValue" >
        CHARGE_AMOUNT_CV,
      </if>
      <if test="CHRG_ACC_BR != null and CHRG_ACC_BR != emptyBigDecimalValue" >
        CHRG_ACC_BR,
      </if>
      <if test="CHRG_ACC_CY != null and CHRG_ACC_CY != emptyBigDecimalValue" >
        CHRG_ACC_CY,
      </if>
      <if test="CHRG_ACC_GL != null and CHRG_ACC_GL != emptyBigDecimalValue" >
        CHRG_ACC_GL,
      </if>
      <if test="CHRG_ACC_CIF != null and CHRG_ACC_CIF != emptyBigDecimalValue" >
        CHRG_ACC_CIF,
      </if>
      <if test="CHRG_ACC_SL != null and CHRG_ACC_SL != emptyBigDecimalValue" >
        CHRG_ACC_SL,
      </if>
      <if test="REFUND_PERC != null and REFUND_PERC != emptyBigDecimalValue" >
        REFUND_PERC,
      </if>
      <if test="REFUND_AMOUNT_FC != null and REFUND_AMOUNT_FC != emptyBigDecimalValue" >
        REFUND_AMOUNT_FC,
      </if>
      <if test="REFUND_AMOUNT_CV != null and REFUND_AMOUNT_CV != emptyBigDecimalValue" >
        REFUND_AMOUNT_CV,
      </if>
      <if test="NEW_CHARGE_AMOUNT_FC != null and NEW_CHARGE_AMOUNT_FC != emptyBigDecimalValue" >
        NEW_CHARGE_AMOUNT_FC,
      </if>
      <if test="NEW_CHARGE_AMOUNT_CV != null and NEW_CHARGE_AMOUNT_CV != emptyBigDecimalValue" >
        NEW_CHARGE_AMOUNT_CV,
      </if>
      <if test="ORIG_TRX_COMP_CODE != null and ORIG_TRX_COMP_CODE != emptyBigDecimalValue" >
        ORIG_TRX_COMP_CODE,
      </if>
      <if test="ORIG_TRX_BRANCH_CODE != null and ORIG_TRX_BRANCH_CODE != emptyBigDecimalValue" >
        ORIG_TRX_BRANCH_CODE,
      </if>
      <if test="ORIG_TRX_CB_IND != null" >
        ORIG_TRX_CB_IND,
      </if>
      <if test="ORIG_TRX_TRS_TYPE != null" >
        ORIG_TRX_TRS_TYPE,
      </if>
      <if test="ORIG_TRX_CHARGE_TYPE != null" >
        ORIG_TRX_CHARGE_TYPE,
      </if>
      <if test="ORIG_TRX_CHARGE_CODE != null and ORIG_TRX_CHARGE_CODE != emptyBigDecimalValue" >
        ORIG_TRX_CHARGE_CODE,
      </if>
      <if test="ORIG_TRX_OP_NO != null and ORIG_TRX_OP_NO != emptyBigDecimalValue" >
        ORIG_TRX_OP_NO,
      </if>
      <if test="NEW_TRX_OP_NO != null and NEW_TRX_OP_NO != emptyBigDecimalValue" >
        NEW_TRX_OP_NO,
      </if>
      <if test="JV_NO != null and JV_NO != emptyBigDecimalValue" >
        JV_NO,
      </if>
      <if test="EXCH_RATE != null and EXCH_RATE != emptyBigDecimalValue" >
        EXCH_RATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        #{BRANCH_CODE},
      </if>     
      <if test="REFUND_CODE != null and REFUND_CODE != emptyBigDecimalValue" >
        #{REFUND_CODE},
      </if>
      <if test="LINE_NO != null and LINE_NO != emptyBigDecimalValue" >
        #{LINE_NO},
      </if>
      <if test="MODULE != null" >
        #{MODULE},
      </if>
      <if test="ORIG_TRX_DEAL_NO != null and ORIG_TRX_DEAL_NO != emptyBigDecimalValue" >
        #{ORIG_TRX_DEAL_NO},
      </if>
      <if test="CREATED_DATE != null" >
        #{CREATED_DATE},
      </if>
      <if test="VALUE_DATE != null" >
        #{VALUE_DATE},
      </if>
      <if test="CUST_ACC_BR != null and CUST_ACC_BR != emptyBigDecimalValue" >
        #{CUST_ACC_BR},
      </if>
      <if test="CUST_ACC_CY != null and CUST_ACC_CY != emptyBigDecimalValue" >
        #{CUST_ACC_CY},
      </if>
      <if test="CUST_ACC_GL != null and CUST_ACC_GL != emptyBigDecimalValue" >
        #{CUST_ACC_GL},
      </if>
      <if test="CUST_ACC_CIF != null and CUST_ACC_CIF != emptyBigDecimalValue" >
        #{CUST_ACC_CIF},
      </if>
      <if test="CUST_ACC_SL != null and CUST_ACC_SL != emptyBigDecimalValue" >
        #{CUST_ACC_SL},
      </if>
      <if test="CHARGE_CODE != null and CHARGE_CODE != emptyBigDecimalValue" >
        #{CHARGE_CODE},
      </if>
      <if test="CHARGE_CURRENCY != null and CHARGE_CURRENCY != emptyBigDecimalValue" >
        #{CHARGE_CURRENCY},
      </if>
      <if test="CHARGE_AMOUNT_FC != null and CHARGE_AMOUNT_FC != emptyBigDecimalValue" >
        #{CHARGE_AMOUNT_FC},
      </if>
      <if test="CHARGE_AMOUNT_CV != null and CHARGE_AMOUNT_CV != emptyBigDecimalValue" >
        #{CHARGE_AMOUNT_CV},
      </if>
      <if test="CHRG_ACC_BR != null and CHRG_ACC_BR != emptyBigDecimalValue" >
        #{CHRG_ACC_BR},
      </if>
      <if test="CHRG_ACC_CY != null and CHRG_ACC_CY != emptyBigDecimalValue" >
        #{CHRG_ACC_CY},
      </if>
      <if test="CHRG_ACC_GL != null and CHRG_ACC_GL != emptyBigDecimalValue" >
        #{CHRG_ACC_GL},
      </if>
      <if test="CHRG_ACC_CIF != null and CHRG_ACC_CIF != emptyBigDecimalValue" >
        #{CHRG_ACC_CIF},
      </if>
      <if test="CHRG_ACC_SL != null and CHRG_ACC_SL != emptyBigDecimalValue" >
        #{CHRG_ACC_SL},
      </if>
      <if test="REFUND_PERC != null and REFUND_PERC != emptyBigDecimalValue" >
        #{REFUND_PERC},
      </if>
      <if test="REFUND_AMOUNT_FC != null and REFUND_AMOUNT_FC != emptyBigDecimalValue" >
        #{REFUND_AMOUNT_FC},
      </if>
      <if test="REFUND_AMOUNT_CV != null and REFUND_AMOUNT_CV != emptyBigDecimalValue" >
        #{REFUND_AMOUNT_CV},
      </if>
      <if test="NEW_CHARGE_AMOUNT_FC != null and NEW_CHARGE_AMOUNT_FC != emptyBigDecimalValue" >
        #{NEW_CHARGE_AMOUNT_FC},
      </if>
      <if test="NEW_CHARGE_AMOUNT_CV != null and NEW_CHARGE_AMOUNT_CV != emptyBigDecimalValue" >
        #{NEW_CHARGE_AMOUNT_CV},
      </if>
      <if test="ORIG_TRX_COMP_CODE != null and ORIG_TRX_COMP_CODE != emptyBigDecimalValue" >
        #{ORIG_TRX_COMP_CODE},
      </if>
      <if test="ORIG_TRX_BRANCH_CODE != null and ORIG_TRX_BRANCH_CODE != emptyBigDecimalValue" >
        #{ORIG_TRX_BRANCH_CODE},
      </if>
      <if test="ORIG_TRX_CB_IND != null" >
        #{ORIG_TRX_CB_IND},
      </if>
      <if test="ORIG_TRX_TRS_TYPE != null" >
        #{ORIG_TRX_TRS_TYPE},
      </if>
      <if test="ORIG_TRX_CHARGE_TYPE != null" >
        #{ORIG_TRX_CHARGE_TYPE},
      </if>
      <if test="ORIG_TRX_CHARGE_CODE != null and ORIG_TRX_CHARGE_CODE != emptyBigDecimalValue" >
        #{ORIG_TRX_CHARGE_CODE},
      </if>
      <if test="ORIG_TRX_OP_NO != null and ORIG_TRX_OP_NO != emptyBigDecimalValue" >
        #{ORIG_TRX_OP_NO},
      </if>
      <if test="NEW_TRX_OP_NO != null and NEW_TRX_OP_NO != emptyBigDecimalValue" >
        #{NEW_TRX_OP_NO},
      </if>
      <if test="JV_NO != null and JV_NO != emptyBigDecimalValue" >
        #{JV_NO},
      </if>
      <if test="EXCH_RATE != null and EXCH_RATE != emptyBigDecimalValue" >
        #{EXCH_RATE},
      </if>
    </trim>
  </insert>
  <sql id="sql_updateCTS_CHARGES_REFUND_DET" >
    update CTS_CHARGES_REFUND_DET
    <set >
      <if test="MODULE != null" >
        MODULE = #{MODULE},
      </if>
      <if test="ORIG_TRX_DEAL_NO != null" >
        <choose >
          <when test="ORIG_TRX_DEAL_NO == emptyBigDecimalValue" >
            ORIG_TRX_DEAL_NO = NULL ,
          </when>
          <otherwise >
            ORIG_TRX_DEAL_NO = #{ORIG_TRX_DEAL_NO},
          </otherwise>
        </choose>
      </if>
      <if test="CREATED_DATE != null" >
        CREATED_DATE = #{CREATED_DATE},
      </if>
      <if test="VALUE_DATE != null" >
        VALUE_DATE = #{VALUE_DATE},
      </if>
      <if test="CUST_ACC_BR != null" >
        <choose >
          <when test="CUST_ACC_BR == emptyBigDecimalValue" >
            CUST_ACC_BR = NULL ,
          </when>
          <otherwise >
            CUST_ACC_BR = #{CUST_ACC_BR},
          </otherwise>
        </choose>
      </if>
      <if test="CUST_ACC_CY != null" >
        <choose >
          <when test="CUST_ACC_CY == emptyBigDecimalValue" >
            CUST_ACC_CY = NULL ,
          </when>
          <otherwise >
            CUST_ACC_CY = #{CUST_ACC_CY},
          </otherwise>
        </choose>
      </if>
      <if test="CUST_ACC_GL != null" >
        <choose >
          <when test="CUST_ACC_GL == emptyBigDecimalValue" >
            CUST_ACC_GL = NULL ,
          </when>
          <otherwise >
            CUST_ACC_GL = #{CUST_ACC_GL},
          </otherwise>
        </choose>
      </if>
      <if test="CUST_ACC_CIF != null" >
        <choose >
          <when test="CUST_ACC_CIF == emptyBigDecimalValue" >
            CUST_ACC_CIF = NULL ,
          </when>
          <otherwise >
            CUST_ACC_CIF = #{CUST_ACC_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="CUST_ACC_SL != null" >
        <choose >
          <when test="CUST_ACC_SL == emptyBigDecimalValue" >
            CUST_ACC_SL = NULL ,
          </when>
          <otherwise >
            CUST_ACC_SL = #{CUST_ACC_SL},
          </otherwise>
        </choose>
      </if>
      <if test="CHARGE_CODE != null" >
        <choose >
          <when test="CHARGE_CODE == emptyBigDecimalValue" >
            CHARGE_CODE = NULL ,
          </when>
          <otherwise >
            CHARGE_CODE = #{CHARGE_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="CHARGE_CURRENCY != null" >
        <choose >
          <when test="CHARGE_CURRENCY == emptyBigDecimalValue" >
            CHARGE_CURRENCY = NULL ,
          </when>
          <otherwise >
            CHARGE_CURRENCY = #{CHARGE_CURRENCY},
          </otherwise>
        </choose>
      </if>
      <if test="CHARGE_AMOUNT_FC != null" >
        <choose >
          <when test="CHARGE_AMOUNT_FC == emptyBigDecimalValue" >
            CHARGE_AMOUNT_FC = NULL ,
          </when>
          <otherwise >
            CHARGE_AMOUNT_FC = #{CHARGE_AMOUNT_FC},
          </otherwise>
        </choose>
      </if>
      <if test="CHARGE_AMOUNT_CV != null" >
        <choose >
          <when test="CHARGE_AMOUNT_CV == emptyBigDecimalValue" >
            CHARGE_AMOUNT_CV = NULL ,
          </when>
          <otherwise >
            CHARGE_AMOUNT_CV = #{CHARGE_AMOUNT_CV},
          </otherwise>
        </choose>
      </if>
      <if test="CHRG_ACC_BR != null" >
        <choose >
          <when test="CHRG_ACC_BR == emptyBigDecimalValue" >
            CHRG_ACC_BR = NULL ,
          </when>
          <otherwise >
            CHRG_ACC_BR = #{CHRG_ACC_BR},
          </otherwise>
        </choose>
      </if>
      <if test="CHRG_ACC_CY != null" >
        <choose >
          <when test="CHRG_ACC_CY == emptyBigDecimalValue" >
            CHRG_ACC_CY = NULL ,
          </when>
          <otherwise >
            CHRG_ACC_CY = #{CHRG_ACC_CY},
          </otherwise>
        </choose>
      </if>
      <if test="CHRG_ACC_GL != null" >
        <choose >
          <when test="CHRG_ACC_GL == emptyBigDecimalValue" >
            CHRG_ACC_GL = NULL ,
          </when>
          <otherwise >
            CHRG_ACC_GL = #{CHRG_ACC_GL},
          </otherwise>
        </choose>
      </if>
      <if test="CHRG_ACC_CIF != null" >
        <choose >
          <when test="CHRG_ACC_CIF == emptyBigDecimalValue" >
            CHRG_ACC_CIF = NULL ,
          </when>
          <otherwise >
            CHRG_ACC_CIF = #{CHRG_ACC_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="CHRG_ACC_SL != null" >
        <choose >
          <when test="CHRG_ACC_SL == emptyBigDecimalValue" >
            CHRG_ACC_SL = NULL ,
          </when>
          <otherwise >
            CHRG_ACC_SL = #{CHRG_ACC_SL},
          </otherwise>
        </choose>
      </if>
      <if test="REFUND_PERC != null" >
        <choose >
          <when test="REFUND_PERC == emptyBigDecimalValue" >
            REFUND_PERC = NULL ,
          </when>
          <otherwise >
            REFUND_PERC = #{REFUND_PERC},
          </otherwise>
        </choose>
      </if>
      <if test="REFUND_AMOUNT_FC != null" >
        <choose >
          <when test="REFUND_AMOUNT_FC == emptyBigDecimalValue" >
            REFUND_AMOUNT_FC = NULL ,
          </when>
          <otherwise >
            REFUND_AMOUNT_FC = #{REFUND_AMOUNT_FC},
          </otherwise>
        </choose>
      </if>
      <if test="REFUND_AMOUNT_CV != null" >
        <choose >
          <when test="REFUND_AMOUNT_CV == emptyBigDecimalValue" >
            REFUND_AMOUNT_CV = NULL ,
          </when>
          <otherwise >
            REFUND_AMOUNT_CV = #{REFUND_AMOUNT_CV},
          </otherwise>
        </choose>
      </if>
      <if test="NEW_CHARGE_AMOUNT_FC != null" >
        <choose >
          <when test="NEW_CHARGE_AMOUNT_FC == emptyBigDecimalValue" >
            NEW_CHARGE_AMOUNT_FC = NULL ,
          </when>
          <otherwise >
            NEW_CHARGE_AMOUNT_FC = #{NEW_CHARGE_AMOUNT_FC},
          </otherwise>
        </choose>
      </if>
      <if test="NEW_CHARGE_AMOUNT_CV != null" >
        <choose >
          <when test="NEW_CHARGE_AMOUNT_CV == emptyBigDecimalValue" >
            NEW_CHARGE_AMOUNT_CV = NULL ,
          </when>
          <otherwise >
            NEW_CHARGE_AMOUNT_CV = #{NEW_CHARGE_AMOUNT_CV},
          </otherwise>
        </choose>
      </if>
      <if test="ORIG_TRX_COMP_CODE != null" >
        <choose >
          <when test="ORIG_TRX_COMP_CODE == emptyBigDecimalValue" >
            ORIG_TRX_COMP_CODE = NULL ,
          </when>
          <otherwise >
            ORIG_TRX_COMP_CODE = #{ORIG_TRX_COMP_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="ORIG_TRX_BRANCH_CODE != null" >
        <choose >
          <when test="ORIG_TRX_BRANCH_CODE == emptyBigDecimalValue" >
            ORIG_TRX_BRANCH_CODE = NULL ,
          </when>
          <otherwise >
            ORIG_TRX_BRANCH_CODE = #{ORIG_TRX_BRANCH_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="ORIG_TRX_CB_IND != null" >
        ORIG_TRX_CB_IND = #{ORIG_TRX_CB_IND},
      </if>
      <if test="ORIG_TRX_TRS_TYPE != null" >
        ORIG_TRX_TRS_TYPE = #{ORIG_TRX_TRS_TYPE},
      </if>
      <if test="ORIG_TRX_CHARGE_TYPE != null" >
        ORIG_TRX_CHARGE_TYPE = #{ORIG_TRX_CHARGE_TYPE},
      </if>
      <if test="ORIG_TRX_CHARGE_CODE != null" >
        <choose >
          <when test="ORIG_TRX_CHARGE_CODE == emptyBigDecimalValue" >
            ORIG_TRX_CHARGE_CODE = NULL ,
          </when>
          <otherwise >
            ORIG_TRX_CHARGE_CODE = #{ORIG_TRX_CHARGE_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="ORIG_TRX_OP_NO != null" >
        <choose >
          <when test="ORIG_TRX_OP_NO == emptyBigDecimalValue" >
            ORIG_TRX_OP_NO = NULL ,
          </when>
          <otherwise >
            ORIG_TRX_OP_NO = #{ORIG_TRX_OP_NO},
          </otherwise>
        </choose>
      </if>
      <if test="NEW_TRX_OP_NO != null" >
        <choose >
          <when test="NEW_TRX_OP_NO == emptyBigDecimalValue" >
            NEW_TRX_OP_NO = NULL ,
          </when>
          <otherwise >
            NEW_TRX_OP_NO = #{NEW_TRX_OP_NO},
          </otherwise>
        </choose>
      </if>
      <if test="JV_NO != null" >
        <choose >
          <when test="JV_NO == emptyBigDecimalValue" >
            JV_NO = NULL ,
          </when>
          <otherwise >
            JV_NO = #{JV_NO},
          </otherwise>
        </choose>
      </if>
       <if test="EXCH_RATE != null" >
        <choose >
          <when test="EXCH_RATE == emptyBigDecimalValue" >
            EXCH_RATE = NULL ,
          </when>
          <otherwise >
            EXCH_RATE = #{EXCH_RATE},
          </otherwise>
        </choose>
      </if>
    </set>
    where COMP_CODE = #{COMP_CODE} 
      and BRANCH_CODE = #{BRANCH_CODE}
      and REFUND_CODE = #{REFUND_CODE}
      and LINE_NO = #{LINE_NO}
  </sql>
  <update id="updateCTS_CHARGES_REFUND_DET" parameterType="com.path.dbmaps.vo.CTS_CHARGES_REFUND_DETVO" >
    <include refid="sql_updateCTS_CHARGES_REFUND_DET" />
  </update>
</mapper>