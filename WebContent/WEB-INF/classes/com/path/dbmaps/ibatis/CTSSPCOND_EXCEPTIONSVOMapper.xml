<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="CTSSPCOND_EXCEPTIONS" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.CTSSPCOND_EXCEPTIONSVO" >
    <id column="BRANCH_CODE" property="BRANCH_CODE" />
    <id column="COMP_CODE" property="COMP_CODE" />
    <id column="CR_DR_FOREX" property="CR_DR_FOREX" />
    <id column="EXCEPTION_LINE_NO" property="EXCEPTION_LINE_NO" />
    <id column="SPCOND_LINE_NO" property="SPCOND_LINE_NO" />
    <result column="FROM_TIME" property="FROM_TIME" />
    <result column="TO_TIME" property="TO_TIME" />
  </resultMap>
  <sql id="Base_Column_List" >
    BRANCH_CODE, COMP_CODE, CR_DR_FOREX, EXCEPTION_LINE_NO, SPCOND_LINE_NO, FROM_TIME, 
    TO_TIME
  </sql>
  <select id="selectCTSSPCOND_EXCEPTIONS" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.CTSSPCOND_EXCEPTIONSVOKey" >
    select 
    <include refid="Base_Column_List" />
    from CTSSPCOND_EXCEPTIONS
    where BRANCH_CODE = #{BRANCH_CODE}
      and COMP_CODE = #{COMP_CODE}
      and CR_DR_FOREX = #{CR_DR_FOREX}
      and EXCEPTION_LINE_NO = #{EXCEPTION_LINE_NO}
      and SPCOND_LINE_NO = #{SPCOND_LINE_NO}
  </select>
  <delete id="deleteCTSSPCOND_EXCEPTIONS" parameterType="com.path.dbmaps.vo.CTSSPCOND_EXCEPTIONSVOKey" >
    delete from CTSSPCOND_EXCEPTIONS
    where BRANCH_CODE = #{BRANCH_CODE}
      and COMP_CODE = #{COMP_CODE}
      and CR_DR_FOREX = #{CR_DR_FOREX}
      and EXCEPTION_LINE_NO = #{EXCEPTION_LINE_NO}
      and SPCOND_LINE_NO = #{SPCOND_LINE_NO}
  </delete>
  <insert id="insertCTSSPCOND_EXCEPTIONS" parameterType="com.path.dbmaps.vo.CTSSPCOND_EXCEPTIONSVO" >
    insert into CTSSPCOND_EXCEPTIONS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        BRANCH_CODE,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="CR_DR_FOREX != null and !&quot;&quot;.equals(CR_DR_FOREX)" >
        CR_DR_FOREX,
      </if>
      <if test="EXCEPTION_LINE_NO != null and EXCEPTION_LINE_NO != emptyBigDecimalValue" >
        EXCEPTION_LINE_NO,
      </if>
      <if test="SPCOND_LINE_NO != null and SPCOND_LINE_NO != emptyBigDecimalValue" >
        SPCOND_LINE_NO,
      </if>
      <if test="FROM_TIME != null and !&quot;&quot;.equals(FROM_TIME)" >
        FROM_TIME,
      </if>
      <if test="TO_TIME != null and !&quot;&quot;.equals(TO_TIME)" >
        TO_TIME,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        #{BRANCH_CODE},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="CR_DR_FOREX != null and !&quot;&quot;.equals(CR_DR_FOREX)" >
        #{CR_DR_FOREX},
      </if>
      <if test="EXCEPTION_LINE_NO != null and EXCEPTION_LINE_NO != emptyBigDecimalValue" >
        #{EXCEPTION_LINE_NO},
      </if>
      <if test="SPCOND_LINE_NO != null and SPCOND_LINE_NO != emptyBigDecimalValue" >
        #{SPCOND_LINE_NO},
      </if>
      <if test="FROM_TIME != null and !&quot;&quot;.equals(FROM_TIME)" >
        #{FROM_TIME},
      </if>
      <if test="TO_TIME != null and !&quot;&quot;.equals(TO_TIME)">
        #{TO_TIME},
      </if>
    </trim>
  </insert>
  <sql id="sql_updateCTSSPCOND_EXCEPTIONS" >
    update CTSSPCOND_EXCEPTIONS
    <set >
      <if test="FROM_TIME != null and !&quot;&quot;.equals(FROM_TIME)">
        FROM_TIME = #{FROM_TIME},
      </if>
      <if test="TO_TIME != null and !&quot;&quot;.equals(TO_TIME)">
        TO_TIME = #{TO_TIME},
      </if>
    </set>
    where BRANCH_CODE = #{BRANCH_CODE}
      and COMP_CODE = #{COMP_CODE}
      and CR_DR_FOREX = #{CR_DR_FOREX}
      and EXCEPTION_LINE_NO = #{EXCEPTION_LINE_NO}
      and SPCOND_LINE_NO = #{SPCOND_LINE_NO}
  </sql>
  <update id="updateCTSSPCOND_EXCEPTIONS" parameterType="com.path.dbmaps.vo.CTSSPCOND_EXCEPTIONSVO" >
    <include refid="sql_updateCTSSPCOND_EXCEPTIONS" />
  </update>
</mapper>