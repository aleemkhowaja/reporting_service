<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TRS_BUY_BACK_ITEMS_DET" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.TRS_BUY_BACK_ITEMS_DETVO" >
    <id column="BRANCH_CODE" property="BRANCH_CODE" />
    <id column="COMP_CODE" property="COMP_CODE" />
    <id column="LINE_NO" property="LINE_NO" />
    <id column="TRX_NO" property="TRX_NO" />
    <result column="ITEM_CODE" property="ITEM_CODE" />
    <result column="CATEGORY_CODE" property="CATEGORY_CODE" />
    <result column="CLASS_CODE" property="CLASS_CODE" />
    <result column="PURCHASE_PARTY" property="PURCHASE_PARTY" />
    <result column="AMOUNT" property="AMOUNT" />
    <result column="CV_AMOUNT" property="CV_AMOUNT" />
    <result column="OUTSTANDING_AMOUNT" property="OUTSTANDING_AMOUNT" />
    <result column="OUTSTANDING_CV_AMOUNT" property="OUTSTANDING_CV_AMOUNT" />
    <result column="CHARGE_CODE" property="CHARGE_CODE" />
    <result column="CHARGE_AMOUNT" property="CHARGE_AMOUNT" />
    <result column="VAT_AMOUNT" property="VAT_AMOUNT" />
    <result column="TOTAL_AMOUNT" property="TOTAL_AMOUNT" />
    <result column="BUY_BACK_YN" property="BUY_BACK_YN" />
    <result column="RECOVERY_SURRENDER_BY" property="RECOVERY_SURRENDER_BY" />
    <result column="ASSET_STATUS" property="ASSET_STATUS" />
    <result column="REMARKS" property="REMARKS" />
    <result column="RECOVERY_SURRENDER_DATE" property="RECOVERY_SURRENDER_DATE" />
    <result column="PLACE_OF_RECOVERY_SURRENDER" property="PLACE_OF_RECOVERY_SURRENDER" />
    <result column="TOTAL_DEAL_OUTSTANDING" property="TOTAL_DEAL_OUTSTANDING" />
    <result column="TOTAL_DEAL_OUTSTANDING_CV" property="TOTAL_DEAL_OUTSTANDING_CV" />
  </resultMap>
  <sql id="Base_Column_List" >
    BRANCH_CODE, COMP_CODE, LINE_NO, TRX_NO, ITEM_CODE, CATEGORY_CODE, CLASS_CODE, PURCHASE_PARTY, 
    AMOUNT, CV_AMOUNT, OUTSTANDING_AMOUNT, OUTSTANDING_CV_AMOUNT, CHARGE_CODE, CHARGE_AMOUNT, 
    VAT_AMOUNT, TOTAL_AMOUNT, BUY_BACK_YN, RECOVERY_SURRENDER_BY, ASSET_STATUS, REMARKS, 
    RECOVERY_SURRENDER_DATE, PLACE_OF_RECOVERY_SURRENDER, TOTAL_DEAL_OUTSTANDING, TOTAL_DEAL_OUTSTANDING_CV
  </sql>
  <select id="selectTRS_BUY_BACK_ITEMS_DET" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.TRS_BUY_BACK_ITEMS_DETVOKey" >
    select 
    <include refid="Base_Column_List" />
    from TRS_BUY_BACK_ITEMS_DET
    where BRANCH_CODE = #{BRANCH_CODE}
      and COMP_CODE = #{COMP_CODE}
      and LINE_NO = #{LINE_NO}
      and TRX_NO = #{TRX_NO}
  </select>
  <delete id="deleteTRS_BUY_BACK_ITEMS_DET" parameterType="com.path.dbmaps.vo.TRS_BUY_BACK_ITEMS_DETVOKey" >
    delete from TRS_BUY_BACK_ITEMS_DET
    where BRANCH_CODE = #{BRANCH_CODE}
      and COMP_CODE = #{COMP_CODE}
      and LINE_NO = #{LINE_NO}
      and TRX_NO = #{TRX_NO}
  </delete>
  <insert id="insertTRS_BUY_BACK_ITEMS_DET" parameterType="com.path.dbmaps.vo.TRS_BUY_BACK_ITEMS_DETVO" >
    insert into TRS_BUY_BACK_ITEMS_DET
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        BRANCH_CODE,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="LINE_NO != null and LINE_NO != emptyBigDecimalValue" >
        LINE_NO,
      </if>
      <if test="TRX_NO != null and TRX_NO != emptyBigDecimalValue" >
        TRX_NO,
      </if>
      <if test="ITEM_CODE != null and ITEM_CODE != emptyBigDecimalValue" >
        ITEM_CODE,
      </if>
      <if test="CATEGORY_CODE != null and CATEGORY_CODE != emptyBigDecimalValue" >
        CATEGORY_CODE,
      </if>
      <if test="CLASS_CODE != null and CLASS_CODE != emptyBigDecimalValue" >
        CLASS_CODE,
      </if>
      <if test="PURCHASE_PARTY != null and PURCHASE_PARTY != emptyBigDecimalValue" >
        PURCHASE_PARTY,
      </if>
      <if test="AMOUNT != null and AMOUNT != emptyBigDecimalValue" >
        AMOUNT,
      </if>
      <if test="CV_AMOUNT != null and CV_AMOUNT != emptyBigDecimalValue" >
        CV_AMOUNT,
      </if>
      <if test="OUTSTANDING_AMOUNT != null and OUTSTANDING_AMOUNT != emptyBigDecimalValue" >
        OUTSTANDING_AMOUNT,
      </if>
      <if test="OUTSTANDING_CV_AMOUNT != null and OUTSTANDING_CV_AMOUNT != emptyBigDecimalValue" >
        OUTSTANDING_CV_AMOUNT,
      </if>
      <if test="CHARGE_CODE != null and CHARGE_CODE != emptyBigDecimalValue" >
        CHARGE_CODE,
      </if>
      <if test="CHARGE_AMOUNT != null and CHARGE_AMOUNT != emptyBigDecimalValue" >
        CHARGE_AMOUNT,
      </if>
      <if test="VAT_AMOUNT != null and VAT_AMOUNT != emptyBigDecimalValue" >
        VAT_AMOUNT,
      </if>
      <if test="TOTAL_AMOUNT != null and TOTAL_AMOUNT != emptyBigDecimalValue" >
        TOTAL_AMOUNT,
      </if>
      <if test="BUY_BACK_YN != null and !&quot;&quot;.equals(BUY_BACK_YN)" >
        BUY_BACK_YN,
      </if>
      <if test="RECOVERY_SURRENDER_BY != null and !&quot;&quot;.equals(RECOVERY_SURRENDER_BY)" >
        RECOVERY_SURRENDER_BY,
      </if>
      <if test="ASSET_STATUS != null and !&quot;&quot;.equals(ASSET_STATUS)" >
        ASSET_STATUS,
      </if>
      <if test="REMARKS != null and !&quot;&quot;.equals(REMARKS)" >
        REMARKS,
      </if>
      <if test="RECOVERY_SURRENDER_DATE != null" >
        RECOVERY_SURRENDER_DATE,
      </if>
      <if test="PLACE_OF_RECOVERY_SURRENDER != null and !&quot;&quot;.equals(PLACE_OF_RECOVERY_SURRENDER)" >
        PLACE_OF_RECOVERY_SURRENDER,
      </if>
      <if test="TOTAL_DEAL_OUTSTANDING != null and TOTAL_DEAL_OUTSTANDING != emptyBigDecimalValue" >
        TOTAL_DEAL_OUTSTANDING,
      </if>
      <if test="TOTAL_DEAL_OUTSTANDING_CV != null and TOTAL_DEAL_OUTSTANDING_CV != emptyBigDecimalValue" >
        TOTAL_DEAL_OUTSTANDING_CV,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        #{BRANCH_CODE},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="LINE_NO != null and LINE_NO != emptyBigDecimalValue" >
        #{LINE_NO},
      </if>
      <if test="TRX_NO != null and TRX_NO != emptyBigDecimalValue" >
        #{TRX_NO},
      </if>
      <if test="ITEM_CODE != null and ITEM_CODE != emptyBigDecimalValue" >
        #{ITEM_CODE},
      </if>
      <if test="CATEGORY_CODE != null and CATEGORY_CODE != emptyBigDecimalValue" >
        #{CATEGORY_CODE},
      </if>
      <if test="CLASS_CODE != null and CLASS_CODE != emptyBigDecimalValue" >
        #{CLASS_CODE},
      </if>
      <if test="PURCHASE_PARTY != null and PURCHASE_PARTY != emptyBigDecimalValue" >
        #{PURCHASE_PARTY},
      </if>
      <if test="AMOUNT != null and AMOUNT != emptyBigDecimalValue" >
        #{AMOUNT},
      </if>
      <if test="CV_AMOUNT != null and CV_AMOUNT != emptyBigDecimalValue" >
        #{CV_AMOUNT},
      </if>
      <if test="OUTSTANDING_AMOUNT != null and OUTSTANDING_AMOUNT != emptyBigDecimalValue" >
        #{OUTSTANDING_AMOUNT},
      </if>
      <if test="OUTSTANDING_CV_AMOUNT != null and OUTSTANDING_CV_AMOUNT != emptyBigDecimalValue" >
        #{OUTSTANDING_CV_AMOUNT},
      </if>
      <if test="CHARGE_CODE != null and CHARGE_CODE != emptyBigDecimalValue" >
        #{CHARGE_CODE},
      </if>
      <if test="CHARGE_AMOUNT != null and CHARGE_AMOUNT != emptyBigDecimalValue" >
        #{CHARGE_AMOUNT},
      </if>
      <if test="VAT_AMOUNT != null and VAT_AMOUNT != emptyBigDecimalValue" >
        #{VAT_AMOUNT},
      </if>
      <if test="TOTAL_AMOUNT != null and TOTAL_AMOUNT != emptyBigDecimalValue" >
        #{TOTAL_AMOUNT},
      </if>
      <if test="BUY_BACK_YN != null and !&quot;&quot;.equals(BUY_BACK_YN)" >
        #{BUY_BACK_YN},
      </if>
      <if test="RECOVERY_SURRENDER_BY != null and !&quot;&quot;.equals(RECOVERY_SURRENDER_BY)" >
        #{RECOVERY_SURRENDER_BY},
      </if>
      <if test="ASSET_STATUS != null and !&quot;&quot;.equals(ASSET_STATUS)" >
        #{ASSET_STATUS},
      </if>
      <if test="REMARKS != null and !&quot;&quot;.equals(REMARKS)" >
        #{REMARKS},
      </if>
      <if test="RECOVERY_SURRENDER_DATE != null" >
        #{RECOVERY_SURRENDER_DATE},
      </if>
      <if test="PLACE_OF_RECOVERY_SURRENDER != null and !&quot;&quot;.equals(PLACE_OF_RECOVERY_SURRENDER)" >
        #{PLACE_OF_RECOVERY_SURRENDER},
      </if>
      <if test="TOTAL_DEAL_OUTSTANDING != null and TOTAL_DEAL_OUTSTANDING != emptyBigDecimalValue" >
        #{TOTAL_DEAL_OUTSTANDING},
      </if>
      <if test="TOTAL_DEAL_OUTSTANDING_CV != null and TOTAL_DEAL_OUTSTANDING_CV != emptyBigDecimalValue" >
        #{TOTAL_DEAL_OUTSTANDING_CV},
      </if>
    </trim>
  </insert>
  <sql id="sql_updateTRS_BUY_BACK_ITEMS_DET" >
    update TRS_BUY_BACK_ITEMS_DET
    <set >
      <if test="ITEM_CODE != null" >
        <choose >
          <when test="ITEM_CODE == emptyBigDecimalValue" >
            ITEM_CODE = NULL ,
          </when>
          <otherwise >
            ITEM_CODE = #{ITEM_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="CATEGORY_CODE != null" >
        <choose >
          <when test="CATEGORY_CODE == emptyBigDecimalValue" >
            CATEGORY_CODE = NULL ,
          </when>
          <otherwise >
            CATEGORY_CODE = #{CATEGORY_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="CLASS_CODE != null" >
        <choose >
          <when test="CLASS_CODE == emptyBigDecimalValue" >
            CLASS_CODE = NULL ,
          </when>
          <otherwise >
            CLASS_CODE = #{CLASS_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="PURCHASE_PARTY != null" >
        <choose >
          <when test="PURCHASE_PARTY == emptyBigDecimalValue" >
            PURCHASE_PARTY = NULL ,
          </when>
          <otherwise >
            PURCHASE_PARTY = #{PURCHASE_PARTY},
          </otherwise>
        </choose>
      </if>
      <if test="AMOUNT != null" >
        <choose >
          <when test="AMOUNT == emptyBigDecimalValue" >
            AMOUNT = NULL ,
          </when>
          <otherwise >
            AMOUNT = #{AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="CV_AMOUNT != null" >
        <choose >
          <when test="CV_AMOUNT == emptyBigDecimalValue" >
            CV_AMOUNT = NULL ,
          </when>
          <otherwise >
            CV_AMOUNT = #{CV_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="OUTSTANDING_AMOUNT != null" >
        <choose >
          <when test="OUTSTANDING_AMOUNT == emptyBigDecimalValue" >
            OUTSTANDING_AMOUNT = NULL ,
          </when>
          <otherwise >
            OUTSTANDING_AMOUNT = #{OUTSTANDING_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="OUTSTANDING_CV_AMOUNT != null" >
        <choose >
          <when test="OUTSTANDING_CV_AMOUNT == emptyBigDecimalValue" >
            OUTSTANDING_CV_AMOUNT = NULL ,
          </when>
          <otherwise >
            OUTSTANDING_CV_AMOUNT = #{OUTSTANDING_CV_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="CHARGE_CODE != null" >
        <choose >
          <when test="CHARGE_CODE == emptyBigDecimalValue" >
            CHARGE_CODE = NULL ,
          </when>
          <otherwise >
            CHARGE_CODE = #{CHARGE_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="CHARGE_AMOUNT != null" >
        <choose >
          <when test="CHARGE_AMOUNT == emptyBigDecimalValue" >
            CHARGE_AMOUNT = NULL ,
          </when>
          <otherwise >
            CHARGE_AMOUNT = #{CHARGE_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="VAT_AMOUNT != null" >
        <choose >
          <when test="VAT_AMOUNT == emptyBigDecimalValue" >
            VAT_AMOUNT = NULL ,
          </when>
          <otherwise >
            VAT_AMOUNT = #{VAT_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="TOTAL_AMOUNT != null" >
        <choose >
          <when test="TOTAL_AMOUNT == emptyBigDecimalValue" >
            TOTAL_AMOUNT = NULL ,
          </when>
          <otherwise >
            TOTAL_AMOUNT = #{TOTAL_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="BUY_BACK_YN != null" >
        <choose >
          <when test="BUY_BACK_YN.equals(&quot;&quot;)" >
            BUY_BACK_YN = NULL ,
          </when>
          <otherwise >
            BUY_BACK_YN = #{BUY_BACK_YN},
          </otherwise>
        </choose>
      </if>
      <if test="RECOVERY_SURRENDER_BY != null" >
        <choose >
          <when test="RECOVERY_SURRENDER_BY.equals(&quot;&quot;)" >
            RECOVERY_SURRENDER_BY = NULL ,
          </when>
          <otherwise >
            RECOVERY_SURRENDER_BY = #{RECOVERY_SURRENDER_BY},
          </otherwise>
        </choose>
      </if>
      <if test="ASSET_STATUS != null" >
        <choose >
          <when test="ASSET_STATUS.equals(&quot;&quot;)" >
            ASSET_STATUS = NULL ,
          </when>
          <otherwise >
            ASSET_STATUS = #{ASSET_STATUS},
          </otherwise>
        </choose>
      </if>
      <if test="REMARKS != null" >
        <choose >
          <when test="REMARKS.equals(&quot;&quot;)" >
            REMARKS = NULL ,
          </when>
          <otherwise >
            REMARKS = #{REMARKS},
          </otherwise>
        </choose>
      </if>
      <if test="RECOVERY_SURRENDER_DATE != null" >
        RECOVERY_SURRENDER_DATE = #{RECOVERY_SURRENDER_DATE},
      </if>
      <if test="PLACE_OF_RECOVERY_SURRENDER != null" >
        <choose >
          <when test="PLACE_OF_RECOVERY_SURRENDER.equals(&quot;&quot;)" >
            PLACE_OF_RECOVERY_SURRENDER = NULL ,
          </when>
          <otherwise >
            PLACE_OF_RECOVERY_SURRENDER = #{PLACE_OF_RECOVERY_SURRENDER},
          </otherwise>
        </choose>
      </if>
      <if test="TOTAL_DEAL_OUTSTANDING != null" >
        <choose >
          <when test="TOTAL_DEAL_OUTSTANDING == emptyBigDecimalValue" >
            TOTAL_DEAL_OUTSTANDING = NULL ,
          </when>
          <otherwise >
            TOTAL_DEAL_OUTSTANDING = #{TOTAL_DEAL_OUTSTANDING},
          </otherwise>
        </choose>
      </if>
      <if test="TOTAL_DEAL_OUTSTANDING_CV != null" >
        <choose >
          <when test="TOTAL_DEAL_OUTSTANDING_CV == emptyBigDecimalValue" >
            TOTAL_DEAL_OUTSTANDING_CV = NULL ,
          </when>
          <otherwise >
            TOTAL_DEAL_OUTSTANDING_CV = #{TOTAL_DEAL_OUTSTANDING_CV},
          </otherwise>
        </choose>
      </if>
    </set>
    where BRANCH_CODE = #{BRANCH_CODE}
      and COMP_CODE = #{COMP_CODE}
      and LINE_NO = #{LINE_NO}
      and TRX_NO = #{TRX_NO}
  </sql>
  <update id="updateTRS_BUY_BACK_ITEMS_DET" parameterType="com.path.dbmaps.vo.TRS_BUY_BACK_ITEMS_DETVO" >
    <include refid="sql_updateTRS_BUY_BACK_ITEMS_DET" />
  </update>
</mapper>