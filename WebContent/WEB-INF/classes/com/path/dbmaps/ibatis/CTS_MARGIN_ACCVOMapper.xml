<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="CTS_MARGIN_ACC" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.CTS_MARGIN_ACCVO" >
    <id column="ACC_BR" property="ACC_BR" />
    <id column="ACC_CIF" property="ACC_CIF" />
    <id column="ACC_CY" property="ACC_CY" />
    <id column="ACC_GL" property="ACC_GL" />
    <id column="ACC_SL" property="ACC_SL" />
    <id column="COMP_CODE" property="COMP_CODE" />
    <id column="SEQ_NO" property="SEQ_NO" />
    <result column="MARG_ACC_BR" property="MARG_ACC_BR" />
    <result column="MARG_ACC_CY" property="MARG_ACC_CY" />
    <result column="MARG_ACC_GL" property="MARG_ACC_GL" />
    <result column="MARG_ACC_CIF" property="MARG_ACC_CIF" />
    <result column="MARGIN_ACC_SL" property="MARGIN_ACC_SL" />
    <result column="TRS_NO" property="TRS_NO" />
  </resultMap>
  <sql id="Base_Column_List" >
    ACC_BR, ACC_CIF, ACC_CY, ACC_GL, ACC_SL, COMP_CODE, SEQ_NO, MARG_ACC_BR, MARG_ACC_CY, 
    MARG_ACC_GL, MARG_ACC_CIF, MARGIN_ACC_SL, TRS_NO
  </sql>
  <select id="selectCTS_MARGIN_ACC" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.CTS_MARGIN_ACCVOKey" >
    select 
    <include refid="Base_Column_List" />
    from CTS_MARGIN_ACC
    where ACC_BR = #{ACC_BR}
      and ACC_CIF = #{ACC_CIF}
      and ACC_CY = #{ACC_CY}
      and ACC_GL = #{ACC_GL}
      and ACC_SL = #{ACC_SL}
      and COMP_CODE = #{COMP_CODE}
      and SEQ_NO = #{SEQ_NO}
  </select>
  <delete id="deleteCTS_MARGIN_ACC" parameterType="com.path.dbmaps.vo.CTS_MARGIN_ACCVOKey" >
    delete from CTS_MARGIN_ACC
    where ACC_BR = #{ACC_BR}
      and ACC_CIF = #{ACC_CIF}
      and ACC_CY = #{ACC_CY}
      and ACC_GL = #{ACC_GL}
      and ACC_SL = #{ACC_SL}
      and COMP_CODE = #{COMP_CODE}
      and SEQ_NO = #{SEQ_NO}
  </delete>
  <insert id="insertCTS_MARGIN_ACC" parameterType="com.path.dbmaps.vo.CTS_MARGIN_ACCVO" >
    insert into CTS_MARGIN_ACC
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ACC_BR != null and ACC_BR != emptyBigDecimalValue" >
        ACC_BR,
      </if>
      <if test="ACC_CIF != null and ACC_CIF != emptyBigDecimalValue" >
        ACC_CIF,
      </if>
      <if test="ACC_CY != null and ACC_CY != emptyBigDecimalValue" >
        ACC_CY,
      </if>
      <if test="ACC_GL != null and ACC_GL != emptyBigDecimalValue" >
        ACC_GL,
      </if>
      <if test="ACC_SL != null and ACC_SL != emptyBigDecimalValue" >
        ACC_SL,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="SEQ_NO != null and SEQ_NO != emptyBigDecimalValue" >
        SEQ_NO,
      </if>
      <if test="MARG_ACC_BR != null and MARG_ACC_BR != emptyBigDecimalValue" >
        MARG_ACC_BR,
      </if>
      <if test="MARG_ACC_CY != null and MARG_ACC_CY != emptyBigDecimalValue" >
        MARG_ACC_CY,
      </if>
      <if test="MARG_ACC_GL != null and MARG_ACC_GL != emptyBigDecimalValue" >
        MARG_ACC_GL,
      </if>
      <if test="MARG_ACC_CIF != null and MARG_ACC_CIF != emptyBigDecimalValue" >
        MARG_ACC_CIF,
      </if>
      <if test="MARGIN_ACC_SL != null and MARGIN_ACC_SL != emptyBigDecimalValue" >
        MARGIN_ACC_SL,
      </if>
      <if test="TRS_NO != null and TRS_NO != emptyBigDecimalValue" >
        TRS_NO,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ACC_BR != null and ACC_BR != emptyBigDecimalValue" >
        #{ACC_BR},
      </if>
      <if test="ACC_CIF != null and ACC_CIF != emptyBigDecimalValue" >
        #{ACC_CIF},
      </if>
      <if test="ACC_CY != null and ACC_CY != emptyBigDecimalValue" >
        #{ACC_CY},
      </if>
      <if test="ACC_GL != null and ACC_GL != emptyBigDecimalValue" >
        #{ACC_GL},
      </if>
      <if test="ACC_SL != null and ACC_SL != emptyBigDecimalValue" >
        #{ACC_SL},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="SEQ_NO != null and SEQ_NO != emptyBigDecimalValue" >
        #{SEQ_NO},
      </if>
      <if test="MARG_ACC_BR != null and MARG_ACC_BR != emptyBigDecimalValue" >
        #{MARG_ACC_BR},
      </if>
      <if test="MARG_ACC_CY != null and MARG_ACC_CY != emptyBigDecimalValue" >
        #{MARG_ACC_CY},
      </if>
      <if test="MARG_ACC_GL != null and MARG_ACC_GL != emptyBigDecimalValue" >
        #{MARG_ACC_GL},
      </if>
      <if test="MARG_ACC_CIF != null and MARG_ACC_CIF != emptyBigDecimalValue" >
        #{MARG_ACC_CIF},
      </if>
      <if test="MARGIN_ACC_SL != null and MARGIN_ACC_SL != emptyBigDecimalValue" >
        #{MARGIN_ACC_SL},
      </if>
      <if test="TRS_NO != null and TRS_NO != emptyBigDecimalValue" >
        #{TRS_NO},
      </if>
    </trim>
  </insert>
  <sql id="sql_updateCTS_MARGIN_ACC" >
    update CTS_MARGIN_ACC
    <set >
      <if test="MARG_ACC_BR != null" >
        <choose >
          <when test="MARG_ACC_BR == emptyBigDecimalValue" >
            MARG_ACC_BR = NULL ,
          </when>
          <otherwise >
            MARG_ACC_BR = #{MARG_ACC_BR},
          </otherwise>
        </choose>
      </if>
      <if test="MARG_ACC_CY != null" >
        <choose >
          <when test="MARG_ACC_CY == emptyBigDecimalValue" >
            MARG_ACC_CY = NULL ,
          </when>
          <otherwise >
            MARG_ACC_CY = #{MARG_ACC_CY},
          </otherwise>
        </choose>
      </if>
      <if test="MARG_ACC_GL != null" >
        <choose >
          <when test="MARG_ACC_GL == emptyBigDecimalValue" >
            MARG_ACC_GL = NULL ,
          </when>
          <otherwise >
            MARG_ACC_GL = #{MARG_ACC_GL},
          </otherwise>
        </choose>
      </if>
      <if test="MARG_ACC_CIF != null" >
        <choose >
          <when test="MARG_ACC_CIF == emptyBigDecimalValue" >
            MARG_ACC_CIF = NULL ,
          </when>
          <otherwise >
            MARG_ACC_CIF = #{MARG_ACC_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="MARGIN_ACC_SL != null" >
        <choose >
          <when test="MARGIN_ACC_SL == emptyBigDecimalValue" >
            MARGIN_ACC_SL = NULL ,
          </when>
          <otherwise >
            MARGIN_ACC_SL = #{MARGIN_ACC_SL},
          </otherwise>
        </choose>
      </if>
      <if test="TRS_NO != null" >
        <choose >
          <when test="TRS_NO == emptyBigDecimalValue" >
            TRS_NO = NULL ,
          </when>
          <otherwise >
            TRS_NO = #{TRS_NO},
          </otherwise>
        </choose>
      </if>
    </set>
    where ACC_BR = #{ACC_BR}
      and ACC_CIF = #{ACC_CIF}
      and ACC_CY = #{ACC_CY}
      and ACC_GL = #{ACC_GL}
      and ACC_SL = #{ACC_SL}
      and COMP_CODE = #{COMP_CODE}
      and SEQ_NO = #{SEQ_NO}
  </sql>
  <update id="updateCTS_MARGIN_ACC" parameterType="com.path.dbmaps.vo.CTS_MARGIN_ACCVO" >
    <include refid="sql_updateCTS_MARGIN_ACC" />
  </update>
</mapper>