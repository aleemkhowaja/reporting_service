<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TFSTRXCHARGES" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.TFSTRXCHARGESVO" >
    <id column="BRANCH" property="BRANCH" />
    <id column="COMP_CODE" property="COMP_CODE" />
    <id column="DOC_TYPE" property="DOC_TYPE" />
    <id column="TRX_LINE_NBR" property="TRX_LINE_NBR" />
    <id column="TRX_NBR" property="TRX_NBR" />
    <id column="TRX_TYPE" property="TRX_TYPE" />
    <result column="LC_YEAR" property="LC_YEAR" />
    <result column="DOC_NBR" property="DOC_NBR" />
    <result column="CHARGE" property="CHARGE" />
    <result column="CHARGE_TYPE" property="CHARGE_TYPE" />
    <result column="FLAT_AMOUNT" property="FLAT_AMOUNT" />
    <result column="CR_ACC_GL" property="CR_ACC_GL" />
    <result column="CR_ACC_CIF" property="CR_ACC_CIF" />
    <result column="CR_ACC_SL" property="CR_ACC_SL" />
    <result column="TFSTRX_NBR" property="TFSTRX_NBR" />
    <result column="BORN_BY_APPLICANT" property="BORN_BY_APPLICANT" />
    <result column="DR_ACC_GL" property="DR_ACC_GL" />
    <result column="DR_ACC_CIF" property="DR_ACC_CIF" />
    <result column="DR_ACC_SL" property="DR_ACC_SL" />
    <result column="DR_ACC_CY" property="DR_ACC_CY" />
    <result column="PERCENTAGE" property="PERCENTAGE" />
    <result column="DR_ACC_BR" property="DR_ACC_BR" />
    <result column="CH_FROM_TYPE" property="CH_FROM_TYPE" />
    <result column="ADD_LINE_NO" property="ADD_LINE_NO" />
    <result column="FC_DR_AMOUNT" property="FC_DR_AMOUNT" />
    <result column="CV_DR_AMOUNT" property="CV_DR_AMOUNT" />
    <result column="EXCH_DR_RATE" property="EXCH_DR_RATE" />
    <result column="ROUNDING" property="ROUNDING" />
    <result column="ROUNDING_POINT" property="ROUNDING_POINT" />
    <result column="COMMISSION_GL" property="COMMISSION_GL" />
    <result column="COMMISSION_CIF" property="COMMISSION_CIF" />
    <result column="COMMISSION_SL" property="COMMISSION_SL" />
    <result column="PASS_ACCRUAL" property="PASS_ACCRUAL" />
    <result column="FC_IN_LC_CY" property="FC_IN_LC_CY" />
    <result column="CROSS_RATE" property="CROSS_RATE" />
    <result column="CROSS_MULT_DIV" property="CROSS_MULT_DIV" />
    <result column="LC_CY" property="LC_CY" />
    <result column="CR_ACC_BR" property="CR_ACC_BR" />
    <result column="DEFAULT_LOGGED_CR_BR" property="DEFAULT_LOGGED_CR_BR" />
    <result column="OLD_PERCENTAGE" property="OLD_PERCENTAGE" />
    <result column="OVERDRAWN_ACC" property="OVERDRAWN_ACC" />
    <result column="CR_ACC_CY" property="CR_ACC_CY" />
    <result column="DIFFERENT_CY_CHARGE" property="DIFFERENT_CY_CHARGE" />
    <result column="VAT_CODE" property="VAT_CODE" />
    <result column="FREQUENTLY_CHARGE" property="FREQUENTLY_CHARGE" />
    <result column="FREQUENTLY_CHARGE_POSTED" property="FREQUENTLY_CHARGE_POSTED" />
    <result column="FREQUENTLY_CHARGE_POSTED_DT" property="FREQUENTLY_CHARGE_POSTED_DT" />
    <result column="DOC_SELL_RATE" property="DOC_SELL_RATE" />
    <result column="APPLY_DAILY_PERCENT" property="APPLY_DAILY_PERCENT" />
    <result column="DELETE_CHARGE" property="DELETE_CHARGE" />
    <result column="PROTECT_CHARGE" property="PROTECT_CHARGE" />
    <result column="AMEND_CV_DR_AMOUNT" property="AMEND_CV_DR_AMOUNT" />
    <result column="AMEND_FC_DR_AMOUNT" property="AMEND_FC_DR_AMOUNT" />
    <result column="AMEND_FLAT_AMOUNT" property="AMEND_FLAT_AMOUNT" />
    <result column="AMEND_PERCENTAGE" property="AMEND_PERCENTAGE" />
    <result column="VAT_PERCENTAGE" property="VAT_PERCENTAGE" />
    <result column="VAT_FC_AMOUNT" property="VAT_FC_AMOUNT" />
    <result column="VAT_CY_RATE" property="VAT_CY_RATE" />
    <result column="VAT_CV_AMOUNT" property="VAT_CV_AMOUNT" />
    <result column="VAT_ACC_BR" property="VAT_ACC_BR" />
    <result column="VAT_ACC_CY" property="VAT_ACC_CY" />
    <result column="VAT_ACC_GL" property="VAT_ACC_GL" />
    <result column="VAT_ACC_CIF" property="VAT_ACC_CIF" />
    <result column="VAT_ACC_SL" property="VAT_ACC_SL" />
    <result column="CHARGES_BY_TIERS" property="CHARGES_BY_TIERS" />
    <result column="CHARGE_CV_AMOUNT" property="CHARGE_CV_AMOUNT" />
    <result column="CHARGE_FC_AMOUNT" property="CHARGE_FC_AMOUNT" />
    <result column="CLOSED_SUSP_CV_AMOUNT" property="CLOSED_SUSP_CV_AMOUNT" />
    <result column="CLOSED_SUSP_FC_AMOUNT" property="CLOSED_SUSP_FC_AMOUNT" />
    <result column="SUSPENSE_CHARGE_BR" property="SUSPENSE_CHARGE_BR" />
    <result column="SUSPENSE_CHARGE_CIF" property="SUSPENSE_CHARGE_CIF" />
    <result column="SUSPENSE_CHARGE_CY" property="SUSPENSE_CHARGE_CY" />
    <result column="SUSPENSE_CHARGE_GL" property="SUSPENSE_CHARGE_GL" />
    <result column="SUSPENSE_CHARGE_SL" property="SUSPENSE_CHARGE_SL" />
    <result column="AMEND_IND" property="AMEND_IND" />
    <result column="ALLOW_MODIFY_CHARGES" property="ALLOW_MODIFY_CHARGES" />
    <result column="HOF_TRS_NO" property="HOF_TRS_NO" />
    <result column="OVERDRAWN_VAT" property="OVERDRAWN_VAT" />
    <result column="VAT_SUSPENSE_CV" property="VAT_SUSPENSE_CV" />
    <result column="VAT_SUSPENSE_FC" property="VAT_SUSPENSE_FC" />
    <result column="CV_DR_NON_PROV_AMOUNT" 	property="CV_DR_NON_PROV_AMOUNT" />
    <result column="FC_DR_NON_PROV_AMOUNT" 	property="FC_DR_NON_PROV_AMOUNT" />
    <result column="NON_PROV_AMT_CHARGE" 	property="NON_PROV_AMT_CHARGE" />
    <result column="PROV_AMT_CHARGE" 		property="PROV_AMT_CHARGE" />
    <result column="VAT_CV_PROV_AMOUNT" 	property="VAT_CV_PROV_AMOUNT" />
    <result column="AMEND_PROV_CV_DR_AMOUNT" 	property="AMEND_PROV_CV_DR_AMOUNT" />
    <result column="AMEND_PROV_FC_DR_AMOUNT" 	property="AMEND_PROV_FC_DR_AMOUNT" />
    <result column="AMEND_PROV_AMT_CHARGE" 	property="AMEND_PROV_AMT_CHARGE" />
    <result column="AMEND_NON_PROV_AMT_CHARGE" 	property="AMEND_NON_PROV_AMT_CHARGE" />
  </resultMap>
  <sql id="Base_Column_List" >
    BRANCH, COMP_CODE, DOC_TYPE, TRX_LINE_NBR, TRX_NBR, TRX_TYPE, LC_YEAR, DOC_NBR, CHARGE, 
    CHARGE_TYPE, FLAT_AMOUNT, CR_ACC_GL, CR_ACC_CIF, CR_ACC_SL, TFSTRX_NBR, BORN_BY_APPLICANT, 
    DR_ACC_GL, DR_ACC_CIF, DR_ACC_SL, DR_ACC_CY, PERCENTAGE, DR_ACC_BR, CH_FROM_TYPE, 
    ADD_LINE_NO, FC_DR_AMOUNT, CV_DR_AMOUNT, EXCH_DR_RATE, ROUNDING, ROUNDING_POINT, 
    COMMISSION_GL, COMMISSION_CIF, COMMISSION_SL, PASS_ACCRUAL, FC_IN_LC_CY, CROSS_RATE, 
    CROSS_MULT_DIV, LC_CY, CR_ACC_BR, DEFAULT_LOGGED_CR_BR, OLD_PERCENTAGE, OVERDRAWN_ACC, 
    CR_ACC_CY, DIFFERENT_CY_CHARGE, VAT_CODE, FREQUENTLY_CHARGE, FREQUENTLY_CHARGE_POSTED, 
    FREQUENTLY_CHARGE_POSTED_DT, DOC_SELL_RATE, APPLY_DAILY_PERCENT, DELETE_CHARGE, PROTECT_CHARGE, 
    AMEND_CV_DR_AMOUNT, AMEND_FC_DR_AMOUNT, AMEND_FLAT_AMOUNT, AMEND_PERCENTAGE, VAT_PERCENTAGE, 
    VAT_FC_AMOUNT, VAT_CY_RATE, VAT_CV_AMOUNT, VAT_ACC_BR, VAT_ACC_CY, VAT_ACC_GL, VAT_ACC_CIF, 
    VAT_ACC_SL, CHARGES_BY_TIERS, CHARGE_CV_AMOUNT, CHARGE_FC_AMOUNT, CLOSED_SUSP_CV_AMOUNT, 
    CLOSED_SUSP_FC_AMOUNT, SUSPENSE_CHARGE_BR, SUSPENSE_CHARGE_CIF, SUSPENSE_CHARGE_CY, 
    SUSPENSE_CHARGE_GL, SUSPENSE_CHARGE_SL, AMEND_IND, ALLOW_MODIFY_CHARGES, HOF_TRS_NO, 
    OVERDRAWN_VAT, VAT_SUSPENSE_CV, VAT_SUSPENSE_FC, CV_DR_NON_PROV_AMOUNT,
	FC_DR_NON_PROV_AMOUNT, NON_PROV_AMT_CHARGE, PROV_AMT_CHARGE, VAT_CV_PROV_AMOUNT,
	VAT_FC_PROV_AMOUNT, AMEND_PROV_CV_DR_AMOUNT, AMEND_PROV_FC_DR_AMOUNT, AMEND_PROV_AMT_CHARGE,
	AMEND_NON_PROV_AMT_CHARGE
  </sql>
  <select id="selectTFSTRXCHARGES" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.TFSTRXCHARGESVO" >
    select 
    <include refid="Base_Column_List" />
    from TFSTRXCHARGES
    where BRANCH = #{BRANCH}
      and COMP_CODE = #{COMP_CODE}
      and DOC_TYPE = #{DOC_TYPE}
      and TRX_LINE_NBR = #{TRX_LINE_NBR}
      and TRX_NBR = #{TRX_NBR}
      and TRX_TYPE = #{TRX_TYPE}
  </select>
  <delete id="deleteTFSTRXCHARGES" parameterType="com.path.dbmaps.vo.TFSTRXCHARGESVO" >
    delete from TFSTRXCHARGES
    where BRANCH = #{BRANCH}
      and COMP_CODE = #{COMP_CODE}
      and DOC_TYPE = #{DOC_TYPE}
      and TRX_LINE_NBR = #{TRX_LINE_NBR}
      and TRX_NBR = #{TRX_NBR}
      and TRX_TYPE = #{TRX_TYPE}
  </delete>
  <insert id="insertTFSTRXCHARGES" parameterType="com.path.dbmaps.vo.TFSTRXCHARGESVO" >
    insert into TFSTRXCHARGES
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="BRANCH != null and BRANCH != emptyBigDecimalValue" >
        BRANCH,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="DOC_TYPE != null" >
        DOC_TYPE,
      </if>
      <if test="TRX_LINE_NBR != null and TRX_LINE_NBR != emptyBigDecimalValue" >
        TRX_LINE_NBR,
      </if>
      <if test="TRX_NBR != null and TRX_NBR != emptyBigDecimalValue" >
        TRX_NBR,
      </if>
      <if test="TRX_TYPE != null and TRX_TYPE != emptyBigDecimalValue" >
        TRX_TYPE,
      </if>
      <if test="LC_YEAR != null and LC_YEAR != emptyBigDecimalValue" >
        LC_YEAR,
      </if>
      <if test="DOC_NBR != null and DOC_NBR != emptyBigDecimalValue" >
        DOC_NBR,
      </if>
      <if test="CHARGE != null and CHARGE != emptyBigDecimalValue" >
        CHARGE,
      </if>
      <if test="CHARGE_TYPE != null" >
        CHARGE_TYPE,
      </if>
      <if test="FLAT_AMOUNT != null and FLAT_AMOUNT != emptyBigDecimalValue" >
        FLAT_AMOUNT,
      </if>
      <if test="CR_ACC_GL != null and CR_ACC_GL != emptyBigDecimalValue" >
        CR_ACC_GL,
      </if>
      <if test="CR_ACC_CIF != null and CR_ACC_CIF != emptyBigDecimalValue" >
        CR_ACC_CIF,
      </if>
      <if test="CR_ACC_SL != null and CR_ACC_SL != emptyBigDecimalValue" >
        CR_ACC_SL,
      </if>
      <if test="TFSTRX_NBR != null and TFSTRX_NBR != emptyBigDecimalValue" >
        TFSTRX_NBR,
      </if>
      <if test="BORN_BY_APPLICANT != null and BORN_BY_APPLICANT != emptyBigDecimalValue" >
        BORN_BY_APPLICANT,
      </if>
      <if test="DR_ACC_GL != null and DR_ACC_GL != emptyBigDecimalValue" >
        DR_ACC_GL,
      </if>
      <if test="DR_ACC_CIF != null and DR_ACC_CIF != emptyBigDecimalValue" >
        DR_ACC_CIF,
      </if>
      <if test="DR_ACC_SL != null and DR_ACC_SL != emptyBigDecimalValue" >
        DR_ACC_SL,
      </if>
      <if test="DR_ACC_CY != null and DR_ACC_CY != emptyBigDecimalValue" >
        DR_ACC_CY,
      </if>
      <if test="PERCENTAGE != null and PERCENTAGE != emptyBigDecimalValue" >
        PERCENTAGE,
      </if>
      <if test="DR_ACC_BR != null and DR_ACC_BR != emptyBigDecimalValue" >
        DR_ACC_BR,
      </if>
      <if test="CH_FROM_TYPE != null" >
        CH_FROM_TYPE,
      </if>
      <if test="ADD_LINE_NO != null and ADD_LINE_NO != emptyBigDecimalValue" >
        ADD_LINE_NO,
      </if>
      <if test="FC_DR_AMOUNT != null and FC_DR_AMOUNT != emptyBigDecimalValue" >
        FC_DR_AMOUNT,
      </if>
      <if test="CV_DR_AMOUNT != null and CV_DR_AMOUNT != emptyBigDecimalValue" >
        CV_DR_AMOUNT,
      </if>
      <if test="EXCH_DR_RATE != null and EXCH_DR_RATE != emptyBigDecimalValue" >
        EXCH_DR_RATE,
      </if>
      <if test="ROUNDING != null" >
        ROUNDING,
      </if>
      <if test="ROUNDING_POINT != null and ROUNDING_POINT != emptyBigDecimalValue" >
        ROUNDING_POINT,
      </if>
      <if test="COMMISSION_GL != null and COMMISSION_GL != emptyBigDecimalValue" >
        COMMISSION_GL,
      </if>
      <if test="COMMISSION_CIF != null and COMMISSION_CIF != emptyBigDecimalValue" >
        COMMISSION_CIF,
      </if>
      <if test="COMMISSION_SL != null and COMMISSION_SL != emptyBigDecimalValue" >
        COMMISSION_SL,
      </if>
      <if test="PASS_ACCRUAL != null" >
        PASS_ACCRUAL,
      </if>
      <if test="FC_IN_LC_CY != null and FC_IN_LC_CY != emptyBigDecimalValue" >
        FC_IN_LC_CY,
      </if>
      <if test="CROSS_RATE != null and CROSS_RATE != emptyBigDecimalValue" >
        CROSS_RATE,
      </if>
      <if test="CROSS_MULT_DIV != null" >
        CROSS_MULT_DIV,
      </if>
      <if test="LC_CY != null and LC_CY != emptyBigDecimalValue" >
        LC_CY,
      </if>
      <if test="CR_ACC_BR != null and CR_ACC_BR != emptyBigDecimalValue" >
        CR_ACC_BR,
      </if>
      <if test="DEFAULT_LOGGED_CR_BR != null" >
        DEFAULT_LOGGED_CR_BR,
      </if>
      <if test="OLD_PERCENTAGE != null and OLD_PERCENTAGE != emptyBigDecimalValue" >
        OLD_PERCENTAGE,
      </if>
      <if test="OVERDRAWN_ACC != null" >
        OVERDRAWN_ACC,
      </if>
      <if test="CR_ACC_CY != null and CR_ACC_CY != emptyBigDecimalValue" >
        CR_ACC_CY,
      </if>
      <if test="DIFFERENT_CY_CHARGE != null" >
        DIFFERENT_CY_CHARGE,
      </if>
      <if test="VAT_CODE != null and VAT_CODE != emptyBigDecimalValue" >
        VAT_CODE,
      </if>
      <if test="FREQUENTLY_CHARGE != null" >
        FREQUENTLY_CHARGE,
      </if>
      <if test="FREQUENTLY_CHARGE_POSTED != null" >
        FREQUENTLY_CHARGE_POSTED,
      </if>
      <if test="FREQUENTLY_CHARGE_POSTED_DT != null" >
        FREQUENTLY_CHARGE_POSTED_DT,
      </if>
      <if test="DOC_SELL_RATE != null and DOC_SELL_RATE != emptyBigDecimalValue" >
        DOC_SELL_RATE,
      </if>
      <if test="APPLY_DAILY_PERCENT != null" >
        APPLY_DAILY_PERCENT,
      </if>
      <if test="DELETE_CHARGE != null" >
        DELETE_CHARGE,
      </if>
      <if test="PROTECT_CHARGE != null" >
        PROTECT_CHARGE,
      </if>
      <if test="AMEND_CV_DR_AMOUNT != null and AMEND_CV_DR_AMOUNT != emptyBigDecimalValue" >
        AMEND_CV_DR_AMOUNT,
      </if>
      <if test="AMEND_FC_DR_AMOUNT != null and AMEND_FC_DR_AMOUNT != emptyBigDecimalValue" >
        AMEND_FC_DR_AMOUNT,
      </if>
      <if test="AMEND_FLAT_AMOUNT != null and AMEND_FLAT_AMOUNT != emptyBigDecimalValue" >
        AMEND_FLAT_AMOUNT,
      </if>
      <if test="AMEND_PERCENTAGE != null and AMEND_PERCENTAGE != emptyBigDecimalValue" >
        AMEND_PERCENTAGE,
      </if>
      <if test="VAT_PERCENTAGE != null and VAT_PERCENTAGE != emptyBigDecimalValue" >
        VAT_PERCENTAGE,
      </if>
      <if test="VAT_FC_AMOUNT != null and VAT_FC_AMOUNT != emptyBigDecimalValue" >
        VAT_FC_AMOUNT,
      </if>
      <if test="VAT_CY_RATE != null and VAT_CY_RATE != emptyBigDecimalValue" >
        VAT_CY_RATE,
      </if>
      <if test="VAT_CV_AMOUNT != null and VAT_CV_AMOUNT != emptyBigDecimalValue" >
        VAT_CV_AMOUNT,
      </if>
      <if test="VAT_ACC_BR != null and VAT_ACC_BR != emptyBigDecimalValue" >
        VAT_ACC_BR,
      </if>
      <if test="VAT_ACC_CY != null and VAT_ACC_CY != emptyBigDecimalValue" >
        VAT_ACC_CY,
      </if>
      <if test="VAT_ACC_GL != null and VAT_ACC_GL != emptyBigDecimalValue" >
        VAT_ACC_GL,
      </if>
      <if test="VAT_ACC_CIF != null and VAT_ACC_CIF != emptyBigDecimalValue" >
        VAT_ACC_CIF,
      </if>
      <if test="VAT_ACC_SL != null and VAT_ACC_SL != emptyBigDecimalValue" >
        VAT_ACC_SL,
      </if>
      <if test="CHARGES_BY_TIERS != null" >
        CHARGES_BY_TIERS,
      </if>
      <if test="CHARGE_CV_AMOUNT != null and CHARGE_CV_AMOUNT != emptyBigDecimalValue" >
        CHARGE_CV_AMOUNT,
      </if>
      <if test="CHARGE_FC_AMOUNT != null and CHARGE_FC_AMOUNT != emptyBigDecimalValue" >
        CHARGE_FC_AMOUNT,
      </if>
      <if test="CLOSED_SUSP_CV_AMOUNT != null and CLOSED_SUSP_CV_AMOUNT != emptyBigDecimalValue" >
        CLOSED_SUSP_CV_AMOUNT,
      </if>
      <if test="CLOSED_SUSP_FC_AMOUNT != null and CLOSED_SUSP_FC_AMOUNT != emptyBigDecimalValue" >
        CLOSED_SUSP_FC_AMOUNT,
      </if>
      <if test="SUSPENSE_CHARGE_BR != null and SUSPENSE_CHARGE_BR != emptyBigDecimalValue" >
        SUSPENSE_CHARGE_BR,
      </if>
      <if test="SUSPENSE_CHARGE_CIF != null and SUSPENSE_CHARGE_CIF != emptyBigDecimalValue" >
        SUSPENSE_CHARGE_CIF,
      </if>
      <if test="SUSPENSE_CHARGE_CY != null and SUSPENSE_CHARGE_CY != emptyBigDecimalValue" >
        SUSPENSE_CHARGE_CY,
      </if>
      <if test="SUSPENSE_CHARGE_GL != null and SUSPENSE_CHARGE_GL != emptyBigDecimalValue" >
        SUSPENSE_CHARGE_GL,
      </if>
      <if test="SUSPENSE_CHARGE_SL != null and SUSPENSE_CHARGE_SL != emptyBigDecimalValue" >
        SUSPENSE_CHARGE_SL,
      </if>
      <if test="AMEND_IND != null" >
        AMEND_IND,
      </if>
      <if test="ALLOW_MODIFY_CHARGES != null" >
        ALLOW_MODIFY_CHARGES,
      </if>
      <if test="HOF_TRS_NO != null and HOF_TRS_NO != emptyBigDecimalValue" >
        HOF_TRS_NO,
      </if>
      <if test="OVERDRAWN_VAT != null" >
        OVERDRAWN_VAT,
      </if>
      <if test="VAT_SUSPENSE_CV != null and VAT_SUSPENSE_CV != emptyBigDecimalValue" >
        VAT_SUSPENSE_CV,
      </if>
      <if test="VAT_SUSPENSE_FC != null and VAT_SUSPENSE_FC != emptyBigDecimalValue" >
        VAT_SUSPENSE_FC,
      </if>
      <if test="CV_DR_NON_PROV_AMOUNT != null and CV_DR_NON_PROV_AMOUNT != emptyBigDecimalValue" >
        CV_DR_NON_PROV_AMOUNT,
      </if>
      <if test="FC_DR_NON_PROV_AMOUNT != null and FC_DR_NON_PROV_AMOUNT != emptyBigDecimalValue" >
        FC_DR_NON_PROV_AMOUNT,
      </if>
      <if test="NON_PROV_AMT_CHARGE != null and NON_PROV_AMT_CHARGE != emptyBigDecimalValue" >
        NON_PROV_AMT_CHARGE,
      </if>
      <if test="PROV_AMT_CHARGE != null and PROV_AMT_CHARGE != emptyBigDecimalValue" >
        PROV_AMT_CHARGE,
      </if>
      <if test="VAT_CV_PROV_AMOUNT != null and VAT_CV_PROV_AMOUNT != emptyBigDecimalValue" >
        VAT_CV_PROV_AMOUNT,
      </if>
      <if test="VAT_FC_PROV_AMOUNT != null and VAT_FC_PROV_AMOUNT != emptyBigDecimalValue" >
        VAT_FC_PROV_AMOUNT,
      </if>
      <if test="AMEND_PROV_CV_DR_AMOUNT != null and AMEND_PROV_CV_DR_AMOUNT != emptyBigDecimalValue" >
        AMEND_PROV_CV_DR_AMOUNT,
      </if>
      <if test="AMEND_PROV_FC_DR_AMOUNT != null and AMEND_PROV_FC_DR_AMOUNT != emptyBigDecimalValue" >
        AMEND_PROV_FC_DR_AMOUNT,
      </if>
      <if test="AMEND_PROV_AMT_CHARGE != null and AMEND_PROV_AMT_CHARGE != emptyBigDecimalValue" >
        AMEND_PROV_AMT_CHARGE,
      </if>
      <if test="AMEND_NON_PROV_AMT_CHARGE != null and AMEND_NON_PROV_AMT_CHARGE != emptyBigDecimalValue" >
        AMEND_NON_PROV_AMT_CHARGE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="BRANCH != null and BRANCH != emptyBigDecimalValue" >
        #{BRANCH},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="DOC_TYPE != null" >
        #{DOC_TYPE},
      </if>
      <if test="TRX_LINE_NBR != null and TRX_LINE_NBR != emptyBigDecimalValue" >
        #{TRX_LINE_NBR},
      </if>
      <if test="TRX_NBR != null and TRX_NBR != emptyBigDecimalValue" >
        #{TRX_NBR},
      </if>
      <if test="TRX_TYPE != null and TRX_TYPE != emptyBigDecimalValue" >
        #{TRX_TYPE},
      </if>
      <if test="LC_YEAR != null and LC_YEAR != emptyBigDecimalValue" >
        #{LC_YEAR},
      </if>
      <if test="DOC_NBR != null and DOC_NBR != emptyBigDecimalValue" >
        #{DOC_NBR},
      </if>
      <if test="CHARGE != null and CHARGE != emptyBigDecimalValue" >
        #{CHARGE},
      </if>
      <if test="CHARGE_TYPE != null" >
        #{CHARGE_TYPE},
      </if>
      <if test="FLAT_AMOUNT != null and FLAT_AMOUNT != emptyBigDecimalValue" >
        #{FLAT_AMOUNT},
      </if>
      <if test="CR_ACC_GL != null and CR_ACC_GL != emptyBigDecimalValue" >
        #{CR_ACC_GL},
      </if>
      <if test="CR_ACC_CIF != null and CR_ACC_CIF != emptyBigDecimalValue" >
        #{CR_ACC_CIF},
      </if>
      <if test="CR_ACC_SL != null and CR_ACC_SL != emptyBigDecimalValue" >
        #{CR_ACC_SL},
      </if>
      <if test="TFSTRX_NBR != null and TFSTRX_NBR != emptyBigDecimalValue" >
        #{TFSTRX_NBR},
      </if>
      <if test="BORN_BY_APPLICANT != null and BORN_BY_APPLICANT != emptyBigDecimalValue" >
        #{BORN_BY_APPLICANT},
      </if>
      <if test="DR_ACC_GL != null and DR_ACC_GL != emptyBigDecimalValue" >
        #{DR_ACC_GL},
      </if>
      <if test="DR_ACC_CIF != null and DR_ACC_CIF != emptyBigDecimalValue" >
        #{DR_ACC_CIF},
      </if>
      <if test="DR_ACC_SL != null and DR_ACC_SL != emptyBigDecimalValue" >
        #{DR_ACC_SL},
      </if>
      <if test="DR_ACC_CY != null and DR_ACC_CY != emptyBigDecimalValue" >
        #{DR_ACC_CY},
      </if>
      <if test="PERCENTAGE != null and PERCENTAGE != emptyBigDecimalValue" >
        #{PERCENTAGE},
      </if>
      <if test="DR_ACC_BR != null and DR_ACC_BR != emptyBigDecimalValue" >
        #{DR_ACC_BR},
      </if>
      <if test="CH_FROM_TYPE != null" >
        #{CH_FROM_TYPE},
      </if>
      <if test="ADD_LINE_NO != null and ADD_LINE_NO != emptyBigDecimalValue" >
        #{ADD_LINE_NO},
      </if>
      <if test="FC_DR_AMOUNT != null and FC_DR_AMOUNT != emptyBigDecimalValue" >
        #{FC_DR_AMOUNT},
      </if>
      <if test="CV_DR_AMOUNT != null and CV_DR_AMOUNT != emptyBigDecimalValue" >
        #{CV_DR_AMOUNT},
      </if>
      <if test="EXCH_DR_RATE != null and EXCH_DR_RATE != emptyBigDecimalValue" >
        #{EXCH_DR_RATE},
      </if>
      <if test="ROUNDING != null" >
        #{ROUNDING},
      </if>
      <if test="ROUNDING_POINT != null and ROUNDING_POINT != emptyBigDecimalValue" >
        #{ROUNDING_POINT},
      </if>
      <if test="COMMISSION_GL != null and COMMISSION_GL != emptyBigDecimalValue" >
        #{COMMISSION_GL},
      </if>
      <if test="COMMISSION_CIF != null and COMMISSION_CIF != emptyBigDecimalValue" >
        #{COMMISSION_CIF},
      </if>
      <if test="COMMISSION_SL != null and COMMISSION_SL != emptyBigDecimalValue" >
        #{COMMISSION_SL},
      </if>
      <if test="PASS_ACCRUAL != null" >
        #{PASS_ACCRUAL},
      </if>
      <if test="FC_IN_LC_CY != null and FC_IN_LC_CY != emptyBigDecimalValue" >
        #{FC_IN_LC_CY},
      </if>
      <if test="CROSS_RATE != null and CROSS_RATE != emptyBigDecimalValue" >
        #{CROSS_RATE},
      </if>
      <if test="CROSS_MULT_DIV != null" >
        #{CROSS_MULT_DIV},
      </if>
      <if test="LC_CY != null and LC_CY != emptyBigDecimalValue" >
        #{LC_CY},
      </if>
      <if test="CR_ACC_BR != null and CR_ACC_BR != emptyBigDecimalValue" >
        #{CR_ACC_BR},
      </if>
      <if test="DEFAULT_LOGGED_CR_BR != null" >
        #{DEFAULT_LOGGED_CR_BR},
      </if>
      <if test="OLD_PERCENTAGE != null and OLD_PERCENTAGE != emptyBigDecimalValue" >
        #{OLD_PERCENTAGE},
      </if>
      <if test="OVERDRAWN_ACC != null" >
        #{OVERDRAWN_ACC},
      </if>
      <if test="CR_ACC_CY != null and CR_ACC_CY != emptyBigDecimalValue" >
        #{CR_ACC_CY},
      </if>
      <if test="DIFFERENT_CY_CHARGE != null" >
        #{DIFFERENT_CY_CHARGE},
      </if>
      <if test="VAT_CODE != null and VAT_CODE != emptyBigDecimalValue" >
        #{VAT_CODE},
      </if>
      <if test="FREQUENTLY_CHARGE != null" >
        #{FREQUENTLY_CHARGE},
      </if>
      <if test="FREQUENTLY_CHARGE_POSTED != null" >
        #{FREQUENTLY_CHARGE_POSTED},
      </if>
      <if test="FREQUENTLY_CHARGE_POSTED_DT != null" >
        #{FREQUENTLY_CHARGE_POSTED_DT},
      </if>
      <if test="DOC_SELL_RATE != null and DOC_SELL_RATE != emptyBigDecimalValue" >
        #{DOC_SELL_RATE},
      </if>
      <if test="APPLY_DAILY_PERCENT != null" >
        #{APPLY_DAILY_PERCENT},
      </if>
      <if test="DELETE_CHARGE != null" >
        #{DELETE_CHARGE},
      </if>
      <if test="PROTECT_CHARGE != null" >
        #{PROTECT_CHARGE},
      </if>
      <if test="AMEND_CV_DR_AMOUNT != null and AMEND_CV_DR_AMOUNT != emptyBigDecimalValue" >
        #{AMEND_CV_DR_AMOUNT},
      </if>
      <if test="AMEND_FC_DR_AMOUNT != null and AMEND_FC_DR_AMOUNT != emptyBigDecimalValue" >
        #{AMEND_FC_DR_AMOUNT},
      </if>
      <if test="AMEND_FLAT_AMOUNT != null and AMEND_FLAT_AMOUNT != emptyBigDecimalValue" >
        #{AMEND_FLAT_AMOUNT},
      </if>
      <if test="AMEND_PERCENTAGE != null and AMEND_PERCENTAGE != emptyBigDecimalValue" >
        #{AMEND_PERCENTAGE},
      </if>
      <if test="VAT_PERCENTAGE != null and VAT_PERCENTAGE != emptyBigDecimalValue" >
        #{VAT_PERCENTAGE},
      </if>
      <if test="VAT_FC_AMOUNT != null and VAT_FC_AMOUNT != emptyBigDecimalValue" >
        #{VAT_FC_AMOUNT},
      </if>
      <if test="VAT_CY_RATE != null and VAT_CY_RATE != emptyBigDecimalValue" >
        #{VAT_CY_RATE},
      </if>
      <if test="VAT_CV_AMOUNT != null and VAT_CV_AMOUNT != emptyBigDecimalValue" >
        #{VAT_CV_AMOUNT},
      </if>
      <if test="VAT_ACC_BR != null and VAT_ACC_BR != emptyBigDecimalValue" >
        #{VAT_ACC_BR},
      </if>
      <if test="VAT_ACC_CY != null and VAT_ACC_CY != emptyBigDecimalValue" >
        #{VAT_ACC_CY},
      </if>
      <if test="VAT_ACC_GL != null and VAT_ACC_GL != emptyBigDecimalValue" >
        #{VAT_ACC_GL},
      </if>
      <if test="VAT_ACC_CIF != null and VAT_ACC_CIF != emptyBigDecimalValue" >
        #{VAT_ACC_CIF},
      </if>
      <if test="VAT_ACC_SL != null and VAT_ACC_SL != emptyBigDecimalValue" >
        #{VAT_ACC_SL},
      </if>
      <if test="CHARGES_BY_TIERS != null" >
        #{CHARGES_BY_TIERS},
      </if>
      <if test="CHARGE_CV_AMOUNT != null and CHARGE_CV_AMOUNT != emptyBigDecimalValue" >
        #{CHARGE_CV_AMOUNT},
      </if>
      <if test="CHARGE_FC_AMOUNT != null and CHARGE_FC_AMOUNT != emptyBigDecimalValue" >
        #{CHARGE_FC_AMOUNT},
      </if>
      <if test="CLOSED_SUSP_CV_AMOUNT != null and CLOSED_SUSP_CV_AMOUNT != emptyBigDecimalValue" >
        #{CLOSED_SUSP_CV_AMOUNT},
      </if>
      <if test="CLOSED_SUSP_FC_AMOUNT != null and CLOSED_SUSP_FC_AMOUNT != emptyBigDecimalValue" >
        #{CLOSED_SUSP_FC_AMOUNT},
      </if>
      <if test="SUSPENSE_CHARGE_BR != null and SUSPENSE_CHARGE_BR != emptyBigDecimalValue" >
        #{SUSPENSE_CHARGE_BR},
      </if>
      <if test="SUSPENSE_CHARGE_CIF != null and SUSPENSE_CHARGE_CIF != emptyBigDecimalValue" >
        #{SUSPENSE_CHARGE_CIF},
      </if>
      <if test="SUSPENSE_CHARGE_CY != null and SUSPENSE_CHARGE_CY != emptyBigDecimalValue" >
        #{SUSPENSE_CHARGE_CY},
      </if>
      <if test="SUSPENSE_CHARGE_GL != null and SUSPENSE_CHARGE_GL != emptyBigDecimalValue" >
        #{SUSPENSE_CHARGE_GL},
      </if>
      <if test="SUSPENSE_CHARGE_SL != null and SUSPENSE_CHARGE_SL != emptyBigDecimalValue" >
        #{SUSPENSE_CHARGE_SL},
      </if>
      <if test="AMEND_IND != null" >
        #{AMEND_IND},
      </if>
      <if test="ALLOW_MODIFY_CHARGES != null" >
        #{ALLOW_MODIFY_CHARGES},
      </if>
      <if test="HOF_TRS_NO != null and HOF_TRS_NO != emptyBigDecimalValue" >
        #{HOF_TRS_NO},
      </if>
      <if test="OVERDRAWN_VAT != null" >
        #{OVERDRAWN_VAT},
      </if>
      <if test="VAT_SUSPENSE_CV != null and VAT_SUSPENSE_CV != emptyBigDecimalValue" >
        #{VAT_SUSPENSE_CV},
      </if>
      <if test="VAT_SUSPENSE_FC != null and VAT_SUSPENSE_FC != emptyBigDecimalValue" >
        #{VAT_SUSPENSE_FC},
      </if>
      <if test="CV_DR_NON_PROV_AMOUNT != null and CV_DR_NON_PROV_AMOUNT != emptyBigDecimalValue" >
        #{CV_DR_NON_PROV_AMOUNT},
      </if>
      <if test="FC_DR_NON_PROV_AMOUNT != null and FC_DR_NON_PROV_AMOUNT != emptyBigDecimalValue" >
        #{FC_DR_NON_PROV_AMOUNT},
      </if>
      <if test="NON_PROV_AMT_CHARGE != null and NON_PROV_AMT_CHARGE != emptyBigDecimalValue" >
        #{NON_PROV_AMT_CHARGE},
      </if>
      <if test="PROV_AMT_CHARGE != null and PROV_AMT_CHARGE != emptyBigDecimalValue" >
        #{PROV_AMT_CHARGE},
      </if>
      <if test="VAT_CV_PROV_AMOUNT != null and VAT_CV_PROV_AMOUNT != emptyBigDecimalValue" >
        #{VAT_CV_PROV_AMOUNT},
      </if>
      <if test="VAT_FC_PROV_AMOUNT != null and VAT_FC_PROV_AMOUNT != emptyBigDecimalValue" >
        #{VAT_FC_PROV_AMOUNT},
      </if>
      <if test="AMEND_PROV_CV_DR_AMOUNT != null and AMEND_PROV_CV_DR_AMOUNT != emptyBigDecimalValue" >
        #{AMEND_PROV_CV_DR_AMOUNT},
      </if>
      <if test="AMEND_PROV_FC_DR_AMOUNT != null and AMEND_PROV_FC_DR_AMOUNT != emptyBigDecimalValue" >
        #{AMEND_PROV_FC_DR_AMOUNT},
      </if>
      <if test="AMEND_PROV_AMT_CHARGE != null and AMEND_PROV_AMT_CHARGE != emptyBigDecimalValue" >
        #{AMEND_PROV_AMT_CHARGE},
      </if>
      <if test="AMEND_NON_PROV_AMT_CHARGE != null and AMEND_NON_PROV_AMT_CHARGE != emptyBigDecimalValue" >
        #{AMEND_NON_PROV_AMT_CHARGE},
      </if>
    </trim>
  </insert>
  <sql id="sql_updateTFSTRXCHARGES" >
    update TFSTRXCHARGES
    <set >
      <if test="LC_YEAR != null" >
        <choose >
          <when test="LC_YEAR == emptyBigDecimalValue" >
            LC_YEAR = NULL ,
          </when>
          <otherwise >
            LC_YEAR = #{LC_YEAR},
          </otherwise>
        </choose>
      </if>
      <if test="DOC_NBR != null" >
        <choose >
          <when test="DOC_NBR == emptyBigDecimalValue" >
            DOC_NBR = NULL ,
          </when>
          <otherwise >
            DOC_NBR = #{DOC_NBR},
          </otherwise>
        </choose>
      </if>
      <if test="CHARGE != null" >
        <choose >
          <when test="CHARGE == emptyBigDecimalValue" >
            CHARGE = NULL ,
          </when>
          <otherwise >
            CHARGE = #{CHARGE},
          </otherwise>
        </choose>
      </if>
      <if test="CHARGE_TYPE != null" >
        CHARGE_TYPE = #{CHARGE_TYPE},
      </if>
      <if test="FLAT_AMOUNT != null" >
        <choose >
          <when test="FLAT_AMOUNT == emptyBigDecimalValue" >
            FLAT_AMOUNT = NULL ,
          </when>
          <otherwise >
            FLAT_AMOUNT = #{FLAT_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="CR_ACC_GL != null" >
        <choose >
          <when test="CR_ACC_GL == emptyBigDecimalValue" >
            CR_ACC_GL = NULL ,
          </when>
          <otherwise >
            CR_ACC_GL = #{CR_ACC_GL},
          </otherwise>
        </choose>
      </if>
      <if test="CR_ACC_CIF != null" >
        <choose >
          <when test="CR_ACC_CIF == emptyBigDecimalValue" >
            CR_ACC_CIF = NULL ,
          </when>
          <otherwise >
            CR_ACC_CIF = #{CR_ACC_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="CR_ACC_SL != null" >
        <choose >
          <when test="CR_ACC_SL == emptyBigDecimalValue" >
            CR_ACC_SL = NULL ,
          </when>
          <otherwise >
            CR_ACC_SL = #{CR_ACC_SL},
          </otherwise>
        </choose>
      </if>
      <if test="TFSTRX_NBR != null" >
        <choose >
          <when test="TFSTRX_NBR == emptyBigDecimalValue" >
            TFSTRX_NBR = NULL ,
          </when>
          <otherwise >
            TFSTRX_NBR = #{TFSTRX_NBR},
          </otherwise>
        </choose>
      </if>
      <if test="BORN_BY_APPLICANT != null" >
        <choose >
          <when test="BORN_BY_APPLICANT == emptyBigDecimalValue" >
            BORN_BY_APPLICANT = NULL ,
          </when>
          <otherwise >
            BORN_BY_APPLICANT = #{BORN_BY_APPLICANT},
          </otherwise>
        </choose>
      </if>
      <if test="DR_ACC_GL != null" >
        <choose >
          <when test="DR_ACC_GL == emptyBigDecimalValue" >
            DR_ACC_GL = NULL ,
          </when>
          <otherwise >
            DR_ACC_GL = #{DR_ACC_GL},
          </otherwise>
        </choose>
      </if>
      <if test="DR_ACC_CIF != null" >
        <choose >
          <when test="DR_ACC_CIF == emptyBigDecimalValue" >
            DR_ACC_CIF = NULL ,
          </when>
          <otherwise >
            DR_ACC_CIF = #{DR_ACC_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="DR_ACC_SL != null" >
        <choose >
          <when test="DR_ACC_SL == emptyBigDecimalValue" >
            DR_ACC_SL = NULL ,
          </when>
          <otherwise >
            DR_ACC_SL = #{DR_ACC_SL},
          </otherwise>
        </choose>
      </if>
      <if test="DR_ACC_CY != null" >
        <choose >
          <when test="DR_ACC_CY == emptyBigDecimalValue" >
            DR_ACC_CY = NULL ,
          </when>
          <otherwise >
            DR_ACC_CY = #{DR_ACC_CY},
          </otherwise>
        </choose>
      </if>
      <if test="PERCENTAGE != null" >
        <choose >
          <when test="PERCENTAGE == emptyBigDecimalValue" >
            PERCENTAGE = NULL ,
          </when>
          <otherwise >
            PERCENTAGE = #{PERCENTAGE},
          </otherwise>
        </choose>
      </if>
      <if test="DR_ACC_BR != null" >
        <choose >
          <when test="DR_ACC_BR == emptyBigDecimalValue" >
            DR_ACC_BR = NULL ,
          </when>
          <otherwise >
            DR_ACC_BR = #{DR_ACC_BR},
          </otherwise>
        </choose>
      </if>
      <if test="CH_FROM_TYPE != null" >
        CH_FROM_TYPE = #{CH_FROM_TYPE},
      </if>
      <if test="ADD_LINE_NO != null" >
        <choose >
          <when test="ADD_LINE_NO == emptyBigDecimalValue" >
            ADD_LINE_NO = NULL ,
          </when>
          <otherwise >
            ADD_LINE_NO = #{ADD_LINE_NO},
          </otherwise>
        </choose>
      </if>
      <if test="FC_DR_AMOUNT != null" >
        <choose >
          <when test="FC_DR_AMOUNT == emptyBigDecimalValue" >
            FC_DR_AMOUNT = NULL ,
          </when>
          <otherwise >
            FC_DR_AMOUNT = #{FC_DR_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="CV_DR_AMOUNT != null" >
        <choose >
          <when test="CV_DR_AMOUNT == emptyBigDecimalValue" >
            CV_DR_AMOUNT = NULL ,
          </when>
          <otherwise >
            CV_DR_AMOUNT = #{CV_DR_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="EXCH_DR_RATE != null" >
        <choose >
          <when test="EXCH_DR_RATE == emptyBigDecimalValue" >
            EXCH_DR_RATE = NULL ,
          </when>
          <otherwise >
            EXCH_DR_RATE = #{EXCH_DR_RATE},
          </otherwise>
        </choose>
      </if>
      <if test="ROUNDING != null" >
        ROUNDING = #{ROUNDING},
      </if>
      <if test="ROUNDING_POINT != null" >
        <choose >
          <when test="ROUNDING_POINT == emptyBigDecimalValue" >
            ROUNDING_POINT = NULL ,
          </when>
          <otherwise >
            ROUNDING_POINT = #{ROUNDING_POINT},
          </otherwise>
        </choose>
      </if>
      <if test="COMMISSION_GL != null" >
        <choose >
          <when test="COMMISSION_GL == emptyBigDecimalValue" >
            COMMISSION_GL = NULL ,
          </when>
          <otherwise >
            COMMISSION_GL = #{COMMISSION_GL},
          </otherwise>
        </choose>
      </if>
      <if test="COMMISSION_CIF != null" >
        <choose >
          <when test="COMMISSION_CIF == emptyBigDecimalValue" >
            COMMISSION_CIF = NULL ,
          </when>
          <otherwise >
            COMMISSION_CIF = #{COMMISSION_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="COMMISSION_SL != null" >
        <choose >
          <when test="COMMISSION_SL == emptyBigDecimalValue" >
            COMMISSION_SL = NULL ,
          </when>
          <otherwise >
            COMMISSION_SL = #{COMMISSION_SL},
          </otherwise>
        </choose>
      </if>
      <if test="PASS_ACCRUAL != null" >
        PASS_ACCRUAL = #{PASS_ACCRUAL},
      </if>
      <if test="FC_IN_LC_CY != null" >
        <choose >
          <when test="FC_IN_LC_CY == emptyBigDecimalValue" >
            FC_IN_LC_CY = NULL ,
          </when>
          <otherwise >
            FC_IN_LC_CY = #{FC_IN_LC_CY},
          </otherwise>
        </choose>
      </if>
      <if test="CROSS_RATE != null" >
        <choose >
          <when test="CROSS_RATE == emptyBigDecimalValue" >
            CROSS_RATE = NULL ,
          </when>
          <otherwise >
            CROSS_RATE = #{CROSS_RATE},
          </otherwise>
        </choose>
      </if>
      <if test="CROSS_MULT_DIV != null" >
        CROSS_MULT_DIV = #{CROSS_MULT_DIV},
      </if>
      <if test="LC_CY != null" >
        <choose >
          <when test="LC_CY == emptyBigDecimalValue" >
            LC_CY = NULL ,
          </when>
          <otherwise >
            LC_CY = #{LC_CY},
          </otherwise>
        </choose>
      </if>
      <if test="CR_ACC_BR != null" >
        <choose >
          <when test="CR_ACC_BR == emptyBigDecimalValue" >
            CR_ACC_BR = NULL ,
          </when>
          <otherwise >
            CR_ACC_BR = #{CR_ACC_BR},
          </otherwise>
        </choose>
      </if>
      <if test="DEFAULT_LOGGED_CR_BR != null" >
        DEFAULT_LOGGED_CR_BR = #{DEFAULT_LOGGED_CR_BR},
      </if>
      <if test="OLD_PERCENTAGE != null" >
        <choose >
          <when test="OLD_PERCENTAGE == emptyBigDecimalValue" >
            OLD_PERCENTAGE = NULL ,
          </when>
          <otherwise >
            OLD_PERCENTAGE = #{OLD_PERCENTAGE},
          </otherwise>
        </choose>
      </if>
      <if test="OVERDRAWN_ACC != null" >
        OVERDRAWN_ACC = #{OVERDRAWN_ACC},
      </if>
      <if test="CR_ACC_CY != null" >
        <choose >
          <when test="CR_ACC_CY == emptyBigDecimalValue" >
            CR_ACC_CY = NULL ,
          </when>
          <otherwise >
            CR_ACC_CY = #{CR_ACC_CY},
          </otherwise>
        </choose>
      </if>
      <if test="DIFFERENT_CY_CHARGE != null" >
        DIFFERENT_CY_CHARGE = #{DIFFERENT_CY_CHARGE},
      </if>
      <if test="VAT_CODE != null" >
        <choose >
          <when test="VAT_CODE == emptyBigDecimalValue" >
            VAT_CODE = NULL ,
          </when>
          <otherwise >
            VAT_CODE = #{VAT_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="FREQUENTLY_CHARGE != null" >
        FREQUENTLY_CHARGE = #{FREQUENTLY_CHARGE},
      </if>
      <if test="FREQUENTLY_CHARGE_POSTED != null" >
        FREQUENTLY_CHARGE_POSTED = #{FREQUENTLY_CHARGE_POSTED},
      </if>
      <if test="FREQUENTLY_CHARGE_POSTED_DT != null" >
        FREQUENTLY_CHARGE_POSTED_DT = #{FREQUENTLY_CHARGE_POSTED_DT},
      </if>
      <if test="DOC_SELL_RATE != null" >
        <choose >
          <when test="DOC_SELL_RATE == emptyBigDecimalValue" >
            DOC_SELL_RATE = NULL ,
          </when>
          <otherwise >
            DOC_SELL_RATE = #{DOC_SELL_RATE},
          </otherwise>
        </choose>
      </if>
      <if test="APPLY_DAILY_PERCENT != null" >
        APPLY_DAILY_PERCENT = #{APPLY_DAILY_PERCENT},
      </if>
      <if test="DELETE_CHARGE != null" >
        DELETE_CHARGE = #{DELETE_CHARGE},
      </if>
      <if test="PROTECT_CHARGE != null" >
        PROTECT_CHARGE = #{PROTECT_CHARGE},
      </if>
      <if test="AMEND_CV_DR_AMOUNT != null" >
        <choose >
          <when test="AMEND_CV_DR_AMOUNT == emptyBigDecimalValue" >
            AMEND_CV_DR_AMOUNT = NULL ,
          </when>
          <otherwise >
            AMEND_CV_DR_AMOUNT = #{AMEND_CV_DR_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="AMEND_FC_DR_AMOUNT != null" >
        <choose >
          <when test="AMEND_FC_DR_AMOUNT == emptyBigDecimalValue" >
            AMEND_FC_DR_AMOUNT = NULL ,
          </when>
          <otherwise >
            AMEND_FC_DR_AMOUNT = #{AMEND_FC_DR_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="AMEND_FLAT_AMOUNT != null" >
        <choose >
          <when test="AMEND_FLAT_AMOUNT == emptyBigDecimalValue" >
            AMEND_FLAT_AMOUNT = NULL ,
          </when>
          <otherwise >
            AMEND_FLAT_AMOUNT = #{AMEND_FLAT_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="AMEND_PERCENTAGE != null" >
        <choose >
          <when test="AMEND_PERCENTAGE == emptyBigDecimalValue" >
            AMEND_PERCENTAGE = NULL ,
          </when>
          <otherwise >
            AMEND_PERCENTAGE = #{AMEND_PERCENTAGE},
          </otherwise>
        </choose>
      </if>
      <if test="VAT_PERCENTAGE != null" >
        <choose >
          <when test="VAT_PERCENTAGE == emptyBigDecimalValue" >
            VAT_PERCENTAGE = NULL ,
          </when>
          <otherwise >
            VAT_PERCENTAGE = #{VAT_PERCENTAGE},
          </otherwise>
        </choose>
      </if>
      <if test="VAT_FC_AMOUNT != null" >
        <choose >
          <when test="VAT_FC_AMOUNT == emptyBigDecimalValue" >
            VAT_FC_AMOUNT = NULL ,
          </when>
          <otherwise >
            VAT_FC_AMOUNT = #{VAT_FC_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="VAT_CY_RATE != null" >
        <choose >
          <when test="VAT_CY_RATE == emptyBigDecimalValue" >
            VAT_CY_RATE = NULL ,
          </when>
          <otherwise >
            VAT_CY_RATE = #{VAT_CY_RATE},
          </otherwise>
        </choose>
      </if>
      <if test="VAT_CV_AMOUNT != null" >
        <choose >
          <when test="VAT_CV_AMOUNT == emptyBigDecimalValue" >
            VAT_CV_AMOUNT = NULL ,
          </when>
          <otherwise >
            VAT_CV_AMOUNT = #{VAT_CV_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="VAT_ACC_BR != null" >
        <choose >
          <when test="VAT_ACC_BR == emptyBigDecimalValue" >
            VAT_ACC_BR = NULL ,
          </when>
          <otherwise >
            VAT_ACC_BR = #{VAT_ACC_BR},
          </otherwise>
        </choose>
      </if>
      <if test="VAT_ACC_CY != null" >
        <choose >
          <when test="VAT_ACC_CY == emptyBigDecimalValue" >
            VAT_ACC_CY = NULL ,
          </when>
          <otherwise >
            VAT_ACC_CY = #{VAT_ACC_CY},
          </otherwise>
        </choose>
      </if>
      <if test="VAT_ACC_GL != null" >
        <choose >
          <when test="VAT_ACC_GL == emptyBigDecimalValue" >
            VAT_ACC_GL = NULL ,
          </when>
          <otherwise >
            VAT_ACC_GL = #{VAT_ACC_GL},
          </otherwise>
        </choose>
      </if>
      <if test="VAT_ACC_CIF != null" >
        <choose >
          <when test="VAT_ACC_CIF == emptyBigDecimalValue" >
            VAT_ACC_CIF = NULL ,
          </when>
          <otherwise >
            VAT_ACC_CIF = #{VAT_ACC_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="VAT_ACC_SL != null" >
        <choose >
          <when test="VAT_ACC_SL == emptyBigDecimalValue" >
            VAT_ACC_SL = NULL ,
          </when>
          <otherwise >
            VAT_ACC_SL = #{VAT_ACC_SL},
          </otherwise>
        </choose>
      </if>
      <if test="CHARGES_BY_TIERS != null" >
        CHARGES_BY_TIERS = #{CHARGES_BY_TIERS},
      </if>
      <if test="CHARGE_CV_AMOUNT != null" >
        <choose >
          <when test="CHARGE_CV_AMOUNT == emptyBigDecimalValue" >
            CHARGE_CV_AMOUNT = NULL ,
          </when>
          <otherwise >
            CHARGE_CV_AMOUNT = #{CHARGE_CV_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="CHARGE_FC_AMOUNT != null" >
        <choose >
          <when test="CHARGE_FC_AMOUNT == emptyBigDecimalValue" >
            CHARGE_FC_AMOUNT = NULL ,
          </when>
          <otherwise >
            CHARGE_FC_AMOUNT = #{CHARGE_FC_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="CLOSED_SUSP_CV_AMOUNT != null" >
        <choose >
          <when test="CLOSED_SUSP_CV_AMOUNT == emptyBigDecimalValue" >
            CLOSED_SUSP_CV_AMOUNT = NULL ,
          </when>
          <otherwise >
            CLOSED_SUSP_CV_AMOUNT = #{CLOSED_SUSP_CV_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="CLOSED_SUSP_FC_AMOUNT != null" >
        <choose >
          <when test="CLOSED_SUSP_FC_AMOUNT == emptyBigDecimalValue" >
            CLOSED_SUSP_FC_AMOUNT = NULL ,
          </when>
          <otherwise >
            CLOSED_SUSP_FC_AMOUNT = #{CLOSED_SUSP_FC_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="SUSPENSE_CHARGE_BR != null" >
        <choose >
          <when test="SUSPENSE_CHARGE_BR == emptyBigDecimalValue" >
            SUSPENSE_CHARGE_BR = NULL ,
          </when>
          <otherwise >
            SUSPENSE_CHARGE_BR = #{SUSPENSE_CHARGE_BR},
          </otherwise>
        </choose>
      </if>
      <if test="SUSPENSE_CHARGE_CIF != null" >
        <choose >
          <when test="SUSPENSE_CHARGE_CIF == emptyBigDecimalValue" >
            SUSPENSE_CHARGE_CIF = NULL ,
          </when>
          <otherwise >
            SUSPENSE_CHARGE_CIF = #{SUSPENSE_CHARGE_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="SUSPENSE_CHARGE_CY != null" >
        <choose >
          <when test="SUSPENSE_CHARGE_CY == emptyBigDecimalValue" >
            SUSPENSE_CHARGE_CY = NULL ,
          </when>
          <otherwise >
            SUSPENSE_CHARGE_CY = #{SUSPENSE_CHARGE_CY},
          </otherwise>
        </choose>
      </if>
      <if test="SUSPENSE_CHARGE_GL != null" >
        <choose >
          <when test="SUSPENSE_CHARGE_GL == emptyBigDecimalValue" >
            SUSPENSE_CHARGE_GL = NULL ,
          </when>
          <otherwise >
            SUSPENSE_CHARGE_GL = #{SUSPENSE_CHARGE_GL},
          </otherwise>
        </choose>
      </if>
      <if test="SUSPENSE_CHARGE_SL != null" >
        <choose >
          <when test="SUSPENSE_CHARGE_SL == emptyBigDecimalValue" >
            SUSPENSE_CHARGE_SL = NULL ,
          </when>
          <otherwise >
            SUSPENSE_CHARGE_SL = #{SUSPENSE_CHARGE_SL},
          </otherwise>
        </choose>
      </if>
      <if test="AMEND_IND != null" >
        AMEND_IND = #{AMEND_IND},
      </if>
      <if test="ALLOW_MODIFY_CHARGES != null" >
        ALLOW_MODIFY_CHARGES = #{ALLOW_MODIFY_CHARGES},
      </if>
      <if test="HOF_TRS_NO != null" >
        <choose >
          <when test="HOF_TRS_NO == emptyBigDecimalValue" >
            HOF_TRS_NO = NULL ,
          </when>
          <otherwise >
            HOF_TRS_NO = #{HOF_TRS_NO},
          </otherwise>
        </choose>
      </if>
      <if test="OVERDRAWN_VAT != null" >
        OVERDRAWN_VAT = #{OVERDRAWN_VAT},
      </if>
      <if test="VAT_SUSPENSE_CV != null" >
        <choose >
          <when test="VAT_SUSPENSE_CV == emptyBigDecimalValue" >
            VAT_SUSPENSE_CV = NULL ,
          </when>
          <otherwise >
            VAT_SUSPENSE_CV = #{VAT_SUSPENSE_CV},
          </otherwise>
        </choose>
      </if>
      <if test="VAT_SUSPENSE_FC != null" >
        <choose >
          <when test="VAT_SUSPENSE_FC == emptyBigDecimalValue" >
            VAT_SUSPENSE_FC = NULL ,
          </when>
          <otherwise >
            VAT_SUSPENSE_FC = #{VAT_SUSPENSE_FC},
          </otherwise>
        </choose>
      </if>
      <if test="CV_DR_NON_PROV_AMOUNT != null" >
        <choose >
          <when test="CV_DR_NON_PROV_AMOUNT == emptyBigDecimalValue" >
            CV_DR_NON_PROV_AMOUNT = NULL ,
          </when>
          <otherwise >
            CV_DR_NON_PROV_AMOUNT = #{CV_DR_NON_PROV_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="FC_DR_NON_PROV_AMOUNT != null" >
        <choose >
          <when test="FC_DR_NON_PROV_AMOUNT == emptyBigDecimalValue" >
            FC_DR_NON_PROV_AMOUNT = NULL ,
          </when>
          <otherwise >
            FC_DR_NON_PROV_AMOUNT = #{FC_DR_NON_PROV_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="NON_PROV_AMT_CHARGE != null" >
        <choose >
          <when test="NON_PROV_AMT_CHARGE == emptyBigDecimalValue" >
            NON_PROV_AMT_CHARGE = NULL ,
          </when>
          <otherwise >
            NON_PROV_AMT_CHARGE = #{NON_PROV_AMT_CHARGE},
          </otherwise>
        </choose>
      </if>
      <if test="PROV_AMT_CHARGE != null" >
        <choose >
          <when test="PROV_AMT_CHARGE == emptyBigDecimalValue" >
            PROV_AMT_CHARGE = NULL ,
          </when>
          <otherwise >
            PROV_AMT_CHARGE = #{PROV_AMT_CHARGE},
          </otherwise>
        </choose>
      </if>
      <if test="VAT_CV_PROV_AMOUNT != null" >
        <choose >
          <when test="VAT_CV_PROV_AMOUNT == emptyBigDecimalValue" >
            VAT_CV_PROV_AMOUNT = NULL ,
          </when>
          <otherwise >
            VAT_CV_PROV_AMOUNT = #{VAT_CV_PROV_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="VAT_FC_PROV_AMOUNT != null" >
        <choose >
          <when test="VAT_FC_PROV_AMOUNT == emptyBigDecimalValue" >
            VAT_FC_PROV_AMOUNT = NULL ,
          </when>
          <otherwise >
            VAT_FC_PROV_AMOUNT = #{VAT_FC_PROV_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="AMEND_PROV_CV_DR_AMOUNT != null" >
        <choose >
          <when test="AMEND_PROV_CV_DR_AMOUNT == emptyBigDecimalValue" >
            AMEND_PROV_CV_DR_AMOUNT = NULL ,
          </when>
          <otherwise >
            AMEND_PROV_CV_DR_AMOUNT = #{AMEND_PROV_CV_DR_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="AMEND_PROV_FC_DR_AMOUNT != null" >
        <choose >
          <when test="AMEND_PROV_FC_DR_AMOUNT == emptyBigDecimalValue" >
            AMEND_PROV_FC_DR_AMOUNT = NULL ,
          </when>
          <otherwise >
            AMEND_PROV_FC_DR_AMOUNT = #{AMEND_PROV_FC_DR_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="AMEND_PROV_AMT_CHARGE != null" >
        <choose >
          <when test="AMEND_PROV_AMT_CHARGE == emptyBigDecimalValue" >
            AMEND_PROV_AMT_CHARGE = NULL ,
          </when>
          <otherwise >
            AMEND_PROV_AMT_CHARGE = #{AMEND_PROV_AMT_CHARGE},
          </otherwise>
        </choose>
      </if>
      <if test="AMEND_NON_PROV_AMT_CHARGE != null" >
        <choose >
          <when test="AMEND_NON_PROV_AMT_CHARGE == emptyBigDecimalValue" >
            AMEND_NON_PROV_AMT_CHARGE = NULL ,
          </when>
          <otherwise >
            AMEND_NON_PROV_AMT_CHARGE = #{AMEND_NON_PROV_AMT_CHARGE},
          </otherwise>
        </choose>
      </if>
    </set>
    where BRANCH = #{BRANCH}
      and COMP_CODE = #{COMP_CODE}
      and DOC_TYPE = #{DOC_TYPE}
      and TRX_LINE_NBR = #{TRX_LINE_NBR}
      and TRX_NBR = #{TRX_NBR}
      and TRX_TYPE = #{TRX_TYPE}
  </sql>
  <update id="updateTFSTRXCHARGES" parameterType="com.path.dbmaps.vo.TFSTRXCHARGESVO" >
    <include refid="sql_updateTFSTRXCHARGES" />
  </update>
</mapper>