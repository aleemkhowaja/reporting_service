<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TRS_PROV_PRODUCTS_PROCESS" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.TRS_PROV_PRODUCTS_PROCESSVO" >
    <id column="ACC_BRANCH" property="ACC_BRANCH" />
    <id column="AC_NO" property="AC_NO" />
    <id column="BRANCH_CODE" property="BRANCH_CODE" />
    <id column="CIF_SUB_NO" property="CIF_SUB_NO" />
    <id column="COMP_CODE" property="COMP_CODE" />
    <id column="CURRENCY_CODE" property="CURRENCY_CODE" />
    <id column="GL_CODE" property="GL_CODE" />
    <id column="PROCESS_NBR" property="PROCESS_NBR" />
    <id column="SL_NO" property="SL_NO" />
    <result column="PRODUCT_TYPE_CODE" property="PRODUCT_TYPE_CODE" />
    <result column="PROCESS_DATE" property="PROCESS_DATE" />
    <result column="PROCESSED_BY" property="PROCESSED_BY" />
    <result column="CATEGORY" property="CATEGORY" />
    <result column="COUNTER_PARTY" property="COUNTER_PARTY" />
    <result column="STATUS" property="STATUS" />
    <result column="TRANSFER_IND" property="TRANSFER_IND" />
    <result column="PROVISION_IND" property="PROVISION_IND" />
    <result column="TEMPLATE_TYPE_PROVISION" property="TEMPLATE_TYPE_PROVISION" />
    <result column="BANK_TEMPLATE_CODE" property="BANK_TEMPLATE_CODE" />
    <result column="CURRENCY" property="CURRENCY" />
    <result column="DR_PROV_GL" property="DR_PROV_GL" />
    <result column="DR_PROV_CIF" property="DR_PROV_CIF" />
    <result column="DR_PROV_SL" property="DR_PROV_SL" />
    <result column="CR_PROV_GL" property="CR_PROV_GL" />
    <result column="CR_PROV_CIF" property="CR_PROV_CIF" />
    <result column="CR_PROV_SL" property="CR_PROV_SL" />
    <result column="PROVISION_PERCENT" property="PROVISION_PERCENT" />
    <result column="PROVISION_AMOUNT" property="PROVISION_AMOUNT" />
    <result column="PROVISION_AMOUNT_CV" property="PROVISION_AMOUNT_CV" />
    <result column="PROCESS_IND" property="PROCESS_IND" />
    <result column="REVERSAL_IND" property="REVERSAL_IND" />
    <result column="EXCH_RATE" property="EXCH_RATE" />
    <result column="EXCH_MULT_DIV" property="EXCH_MULT_DIV" />
    <result column="PROVISION_AMOUNT_CV_OLD" property="PROVISION_AMOUNT_CV_OLD" />
    <result column="PROVISION_CALC_AMOUNT" property="PROVISION_CALC_AMOUNT" />
    <result column="PROVISION_PERCENT_USER" property="PROVISION_PERCENT_USER" />
    <result column="PROVISION_AMOUNT_USER" property="PROVISION_AMOUNT_USER" />
    <result column="PROVISION_AMOUNT_CV_USER" property="PROVISION_AMOUNT_CV_USER" />
    <result column="PROVISION_TYPE_IND" property="PROVISION_TYPE_IND" />
    <result column="UNIT" property="UNIT" />
    <result column="PROVISION_BASIS" property="PROVISION_BASIS" />
    <result column="CONSIDERED_COLLATERAL_CV" property="CONSIDERED_COLLATERAL_CV" />
    <result column="COLLATERAL_CV" property="COLLATERAL_CV" />
    <result column="COLLATERAL_PERCENT" property="COLLATERAL_PERCENT" />
    <result column="AMOUNT_OUTSTANDING" property="AMOUNT_OUTSTANDING" />
    <result column="PRINCIPAL_OUTSTANDING" property="PRINCIPAL_OUTSTANDING" />
    <result column="OWING_OUTSTANDING" property="OWING_OUTSTANDING" />
    <result column="OPENING_BALANCE_PROVISION" property="OPENING_BALANCE_PROVISION" />
    <result column="OPENING_BALANCE_SPIIS" property="OPENING_BALANCE_SPIIS" />
    <result column="OPENING_BALANCE_IIS" property="OPENING_BALANCE_IIS" />
    <result column="PROVISION_CHARGED" property="PROVISION_CHARGED" />
    <result column="PROVISION_WRITE_BACK_CHARGED" property="PROVISION_WRITE_BACK_CHARGED" />
    <result column="PROVISION_WRITE_OFF" property="PROVISION_WRITE_OFF" />
    <result column="SPIIS_CHARGED" property="SPIIS_CHARGED" />
    <result column="SPIIS_WRITE_BACK" property="SPIIS_WRITE_BACK" />
    <result column="SPIIS_WRITE_OFF" property="SPIIS_WRITE_OFF" />
    <result column="IIS_CHARGED" property="IIS_CHARGED" />
    <result column="IIS_WRITE_BACK" property="IIS_WRITE_BACK" />
    <result column="IIS_WRITE_OFF" property="IIS_WRITE_OFF" />
    <result column="ACCRUED_AMOUNT" property="ACCRUED_AMOUNT" />
    <result column="UNEARNED_INCOME" property="UNEARNED_INCOME" />
    <result column="SHORTFALL" property="SHORTFALL" />
    <result column="WRITE_BACK" property="WRITE_BACK" />
    <result column="ADJUSTMENT" property="ADJUSTMENT" />
    <result column="ADJUSTMENT_TRX_NO" property="ADJUSTMENT_TRX_NO" />
    <result column="OPENING_PROVISION_ADJUSTMENT" property="OPENING_PROVISION_ADJUSTMENT" />
    <result column="DRAWDOWN_BRANCH" property="DRAWDOWN_BRANCH" />
    <result column="DRAWDOWN_NO" property="DRAWDOWN_NO" />
    <result column="REVERSE_PROCESS_DATE" property="REVERSE_PROCESS_DATE" />
    <result column="DUE_DAYS" property="DUE_DAYS" />
    <result column="AMEND_STATUS" property="AMEND_STATUS" />
    <result column="AMEND_TRX_BRANCH" property="AMEND_TRX_BRANCH" />
    <result column="AMEND_TRX_NO" property="AMEND_TRX_NO" />
    <result column="PROCESS_REF_NBR" property="PROCESS_REF_NBR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ACC_BRANCH, AC_NO, BRANCH_CODE, CIF_SUB_NO, COMP_CODE, CURRENCY_CODE, GL_CODE, PROCESS_NBR, 
    SL_NO, PRODUCT_TYPE_CODE, PROCESS_DATE, PROCESSED_BY, CATEGORY, COUNTER_PARTY, STATUS, 
    TRANSFER_IND, PROVISION_IND, TEMPLATE_TYPE_PROVISION, BANK_TEMPLATE_CODE, CURRENCY, 
    DR_PROV_GL, DR_PROV_CIF, DR_PROV_SL, CR_PROV_GL, CR_PROV_CIF, CR_PROV_SL, PROVISION_PERCENT, 
    PROVISION_AMOUNT, PROVISION_AMOUNT_CV, PROCESS_IND, REVERSAL_IND, EXCH_RATE, EXCH_MULT_DIV, 
    PROVISION_AMOUNT_CV_OLD, PROVISION_CALC_AMOUNT, PROVISION_PERCENT_USER, PROVISION_AMOUNT_USER, 
    PROVISION_AMOUNT_CV_USER, PROVISION_TYPE_IND, UNIT, PROVISION_BASIS, CONSIDERED_COLLATERAL_CV, 
    COLLATERAL_CV, COLLATERAL_PERCENT, AMOUNT_OUTSTANDING, PRINCIPAL_OUTSTANDING, OWING_OUTSTANDING, 
    OPENING_BALANCE_PROVISION, OPENING_BALANCE_SPIIS, OPENING_BALANCE_IIS, PROVISION_CHARGED, 
    PROVISION_WRITE_BACK_CHARGED, PROVISION_WRITE_OFF, SPIIS_CHARGED, SPIIS_WRITE_BACK, 
    SPIIS_WRITE_OFF, IIS_CHARGED, IIS_WRITE_BACK, IIS_WRITE_OFF, ACCRUED_AMOUNT, UNEARNED_INCOME, 
    SHORTFALL, WRITE_BACK, ADJUSTMENT, ADJUSTMENT_TRX_NO, OPENING_PROVISION_ADJUSTMENT, 
    DRAWDOWN_BRANCH, DRAWDOWN_NO, REVERSE_PROCESS_DATE, DUE_DAYS, AMEND_STATUS, AMEND_TRX_BRANCH, 
    AMEND_TRX_NO, PROCESS_REF_NBR
  </sql>
  <select id="selectTRS_PROV_PRODUCTS_PROCESS" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.TRS_PROV_PRODUCTS_PROCESSVOKey" >
    select 
    <include refid="Base_Column_List" />
    from TRS_PROV_PRODUCTS_PROCESS
    where ACC_BRANCH = #{ACC_BRANCH}
      and AC_NO = #{AC_NO}
      and BRANCH_CODE = #{BRANCH_CODE}
      and CIF_SUB_NO = #{CIF_SUB_NO}
      and COMP_CODE = #{COMP_CODE}
      and CURRENCY_CODE = #{CURRENCY_CODE}
      and GL_CODE = #{GL_CODE}
      and PROCESS_NBR = #{PROCESS_NBR}
      and SL_NO = #{SL_NO}
  </select>
  <delete id="deleteTRS_PROV_PRODUCTS_PROCESS" parameterType="com.path.dbmaps.vo.TRS_PROV_PRODUCTS_PROCESSVOKey" >
    delete from TRS_PROV_PRODUCTS_PROCESS
    where ACC_BRANCH = #{ACC_BRANCH}
      and AC_NO = #{AC_NO}
      and BRANCH_CODE = #{BRANCH_CODE}
      and CIF_SUB_NO = #{CIF_SUB_NO}
      and COMP_CODE = #{COMP_CODE}
      and CURRENCY_CODE = #{CURRENCY_CODE}
      and GL_CODE = #{GL_CODE}
      and PROCESS_NBR = #{PROCESS_NBR}
      and SL_NO = #{SL_NO}
  </delete>
  <insert id="insertTRS_PROV_PRODUCTS_PROCESS" parameterType="com.path.dbmaps.vo.TRS_PROV_PRODUCTS_PROCESSVO" >
    insert into TRS_PROV_PRODUCTS_PROCESS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ACC_BRANCH != null and ACC_BRANCH != emptyBigDecimalValue" >
        ACC_BRANCH,
      </if>
      <if test="AC_NO != null" >
        AC_NO,
      </if>
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        BRANCH_CODE,
      </if>
      <if test="CIF_SUB_NO != null and CIF_SUB_NO != emptyBigDecimalValue" >
        CIF_SUB_NO,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="CURRENCY_CODE != null and CURRENCY_CODE != emptyBigDecimalValue" >
        CURRENCY_CODE,
      </if>
      <if test="GL_CODE != null and GL_CODE != emptyBigDecimalValue" >
        GL_CODE,
      </if>
      <if test="PROCESS_NBR != null and PROCESS_NBR != emptyBigDecimalValue" >
        PROCESS_NBR,
      </if>
      <if test="SL_NO != null and SL_NO != emptyBigDecimalValue" >
        SL_NO,
      </if>
      <if test="PRODUCT_TYPE_CODE != null and PRODUCT_TYPE_CODE != emptyBigDecimalValue" >
        PRODUCT_TYPE_CODE,
      </if>
      <if test="PROCESS_DATE != null" >
        PROCESS_DATE,
      </if>
      <if test="PROCESSED_BY != null" >
        PROCESSED_BY,
      </if>
      <if test="CATEGORY != null and CATEGORY != emptyBigDecimalValue" >
        CATEGORY,
      </if>
      <if test="COUNTER_PARTY != null and COUNTER_PARTY != emptyBigDecimalValue" >
        COUNTER_PARTY,
      </if>
      <if test="STATUS != null" >
        STATUS,
      </if>
      <if test="TRANSFER_IND != null" >
        TRANSFER_IND,
      </if>
      <if test="PROVISION_IND != null" >
        PROVISION_IND,
      </if>
      <if test="TEMPLATE_TYPE_PROVISION != null and TEMPLATE_TYPE_PROVISION != emptyBigDecimalValue" >
        TEMPLATE_TYPE_PROVISION,
      </if>
      <if test="BANK_TEMPLATE_CODE != null and BANK_TEMPLATE_CODE != emptyBigDecimalValue" >
        BANK_TEMPLATE_CODE,
      </if>
      <if test="CURRENCY != null and CURRENCY != emptyBigDecimalValue" >
        CURRENCY,
      </if>
      <if test="DR_PROV_GL != null and DR_PROV_GL != emptyBigDecimalValue" >
        DR_PROV_GL,
      </if>
      <if test="DR_PROV_CIF != null and DR_PROV_CIF != emptyBigDecimalValue" >
        DR_PROV_CIF,
      </if>
      <if test="DR_PROV_SL != null and DR_PROV_SL != emptyBigDecimalValue" >
        DR_PROV_SL,
      </if>
      <if test="CR_PROV_GL != null and CR_PROV_GL != emptyBigDecimalValue" >
        CR_PROV_GL,
      </if>
      <if test="CR_PROV_CIF != null and CR_PROV_CIF != emptyBigDecimalValue" >
        CR_PROV_CIF,
      </if>
      <if test="CR_PROV_SL != null and CR_PROV_SL != emptyBigDecimalValue" >
        CR_PROV_SL,
      </if>
      <if test="PROVISION_PERCENT != null and PROVISION_PERCENT != emptyBigDecimalValue" >
        PROVISION_PERCENT,
      </if>
      <if test="PROVISION_AMOUNT != null and PROVISION_AMOUNT != emptyBigDecimalValue" >
        PROVISION_AMOUNT,
      </if>
      <if test="PROVISION_AMOUNT_CV != null and PROVISION_AMOUNT_CV != emptyBigDecimalValue" >
        PROVISION_AMOUNT_CV,
      </if>
      <if test="PROCESS_IND != null" >
        PROCESS_IND,
      </if>
      <if test="REVERSAL_IND != null" >
        REVERSAL_IND,
      </if>
      <if test="EXCH_RATE != null and EXCH_RATE != emptyBigDecimalValue" >
        EXCH_RATE,
      </if>
      <if test="EXCH_MULT_DIV != null" >
        EXCH_MULT_DIV,
      </if>
      <if test="PROVISION_AMOUNT_CV_OLD != null and PROVISION_AMOUNT_CV_OLD != emptyBigDecimalValue" >
        PROVISION_AMOUNT_CV_OLD,
      </if>
      <if test="PROVISION_CALC_AMOUNT != null and PROVISION_CALC_AMOUNT != emptyBigDecimalValue" >
        PROVISION_CALC_AMOUNT,
      </if>
      <if test="PROVISION_PERCENT_USER != null and PROVISION_PERCENT_USER != emptyBigDecimalValue" >
        PROVISION_PERCENT_USER,
      </if>
      <if test="PROVISION_AMOUNT_USER != null and PROVISION_AMOUNT_USER != emptyBigDecimalValue" >
        PROVISION_AMOUNT_USER,
      </if>
      <if test="PROVISION_AMOUNT_CV_USER != null and PROVISION_AMOUNT_CV_USER != emptyBigDecimalValue" >
        PROVISION_AMOUNT_CV_USER,
      </if>
      <if test="PROVISION_TYPE_IND != null" >
        PROVISION_TYPE_IND,
      </if>
      <if test="UNIT != null and UNIT != emptyBigDecimalValue" >
        UNIT,
      </if>
      <if test="PROVISION_BASIS != null" >
        PROVISION_BASIS,
      </if>
      <if test="CONSIDERED_COLLATERAL_CV != null and CONSIDERED_COLLATERAL_CV != emptyBigDecimalValue" >
        CONSIDERED_COLLATERAL_CV,
      </if>
      <if test="COLLATERAL_CV != null and COLLATERAL_CV != emptyBigDecimalValue" >
        COLLATERAL_CV,
      </if>
      <if test="COLLATERAL_PERCENT != null and COLLATERAL_PERCENT != emptyBigDecimalValue" >
        COLLATERAL_PERCENT,
      </if>
      <if test="AMOUNT_OUTSTANDING != null and AMOUNT_OUTSTANDING != emptyBigDecimalValue" >
        AMOUNT_OUTSTANDING,
      </if>
      <if test="PRINCIPAL_OUTSTANDING != null and PRINCIPAL_OUTSTANDING != emptyBigDecimalValue" >
        PRINCIPAL_OUTSTANDING,
      </if>
      <if test="OWING_OUTSTANDING != null and OWING_OUTSTANDING != emptyBigDecimalValue" >
        OWING_OUTSTANDING,
      </if>
      <if test="OPENING_BALANCE_PROVISION != null and OPENING_BALANCE_PROVISION != emptyBigDecimalValue" >
        OPENING_BALANCE_PROVISION,
      </if>
      <if test="OPENING_BALANCE_SPIIS != null and OPENING_BALANCE_SPIIS != emptyBigDecimalValue" >
        OPENING_BALANCE_SPIIS,
      </if>
      <if test="OPENING_BALANCE_IIS != null and OPENING_BALANCE_IIS != emptyBigDecimalValue" >
        OPENING_BALANCE_IIS,
      </if>
      <if test="PROVISION_CHARGED != null and PROVISION_CHARGED != emptyBigDecimalValue" >
        PROVISION_CHARGED,
      </if>
      <if test="PROVISION_WRITE_BACK_CHARGED != null and PROVISION_WRITE_BACK_CHARGED != emptyBigDecimalValue" >
        PROVISION_WRITE_BACK_CHARGED,
      </if>
      <if test="PROVISION_WRITE_OFF != null and PROVISION_WRITE_OFF != emptyBigDecimalValue" >
        PROVISION_WRITE_OFF,
      </if>
      <if test="SPIIS_CHARGED != null and SPIIS_CHARGED != emptyBigDecimalValue" >
        SPIIS_CHARGED,
      </if>
      <if test="SPIIS_WRITE_BACK != null and SPIIS_WRITE_BACK != emptyBigDecimalValue" >
        SPIIS_WRITE_BACK,
      </if>
      <if test="SPIIS_WRITE_OFF != null and SPIIS_WRITE_OFF != emptyBigDecimalValue" >
        SPIIS_WRITE_OFF,
      </if>
      <if test="IIS_CHARGED != null and IIS_CHARGED != emptyBigDecimalValue" >
        IIS_CHARGED,
      </if>
      <if test="IIS_WRITE_BACK != null and IIS_WRITE_BACK != emptyBigDecimalValue" >
        IIS_WRITE_BACK,
      </if>
      <if test="IIS_WRITE_OFF != null and IIS_WRITE_OFF != emptyBigDecimalValue" >
        IIS_WRITE_OFF,
      </if>
      <if test="ACCRUED_AMOUNT != null and ACCRUED_AMOUNT != emptyBigDecimalValue" >
        ACCRUED_AMOUNT,
      </if>
      <if test="UNEARNED_INCOME != null and UNEARNED_INCOME != emptyBigDecimalValue" >
        UNEARNED_INCOME,
      </if>
      <if test="SHORTFALL != null and SHORTFALL != emptyBigDecimalValue" >
        SHORTFALL,
      </if>
      <if test="WRITE_BACK != null and WRITE_BACK != emptyBigDecimalValue" >
        WRITE_BACK,
      </if>
      <if test="ADJUSTMENT != null and ADJUSTMENT != emptyBigDecimalValue" >
        ADJUSTMENT,
      </if>
      <if test="ADJUSTMENT_TRX_NO != null and ADJUSTMENT_TRX_NO != emptyBigDecimalValue" >
        ADJUSTMENT_TRX_NO,
      </if>
      <if test="OPENING_PROVISION_ADJUSTMENT != null and OPENING_PROVISION_ADJUSTMENT != emptyBigDecimalValue" >
        OPENING_PROVISION_ADJUSTMENT,
      </if>
      <if test="DRAWDOWN_BRANCH != null and DRAWDOWN_BRANCH != emptyBigDecimalValue" >
        DRAWDOWN_BRANCH,
      </if>
      <if test="DRAWDOWN_NO != null and DRAWDOWN_NO != emptyBigDecimalValue" >
        DRAWDOWN_NO,
      </if>
      <if test="REVERSE_PROCESS_DATE != null" >
        REVERSE_PROCESS_DATE,
      </if>
      <if test="DUE_DAYS != null and DUE_DAYS != emptyBigDecimalValue" >
        DUE_DAYS,
      </if>
      <if test="AMEND_STATUS != null" >
        AMEND_STATUS,
      </if>
      <if test="AMEND_TRX_BRANCH != null and AMEND_TRX_BRANCH != emptyBigDecimalValue" >
        AMEND_TRX_BRANCH,
      </if>
      <if test="AMEND_TRX_NO != null and AMEND_TRX_NO != emptyBigDecimalValue" >
        AMEND_TRX_NO,
      </if>
      <if test="PROCESS_REF_NBR != null and PROCESS_REF_NBR != emptyBigDecimalValue" >
        PROCESS_REF_NBR,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ACC_BRANCH != null and ACC_BRANCH != emptyBigDecimalValue" >
        #{ACC_BRANCH},
      </if>
      <if test="AC_NO != null" >
        #{AC_NO},
      </if>
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        #{BRANCH_CODE},
      </if>
      <if test="CIF_SUB_NO != null and CIF_SUB_NO != emptyBigDecimalValue" >
        #{CIF_SUB_NO},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="CURRENCY_CODE != null and CURRENCY_CODE != emptyBigDecimalValue" >
        #{CURRENCY_CODE},
      </if>
      <if test="GL_CODE != null and GL_CODE != emptyBigDecimalValue" >
        #{GL_CODE},
      </if>
      <if test="PROCESS_NBR != null and PROCESS_NBR != emptyBigDecimalValue" >
        #{PROCESS_NBR},
      </if>
      <if test="SL_NO != null and SL_NO != emptyBigDecimalValue" >
        #{SL_NO},
      </if>
      <if test="PRODUCT_TYPE_CODE != null and PRODUCT_TYPE_CODE != emptyBigDecimalValue" >
        #{PRODUCT_TYPE_CODE},
      </if>
      <if test="PROCESS_DATE != null" >
        #{PROCESS_DATE},
      </if>
      <if test="PROCESSED_BY != null" >
        #{PROCESSED_BY},
      </if>
      <if test="CATEGORY != null and CATEGORY != emptyBigDecimalValue" >
        #{CATEGORY},
      </if>
      <if test="COUNTER_PARTY != null and COUNTER_PARTY != emptyBigDecimalValue" >
        #{COUNTER_PARTY},
      </if>
      <if test="STATUS != null" >
        #{STATUS},
      </if>
      <if test="TRANSFER_IND != null" >
        #{TRANSFER_IND},
      </if>
      <if test="PROVISION_IND != null" >
        #{PROVISION_IND},
      </if>
      <if test="TEMPLATE_TYPE_PROVISION != null and TEMPLATE_TYPE_PROVISION != emptyBigDecimalValue" >
        #{TEMPLATE_TYPE_PROVISION},
      </if>
      <if test="BANK_TEMPLATE_CODE != null and BANK_TEMPLATE_CODE != emptyBigDecimalValue" >
        #{BANK_TEMPLATE_CODE},
      </if>
      <if test="CURRENCY != null and CURRENCY != emptyBigDecimalValue" >
        #{CURRENCY},
      </if>
      <if test="DR_PROV_GL != null and DR_PROV_GL != emptyBigDecimalValue" >
        #{DR_PROV_GL},
      </if>
      <if test="DR_PROV_CIF != null and DR_PROV_CIF != emptyBigDecimalValue" >
        #{DR_PROV_CIF},
      </if>
      <if test="DR_PROV_SL != null and DR_PROV_SL != emptyBigDecimalValue" >
        #{DR_PROV_SL},
      </if>
      <if test="CR_PROV_GL != null and CR_PROV_GL != emptyBigDecimalValue" >
        #{CR_PROV_GL},
      </if>
      <if test="CR_PROV_CIF != null and CR_PROV_CIF != emptyBigDecimalValue" >
        #{CR_PROV_CIF},
      </if>
      <if test="CR_PROV_SL != null and CR_PROV_SL != emptyBigDecimalValue" >
        #{CR_PROV_SL},
      </if>
      <if test="PROVISION_PERCENT != null and PROVISION_PERCENT != emptyBigDecimalValue" >
        #{PROVISION_PERCENT},
      </if>
      <if test="PROVISION_AMOUNT != null and PROVISION_AMOUNT != emptyBigDecimalValue" >
        #{PROVISION_AMOUNT},
      </if>
      <if test="PROVISION_AMOUNT_CV != null and PROVISION_AMOUNT_CV != emptyBigDecimalValue" >
        #{PROVISION_AMOUNT_CV},
      </if>
      <if test="PROCESS_IND != null" >
        #{PROCESS_IND},
      </if>
      <if test="REVERSAL_IND != null" >
        #{REVERSAL_IND},
      </if>
      <if test="EXCH_RATE != null and EXCH_RATE != emptyBigDecimalValue" >
        #{EXCH_RATE},
      </if>
      <if test="EXCH_MULT_DIV != null" >
        #{EXCH_MULT_DIV},
      </if>
      <if test="PROVISION_AMOUNT_CV_OLD != null and PROVISION_AMOUNT_CV_OLD != emptyBigDecimalValue" >
        #{PROVISION_AMOUNT_CV_OLD},
      </if>
      <if test="PROVISION_CALC_AMOUNT != null and PROVISION_CALC_AMOUNT != emptyBigDecimalValue" >
        #{PROVISION_CALC_AMOUNT},
      </if>
      <if test="PROVISION_PERCENT_USER != null and PROVISION_PERCENT_USER != emptyBigDecimalValue" >
        #{PROVISION_PERCENT_USER},
      </if>
      <if test="PROVISION_AMOUNT_USER != null and PROVISION_AMOUNT_USER != emptyBigDecimalValue" >
        #{PROVISION_AMOUNT_USER},
      </if>
      <if test="PROVISION_AMOUNT_CV_USER != null and PROVISION_AMOUNT_CV_USER != emptyBigDecimalValue" >
        #{PROVISION_AMOUNT_CV_USER},
      </if>
      <if test="PROVISION_TYPE_IND != null" >
        #{PROVISION_TYPE_IND},
      </if>
      <if test="UNIT != null and UNIT != emptyBigDecimalValue" >
        #{UNIT},
      </if>
      <if test="PROVISION_BASIS != null" >
        #{PROVISION_BASIS},
      </if>
      <if test="CONSIDERED_COLLATERAL_CV != null and CONSIDERED_COLLATERAL_CV != emptyBigDecimalValue" >
        #{CONSIDERED_COLLATERAL_CV},
      </if>
      <if test="COLLATERAL_CV != null and COLLATERAL_CV != emptyBigDecimalValue" >
        #{COLLATERAL_CV},
      </if>
      <if test="COLLATERAL_PERCENT != null and COLLATERAL_PERCENT != emptyBigDecimalValue" >
        #{COLLATERAL_PERCENT},
      </if>
      <if test="AMOUNT_OUTSTANDING != null and AMOUNT_OUTSTANDING != emptyBigDecimalValue" >
        #{AMOUNT_OUTSTANDING},
      </if>
      <if test="PRINCIPAL_OUTSTANDING != null and PRINCIPAL_OUTSTANDING != emptyBigDecimalValue" >
        #{PRINCIPAL_OUTSTANDING},
      </if>
      <if test="OWING_OUTSTANDING != null and OWING_OUTSTANDING != emptyBigDecimalValue" >
        #{OWING_OUTSTANDING},
      </if>
      <if test="OPENING_BALANCE_PROVISION != null and OPENING_BALANCE_PROVISION != emptyBigDecimalValue" >
        #{OPENING_BALANCE_PROVISION},
      </if>
      <if test="OPENING_BALANCE_SPIIS != null and OPENING_BALANCE_SPIIS != emptyBigDecimalValue" >
        #{OPENING_BALANCE_SPIIS},
      </if>
      <if test="OPENING_BALANCE_IIS != null and OPENING_BALANCE_IIS != emptyBigDecimalValue" >
        #{OPENING_BALANCE_IIS},
      </if>
      <if test="PROVISION_CHARGED != null and PROVISION_CHARGED != emptyBigDecimalValue" >
        #{PROVISION_CHARGED},
      </if>
      <if test="PROVISION_WRITE_BACK_CHARGED != null and PROVISION_WRITE_BACK_CHARGED != emptyBigDecimalValue" >
        #{PROVISION_WRITE_BACK_CHARGED},
      </if>
      <if test="PROVISION_WRITE_OFF != null and PROVISION_WRITE_OFF != emptyBigDecimalValue" >
        #{PROVISION_WRITE_OFF},
      </if>
      <if test="SPIIS_CHARGED != null and SPIIS_CHARGED != emptyBigDecimalValue" >
        #{SPIIS_CHARGED},
      </if>
      <if test="SPIIS_WRITE_BACK != null and SPIIS_WRITE_BACK != emptyBigDecimalValue" >
        #{SPIIS_WRITE_BACK},
      </if>
      <if test="SPIIS_WRITE_OFF != null and SPIIS_WRITE_OFF != emptyBigDecimalValue" >
        #{SPIIS_WRITE_OFF},
      </if>
      <if test="IIS_CHARGED != null and IIS_CHARGED != emptyBigDecimalValue" >
        #{IIS_CHARGED},
      </if>
      <if test="IIS_WRITE_BACK != null and IIS_WRITE_BACK != emptyBigDecimalValue" >
        #{IIS_WRITE_BACK},
      </if>
      <if test="IIS_WRITE_OFF != null and IIS_WRITE_OFF != emptyBigDecimalValue" >
        #{IIS_WRITE_OFF},
      </if>
      <if test="ACCRUED_AMOUNT != null and ACCRUED_AMOUNT != emptyBigDecimalValue" >
        #{ACCRUED_AMOUNT},
      </if>
      <if test="UNEARNED_INCOME != null and UNEARNED_INCOME != emptyBigDecimalValue" >
        #{UNEARNED_INCOME},
      </if>
      <if test="SHORTFALL != null and SHORTFALL != emptyBigDecimalValue" >
        #{SHORTFALL},
      </if>
      <if test="WRITE_BACK != null and WRITE_BACK != emptyBigDecimalValue" >
        #{WRITE_BACK},
      </if>
      <if test="ADJUSTMENT != null and ADJUSTMENT != emptyBigDecimalValue" >
        #{ADJUSTMENT},
      </if>
      <if test="ADJUSTMENT_TRX_NO != null and ADJUSTMENT_TRX_NO != emptyBigDecimalValue" >
        #{ADJUSTMENT_TRX_NO},
      </if>
      <if test="OPENING_PROVISION_ADJUSTMENT != null and OPENING_PROVISION_ADJUSTMENT != emptyBigDecimalValue" >
        #{OPENING_PROVISION_ADJUSTMENT},
      </if>
      <if test="DRAWDOWN_BRANCH != null and DRAWDOWN_BRANCH != emptyBigDecimalValue" >
        #{DRAWDOWN_BRANCH},
      </if>
      <if test="DRAWDOWN_NO != null and DRAWDOWN_NO != emptyBigDecimalValue" >
        #{DRAWDOWN_NO},
      </if>
      <if test="REVERSE_PROCESS_DATE != null" >
        #{REVERSE_PROCESS_DATE},
      </if>
      <if test="DUE_DAYS != null and DUE_DAYS != emptyBigDecimalValue" >
        #{DUE_DAYS},
      </if>
      <if test="AMEND_STATUS != null" >
        #{AMEND_STATUS},
      </if>
      <if test="AMEND_TRX_BRANCH != null and AMEND_TRX_BRANCH != emptyBigDecimalValue" >
        #{AMEND_TRX_BRANCH},
      </if>
      <if test="AMEND_TRX_NO != null and AMEND_TRX_NO != emptyBigDecimalValue" >
        #{AMEND_TRX_NO},
      </if>
      <if test="PROCESS_REF_NBR != null and PROCESS_REF_NBR != emptyBigDecimalValue" >
        #{PROCESS_REF_NBR},
      </if>
    </trim>
  </insert>
  <sql id="sql_updateTRS_PROV_PRODUCTS_PROCESS" >
    update TRS_PROV_PRODUCTS_PROCESS
    <set >
      <if test="PRODUCT_TYPE_CODE != null" >
        <choose >
          <when test="PRODUCT_TYPE_CODE == emptyBigDecimalValue" >
            PRODUCT_TYPE_CODE = NULL ,
          </when>
          <otherwise >
            PRODUCT_TYPE_CODE = #{PRODUCT_TYPE_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="PROCESS_DATE != null" >
        PROCESS_DATE = #{PROCESS_DATE},
      </if>
      <if test="PROCESSED_BY != null" >
        PROCESSED_BY = #{PROCESSED_BY},
      </if>
      <if test="CATEGORY != null" >
        <choose >
          <when test="CATEGORY == emptyBigDecimalValue" >
            CATEGORY = NULL ,
          </when>
          <otherwise >
            CATEGORY = #{CATEGORY},
          </otherwise>
        </choose>
      </if>
      <if test="COUNTER_PARTY != null" >
        <choose >
          <when test="COUNTER_PARTY == emptyBigDecimalValue" >
            COUNTER_PARTY = NULL ,
          </when>
          <otherwise >
            COUNTER_PARTY = #{COUNTER_PARTY},
          </otherwise>
        </choose>
      </if>
      <if test="STATUS != null" >
        STATUS = #{STATUS},
      </if>
      <if test="TRANSFER_IND != null" >
        TRANSFER_IND = #{TRANSFER_IND},
      </if>
      <if test="PROVISION_IND != null" >
        PROVISION_IND = #{PROVISION_IND},
      </if>
      <if test="TEMPLATE_TYPE_PROVISION != null" >
        <choose >
          <when test="TEMPLATE_TYPE_PROVISION == emptyBigDecimalValue" >
            TEMPLATE_TYPE_PROVISION = NULL ,
          </when>
          <otherwise >
            TEMPLATE_TYPE_PROVISION = #{TEMPLATE_TYPE_PROVISION},
          </otherwise>
        </choose>
      </if>
      <if test="BANK_TEMPLATE_CODE != null" >
        <choose >
          <when test="BANK_TEMPLATE_CODE == emptyBigDecimalValue" >
            BANK_TEMPLATE_CODE = NULL ,
          </when>
          <otherwise >
            BANK_TEMPLATE_CODE = #{BANK_TEMPLATE_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="CURRENCY != null" >
        <choose >
          <when test="CURRENCY == emptyBigDecimalValue" >
            CURRENCY = NULL ,
          </when>
          <otherwise >
            CURRENCY = #{CURRENCY},
          </otherwise>
        </choose>
      </if>
      <if test="DR_PROV_GL != null" >
        <choose >
          <when test="DR_PROV_GL == emptyBigDecimalValue" >
            DR_PROV_GL = NULL ,
          </when>
          <otherwise >
            DR_PROV_GL = #{DR_PROV_GL},
          </otherwise>
        </choose>
      </if>
      <if test="DR_PROV_CIF != null" >
        <choose >
          <when test="DR_PROV_CIF == emptyBigDecimalValue" >
            DR_PROV_CIF = NULL ,
          </when>
          <otherwise >
            DR_PROV_CIF = #{DR_PROV_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="DR_PROV_SL != null" >
        <choose >
          <when test="DR_PROV_SL == emptyBigDecimalValue" >
            DR_PROV_SL = NULL ,
          </when>
          <otherwise >
            DR_PROV_SL = #{DR_PROV_SL},
          </otherwise>
        </choose>
      </if>
      <if test="CR_PROV_GL != null" >
        <choose >
          <when test="CR_PROV_GL == emptyBigDecimalValue" >
            CR_PROV_GL = NULL ,
          </when>
          <otherwise >
            CR_PROV_GL = #{CR_PROV_GL},
          </otherwise>
        </choose>
      </if>
      <if test="CR_PROV_CIF != null" >
        <choose >
          <when test="CR_PROV_CIF == emptyBigDecimalValue" >
            CR_PROV_CIF = NULL ,
          </when>
          <otherwise >
            CR_PROV_CIF = #{CR_PROV_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="CR_PROV_SL != null" >
        <choose >
          <when test="CR_PROV_SL == emptyBigDecimalValue" >
            CR_PROV_SL = NULL ,
          </when>
          <otherwise >
            CR_PROV_SL = #{CR_PROV_SL},
          </otherwise>
        </choose>
      </if>
      <if test="PROVISION_PERCENT != null" >
        <choose >
          <when test="PROVISION_PERCENT == emptyBigDecimalValue" >
            PROVISION_PERCENT = NULL ,
          </when>
          <otherwise >
            PROVISION_PERCENT = #{PROVISION_PERCENT},
          </otherwise>
        </choose>
      </if>
      <if test="PROVISION_AMOUNT != null" >
        <choose >
          <when test="PROVISION_AMOUNT == emptyBigDecimalValue" >
            PROVISION_AMOUNT = NULL ,
          </when>
          <otherwise >
            PROVISION_AMOUNT = #{PROVISION_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="PROVISION_AMOUNT_CV != null" >
        <choose >
          <when test="PROVISION_AMOUNT_CV == emptyBigDecimalValue" >
            PROVISION_AMOUNT_CV = NULL ,
          </when>
          <otherwise >
            PROVISION_AMOUNT_CV = #{PROVISION_AMOUNT_CV},
          </otherwise>
        </choose>
      </if>
      <if test="PROCESS_IND != null" >
        PROCESS_IND = #{PROCESS_IND},
      </if>
      <if test="REVERSAL_IND != null" >
        REVERSAL_IND = #{REVERSAL_IND},
      </if>
      <if test="EXCH_RATE != null" >
        <choose >
          <when test="EXCH_RATE == emptyBigDecimalValue" >
            EXCH_RATE = NULL ,
          </when>
          <otherwise >
            EXCH_RATE = #{EXCH_RATE},
          </otherwise>
        </choose>
      </if>
      <if test="EXCH_MULT_DIV != null" >
        EXCH_MULT_DIV = #{EXCH_MULT_DIV},
      </if>
      <if test="PROVISION_AMOUNT_CV_OLD != null" >
        <choose >
          <when test="PROVISION_AMOUNT_CV_OLD == emptyBigDecimalValue" >
            PROVISION_AMOUNT_CV_OLD = NULL ,
          </when>
          <otherwise >
            PROVISION_AMOUNT_CV_OLD = #{PROVISION_AMOUNT_CV_OLD},
          </otherwise>
        </choose>
      </if>
      <if test="PROVISION_CALC_AMOUNT != null" >
        <choose >
          <when test="PROVISION_CALC_AMOUNT == emptyBigDecimalValue" >
            PROVISION_CALC_AMOUNT = NULL ,
          </when>
          <otherwise >
            PROVISION_CALC_AMOUNT = #{PROVISION_CALC_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="PROVISION_PERCENT_USER != null" >
        <choose >
          <when test="PROVISION_PERCENT_USER == emptyBigDecimalValue" >
            PROVISION_PERCENT_USER = NULL ,
          </when>
          <otherwise >
            PROVISION_PERCENT_USER = #{PROVISION_PERCENT_USER},
          </otherwise>
        </choose>
      </if>
      <if test="PROVISION_AMOUNT_USER != null" >
        <choose >
          <when test="PROVISION_AMOUNT_USER == emptyBigDecimalValue" >
            PROVISION_AMOUNT_USER = NULL ,
          </when>
          <otherwise >
            PROVISION_AMOUNT_USER = #{PROVISION_AMOUNT_USER},
          </otherwise>
        </choose>
      </if>
      <if test="PROVISION_AMOUNT_CV_USER != null" >
        <choose >
          <when test="PROVISION_AMOUNT_CV_USER == emptyBigDecimalValue" >
            PROVISION_AMOUNT_CV_USER = NULL ,
          </when>
          <otherwise >
            PROVISION_AMOUNT_CV_USER = #{PROVISION_AMOUNT_CV_USER},
          </otherwise>
        </choose>
      </if>
      <if test="PROVISION_TYPE_IND != null" >
        PROVISION_TYPE_IND = #{PROVISION_TYPE_IND},
      </if>
      <if test="UNIT != null" >
        <choose >
          <when test="UNIT == emptyBigDecimalValue" >
            UNIT = NULL ,
          </when>
          <otherwise >
            UNIT = #{UNIT},
          </otherwise>
        </choose>
      </if>
      <if test="PROVISION_BASIS != null" >
        PROVISION_BASIS = #{PROVISION_BASIS},
      </if>
      <if test="CONSIDERED_COLLATERAL_CV != null" >
        <choose >
          <when test="CONSIDERED_COLLATERAL_CV == emptyBigDecimalValue" >
            CONSIDERED_COLLATERAL_CV = NULL ,
          </when>
          <otherwise >
            CONSIDERED_COLLATERAL_CV = #{CONSIDERED_COLLATERAL_CV},
          </otherwise>
        </choose>
      </if>
      <if test="COLLATERAL_CV != null" >
        <choose >
          <when test="COLLATERAL_CV == emptyBigDecimalValue" >
            COLLATERAL_CV = NULL ,
          </when>
          <otherwise >
            COLLATERAL_CV = #{COLLATERAL_CV},
          </otherwise>
        </choose>
      </if>
      <if test="COLLATERAL_PERCENT != null" >
        <choose >
          <when test="COLLATERAL_PERCENT == emptyBigDecimalValue" >
            COLLATERAL_PERCENT = NULL ,
          </when>
          <otherwise >
            COLLATERAL_PERCENT = #{COLLATERAL_PERCENT},
          </otherwise>
        </choose>
      </if>
      <if test="AMOUNT_OUTSTANDING != null" >
        <choose >
          <when test="AMOUNT_OUTSTANDING == emptyBigDecimalValue" >
            AMOUNT_OUTSTANDING = NULL ,
          </when>
          <otherwise >
            AMOUNT_OUTSTANDING = #{AMOUNT_OUTSTANDING},
          </otherwise>
        </choose>
      </if>
      <if test="PRINCIPAL_OUTSTANDING != null" >
        <choose >
          <when test="PRINCIPAL_OUTSTANDING == emptyBigDecimalValue" >
            PRINCIPAL_OUTSTANDING = NULL ,
          </when>
          <otherwise >
            PRINCIPAL_OUTSTANDING = #{PRINCIPAL_OUTSTANDING},
          </otherwise>
        </choose>
      </if>
      <if test="OWING_OUTSTANDING != null" >
        <choose >
          <when test="OWING_OUTSTANDING == emptyBigDecimalValue" >
            OWING_OUTSTANDING = NULL ,
          </when>
          <otherwise >
            OWING_OUTSTANDING = #{OWING_OUTSTANDING},
          </otherwise>
        </choose>
      </if>
      <if test="OPENING_BALANCE_PROVISION != null" >
        <choose >
          <when test="OPENING_BALANCE_PROVISION == emptyBigDecimalValue" >
            OPENING_BALANCE_PROVISION = NULL ,
          </when>
          <otherwise >
            OPENING_BALANCE_PROVISION = #{OPENING_BALANCE_PROVISION},
          </otherwise>
        </choose>
      </if>
      <if test="OPENING_BALANCE_SPIIS != null" >
        <choose >
          <when test="OPENING_BALANCE_SPIIS == emptyBigDecimalValue" >
            OPENING_BALANCE_SPIIS = NULL ,
          </when>
          <otherwise >
            OPENING_BALANCE_SPIIS = #{OPENING_BALANCE_SPIIS},
          </otherwise>
        </choose>
      </if>
      <if test="OPENING_BALANCE_IIS != null" >
        <choose >
          <when test="OPENING_BALANCE_IIS == emptyBigDecimalValue" >
            OPENING_BALANCE_IIS = NULL ,
          </when>
          <otherwise >
            OPENING_BALANCE_IIS = #{OPENING_BALANCE_IIS},
          </otherwise>
        </choose>
      </if>
      <if test="PROVISION_CHARGED != null" >
        <choose >
          <when test="PROVISION_CHARGED == emptyBigDecimalValue" >
            PROVISION_CHARGED = NULL ,
          </when>
          <otherwise >
            PROVISION_CHARGED = #{PROVISION_CHARGED},
          </otherwise>
        </choose>
      </if>
      <if test="PROVISION_WRITE_BACK_CHARGED != null" >
        <choose >
          <when test="PROVISION_WRITE_BACK_CHARGED == emptyBigDecimalValue" >
            PROVISION_WRITE_BACK_CHARGED = NULL ,
          </when>
          <otherwise >
            PROVISION_WRITE_BACK_CHARGED = #{PROVISION_WRITE_BACK_CHARGED},
          </otherwise>
        </choose>
      </if>
      <if test="PROVISION_WRITE_OFF != null" >
        <choose >
          <when test="PROVISION_WRITE_OFF == emptyBigDecimalValue" >
            PROVISION_WRITE_OFF = NULL ,
          </when>
          <otherwise >
            PROVISION_WRITE_OFF = #{PROVISION_WRITE_OFF},
          </otherwise>
        </choose>
      </if>
      <if test="SPIIS_CHARGED != null" >
        <choose >
          <when test="SPIIS_CHARGED == emptyBigDecimalValue" >
            SPIIS_CHARGED = NULL ,
          </when>
          <otherwise >
            SPIIS_CHARGED = #{SPIIS_CHARGED},
          </otherwise>
        </choose>
      </if>
      <if test="SPIIS_WRITE_BACK != null" >
        <choose >
          <when test="SPIIS_WRITE_BACK == emptyBigDecimalValue" >
            SPIIS_WRITE_BACK = NULL ,
          </when>
          <otherwise >
            SPIIS_WRITE_BACK = #{SPIIS_WRITE_BACK},
          </otherwise>
        </choose>
      </if>
      <if test="SPIIS_WRITE_OFF != null" >
        <choose >
          <when test="SPIIS_WRITE_OFF == emptyBigDecimalValue" >
            SPIIS_WRITE_OFF = NULL ,
          </when>
          <otherwise >
            SPIIS_WRITE_OFF = #{SPIIS_WRITE_OFF},
          </otherwise>
        </choose>
      </if>
      <if test="IIS_CHARGED != null" >
        <choose >
          <when test="IIS_CHARGED == emptyBigDecimalValue" >
            IIS_CHARGED = NULL ,
          </when>
          <otherwise >
            IIS_CHARGED = #{IIS_CHARGED},
          </otherwise>
        </choose>
      </if>
      <if test="IIS_WRITE_BACK != null" >
        <choose >
          <when test="IIS_WRITE_BACK == emptyBigDecimalValue" >
            IIS_WRITE_BACK = NULL ,
          </when>
          <otherwise >
            IIS_WRITE_BACK = #{IIS_WRITE_BACK},
          </otherwise>
        </choose>
      </if>
      <if test="IIS_WRITE_OFF != null" >
        <choose >
          <when test="IIS_WRITE_OFF == emptyBigDecimalValue" >
            IIS_WRITE_OFF = NULL ,
          </when>
          <otherwise >
            IIS_WRITE_OFF = #{IIS_WRITE_OFF},
          </otherwise>
        </choose>
      </if>
      <if test="ACCRUED_AMOUNT != null" >
        <choose >
          <when test="ACCRUED_AMOUNT == emptyBigDecimalValue" >
            ACCRUED_AMOUNT = NULL ,
          </when>
          <otherwise >
            ACCRUED_AMOUNT = #{ACCRUED_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="UNEARNED_INCOME != null" >
        <choose >
          <when test="UNEARNED_INCOME == emptyBigDecimalValue" >
            UNEARNED_INCOME = NULL ,
          </when>
          <otherwise >
            UNEARNED_INCOME = #{UNEARNED_INCOME},
          </otherwise>
        </choose>
      </if>
      <if test="SHORTFALL != null" >
        <choose >
          <when test="SHORTFALL == emptyBigDecimalValue" >
            SHORTFALL = NULL ,
          </when>
          <otherwise >
            SHORTFALL = #{SHORTFALL},
          </otherwise>
        </choose>
      </if>
      <if test="WRITE_BACK != null" >
        <choose >
          <when test="WRITE_BACK == emptyBigDecimalValue" >
            WRITE_BACK = NULL ,
          </when>
          <otherwise >
            WRITE_BACK = #{WRITE_BACK},
          </otherwise>
        </choose>
      </if>
      <if test="ADJUSTMENT != null" >
        <choose >
          <when test="ADJUSTMENT == emptyBigDecimalValue" >
            ADJUSTMENT = NULL ,
          </when>
          <otherwise >
            ADJUSTMENT = #{ADJUSTMENT},
          </otherwise>
        </choose>
      </if>
      <if test="ADJUSTMENT_TRX_NO != null" >
        <choose >
          <when test="ADJUSTMENT_TRX_NO == emptyBigDecimalValue" >
            ADJUSTMENT_TRX_NO = NULL ,
          </when>
          <otherwise >
            ADJUSTMENT_TRX_NO = #{ADJUSTMENT_TRX_NO},
          </otherwise>
        </choose>
      </if>
      <if test="OPENING_PROVISION_ADJUSTMENT != null" >
        <choose >
          <when test="OPENING_PROVISION_ADJUSTMENT == emptyBigDecimalValue" >
            OPENING_PROVISION_ADJUSTMENT = NULL ,
          </when>
          <otherwise >
            OPENING_PROVISION_ADJUSTMENT = #{OPENING_PROVISION_ADJUSTMENT},
          </otherwise>
        </choose>
      </if>
      <if test="DRAWDOWN_BRANCH != null" >
        <choose >
          <when test="DRAWDOWN_BRANCH == emptyBigDecimalValue" >
            DRAWDOWN_BRANCH = NULL ,
          </when>
          <otherwise >
            DRAWDOWN_BRANCH = #{DRAWDOWN_BRANCH},
          </otherwise>
        </choose>
      </if>
      <if test="DRAWDOWN_NO != null" >
        <choose >
          <when test="DRAWDOWN_NO == emptyBigDecimalValue" >
            DRAWDOWN_NO = NULL ,
          </when>
          <otherwise >
            DRAWDOWN_NO = #{DRAWDOWN_NO},
          </otherwise>
        </choose>
      </if>
      <if test="REVERSE_PROCESS_DATE != null" >
        REVERSE_PROCESS_DATE = #{REVERSE_PROCESS_DATE},
      </if>
      <if test="DUE_DAYS != null" >
        <choose >
          <when test="DUE_DAYS == emptyBigDecimalValue" >
            DUE_DAYS = NULL ,
          </when>
          <otherwise >
            DUE_DAYS = #{DUE_DAYS},
          </otherwise>
        </choose>
      </if>
      <if test="AMEND_STATUS != null" >
        AMEND_STATUS = #{AMEND_STATUS},
      </if>
      <if test="AMEND_TRX_BRANCH != null" >
        <choose >
          <when test="AMEND_TRX_BRANCH == emptyBigDecimalValue" >
            AMEND_TRX_BRANCH = NULL ,
          </when>
          <otherwise >
            AMEND_TRX_BRANCH = #{AMEND_TRX_BRANCH},
          </otherwise>
        </choose>
      </if>
      <if test="AMEND_TRX_NO != null" >
        <choose >
          <when test="AMEND_TRX_NO == emptyBigDecimalValue" >
            AMEND_TRX_NO = NULL ,
          </when>
          <otherwise >
            AMEND_TRX_NO = #{AMEND_TRX_NO},
          </otherwise>
        </choose>
      </if>
      <if test="PROCESS_REF_NBR != null" >
        <choose >
          <when test="PROCESS_REF_NBR == emptyBigDecimalValue" >
            PROCESS_REF_NBR = NULL ,
          </when>
          <otherwise >
            PROCESS_REF_NBR = #{PROCESS_REF_NBR},
          </otherwise>
        </choose>
      </if>
    </set>
    where ACC_BRANCH = #{ACC_BRANCH}
      and AC_NO = #{AC_NO}
      and BRANCH_CODE = #{BRANCH_CODE}
      and CIF_SUB_NO = #{CIF_SUB_NO}
      and COMP_CODE = #{COMP_CODE}
      and CURRENCY_CODE = #{CURRENCY_CODE}
      and GL_CODE = #{GL_CODE}
      and PROCESS_NBR = #{PROCESS_NBR}
      and SL_NO = #{SL_NO}
  </sql>
  <update id="updateTRS_PROV_PRODUCTS_PROCESS" parameterType="com.path.dbmaps.vo.TRS_PROV_PRODUCTS_PROCESSVO" >
    <include refid="sql_updateTRS_PROV_PRODUCTS_PROCESS" />
  </update>
</mapper>