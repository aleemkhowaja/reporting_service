<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TRSDEAL_COVERING_ACCOUNTS" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.TRSDEAL_COVERING_ACCOUNTSVO" >
    <id column="BRANCH_CODE" property="BRANCH_CODE" />
    <id column="COMP_CODE" property="COMP_CODE" />
    <id column="LINE_NO" property="LINE_NO" />
    <id column="SERIAL_NO" property="SERIAL_NO" />
    <result column="ACCOUNT_BRANCH" property="ACCOUNT_BRANCH" />
    <result column="ACCOUNT_CURRENCY" property="ACCOUNT_CURRENCY" />
    <result column="ACCOUNT_GL" property="ACCOUNT_GL" />
    <result column="ACCOUNT_CIF" property="ACCOUNT_CIF" />
    <result column="ACCOUNT_SL" property="ACCOUNT_SL" />
    <result column="PRIORITY_NO" property="PRIORITY_NO" />
  </resultMap>
  <sql id="Base_Column_List" >
    BRANCH_CODE, COMP_CODE, LINE_NO, SERIAL_NO, ACCOUNT_BRANCH, ACCOUNT_CURRENCY, ACCOUNT_GL, 
    ACCOUNT_CIF, ACCOUNT_SL, PRIORITY_NO
  </sql>
  <select id="selectTRSDEAL_COVERING_ACCOUNTS" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.TRSDEAL_COVERING_ACCOUNTSVOKey" >
    select 
    <include refid="Base_Column_List" />
    from TRSDEAL_COVERING_ACCOUNTS
    where BRANCH_CODE = #{BRANCH_CODE}
      and COMP_CODE = #{COMP_CODE}
      and LINE_NO = #{LINE_NO}
      and SERIAL_NO = #{SERIAL_NO}
  </select>
  <delete id="deleteTRSDEAL_COVERING_ACCOUNTS" parameterType="com.path.dbmaps.vo.TRSDEAL_COVERING_ACCOUNTSVOKey" >
    delete from TRSDEAL_COVERING_ACCOUNTS
    where BRANCH_CODE = #{BRANCH_CODE}
      and COMP_CODE = #{COMP_CODE}
      and LINE_NO = #{LINE_NO}
      and SERIAL_NO = #{SERIAL_NO}
  </delete>
  <insert id="insertTRSDEAL_COVERING_ACCOUNTS" parameterType="com.path.dbmaps.vo.TRSDEAL_COVERING_ACCOUNTSVO" >
    insert into TRSDEAL_COVERING_ACCOUNTS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        BRANCH_CODE,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="LINE_NO != null and LINE_NO != emptyBigDecimalValue" >
        LINE_NO,
      </if>
      <if test="SERIAL_NO != null and SERIAL_NO != emptyBigDecimalValue" >
        SERIAL_NO,
      </if>
      <if test="ACCOUNT_BRANCH != null and ACCOUNT_BRANCH != emptyBigDecimalValue" >
        ACCOUNT_BRANCH,
      </if>
      <if test="ACCOUNT_CURRENCY != null and ACCOUNT_CURRENCY != emptyBigDecimalValue" >
        ACCOUNT_CURRENCY,
      </if>
      <if test="ACCOUNT_GL != null and ACCOUNT_GL != emptyBigDecimalValue" >
        ACCOUNT_GL,
      </if>
      <if test="ACCOUNT_CIF != null and ACCOUNT_CIF != emptyBigDecimalValue" >
        ACCOUNT_CIF,
      </if>
      <if test="ACCOUNT_SL != null and ACCOUNT_SL != emptyBigDecimalValue" >
        ACCOUNT_SL,
      </if>
      <if test="PRIORITY_NO != null and PRIORITY_NO != emptyBigDecimalValue" >
        PRIORITY_NO,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        #{BRANCH_CODE},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="LINE_NO != null and LINE_NO != emptyBigDecimalValue" >
        #{LINE_NO},
      </if>
      <if test="SERIAL_NO != null and SERIAL_NO != emptyBigDecimalValue" >
        #{SERIAL_NO},
      </if>
      <if test="ACCOUNT_BRANCH != null and ACCOUNT_BRANCH != emptyBigDecimalValue" >
        #{ACCOUNT_BRANCH},
      </if>
      <if test="ACCOUNT_CURRENCY != null and ACCOUNT_CURRENCY != emptyBigDecimalValue" >
        #{ACCOUNT_CURRENCY},
      </if>
      <if test="ACCOUNT_GL != null and ACCOUNT_GL != emptyBigDecimalValue" >
        #{ACCOUNT_GL},
      </if>
      <if test="ACCOUNT_CIF != null and ACCOUNT_CIF != emptyBigDecimalValue" >
        #{ACCOUNT_CIF},
      </if>
      <if test="ACCOUNT_SL != null and ACCOUNT_SL != emptyBigDecimalValue" >
        #{ACCOUNT_SL},
      </if>
      <if test="PRIORITY_NO != null and PRIORITY_NO != emptyBigDecimalValue" >
        #{PRIORITY_NO},
      </if>
    </trim>
  </insert>
  <sql id="sql_updateTRSDEAL_COVERING_ACCOUNTS" >
    update TRSDEAL_COVERING_ACCOUNTS
    <set >
      <if test="ACCOUNT_BRANCH != null" >
        <choose >
          <when test="ACCOUNT_BRANCH == emptyBigDecimalValue" >
            ACCOUNT_BRANCH = NULL ,
          </when>
          <otherwise >
            ACCOUNT_BRANCH = #{ACCOUNT_BRANCH},
          </otherwise>
        </choose>
      </if>
      <if test="ACCOUNT_CURRENCY != null" >
        <choose >
          <when test="ACCOUNT_CURRENCY == emptyBigDecimalValue" >
            ACCOUNT_CURRENCY = NULL ,
          </when>
          <otherwise >
            ACCOUNT_CURRENCY = #{ACCOUNT_CURRENCY},
          </otherwise>
        </choose>
      </if>
      <if test="ACCOUNT_GL != null" >
        <choose >
          <when test="ACCOUNT_GL == emptyBigDecimalValue" >
            ACCOUNT_GL = NULL ,
          </when>
          <otherwise >
            ACCOUNT_GL = #{ACCOUNT_GL},
          </otherwise>
        </choose>
      </if>
      <if test="ACCOUNT_CIF != null" >
        <choose >
          <when test="ACCOUNT_CIF == emptyBigDecimalValue" >
            ACCOUNT_CIF = NULL ,
          </when>
          <otherwise >
            ACCOUNT_CIF = #{ACCOUNT_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="ACCOUNT_SL != null" >
        <choose >
          <when test="ACCOUNT_SL == emptyBigDecimalValue" >
            ACCOUNT_SL = NULL ,
          </when>
          <otherwise >
            ACCOUNT_SL = #{ACCOUNT_SL},
          </otherwise>
        </choose>
      </if>
      <if test="PRIORITY_NO != null" >
        <choose >
          <when test="PRIORITY_NO == emptyBigDecimalValue" >
            PRIORITY_NO = NULL ,
          </when>
          <otherwise >
            PRIORITY_NO = #{PRIORITY_NO},
          </otherwise>
        </choose>
      </if>
    </set>
    where BRANCH_CODE = #{BRANCH_CODE}
      and COMP_CODE = #{COMP_CODE}
      and LINE_NO = #{LINE_NO}
      and SERIAL_NO = #{SERIAL_NO}
  </sql>
  <update id="updateTRSDEAL_COVERING_ACCOUNTS" parameterType="com.path.dbmaps.vo.TRSDEAL_COVERING_ACCOUNTSVO" >
    <include refid="sql_updateTRSDEAL_COVERING_ACCOUNTS" />
  </update>
</mapper>