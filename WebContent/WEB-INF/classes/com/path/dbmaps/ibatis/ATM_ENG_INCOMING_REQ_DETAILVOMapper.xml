<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ATM_ENG_INCOMING_REQ_DETAIL" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.ATM_ENG_INCOMING_REQ_DETAILVO" >
    <result column="ATM_ENG_INCOMING_REQ_DETAIL_ID" property="ATM_ENG_INCOMING_REQ_DETAIL_ID" />
    <result column="INTERFACE_ID" property="INTERFACE_ID" />
    <result column="MESSAGE_ID" property="MESSAGE_ID" />
    <result column="REQUEST_MAP" property="REQUEST_MAP" />
    <result column="ACQUIRER_CODE" property="ACQUIRER_CODE" />
    <result column="TELLER_CODE" property="TELLER_CODE" />
    <result column="COMP_CODE" property="COMP_CODE" />
    <result column="BRANCH_CODE" property="BRANCH_CODE" />
    <result column="TRX_TYPE" property="TRX_TYPE" />
    <result column="CHARGE_TRX_TYPE" property="CHARGE_TRX_TYPE" />
    <result column="PROCESS_CODE" property="PROCESS_CODE" />
    <result column="TERMINAL_ID" property="TERMINAL_ID" />
    <result column="AUTH_CODE" property="AUTH_CODE" />
    <result column="RETRIEVAL_REF_NB" property="RETRIEVAL_REF_NB" />
  </resultMap>
  <insert id="insertATM_ENG_INCOMING_REQ_DETAIL" parameterType="com.path.dbmaps.vo.ATM_ENG_INCOMING_REQ_DETAILVO" >
       <selectKey resultType="java.math.BigDecimal" keyProperty="ATM_ENG_INCOMING_REQ_DETAIL_ID" order="BEFORE" >
		<if test="isOracle == 1">
			SELECT ATM_ENG_INCOMING_REQ_DTL_SEQ.NEXTVAL FROM dual
		</if>
		<if test="isSybase == 1 and isSQLServer != 1 " >
			SELECT next_identity('ATM_ENG_INCOMING_REQ_DETAIL')
		</if>
		<if test="isSQLServer == 1 " >
			SELECT IDENT_CURRENT ('ATM_ENG_INCOMING_REQ_DETAIL') + 1
		</if>
	</selectKey>
    insert into ATM_ENG_INCOMING_REQ_DETAIL
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="isOracle == 1">
        ATM_ENG_INCOMING_REQ_DETAIL_ID,
      </if>
      <if test="INTERFACE_ID != null and INTERFACE_ID != emptyBigDecimalValue" >
        INTERFACE_ID,
      </if>
      <if test="MESSAGE_ID != null and MESSAGE_ID != emptyBigDecimalValue" >
        MESSAGE_ID,
      </if>
      <if test="REQUEST_MAP != null and !&quot;&quot;.equals(REQUEST_MAP)" >
        REQUEST_MAP,
      </if>
      <if test="ACQUIRER_CODE != null and ACQUIRER_CODE != emptyBigDecimalValue" >
        ACQUIRER_CODE,
      </if>
      <if test="TELLER_CODE != null and TELLER_CODE != emptyBigDecimalValue" >
        TELLER_CODE,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        BRANCH_CODE,
      </if>
      <if test="TRX_TYPE != null and TRX_TYPE != emptyBigDecimalValue" >
        TRX_TYPE,
      </if>
      <if test="CHARGE_TRX_TYPE != null and CHARGE_TRX_TYPE != emptyBigDecimalValue" >
        CHARGE_TRX_TYPE,
      </if>
      <if test="PROCESS_CODE != null and !&quot;&quot;.equals(PROCESS_CODE)" >
        PROCESS_CODE,
      </if>
      <if test="TERMINAL_ID != null and !&quot;&quot;.equals(TERMINAL_ID)" >
        TERMINAL_ID,
      </if>
      <if test="AUTH_CODE != null and !&quot;&quot;.equals(AUTH_CODE)" >
        AUTH_CODE,
      </if>
      <if test="RETRIEVAL_REF_NB != null and !&quot;&quot;.equals(RETRIEVAL_REF_NB)" >
        RETRIEVAL_REF_NB,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
     <if test="isOracle == 1">
        #{ATM_ENG_INCOMING_REQ_DETAIL_ID},
      </if>
      <if test="INTERFACE_ID != null and INTERFACE_ID != emptyBigDecimalValue" >
        #{INTERFACE_ID},
      </if>
      <if test="MESSAGE_ID != null and MESSAGE_ID != emptyBigDecimalValue" >
        #{MESSAGE_ID},
      </if>
      <if test="REQUEST_MAP != null and !&quot;&quot;.equals(REQUEST_MAP)" >
        #{REQUEST_MAP},
      </if>
      <if test="ACQUIRER_CODE != null and ACQUIRER_CODE != emptyBigDecimalValue" >
        #{ACQUIRER_CODE},
      </if>
      <if test="TELLER_CODE != null and TELLER_CODE != emptyBigDecimalValue" >
        #{TELLER_CODE},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        #{BRANCH_CODE},
      </if>
      <if test="TRX_TYPE != null and TRX_TYPE != emptyBigDecimalValue" >
        #{TRX_TYPE},
      </if>
      <if test="CHARGE_TRX_TYPE != null and CHARGE_TRX_TYPE != emptyBigDecimalValue" >
        #{CHARGE_TRX_TYPE},
      </if>
      <if test="PROCESS_CODE != null and !&quot;&quot;.equals(PROCESS_CODE)" >
        #{PROCESS_CODE},
      </if>
      <if test="TERMINAL_ID != null and !&quot;&quot;.equals(TERMINAL_ID)" >
        #{TERMINAL_ID},
      </if>
      <if test="AUTH_CODE != null and !&quot;&quot;.equals(AUTH_CODE)" >
        #{AUTH_CODE},
      </if>
      <if test="RETRIEVAL_REF_NB != null and !&quot;&quot;.equals(RETRIEVAL_REF_NB)" >
        #{RETRIEVAL_REF_NB},
      </if>
    </trim>
  </insert>
</mapper>