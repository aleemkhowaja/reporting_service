<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="FMSCOLLATERAL_ARCHIVE" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.FMSCOLLATERAL_ARCHIVEVO" >
    <id column="BRANCH" property="BRANCH" />
    <id column="COLLATERAL_CODE" property="COLLATERAL_CODE" />
    <id column="COMP_CODE" property="COMP_CODE" />
    <id column="LINE_NBR" property="LINE_NBR" />
    <result column="DATE_OF_CHANGE" property="DATE_OF_CHANGE" />
    <result column="MARKET_VALUE" property="MARKET_VALUE" />
    <result column="MARKET_VALUATION_DATE" property="MARKET_VALUATION_DATE" />
    <result column="BANK_VALUE" property="BANK_VALUE" />
    <result column="BANK_VALUATION_DATE" property="BANK_VALUATION_DATE" />
    <result column="BOOK_VALUE" property="BOOK_VALUE" />
    <result column="VALID_FROM" property="VALID_FROM" />
    <result column="MARKET_CY_RATE" property="MARKET_CY_RATE" />
    <result column="MARKET_CY_UNIT" property="MARKET_CY_UNIT" />
    <result column="MARKET_MULT_DIV" property="MARKET_MULT_DIV" />
    <result column="BANK_CY_RATE" property="BANK_CY_RATE" />
    <result column="BANK_CY_UNIT" property="BANK_CY_UNIT" />
    <result column="BANK_MULT_DIV" property="BANK_MULT_DIV" />
    <result column="BOOK_CY_RATE" property="BOOK_CY_RATE" />
    <result column="QTY" property="QTY" />
    <result column="MARKET_PRICE" property="MARKET_PRICE" />
    <result column="ORIGIN_APP" property="ORIGIN_APP" />
    <result column="VALUE_SECURITY" property="VALUE_SECURITY" />
    <result column="MARKET_PRICE_CV" property="MARKET_PRICE_CV" />
    <result column="AMOUNT" property="AMOUNT" />
    <result column="FORCED_SALE_VALUE" property="FORCED_SALE_VALUE" />
    <result column="FORCED_VALUATION_DATE" property="FORCED_VALUATION_DATE" />
  </resultMap>
  <sql id="Base_Column_List" >
    BRANCH, COLLATERAL_CODE, COMP_CODE, LINE_NBR, DATE_OF_CHANGE, MARKET_VALUE, MARKET_VALUATION_DATE, 
    BANK_VALUE, BANK_VALUATION_DATE, BOOK_VALUE, VALID_FROM, MARKET_CY_RATE, MARKET_CY_UNIT, 
    MARKET_MULT_DIV, BANK_CY_RATE, BANK_CY_UNIT, BANK_MULT_DIV, BOOK_CY_RATE, QTY, MARKET_PRICE, 
    ORIGIN_APP, VALUE_SECURITY, MARKET_PRICE_CV, AMOUNT, FORCED_SALE_VALUE, FORCED_VALUATION_DATE
  </sql>
  <select id="selectFMSCOLLATERAL_ARCHIVE" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.FMSCOLLATERAL_ARCHIVEVOKey" >
    select 
    <include refid="Base_Column_List" />
    from FMSCOLLATERAL_ARCHIVE
    where BRANCH = #{BRANCH}
      and COLLATERAL_CODE = #{COLLATERAL_CODE}
      and COMP_CODE = #{COMP_CODE}
      and LINE_NBR = #{LINE_NBR}
  </select>
  <delete id="deleteFMSCOLLATERAL_ARCHIVE" parameterType="com.path.dbmaps.vo.FMSCOLLATERAL_ARCHIVEVOKey" >
    delete from FMSCOLLATERAL_ARCHIVE
    where BRANCH = #{BRANCH}
      and COLLATERAL_CODE = #{COLLATERAL_CODE}
      and COMP_CODE = #{COMP_CODE}
      and LINE_NBR = #{LINE_NBR}
  </delete>
  <insert id="insertFMSCOLLATERAL_ARCHIVE" parameterType="com.path.dbmaps.vo.FMSCOLLATERAL_ARCHIVEVO" >
    insert into FMSCOLLATERAL_ARCHIVE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="BRANCH != null and BRANCH != emptyBigDecimalValue" >
        BRANCH,
      </if>
      <if test="COLLATERAL_CODE != null and COLLATERAL_CODE != emptyBigDecimalValue" >
        COLLATERAL_CODE,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="LINE_NBR != null and LINE_NBR != emptyBigDecimalValue" >
        LINE_NBR,
      </if>
      <if test="DATE_OF_CHANGE != null" >
        DATE_OF_CHANGE,
      </if>
      <if test="MARKET_VALUE != null and MARKET_VALUE != emptyBigDecimalValue" >
        MARKET_VALUE,
      </if>
      <if test="MARKET_VALUATION_DATE != null" >
        MARKET_VALUATION_DATE,
      </if>
      <if test="BANK_VALUE != null and BANK_VALUE != emptyBigDecimalValue" >
        BANK_VALUE,
      </if>
      <if test="BANK_VALUATION_DATE != null" >
        BANK_VALUATION_DATE,
      </if>
      <if test="BOOK_VALUE != null and BOOK_VALUE != emptyBigDecimalValue" >
        BOOK_VALUE,
      </if>
      <if test="VALID_FROM != null" >
        VALID_FROM,
      </if>
      <if test="MARKET_CY_RATE != null and MARKET_CY_RATE != emptyBigDecimalValue" >
        MARKET_CY_RATE,
      </if>
      <if test="MARKET_CY_UNIT != null and MARKET_CY_UNIT != emptyBigDecimalValue" >
        MARKET_CY_UNIT,
      </if>
      <if test="MARKET_MULT_DIV != null and !&quot;&quot;.equals(MARKET_MULT_DIV)" >
        MARKET_MULT_DIV,
      </if>
      <if test="BANK_CY_RATE != null and BANK_CY_RATE != emptyBigDecimalValue" >
        BANK_CY_RATE,
      </if>
      <if test="BANK_CY_UNIT != null and BANK_CY_UNIT != emptyBigDecimalValue" >
        BANK_CY_UNIT,
      </if>
      <if test="BANK_MULT_DIV != null and !&quot;&quot;.equals(BANK_MULT_DIV)" >
        BANK_MULT_DIV,
      </if>
      <if test="BOOK_CY_RATE != null and BOOK_CY_RATE != emptyBigDecimalValue" >
        BOOK_CY_RATE,
      </if>
      <if test="QTY != null and QTY != emptyBigDecimalValue" >
        QTY,
      </if>
      <if test="MARKET_PRICE != null and MARKET_PRICE != emptyBigDecimalValue" >
        MARKET_PRICE,
      </if>
      <if test="ORIGIN_APP != null and !&quot;&quot;.equals(ORIGIN_APP)" >
        ORIGIN_APP,
      </if>
      <if test="VALUE_SECURITY != null and VALUE_SECURITY != emptyBigDecimalValue" >
        VALUE_SECURITY,
      </if>
      <if test="MARKET_PRICE_CV != null and MARKET_PRICE_CV != emptyBigDecimalValue" >
        MARKET_PRICE_CV,
      </if>
      <if test="AMOUNT != null and AMOUNT != emptyBigDecimalValue" >
        AMOUNT,
      </if>
      <if test="FORCED_SALE_VALUE != null and FORCED_SALE_VALUE != emptyBigDecimalValue" >
        FORCED_SALE_VALUE,
      </if>
      <if test="FORCED_VALUATION_DATE != null" >
        FORCED_VALUATION_DATE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="BRANCH != null and BRANCH != emptyBigDecimalValue" >
        #{BRANCH},
      </if>
      <if test="COLLATERAL_CODE != null and COLLATERAL_CODE != emptyBigDecimalValue" >
        #{COLLATERAL_CODE},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="LINE_NBR != null and LINE_NBR != emptyBigDecimalValue" >
        #{LINE_NBR},
      </if>
      <if test="DATE_OF_CHANGE != null" >
        #{DATE_OF_CHANGE},
      </if>
      <if test="MARKET_VALUE != null and MARKET_VALUE != emptyBigDecimalValue" >
        #{MARKET_VALUE},
      </if>
      <if test="MARKET_VALUATION_DATE != null" >
        #{MARKET_VALUATION_DATE},
      </if>
      <if test="BANK_VALUE != null and BANK_VALUE != emptyBigDecimalValue" >
        #{BANK_VALUE},
      </if>
      <if test="BANK_VALUATION_DATE != null" >
        #{BANK_VALUATION_DATE},
      </if>
      <if test="BOOK_VALUE != null and BOOK_VALUE != emptyBigDecimalValue" >
        #{BOOK_VALUE},
      </if>
      <if test="VALID_FROM != null" >
        #{VALID_FROM},
      </if>
      <if test="MARKET_CY_RATE != null and MARKET_CY_RATE != emptyBigDecimalValue" >
        #{MARKET_CY_RATE},
      </if>
      <if test="MARKET_CY_UNIT != null and MARKET_CY_UNIT != emptyBigDecimalValue" >
        #{MARKET_CY_UNIT},
      </if>
      <if test="MARKET_MULT_DIV != null and !&quot;&quot;.equals(MARKET_MULT_DIV)" >
        #{MARKET_MULT_DIV},
      </if>
      <if test="BANK_CY_RATE != null and BANK_CY_RATE != emptyBigDecimalValue" >
        #{BANK_CY_RATE},
      </if>
      <if test="BANK_CY_UNIT != null and BANK_CY_UNIT != emptyBigDecimalValue" >
        #{BANK_CY_UNIT},
      </if>
      <if test="BANK_MULT_DIV != null and !&quot;&quot;.equals(BANK_MULT_DIV)" >
        #{BANK_MULT_DIV},
      </if>
      <if test="BOOK_CY_RATE != null and BOOK_CY_RATE != emptyBigDecimalValue" >
        #{BOOK_CY_RATE},
      </if>
      <if test="QTY != null and QTY != emptyBigDecimalValue" >
        #{QTY},
      </if>
      <if test="MARKET_PRICE != null and MARKET_PRICE != emptyBigDecimalValue" >
        #{MARKET_PRICE},
      </if>
      <if test="ORIGIN_APP != null and !&quot;&quot;.equals(ORIGIN_APP)" >
        #{ORIGIN_APP},
      </if>
      <if test="VALUE_SECURITY != null and VALUE_SECURITY != emptyBigDecimalValue" >
        #{VALUE_SECURITY},
      </if>
      <if test="MARKET_PRICE_CV != null and MARKET_PRICE_CV != emptyBigDecimalValue" >
        #{MARKET_PRICE_CV},
      </if>
      <if test="AMOUNT != null and AMOUNT != emptyBigDecimalValue" >
        #{AMOUNT},
      </if>
      <if test="FORCED_SALE_VALUE != null and FORCED_SALE_VALUE != emptyBigDecimalValue" >
        #{FORCED_SALE_VALUE},
      </if>
      <if test="FORCED_VALUATION_DATE != null" >
        #{FORCED_VALUATION_DATE},
      </if>
    </trim>
  </insert>
  <sql id="sql_updateFMSCOLLATERAL_ARCHIVE" >
    update FMSCOLLATERAL_ARCHIVE
    <set >
      <if test="DATE_OF_CHANGE != null" >
        DATE_OF_CHANGE = #{DATE_OF_CHANGE},
      </if>
      <if test="MARKET_VALUE != null" >
        <choose >
          <when test="MARKET_VALUE == emptyBigDecimalValue" >
            MARKET_VALUE = NULL ,
          </when>
          <otherwise >
            MARKET_VALUE = #{MARKET_VALUE},
          </otherwise>
        </choose>
      </if>
      <if test="MARKET_VALUATION_DATE != null" >
        MARKET_VALUATION_DATE = #{MARKET_VALUATION_DATE},
      </if>
      <if test="BANK_VALUE != null" >
        <choose >
          <when test="BANK_VALUE == emptyBigDecimalValue" >
            BANK_VALUE = NULL ,
          </when>
          <otherwise >
            BANK_VALUE = #{BANK_VALUE},
          </otherwise>
        </choose>
      </if>
      <if test="BANK_VALUATION_DATE != null" >
        BANK_VALUATION_DATE = #{BANK_VALUATION_DATE},
      </if>
      <if test="BOOK_VALUE != null" >
        <choose >
          <when test="BOOK_VALUE == emptyBigDecimalValue" >
            BOOK_VALUE = NULL ,
          </when>
          <otherwise >
            BOOK_VALUE = #{BOOK_VALUE},
          </otherwise>
        </choose>
      </if>
      <if test="VALID_FROM != null" >
        VALID_FROM = #{VALID_FROM},
      </if>
      <if test="MARKET_CY_RATE != null" >
        <choose >
          <when test="MARKET_CY_RATE == emptyBigDecimalValue" >
            MARKET_CY_RATE = NULL ,
          </when>
          <otherwise >
            MARKET_CY_RATE = #{MARKET_CY_RATE},
          </otherwise>
        </choose>
      </if>
      <if test="MARKET_CY_UNIT != null" >
        <choose >
          <when test="MARKET_CY_UNIT == emptyBigDecimalValue" >
            MARKET_CY_UNIT = NULL ,
          </when>
          <otherwise >
            MARKET_CY_UNIT = #{MARKET_CY_UNIT},
          </otherwise>
        </choose>
      </if>
      <if test="MARKET_MULT_DIV != null" >
        <choose >
          <when test="MARKET_MULT_DIV.equals(&quot;&quot;)" >
            MARKET_MULT_DIV = NULL ,
          </when>
          <otherwise >
            MARKET_MULT_DIV = #{MARKET_MULT_DIV},
          </otherwise>
        </choose>
      </if>
      <if test="BANK_CY_RATE != null" >
        <choose >
          <when test="BANK_CY_RATE == emptyBigDecimalValue" >
            BANK_CY_RATE = NULL ,
          </when>
          <otherwise >
            BANK_CY_RATE = #{BANK_CY_RATE},
          </otherwise>
        </choose>
      </if>
      <if test="BANK_CY_UNIT != null" >
        <choose >
          <when test="BANK_CY_UNIT == emptyBigDecimalValue" >
            BANK_CY_UNIT = NULL ,
          </when>
          <otherwise >
            BANK_CY_UNIT = #{BANK_CY_UNIT},
          </otherwise>
        </choose>
      </if>
      <if test="BANK_MULT_DIV != null" >
        <choose >
          <when test="BANK_MULT_DIV.equals(&quot;&quot;)" >
            BANK_MULT_DIV = NULL ,
          </when>
          <otherwise >
            BANK_MULT_DIV = #{BANK_MULT_DIV},
          </otherwise>
        </choose>
      </if>
      <if test="BOOK_CY_RATE != null" >
        <choose >
          <when test="BOOK_CY_RATE == emptyBigDecimalValue" >
            BOOK_CY_RATE = NULL ,
          </when>
          <otherwise >
            BOOK_CY_RATE = #{BOOK_CY_RATE},
          </otherwise>
        </choose>
      </if>
      <if test="QTY != null" >
        <choose >
          <when test="QTY == emptyBigDecimalValue" >
            QTY = NULL ,
          </when>
          <otherwise >
            QTY = #{QTY},
          </otherwise>
        </choose>
      </if>
      <if test="MARKET_PRICE != null" >
        <choose >
          <when test="MARKET_PRICE == emptyBigDecimalValue" >
            MARKET_PRICE = NULL ,
          </when>
          <otherwise >
            MARKET_PRICE = #{MARKET_PRICE},
          </otherwise>
        </choose>
      </if>
      <if test="ORIGIN_APP != null" >
        <choose >
          <when test="ORIGIN_APP.equals(&quot;&quot;)" >
            ORIGIN_APP = NULL ,
          </when>
          <otherwise >
            ORIGIN_APP = #{ORIGIN_APP},
          </otherwise>
        </choose>
      </if>
      <if test="VALUE_SECURITY != null" >
        <choose >
          <when test="VALUE_SECURITY == emptyBigDecimalValue" >
            VALUE_SECURITY = NULL ,
          </when>
          <otherwise >
            VALUE_SECURITY = #{VALUE_SECURITY},
          </otherwise>
        </choose>
      </if>
      <if test="MARKET_PRICE_CV != null" >
        <choose >
          <when test="MARKET_PRICE_CV == emptyBigDecimalValue" >
            MARKET_PRICE_CV = NULL ,
          </when>
          <otherwise >
            MARKET_PRICE_CV = #{MARKET_PRICE_CV},
          </otherwise>
        </choose>
      </if>
      <if test="AMOUNT != null" >
        <choose >
          <when test="AMOUNT == emptyBigDecimalValue" >
            AMOUNT = NULL ,
          </when>
          <otherwise >
            AMOUNT = #{AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="FORCED_SALE_VALUE != null" >
        <choose >
          <when test="FORCED_SALE_VALUE == emptyBigDecimalValue" >
            FORCED_SALE_VALUE = NULL ,
          </when>
          <otherwise >
            FORCED_SALE_VALUE = #{FORCED_SALE_VALUE},
          </otherwise>
        </choose>
      </if>
      <if test="FORCED_VALUATION_DATE != null" >
        FORCED_VALUATION_DATE = #{FORCED_VALUATION_DATE},
      </if>
    </set>
    where BRANCH = #{BRANCH}
      and COLLATERAL_CODE = #{COLLATERAL_CODE}
      and COMP_CODE = #{COMP_CODE}
      and LINE_NBR = #{LINE_NBR}
  </sql>
  <update id="updateFMSCOLLATERAL_ARCHIVE" parameterType="com.path.dbmaps.vo.FMSCOLLATERAL_ARCHIVEVO" >
    <include refid="sql_updateFMSCOLLATERAL_ARCHIVE" />
  </update>
</mapper>