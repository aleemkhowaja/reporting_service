<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="CTS_AMF_KYC_DETAILS" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.CTS_AMF_KYC_DETAILSVO" >
    <id column="BRANCH_CODE" property="BRANCH_CODE" />
    <id column="CIF_SUB_NO" property="CIF_SUB_NO" />
    <id column="COMP_CODE" property="COMP_CODE" />
    <id column="CURRENCY_CODE" property="CURRENCY_CODE" />
    <id column="GL_CODE" property="GL_CODE" />
    <id column="SL_NO" property="SL_NO" />
    <result column="ACC_PURPOSE" property="ACC_PURPOSE" />
    <result column="MOD_OF_TRX_CASH_YN" property="MOD_OF_TRX_CASH_YN" />
    <result column="MOD_OF_TRX_CLEARING_YN" property="MOD_OF_TRX_CLEARING_YN" />
    <result column="MOD_OF_TRX_INTERNET_YN" property="MOD_OF_TRX_INTERNET_YN" />
    <result column="MOD_OF_TRX_INTERNAL_YN" property="MOD_OF_TRX_INTERNAL_YN" />
    <result column="MOD_OF_TRX_MOBILE_YN" property="MOD_OF_TRX_MOBILE_YN" />
    <result column="MOD_OF_TRX_ATM_YN" property="MOD_OF_TRX_ATM_YN" />
    <result column="MOD_OF_TRX_REMIT_YN" property="MOD_OF_TRX_REMIT_YN" />
    <result column="MOD_OF_TRX_OTHERS_YN" property="MOD_OF_TRX_OTHERS_YN" />
    <result column="MOD_OF_TRX_OTHER_VAL" property="MOD_OF_TRX_OTHER_VAL" />
    <result column="EXPECTED_NO_CR_TRX" property="EXPECTED_NO_CR_TRX" />
    <result column="EXPECTED_NO_DR_TRX" property="EXPECTED_NO_DR_TRX" />
    <result column="EXPECTED_CR_AMOUNT" property="EXPECTED_CR_AMOUNT" />
    <result column="EXPECTED_DR_AMOUNT" property="EXPECTED_DR_AMOUNT" />
  </resultMap>
  <sql id="Base_Column_List" >
    BRANCH_CODE, CIF_SUB_NO, COMP_CODE, CURRENCY_CODE, GL_CODE, SL_NO, ACC_PURPOSE, MOD_OF_TRX_CASH_YN, 
    MOD_OF_TRX_CLEARING_YN, MOD_OF_TRX_INTERNET_YN, MOD_OF_TRX_INTERNAL_YN, MOD_OF_TRX_MOBILE_YN, 
    MOD_OF_TRX_ATM_YN, MOD_OF_TRX_REMIT_YN, MOD_OF_TRX_OTHERS_YN, MOD_OF_TRX_OTHER_VAL, 
    EXPECTED_NO_CR_TRX, EXPECTED_NO_DR_TRX, EXPECTED_CR_AMOUNT, EXPECTED_DR_AMOUNT
  </sql>
  <select id="selectCTS_AMF_KYC_DETAILS" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.CTS_AMF_KYC_DETAILSVO" >
    select 
    <include refid="Base_Column_List" />
    from CTS_AMF_KYC_DETAILS
    where BRANCH_CODE = #{BRANCH_CODE}
      and CIF_SUB_NO = #{CIF_SUB_NO}
      and COMP_CODE = #{COMP_CODE}
      and CURRENCY_CODE = #{CURRENCY_CODE}
      and GL_CODE = #{GL_CODE}
      and SL_NO = #{SL_NO}
  </select>
  <delete id="deleteCTS_AMF_KYC_DETAILS" parameterType="com.path.dbmaps.vo.CTS_AMF_KYC_DETAILSVO" >
    delete from CTS_AMF_KYC_DETAILS
    where BRANCH_CODE = #{BRANCH_CODE}
      and CIF_SUB_NO = #{CIF_SUB_NO}
      and COMP_CODE = #{COMP_CODE}
      and CURRENCY_CODE = #{CURRENCY_CODE}
      and GL_CODE = #{GL_CODE}
      and SL_NO = #{SL_NO}
  </delete>
  <insert id="insertCTS_AMF_KYC_DETAILS" parameterType="com.path.dbmaps.vo.CTS_AMF_KYC_DETAILSVO" >
    insert into CTS_AMF_KYC_DETAILS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        BRANCH_CODE,
      </if>
      <if test="CIF_SUB_NO != null and CIF_SUB_NO != emptyBigDecimalValue" >
        CIF_SUB_NO,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="CURRENCY_CODE != null and CURRENCY_CODE != emptyBigDecimalValue" >
        CURRENCY_CODE,
      </if>
      <if test="GL_CODE != null and GL_CODE != emptyBigDecimalValue" >
        GL_CODE,
      </if>
      <if test="SL_NO != null and SL_NO != emptyBigDecimalValue" >
        SL_NO,
      </if>
      <if test="ACC_PURPOSE != null and ACC_PURPOSE != emptyBigDecimalValue" >
        ACC_PURPOSE,
      </if>
      <if test="MOD_OF_TRX_CASH_YN != null and !&quot;&quot;.equals(MOD_OF_TRX_CASH_YN)" >
        MOD_OF_TRX_CASH_YN,
      </if>
      <if test="MOD_OF_TRX_CLEARING_YN != null and !&quot;&quot;.equals(MOD_OF_TRX_CLEARING_YN)" >
        MOD_OF_TRX_CLEARING_YN,
      </if>
      <if test="MOD_OF_TRX_INTERNET_YN != null and !&quot;&quot;.equals(MOD_OF_TRX_INTERNET_YN)" >
        MOD_OF_TRX_INTERNET_YN,
      </if>
      <if test="MOD_OF_TRX_INTERNAL_YN != null and !&quot;&quot;.equals(MOD_OF_TRX_INTERNAL_YN)" >
        MOD_OF_TRX_INTERNAL_YN,
      </if>
      <if test="MOD_OF_TRX_MOBILE_YN != null and !&quot;&quot;.equals(MOD_OF_TRX_MOBILE_YN)" >
        MOD_OF_TRX_MOBILE_YN,
      </if>
      <if test="MOD_OF_TRX_ATM_YN != null and !&quot;&quot;.equals(MOD_OF_TRX_ATM_YN)" >
        MOD_OF_TRX_ATM_YN,
      </if>
      <if test="MOD_OF_TRX_REMIT_YN != null and !&quot;&quot;.equals(MOD_OF_TRX_REMIT_YN)" >
        MOD_OF_TRX_REMIT_YN,
      </if>
      <if test="MOD_OF_TRX_OTHERS_YN != null and !&quot;&quot;.equals(MOD_OF_TRX_OTHERS_YN)" >
        MOD_OF_TRX_OTHERS_YN,
      </if>
      <if test="MOD_OF_TRX_OTHER_VAL != null and !&quot;&quot;.equals(MOD_OF_TRX_OTHER_VAL)" >
        MOD_OF_TRX_OTHER_VAL,
      </if>
      <if test="EXPECTED_NO_CR_TRX != null and EXPECTED_NO_CR_TRX != emptyBigDecimalValue" >
        EXPECTED_NO_CR_TRX,
      </if>
      <if test="EXPECTED_NO_DR_TRX != null and EXPECTED_NO_DR_TRX != emptyBigDecimalValue" >
        EXPECTED_NO_DR_TRX,
      </if>
      <if test="EXPECTED_CR_AMOUNT != null and EXPECTED_CR_AMOUNT != emptyBigDecimalValue" >
        EXPECTED_CR_AMOUNT,
      </if>
      <if test="EXPECTED_DR_AMOUNT != null and EXPECTED_DR_AMOUNT != emptyBigDecimalValue" >
        EXPECTED_DR_AMOUNT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        #{BRANCH_CODE},
      </if>
      <if test="CIF_SUB_NO != null and CIF_SUB_NO != emptyBigDecimalValue" >
        #{CIF_SUB_NO},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="CURRENCY_CODE != null and CURRENCY_CODE != emptyBigDecimalValue" >
        #{CURRENCY_CODE},
      </if>
      <if test="GL_CODE != null and GL_CODE != emptyBigDecimalValue" >
        #{GL_CODE},
      </if>
      <if test="SL_NO != null and SL_NO != emptyBigDecimalValue" >
        #{SL_NO},
      </if>
      <if test="ACC_PURPOSE != null and ACC_PURPOSE != emptyBigDecimalValue" >
        #{ACC_PURPOSE},
      </if>
      <if test="MOD_OF_TRX_CASH_YN != null and !&quot;&quot;.equals(MOD_OF_TRX_CASH_YN)" >
        #{MOD_OF_TRX_CASH_YN},
      </if>
      <if test="MOD_OF_TRX_CLEARING_YN != null and !&quot;&quot;.equals(MOD_OF_TRX_CLEARING_YN)" >
        #{MOD_OF_TRX_CLEARING_YN},
      </if>
      <if test="MOD_OF_TRX_INTERNET_YN != null and !&quot;&quot;.equals(MOD_OF_TRX_INTERNET_YN)" >
        #{MOD_OF_TRX_INTERNET_YN},
      </if>
      <if test="MOD_OF_TRX_INTERNAL_YN != null and !&quot;&quot;.equals(MOD_OF_TRX_INTERNAL_YN)" >
        #{MOD_OF_TRX_INTERNAL_YN},
      </if>
      <if test="MOD_OF_TRX_MOBILE_YN != null and !&quot;&quot;.equals(MOD_OF_TRX_MOBILE_YN)" >
        #{MOD_OF_TRX_MOBILE_YN},
      </if>
      <if test="MOD_OF_TRX_ATM_YN != null and !&quot;&quot;.equals(MOD_OF_TRX_ATM_YN)" >
        #{MOD_OF_TRX_ATM_YN},
      </if>
      <if test="MOD_OF_TRX_REMIT_YN != null and !&quot;&quot;.equals(MOD_OF_TRX_REMIT_YN)" >
        #{MOD_OF_TRX_REMIT_YN},
      </if>
      <if test="MOD_OF_TRX_OTHERS_YN != null and !&quot;&quot;.equals(MOD_OF_TRX_OTHERS_YN)" >
        #{MOD_OF_TRX_OTHERS_YN},
      </if>
      <if test="MOD_OF_TRX_OTHER_VAL != null and !&quot;&quot;.equals(MOD_OF_TRX_OTHER_VAL)" >
        #{MOD_OF_TRX_OTHER_VAL},
      </if>
      <if test="EXPECTED_NO_CR_TRX != null and EXPECTED_NO_CR_TRX != emptyBigDecimalValue" >
        #{EXPECTED_NO_CR_TRX},
      </if>
      <if test="EXPECTED_NO_DR_TRX != null and EXPECTED_NO_DR_TRX != emptyBigDecimalValue" >
        #{EXPECTED_NO_DR_TRX},
      </if>
      <if test="EXPECTED_CR_AMOUNT != null and EXPECTED_CR_AMOUNT != emptyBigDecimalValue" >
        #{EXPECTED_CR_AMOUNT},
      </if>
      <if test="EXPECTED_DR_AMOUNT != null and EXPECTED_DR_AMOUNT != emptyBigDecimalValue" >
        #{EXPECTED_DR_AMOUNT},
      </if>
    </trim>
  </insert>
  <sql id="sql_updateCTS_AMF_KYC_DETAILS" >
    update CTS_AMF_KYC_DETAILS
    <set >
      <if test="ACC_PURPOSE != null" >
        <choose >
          <when test="ACC_PURPOSE == emptyBigDecimalValue" >
            ACC_PURPOSE = NULL ,
          </when>
          <otherwise >
            ACC_PURPOSE = #{ACC_PURPOSE},
          </otherwise>
        </choose>
      </if>
      <if test="MOD_OF_TRX_CASH_YN != null" >
        <choose >
          <when test="MOD_OF_TRX_CASH_YN.equals(&quot;&quot;)" >
            MOD_OF_TRX_CASH_YN = NULL ,
          </when>
          <otherwise >
            MOD_OF_TRX_CASH_YN = #{MOD_OF_TRX_CASH_YN},
          </otherwise>
        </choose>
      </if>
      <if test="MOD_OF_TRX_CLEARING_YN != null" >
        <choose >
          <when test="MOD_OF_TRX_CLEARING_YN.equals(&quot;&quot;)" >
            MOD_OF_TRX_CLEARING_YN = NULL ,
          </when>
          <otherwise >
            MOD_OF_TRX_CLEARING_YN = #{MOD_OF_TRX_CLEARING_YN},
          </otherwise>
        </choose>
      </if>
      <if test="MOD_OF_TRX_INTERNET_YN != null" >
        <choose >
          <when test="MOD_OF_TRX_INTERNET_YN.equals(&quot;&quot;)" >
            MOD_OF_TRX_INTERNET_YN = NULL ,
          </when>
          <otherwise >
            MOD_OF_TRX_INTERNET_YN = #{MOD_OF_TRX_INTERNET_YN},
          </otherwise>
        </choose>
      </if>
      <if test="MOD_OF_TRX_INTERNAL_YN != null" >
        <choose >
          <when test="MOD_OF_TRX_INTERNAL_YN.equals(&quot;&quot;)" >
            MOD_OF_TRX_INTERNAL_YN = NULL ,
          </when>
          <otherwise >
            MOD_OF_TRX_INTERNAL_YN = #{MOD_OF_TRX_INTERNAL_YN},
          </otherwise>
        </choose>
      </if>
      <if test="MOD_OF_TRX_MOBILE_YN != null" >
        <choose >
          <when test="MOD_OF_TRX_MOBILE_YN.equals(&quot;&quot;)" >
            MOD_OF_TRX_MOBILE_YN = NULL ,
          </when>
          <otherwise >
            MOD_OF_TRX_MOBILE_YN = #{MOD_OF_TRX_MOBILE_YN},
          </otherwise>
        </choose>
      </if>
      <if test="MOD_OF_TRX_ATM_YN != null" >
        <choose >
          <when test="MOD_OF_TRX_ATM_YN.equals(&quot;&quot;)" >
            MOD_OF_TRX_ATM_YN = NULL ,
          </when>
          <otherwise >
            MOD_OF_TRX_ATM_YN = #{MOD_OF_TRX_ATM_YN},
          </otherwise>
        </choose>
      </if>
      <if test="MOD_OF_TRX_REMIT_YN != null" >
        <choose >
          <when test="MOD_OF_TRX_REMIT_YN.equals(&quot;&quot;)" >
            MOD_OF_TRX_REMIT_YN = NULL ,
          </when>
          <otherwise >
            MOD_OF_TRX_REMIT_YN = #{MOD_OF_TRX_REMIT_YN},
          </otherwise>
        </choose>
      </if>
      <if test="MOD_OF_TRX_OTHERS_YN != null" >
        <choose >
          <when test="MOD_OF_TRX_OTHERS_YN.equals(&quot;&quot;)" >
            MOD_OF_TRX_OTHERS_YN = NULL ,
          </when>
          <otherwise >
            MOD_OF_TRX_OTHERS_YN = #{MOD_OF_TRX_OTHERS_YN},
          </otherwise>
        </choose>
      </if>
      <if test="MOD_OF_TRX_OTHER_VAL != null" >
        <choose >
          <when test="MOD_OF_TRX_OTHER_VAL.equals(&quot;&quot;)" >
            MOD_OF_TRX_OTHER_VAL = NULL ,
          </when>
          <otherwise >
            MOD_OF_TRX_OTHER_VAL = #{MOD_OF_TRX_OTHER_VAL},
          </otherwise>
        </choose>
      </if>
      <if test="EXPECTED_NO_CR_TRX != null" >
        <choose >
          <when test="EXPECTED_NO_CR_TRX == emptyBigDecimalValue" >
            EXPECTED_NO_CR_TRX = NULL ,
          </when>
          <otherwise >
            EXPECTED_NO_CR_TRX = #{EXPECTED_NO_CR_TRX},
          </otherwise>
        </choose>
      </if>
      <if test="EXPECTED_NO_DR_TRX != null" >
        <choose >
          <when test="EXPECTED_NO_DR_TRX == emptyBigDecimalValue" >
            EXPECTED_NO_DR_TRX = NULL ,
          </when>
          <otherwise >
            EXPECTED_NO_DR_TRX = #{EXPECTED_NO_DR_TRX},
          </otherwise>
        </choose>
      </if>
      <if test="EXPECTED_CR_AMOUNT != null" >
        <choose >
          <when test="EXPECTED_CR_AMOUNT == emptyBigDecimalValue" >
            EXPECTED_CR_AMOUNT = NULL ,
          </when>
          <otherwise >
            EXPECTED_CR_AMOUNT = #{EXPECTED_CR_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="EXPECTED_DR_AMOUNT != null" >
        <choose >
          <when test="EXPECTED_DR_AMOUNT == emptyBigDecimalValue" >
            EXPECTED_DR_AMOUNT = NULL ,
          </when>
          <otherwise >
            EXPECTED_DR_AMOUNT = #{EXPECTED_DR_AMOUNT},
          </otherwise>
        </choose>
      </if>
    </set>
    where BRANCH_CODE = #{BRANCH_CODE}
      and CIF_SUB_NO = #{CIF_SUB_NO}
      and COMP_CODE = #{COMP_CODE}
      and CURRENCY_CODE = #{CURRENCY_CODE}
      and GL_CODE = #{GL_CODE}
      and SL_NO = #{SL_NO}
  </sql>
  <update id="updateCTS_AMF_KYC_DETAILS" parameterType="com.path.dbmaps.vo.CTS_AMF_KYC_DETAILSVO" >
    <include refid="sql_updateCTS_AMF_KYC_DETAILS" />
  </update>
</mapper>