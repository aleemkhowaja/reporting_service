<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="SWIFT_MSGDET_IN" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.SWIFT_MSGDET_INVO" >
    <id column="ACK" property="ACK" />
    <id column="ALLOC_LINE_NBR" property="ALLOC_LINE_NBR" />
    <id column="MSG_CODE" property="MSG_CODE" />
    <id column="SEQ" property="SEQ" />
    <result column="TAG" property="TAG" />
    <result column="TAG_LINE" property="TAG_LINE" />
    <result column="VALUE_EXP" property="VALUE_EXP" />
    <result column="INPUT_PARAM" property="INPUT_PARAM" />
    <result column="DEFAULT_VALUE" property="DEFAULT_VALUE" />
    <result column="ARG_TYPE" property="ARG_TYPE" />
    <result column="OCCURENCE" property="OCCURENCE" />
    <result column="STATUS" property="STATUS" />
    <result column="GROUP_NBR" property="GROUP_NBR" />
    <result column="HDR_DET" property="HDR_DET" />
    <result column="ARG_USED" property="ARG_USED" />
    <result column="ARG_VAR" property="ARG_VAR" />
  </resultMap>
  <sql id="Base_Column_List" >
    ACK, ALLOC_LINE_NBR, MSG_CODE, SEQ, TAG, TAG_LINE, VALUE_EXP, INPUT_PARAM, DEFAULT_VALUE, 
    ARG_TYPE, OCCURENCE, STATUS, GROUP_NBR, HDR_DET, ARG_USED, ARG_VAR
  </sql>
  <select id="selectSWIFT_MSGDET_IN" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.SWIFT_MSGDET_INVO" >
    select 
    <include refid="Base_Column_List" />
    from SWIFT_MSGDET_IN
    where ACK = #{ACK}
      and ALLOC_LINE_NBR = #{ALLOC_LINE_NBR}
      and MSG_CODE = #{MSG_CODE}
      and SEQ = #{SEQ}
  </select>
  <delete id="deleteSWIFT_MSGDET_IN" parameterType="com.path.dbmaps.vo.SWIFT_MSGDET_INVO" >
    delete from SWIFT_MSGDET_IN
    where ACK = #{ACK}
      and ALLOC_LINE_NBR = #{ALLOC_LINE_NBR}
      and MSG_CODE = #{MSG_CODE}
      and SEQ = #{SEQ}
  </delete>
  <insert id="insertSWIFT_MSGDET_IN" parameterType="com.path.dbmaps.vo.SWIFT_MSGDET_INVO" >
    insert into SWIFT_MSGDET_IN
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="ACK != null and ACK != emptyBigDecimalValue" >
        ACK,
      </if>
      <if test="ALLOC_LINE_NBR != null and ALLOC_LINE_NBR != emptyBigDecimalValue" >
        ALLOC_LINE_NBR,
      </if>
      <if test="MSG_CODE != null and !&quot;&quot;.equals(MSG_CODE)" >
        MSG_CODE,
      </if>
      <if test="SEQ != null and SEQ != emptyBigDecimalValue" >
        SEQ,
      </if>
      <if test="TAG != null and !&quot;&quot;.equals(TAG)" >
        TAG,
      </if>
      <if test="TAG_LINE != null and TAG_LINE != emptyBigDecimalValue" >
        TAG_LINE,
      </if>
      <if test="VALUE_EXP != null and !&quot;&quot;.equals(VALUE_EXP)" >
        VALUE_EXP,
      </if>
      <if test="INPUT_PARAM != null and !&quot;&quot;.equals(INPUT_PARAM)" >
        INPUT_PARAM,
      </if>
      <if test="DEFAULT_VALUE != null and !&quot;&quot;.equals(DEFAULT_VALUE)" >
        DEFAULT_VALUE,
      </if>
      <if test="ARG_TYPE != null and !&quot;&quot;.equals(ARG_TYPE)" >
        ARG_TYPE,
      </if>
      <if test="OCCURENCE != null and OCCURENCE != emptyBigDecimalValue" >
        OCCURENCE,
      </if>
      <if test="STATUS != null and !&quot;&quot;.equals(STATUS)" >
        STATUS,
      </if>
      <if test="GROUP_NBR != null and GROUP_NBR != emptyBigDecimalValue" >
        GROUP_NBR,
      </if>
      <if test="HDR_DET != null and !&quot;&quot;.equals(HDR_DET)" >
        HDR_DET,
      </if>
      <if test="ARG_USED != null and !&quot;&quot;.equals(ARG_USED)" >
        ARG_USED,
      </if>
      <if test="ARG_VAR != null and ARG_VAR != emptyBigDecimalValue" >
        ARG_VAR,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="ACK != null and ACK != emptyBigDecimalValue" >
        #{ACK},
      </if>
      <if test="ALLOC_LINE_NBR != null and ALLOC_LINE_NBR != emptyBigDecimalValue" >
        #{ALLOC_LINE_NBR},
      </if>
      <if test="MSG_CODE != null and !&quot;&quot;.equals(MSG_CODE)" >
        #{MSG_CODE},
      </if>
      <if test="SEQ != null and SEQ != emptyBigDecimalValue" >
        #{SEQ},
      </if>
      <if test="TAG != null and !&quot;&quot;.equals(TAG)" >
        #{TAG},
      </if>
      <if test="TAG_LINE != null and TAG_LINE != emptyBigDecimalValue" >
        #{TAG_LINE},
      </if>
      <if test="VALUE_EXP != null and !&quot;&quot;.equals(VALUE_EXP)" >
        #{VALUE_EXP},
      </if>
      <if test="INPUT_PARAM != null and !&quot;&quot;.equals(INPUT_PARAM)" >
        #{INPUT_PARAM},
      </if>
      <if test="DEFAULT_VALUE != null and !&quot;&quot;.equals(DEFAULT_VALUE)" >
        #{DEFAULT_VALUE},
      </if>
      <if test="ARG_TYPE != null and !&quot;&quot;.equals(ARG_TYPE)" >
        #{ARG_TYPE},
      </if>
      <if test="OCCURENCE != null and OCCURENCE != emptyBigDecimalValue" >
        #{OCCURENCE},
      </if>
      <if test="STATUS != null and !&quot;&quot;.equals(STATUS)" >
        #{STATUS},
      </if>
      <if test="GROUP_NBR != null and GROUP_NBR != emptyBigDecimalValue" >
        #{GROUP_NBR},
      </if>
      <if test="HDR_DET != null and !&quot;&quot;.equals(HDR_DET)" >
        #{HDR_DET},
      </if>
      <if test="ARG_USED != null and !&quot;&quot;.equals(ARG_USED)" >
        #{ARG_USED},
      </if>
      <if test="ARG_VAR != null and ARG_VAR != emptyBigDecimalValue" >
        #{ARG_VAR},
      </if>
    </trim>
  </insert>
  <sql id="sql_updateSWIFT_MSGDET_IN" >
    update SWIFT_MSGDET_IN
    <set >
      <if test="TAG != null" >
        <choose >
          <when test="TAG.equals(&quot;&quot;)" >
            TAG = NULL ,
          </when>
          <otherwise >
            TAG = #{TAG},
          </otherwise>
        </choose>
      </if>
      <if test="TAG_LINE != null" >
        <choose >
          <when test="TAG_LINE == emptyBigDecimalValue" >
            TAG_LINE = NULL ,
          </when>
          <otherwise >
            TAG_LINE = #{TAG_LINE},
          </otherwise>
        </choose>
      </if>
      <if test="VALUE_EXP != null" >
        <choose >
          <when test="VALUE_EXP.equals(&quot;&quot;)" >
            VALUE_EXP = NULL ,
          </when>
          <otherwise >
            VALUE_EXP = #{VALUE_EXP},
          </otherwise>
        </choose>
      </if>
      <if test="INPUT_PARAM != null" >
        <choose >
          <when test="INPUT_PARAM.equals(&quot;&quot;)" >
            INPUT_PARAM = NULL ,
          </when>
          <otherwise >
            INPUT_PARAM = #{INPUT_PARAM},
          </otherwise>
        </choose>
      </if>
      <if test="DEFAULT_VALUE != null" >
        <choose >
          <when test="DEFAULT_VALUE.equals(&quot;&quot;)" >
            DEFAULT_VALUE = NULL ,
          </when>
          <otherwise >
            DEFAULT_VALUE = #{DEFAULT_VALUE},
          </otherwise>
        </choose>
      </if>
      <if test="ARG_TYPE != null" >
        <choose >
          <when test="ARG_TYPE.equals(&quot;&quot;)" >
            ARG_TYPE = NULL ,
          </when>
          <otherwise >
            ARG_TYPE = #{ARG_TYPE},
          </otherwise>
        </choose>
      </if>
      <if test="OCCURENCE != null" >
        <choose >
          <when test="OCCURENCE == emptyBigDecimalValue" >
            OCCURENCE = NULL ,
          </when>
          <otherwise >
            OCCURENCE = #{OCCURENCE},
          </otherwise>
        </choose>
      </if>
      <if test="STATUS != null" >
        <choose >
          <when test="STATUS.equals(&quot;&quot;)" >
            STATUS = NULL ,
          </when>
          <otherwise >
            STATUS = #{STATUS},
          </otherwise>
        </choose>
      </if>
      <if test="GROUP_NBR != null" >
        <choose >
          <when test="GROUP_NBR == emptyBigDecimalValue" >
            GROUP_NBR = NULL ,
          </when>
          <otherwise >
            GROUP_NBR = #{GROUP_NBR},
          </otherwise>
        </choose>
      </if>
      <if test="HDR_DET != null" >
        <choose >
          <when test="HDR_DET.equals(&quot;&quot;)" >
            HDR_DET = NULL ,
          </when>
          <otherwise >
            HDR_DET = #{HDR_DET},
          </otherwise>
        </choose>
      </if>
      <if test="ARG_USED != null" >
        <choose >
          <when test="ARG_USED.equals(&quot;&quot;)" >
            ARG_USED = NULL ,
          </when>
          <otherwise >
            ARG_USED = #{ARG_USED},
          </otherwise>
        </choose>
      </if>
      <if test="ARG_VAR != null" >
        <choose >
          <when test="ARG_VAR == emptyBigDecimalValue" >
            ARG_VAR = NULL ,
          </when>
          <otherwise >
            ARG_VAR = #{ARG_VAR},
          </otherwise>
        </choose>
      </if>
    </set>
    where ACK = #{ACK}
      and ALLOC_LINE_NBR = #{ALLOC_LINE_NBR}
      and MSG_CODE = #{MSG_CODE}
      and SEQ = #{SEQ}
  </sql>
  <update id="updateSWIFT_MSGDET_IN" parameterType="com.path.dbmaps.vo.SWIFT_MSGDET_INVO" >
    <include refid="sql_updateSWIFT_MSGDET_IN" />
  </update>
</mapper>