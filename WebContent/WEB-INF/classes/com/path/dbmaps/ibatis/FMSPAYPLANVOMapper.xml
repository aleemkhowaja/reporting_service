<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="FMSPAYPLAN" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.FMSPAYPLANVO" >
    <id column="BRANCH" property="BRANCH" />
    <id column="COMP_CODE" property="COMP_CODE" />
    <id column="PLAN_NBR" property="PLAN_NBR" />
    <id column="PLAN_SEQ" property="PLAN_SEQ" />
    <result column="TRX_TYPE" property="TRX_TYPE" />
    <result column="TRX_NBR" property="TRX_NBR" />
    <result column="TOTAL_AMT" property="TOTAL_AMT" />
    <result column="TOTAL_AMT_PAID" property="TOTAL_AMT_PAID" />
    <result column="CURRENCY" property="CURRENCY" />
    <result column="NO_OF_PAYMENTS" property="NO_OF_PAYMENTS" />
    <result column="AMT_PER_PAYMENT" property="AMT_PER_PAYMENT" />
    <result column="BALLOON_PAYMENT" property="BALLOON_PAYMENT" />
    <result column="NO_OF_BALLOONS" property="NO_OF_BALLOONS" />
    <result column="PAY_RES_AMT" property="PAY_RES_AMT" />
    <result column="PAYM_PERIODICITY" property="PAYM_PERIODICITY" />
    <result column="PAYM_PERIOD_NBR" property="PAYM_PERIOD_NBR" />
    <result column="PAYM_PERIOD_POS" property="PAYM_PERIOD_POS" />
    <result column="FIRST_PAY_DATE" property="FIRST_PAY_DATE" />
    <result column="STATUS" property="STATUS" />
    <result column="ROUNDING_FACTOR" property="ROUNDING_FACTOR" />
    <result column="SETTLEMENT_TYPE" property="SETTLEMENT_TYPE" />
    <result column="PROMISSORY_NOTES" property="PROMISSORY_NOTES" />
    <result column="PROMISSORY_NOTES_OPTION" property="PROMISSORY_NOTES_OPTION" />
    <result column="PROFIT_CALCULATION_METHOD" property="PROFIT_CALCULATION_METHOD" />
    <result column="GRACE_PERIOD_OPTION" property="GRACE_PERIOD_OPTION" />
    <result column="GRACE_PERIOD" property="GRACE_PERIOD" />
    <result column="SETTLEMENT_NBR" property="SETTLEMENT_NBR" />
    <result column="YIELD" property="YIELD" />
    <result column="GRACE_PERIODICITY" property="GRACE_PERIODICITY" />
    <result column="PROMISSORY_NOTES_PRINTED" property="PROMISSORY_NOTES_PRINTED" />
    <result column="COMMENCEMENT_DATE" property="COMMENCEMENT_DATE" />
    <result column="CIF" property="CIF" />
    <result column="TRSCLASS" property="TRSCLASS" />
    <result column="AMORTIZED_LENGTH" property="AMORTIZED_LENGTH" />
    <result column="BALLOON_AMT" property="BALLOON_AMT" />
    <result column="ONBS_ROUNDING" property="ONBS_ROUNDING" />
    <result column="OFFBS_ROUNDING" property="OFFBS_ROUNDING" />
    <result column="PROFIT_ROUNDING" property="PROFIT_ROUNDING" />
    <result column="REJECTED_BY" property="REJECTED_BY" />
    <result column="DATE_REJECTED" property="DATE_REJECTED" />
    <result column="NOTES" property="NOTES" />
    <result column="TOTAL_AMT_NEW" property="TOTAL_AMT_NEW" />
    <result column="AMT_PER_PAYMENT_NEW" property="AMT_PER_PAYMENT_NEW" />
    <result column="COUNTER_PARTY" property="COUNTER_PARTY" />
    <result column="MERGED_PLAN_NBR" property="MERGED_PLAN_NBR" />
    <result column="MERGED_PLAN_SEQ" property="MERGED_PLAN_SEQ" />
    <result column="RESCH_CY" property="RESCH_CY" />
    <result column="RESCH_GL" property="RESCH_GL" />
    <result column="RESCH_CIF" property="RESCH_CIF" />
    <result column="RESCH_SL" property="RESCH_SL" />
    <result column="CLI_RESCH_CY" property="CLI_RESCH_CY" />
    <result column="CLI_RESCH_GL" property="CLI_RESCH_GL" />
    <result column="CLI_RESCH_CIF" property="CLI_RESCH_CIF" />
    <result column="CLI_RESCH_SL" property="CLI_RESCH_SL" />
    <result column="PAST_DUE_CY" property="PAST_DUE_CY" />
    <result column="PAST_DUE_GL" property="PAST_DUE_GL" />
    <result column="PAST_DUE_CIF" property="PAST_DUE_CIF" />
    <result column="PAST_DUE_SL" property="PAST_DUE_SL" />
    <result column="CLI_PAST_DUE_CY" property="CLI_PAST_DUE_CY" />
    <result column="CLI_PAST_DUE_GL" property="CLI_PAST_DUE_GL" />
    <result column="CLI_PAST_DUE_CIF" property="CLI_PAST_DUE_CIF" />
    <result column="CLI_PAST_DUE_SL" property="CLI_PAST_DUE_SL" />
    <result column="PAST_DUE_AMT" property="PAST_DUE_AMT" />
    <result column="PAST_DUE_AMT_CV" property="PAST_DUE_AMT_CV" />
    <result column="CLI_PAST_DUE_AMT" property="CLI_PAST_DUE_AMT" />
    <result column="CLI_PAST_DUE_AMT_CV" property="CLI_PAST_DUE_AMT_CV" />
    <result column="MERGED_INV_GL" property="MERGED_INV_GL" />
    <result column="MERGED_INV_CIF" property="MERGED_INV_CIF" />
    <result column="MERGED_INV_SL" property="MERGED_INV_SL" />
    <result column="CLI_MERGED_INV_GL" property="CLI_MERGED_INV_GL" />
    <result column="CLI_MERGED_INV_CIF" property="CLI_MERGED_INV_CIF" />
    <result column="CLI_MERGED_INV_SL" property="CLI_MERGED_INV_SL" />
    <result column="REIMBURSED_PROFIT" property="REIMBURSED_PROFIT" />
    <result column="PRINCIPAL_LAST" property="PRINCIPAL_LAST" />
    <result column="SWITCHED_AMOUNT" property="SWITCHED_AMOUNT" />
    <result column="CREATED_BY" property="CREATED_BY" />
    <result column="DATE_CREATED" property="DATE_CREATED" />
    <result column="MODIFIED_BY" property="MODIFIED_BY" />
    <result column="DATE_MODIFIED" property="DATE_MODIFIED" />
    <result column="APPROVED_BY" property="APPROVED_BY" />
    <result column="DATE_APPROVED" property="DATE_APPROVED" />
    <result column="REVERSED_BY" property="REVERSED_BY" />
    <result column="DATE_REVERSED" property="DATE_REVERSED" />
    <result column="SERVER_CREATED_DATE" property="SERVER_CREATED_DATE" />
    <result column="SERVER_APPROVED_DATE" property="SERVER_APPROVED_DATE" />
    <result column="SERVER_REVERSED_DATE" property="SERVER_REVERSED_DATE" />
    <result column="TEMPLATE_CODE" property="TEMPLATE_CODE" />
    <result column="PROFIT_DIST_METHOD" property="PROFIT_DIST_METHOD" />
    <result column="EFFECTIVE_YIELD" property="EFFECTIVE_YIELD" />
    <result column="DOWN_PAYMENT" property="DOWN_PAYMENT" />
    <result column="CHARGE_AMOUNT" property="CHARGE_AMOUNT" />
    <result column="PROFIT_COLLECTED" property="PROFIT_COLLECTED" />
    <result column="CALENDAR_TYPE" property="CALENDAR_TYPE" />
    <result column="UPFRONT_PROFIT_YN" property="UPFRONT_PROFIT_YN" />
    <result column="UPFRONT_PROFIT_AMT" property="UPFRONT_PROFIT_AMT" />
    <result column="UPFRONT_PROFIT_PERCENT" property="UPFRONT_PROFIT_PERCENT" />
    <result column="ACCRUAL_BASIS" property="ACCRUAL_BASIS" />
    <result column="RESCHEDULE_FLAG" property="RESCHEDULE_FLAG" />
    <result column="GRACE_PERIOD_COMPOUNDING_YN" property="GRACE_PERIOD_COMPOUNDING_YN" />
    <result column="GRACE_COMPOUND_PERIODICITY" property="GRACE_COMPOUND_PERIODICITY" />
    <result column="RESCHEDULE_VALUE_DATE" property="RESCHEDULE_VALUE_DATE" />
    <result column="OUTSTD_PRINCIPAL_INSTALL_DATE" property="OUTSTD_PRINCIPAL_INSTALL_DATE" />
    <result column="RESCHEDULE_OUTSTANDING_AMT" property="RESCHEDULE_OUTSTANDING_AMT" />
    <result column="RESCHEDULE_TYPE" property="RESCHEDULE_TYPE" />
    <result column="PLAN_EXPECTED_YIELD" property="PLAN_EXPECTED_YIELD" />
    <result column="PLAN_MATURITY_DATE" property="PLAN_MATURITY_DATE" />
    <result column="PLAN_LIBOR_RATE" property="PLAN_LIBOR_RATE" />
    <result column="PLAN_PRINCIPAL" property="PLAN_PRINCIPAL" />
    <result column="PREV_RATE_REV_DATE" property="PREV_RATE_REV_DATE" />
    <result column="NEXT_RATE_REV_DATE" property="NEXT_RATE_REV_DATE" />
    <result column="OUTSTD_PRINCIPAL_AS_INSTALL_YN" property="OUTSTD_PRINCIPAL_AS_INSTALL_YN" />
    <result column="EQUAL_SEGMENTS_YN" property="EQUAL_SEGMENTS_YN" />
    <result column="ACTUAL_GRACE_PERIOD" property="ACTUAL_GRACE_PERIOD" />
    <result column="ACTUAL_GRACE_PERIODICITY" property="ACTUAL_GRACE_PERIODICITY" />
    <result column="CALC_PROFIT_AMOUNT_ENTERED" property="CALC_PROFIT_AMOUNT_ENTERED" />
    <result column="DISBURSEMENT_EQUAL_INSTALL_YN" property="DISBURSEMENT_EQUAL_INSTALL_YN" />
    <result column="DEAL_PERIOD_COMPOUNDING_YN" property="DEAL_PERIOD_COMPOUNDING_YN" />
    <result column="GRACE_COMPOUND_PERIODICITY_NBR" property="GRACE_COMPOUND_PERIODICITY_NBR" />
    <result column="ROUNDING_TYPE_INST_AMT" property="ROUNDING_TYPE_INST_AMT" />
    <result column="ROUNDING_TYPE_REPAY_AMT" property="ROUNDING_TYPE_REPAY_AMT" />
    <result column="INCLUDE_VAT_IN_INSTL_YN" property="INCLUDE_VAT_IN_INSTL_YN" />
    <result column="VAT_PERCENTAGE" property="VAT_PERCENTAGE" />
    <result column="VAT_CODE" property="VAT_CODE" />
    <result column="ASSET_RESIDUAL_AMOUNT" property="ASSET_RESIDUAL_AMOUNT" />
    <result column="LAST_INST_ASSET_RESIDUAL_YN" property="LAST_INST_ASSET_RESIDUAL_YN" />
  </resultMap>
  <sql id="Base_Column_List" >
    BRANCH, COMP_CODE, PLAN_NBR, PLAN_SEQ, TRX_TYPE, TRX_NBR, TOTAL_AMT, TOTAL_AMT_PAID, 
    CURRENCY, NO_OF_PAYMENTS, AMT_PER_PAYMENT, BALLOON_PAYMENT, NO_OF_BALLOONS, PAY_RES_AMT, 
    PAYM_PERIODICITY, PAYM_PERIOD_NBR, PAYM_PERIOD_POS, FIRST_PAY_DATE, STATUS, ROUNDING_FACTOR, 
    SETTLEMENT_TYPE, PROMISSORY_NOTES, PROMISSORY_NOTES_OPTION, PROFIT_CALCULATION_METHOD, 
    GRACE_PERIOD_OPTION, GRACE_PERIOD, SETTLEMENT_NBR, YIELD, GRACE_PERIODICITY, PROMISSORY_NOTES_PRINTED, 
    COMMENCEMENT_DATE, CIF, TRSCLASS, AMORTIZED_LENGTH, BALLOON_AMT, ONBS_ROUNDING, OFFBS_ROUNDING, 
    PROFIT_ROUNDING, REJECTED_BY, DATE_REJECTED, NOTES, TOTAL_AMT_NEW, AMT_PER_PAYMENT_NEW, 
    COUNTER_PARTY, MERGED_PLAN_NBR, MERGED_PLAN_SEQ, RESCH_CY, RESCH_GL, RESCH_CIF, RESCH_SL, 
    CLI_RESCH_CY, CLI_RESCH_GL, CLI_RESCH_CIF, CLI_RESCH_SL, PAST_DUE_CY, PAST_DUE_GL, 
    PAST_DUE_CIF, PAST_DUE_SL, CLI_PAST_DUE_CY, CLI_PAST_DUE_GL, CLI_PAST_DUE_CIF, CLI_PAST_DUE_SL, 
    PAST_DUE_AMT, PAST_DUE_AMT_CV, CLI_PAST_DUE_AMT, CLI_PAST_DUE_AMT_CV, MERGED_INV_GL, 
    MERGED_INV_CIF, MERGED_INV_SL, CLI_MERGED_INV_GL, CLI_MERGED_INV_CIF, CLI_MERGED_INV_SL, 
    REIMBURSED_PROFIT, PRINCIPAL_LAST, SWITCHED_AMOUNT, CREATED_BY, DATE_CREATED, MODIFIED_BY, 
    DATE_MODIFIED, APPROVED_BY, DATE_APPROVED, REVERSED_BY, DATE_REVERSED, SERVER_CREATED_DATE, 
    SERVER_APPROVED_DATE, SERVER_REVERSED_DATE, TEMPLATE_CODE, PROFIT_DIST_METHOD, EFFECTIVE_YIELD, 
    DOWN_PAYMENT, CHARGE_AMOUNT, PROFIT_COLLECTED, CALENDAR_TYPE, UPFRONT_PROFIT_YN, 
    UPFRONT_PROFIT_AMT, UPFRONT_PROFIT_PERCENT, ACCRUAL_BASIS, RESCHEDULE_FLAG, GRACE_PERIOD_COMPOUNDING_YN, 
    GRACE_COMPOUND_PERIODICITY, RESCHEDULE_VALUE_DATE, OUTSTD_PRINCIPAL_INSTALL_DATE, 
    RESCHEDULE_OUTSTANDING_AMT, RESCHEDULE_TYPE, PLAN_EXPECTED_YIELD, PLAN_MATURITY_DATE, 
    PLAN_LIBOR_RATE, PLAN_PRINCIPAL, PREV_RATE_REV_DATE, NEXT_RATE_REV_DATE, OUTSTD_PRINCIPAL_AS_INSTALL_YN, 
    EQUAL_SEGMENTS_YN, ACTUAL_GRACE_PERIOD, ACTUAL_GRACE_PERIODICITY, CALC_PROFIT_AMOUNT_ENTERED, 
    DISBURSEMENT_EQUAL_INSTALL_YN, DEAL_PERIOD_COMPOUNDING_YN, GRACE_COMPOUND_PERIODICITY_NBR, 
    ROUNDING_TYPE_INST_AMT, ROUNDING_TYPE_REPAY_AMT, INCLUDE_VAT_IN_INSTL_YN, VAT_PERCENTAGE, 
    VAT_CODE, ASSET_RESIDUAL_AMOUNT, LAST_INST_ASSET_RESIDUAL_YN
  </sql>
  <select id="selectFMSPAYPLAN" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.FMSPAYPLANVOKey" >
    select 
    <include refid="Base_Column_List" />
    from FMSPAYPLAN
    where BRANCH = #{BRANCH}
      and COMP_CODE = #{COMP_CODE}
      and PLAN_NBR = #{PLAN_NBR}
      and PLAN_SEQ = #{PLAN_SEQ}
  </select>
  <delete id="deleteFMSPAYPLAN" parameterType="com.path.dbmaps.vo.FMSPAYPLANVOKey" >
    delete from FMSPAYPLAN
    where BRANCH = #{BRANCH}
      and COMP_CODE = #{COMP_CODE}
      and PLAN_NBR = #{PLAN_NBR}
      and PLAN_SEQ = #{PLAN_SEQ}
  </delete>
  <insert id="insertFMSPAYPLAN" parameterType="com.path.dbmaps.vo.FMSPAYPLANVO" >
    insert into FMSPAYPLAN
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="BRANCH != null and BRANCH != emptyBigDecimalValue" >
        BRANCH,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="PLAN_NBR != null and PLAN_NBR != emptyBigDecimalValue" >
        PLAN_NBR,
      </if>
      <if test="PLAN_SEQ != null and PLAN_SEQ != emptyBigDecimalValue" >
        PLAN_SEQ,
      </if>
      <if test="TRX_TYPE != null and !&quot;&quot;.equals(TRX_TYPE)" >
        TRX_TYPE,
      </if>
      <if test="TRX_NBR != null and TRX_NBR != emptyBigDecimalValue" >
        TRX_NBR,
      </if>
      <if test="TOTAL_AMT != null and TOTAL_AMT != emptyBigDecimalValue" >
        TOTAL_AMT,
      </if>
      <if test="TOTAL_AMT_PAID != null and TOTAL_AMT_PAID != emptyBigDecimalValue" >
        TOTAL_AMT_PAID,
      </if>
      <if test="CURRENCY != null and CURRENCY != emptyBigDecimalValue" >
        CURRENCY,
      </if>
      <if test="NO_OF_PAYMENTS != null and NO_OF_PAYMENTS != emptyBigDecimalValue" >
        NO_OF_PAYMENTS,
      </if>
      <if test="AMT_PER_PAYMENT != null and AMT_PER_PAYMENT != emptyBigDecimalValue" >
        AMT_PER_PAYMENT,
      </if>
      <if test="BALLOON_PAYMENT != null and BALLOON_PAYMENT != emptyBigDecimalValue" >
        BALLOON_PAYMENT,
      </if>
      <if test="NO_OF_BALLOONS != null and NO_OF_BALLOONS != emptyBigDecimalValue" >
        NO_OF_BALLOONS,
      </if>
      <if test="PAY_RES_AMT != null and !&quot;&quot;.equals(PAY_RES_AMT)" >
        PAY_RES_AMT,
      </if>
      <if test="PAYM_PERIODICITY != null and !&quot;&quot;.equals(PAYM_PERIODICITY)" >
        PAYM_PERIODICITY,
      </if>
      <if test="PAYM_PERIOD_NBR != null and PAYM_PERIOD_NBR != emptyBigDecimalValue" >
        PAYM_PERIOD_NBR,
      </if>
      <if test="PAYM_PERIOD_POS != null and !&quot;&quot;.equals(PAYM_PERIOD_POS)" >
        PAYM_PERIOD_POS,
      </if>
      <if test="FIRST_PAY_DATE != null" >
        FIRST_PAY_DATE,
      </if>
      <if test="STATUS != null and !&quot;&quot;.equals(STATUS)" >
        STATUS,
      </if>
      <if test="ROUNDING_FACTOR != null and ROUNDING_FACTOR != emptyBigDecimalValue" >
        ROUNDING_FACTOR,
      </if>
      <if test="SETTLEMENT_TYPE != null and !&quot;&quot;.equals(SETTLEMENT_TYPE)" >
        SETTLEMENT_TYPE,
      </if>
      <if test="PROMISSORY_NOTES != null and PROMISSORY_NOTES != emptyBigDecimalValue" >
        PROMISSORY_NOTES,
      </if>
      <if test="PROMISSORY_NOTES_OPTION != null and !&quot;&quot;.equals(PROMISSORY_NOTES_OPTION)" >
        PROMISSORY_NOTES_OPTION,
      </if>
      <if test="PROFIT_CALCULATION_METHOD != null and !&quot;&quot;.equals(PROFIT_CALCULATION_METHOD)" >
        PROFIT_CALCULATION_METHOD,
      </if>
      <if test="GRACE_PERIOD_OPTION != null and GRACE_PERIOD_OPTION != emptyBigDecimalValue" >
        GRACE_PERIOD_OPTION,
      </if>
      <if test="GRACE_PERIOD != null and GRACE_PERIOD != emptyBigDecimalValue" >
        GRACE_PERIOD,
      </if>
      <if test="SETTLEMENT_NBR != null and SETTLEMENT_NBR != emptyBigDecimalValue" >
        SETTLEMENT_NBR,
      </if>
      <if test="YIELD != null and YIELD != emptyBigDecimalValue" >
        YIELD,
      </if>
      <if test="GRACE_PERIODICITY != null and !&quot;&quot;.equals(GRACE_PERIODICITY)" >
        GRACE_PERIODICITY,
      </if>
      <if test="PROMISSORY_NOTES_PRINTED != null and PROMISSORY_NOTES_PRINTED != emptyBigDecimalValue" >
        PROMISSORY_NOTES_PRINTED,
      </if>
      <if test="COMMENCEMENT_DATE != null" >
        COMMENCEMENT_DATE,
      </if>
      <if test="CIF != null and CIF != emptyBigDecimalValue" >
        CIF,
      </if>
      <if test="TRSCLASS != null and TRSCLASS != emptyBigDecimalValue" >
        TRSCLASS,
      </if>
      <if test="AMORTIZED_LENGTH != null and AMORTIZED_LENGTH != emptyBigDecimalValue" >
        AMORTIZED_LENGTH,
      </if>
      <if test="BALLOON_AMT != null and BALLOON_AMT != emptyBigDecimalValue" >
        BALLOON_AMT,
      </if>
      <if test="ONBS_ROUNDING != null and ONBS_ROUNDING != emptyBigDecimalValue" >
        ONBS_ROUNDING,
      </if>
      <if test="OFFBS_ROUNDING != null and OFFBS_ROUNDING != emptyBigDecimalValue" >
        OFFBS_ROUNDING,
      </if>
      <if test="PROFIT_ROUNDING != null and PROFIT_ROUNDING != emptyBigDecimalValue" >
        PROFIT_ROUNDING,
      </if>
      <if test="REJECTED_BY != null and !&quot;&quot;.equals(REJECTED_BY)" >
        REJECTED_BY,
      </if>
      <if test="DATE_REJECTED != null" >
        DATE_REJECTED,
      </if>
      <if test="NOTES != null and !&quot;&quot;.equals(NOTES)" >
        NOTES,
      </if>
      <if test="TOTAL_AMT_NEW != null and TOTAL_AMT_NEW != emptyBigDecimalValue" >
        TOTAL_AMT_NEW,
      </if>
      <if test="AMT_PER_PAYMENT_NEW != null and AMT_PER_PAYMENT_NEW != emptyBigDecimalValue" >
        AMT_PER_PAYMENT_NEW,
      </if>
      <if test="COUNTER_PARTY != null and COUNTER_PARTY != emptyBigDecimalValue" >
        COUNTER_PARTY,
      </if>
      <if test="MERGED_PLAN_NBR != null and MERGED_PLAN_NBR != emptyBigDecimalValue" >
        MERGED_PLAN_NBR,
      </if>
      <if test="MERGED_PLAN_SEQ != null and MERGED_PLAN_SEQ != emptyBigDecimalValue" >
        MERGED_PLAN_SEQ,
      </if>
      <if test="RESCH_CY != null and RESCH_CY != emptyBigDecimalValue" >
        RESCH_CY,
      </if>
      <if test="RESCH_GL != null and RESCH_GL != emptyBigDecimalValue" >
        RESCH_GL,
      </if>
      <if test="RESCH_CIF != null and RESCH_CIF != emptyBigDecimalValue" >
        RESCH_CIF,
      </if>
      <if test="RESCH_SL != null and RESCH_SL != emptyBigDecimalValue" >
        RESCH_SL,
      </if>
      <if test="CLI_RESCH_CY != null and CLI_RESCH_CY != emptyBigDecimalValue" >
        CLI_RESCH_CY,
      </if>
      <if test="CLI_RESCH_GL != null and CLI_RESCH_GL != emptyBigDecimalValue" >
        CLI_RESCH_GL,
      </if>
      <if test="CLI_RESCH_CIF != null and CLI_RESCH_CIF != emptyBigDecimalValue" >
        CLI_RESCH_CIF,
      </if>
      <if test="CLI_RESCH_SL != null and CLI_RESCH_SL != emptyBigDecimalValue" >
        CLI_RESCH_SL,
      </if>
      <if test="PAST_DUE_CY != null and PAST_DUE_CY != emptyBigDecimalValue" >
        PAST_DUE_CY,
      </if>
      <if test="PAST_DUE_GL != null and PAST_DUE_GL != emptyBigDecimalValue" >
        PAST_DUE_GL,
      </if>
      <if test="PAST_DUE_CIF != null and PAST_DUE_CIF != emptyBigDecimalValue" >
        PAST_DUE_CIF,
      </if>
      <if test="PAST_DUE_SL != null and PAST_DUE_SL != emptyBigDecimalValue" >
        PAST_DUE_SL,
      </if>
      <if test="CLI_PAST_DUE_CY != null and CLI_PAST_DUE_CY != emptyBigDecimalValue" >
        CLI_PAST_DUE_CY,
      </if>
      <if test="CLI_PAST_DUE_GL != null and CLI_PAST_DUE_GL != emptyBigDecimalValue" >
        CLI_PAST_DUE_GL,
      </if>
      <if test="CLI_PAST_DUE_CIF != null and CLI_PAST_DUE_CIF != emptyBigDecimalValue" >
        CLI_PAST_DUE_CIF,
      </if>
      <if test="CLI_PAST_DUE_SL != null and CLI_PAST_DUE_SL != emptyBigDecimalValue" >
        CLI_PAST_DUE_SL,
      </if>
      <if test="PAST_DUE_AMT != null and PAST_DUE_AMT != emptyBigDecimalValue" >
        PAST_DUE_AMT,
      </if>
      <if test="PAST_DUE_AMT_CV != null and PAST_DUE_AMT_CV != emptyBigDecimalValue" >
        PAST_DUE_AMT_CV,
      </if>
      <if test="CLI_PAST_DUE_AMT != null and CLI_PAST_DUE_AMT != emptyBigDecimalValue" >
        CLI_PAST_DUE_AMT,
      </if>
      <if test="CLI_PAST_DUE_AMT_CV != null and CLI_PAST_DUE_AMT_CV != emptyBigDecimalValue" >
        CLI_PAST_DUE_AMT_CV,
      </if>
      <if test="MERGED_INV_GL != null and MERGED_INV_GL != emptyBigDecimalValue" >
        MERGED_INV_GL,
      </if>
      <if test="MERGED_INV_CIF != null and MERGED_INV_CIF != emptyBigDecimalValue" >
        MERGED_INV_CIF,
      </if>
      <if test="MERGED_INV_SL != null and MERGED_INV_SL != emptyBigDecimalValue" >
        MERGED_INV_SL,
      </if>
      <if test="CLI_MERGED_INV_GL != null and CLI_MERGED_INV_GL != emptyBigDecimalValue" >
        CLI_MERGED_INV_GL,
      </if>
      <if test="CLI_MERGED_INV_CIF != null and CLI_MERGED_INV_CIF != emptyBigDecimalValue" >
        CLI_MERGED_INV_CIF,
      </if>
      <if test="CLI_MERGED_INV_SL != null and CLI_MERGED_INV_SL != emptyBigDecimalValue" >
        CLI_MERGED_INV_SL,
      </if>
      <if test="REIMBURSED_PROFIT != null and REIMBURSED_PROFIT != emptyBigDecimalValue" >
        REIMBURSED_PROFIT,
      </if>
      <if test="PRINCIPAL_LAST != null and !&quot;&quot;.equals(PRINCIPAL_LAST)" >
        PRINCIPAL_LAST,
      </if>
      <if test="SWITCHED_AMOUNT != null and SWITCHED_AMOUNT != emptyBigDecimalValue" >
        SWITCHED_AMOUNT,
      </if>
      <if test="CREATED_BY != null and !&quot;&quot;.equals(CREATED_BY)" >
        CREATED_BY,
      </if>
      <if test="DATE_CREATED != null" >
        DATE_CREATED,
      </if>
      <if test="MODIFIED_BY != null and !&quot;&quot;.equals(MODIFIED_BY)" >
        MODIFIED_BY,
      </if>
      <if test="DATE_MODIFIED != null" >
        DATE_MODIFIED,
      </if>
      <if test="APPROVED_BY != null and !&quot;&quot;.equals(APPROVED_BY)" >
        APPROVED_BY,
      </if>
      <if test="DATE_APPROVED != null" >
        DATE_APPROVED,
      </if>
      <if test="REVERSED_BY != null and !&quot;&quot;.equals(REVERSED_BY)" >
        REVERSED_BY,
      </if>
      <if test="DATE_REVERSED != null" >
        DATE_REVERSED,
      </if>
      <if test="SERVER_CREATED_DATE != null" >
        SERVER_CREATED_DATE,
      </if>
      <if test="SERVER_APPROVED_DATE != null" >
        SERVER_APPROVED_DATE,
      </if>
      <if test="SERVER_REVERSED_DATE != null" >
        SERVER_REVERSED_DATE,
      </if>
      <if test="TEMPLATE_CODE != null and TEMPLATE_CODE != emptyBigDecimalValue" >
        TEMPLATE_CODE,
      </if>
      <if test="PROFIT_DIST_METHOD != null and !&quot;&quot;.equals(PROFIT_DIST_METHOD)" >
        PROFIT_DIST_METHOD,
      </if>
      <if test="EFFECTIVE_YIELD != null and EFFECTIVE_YIELD != emptyBigDecimalValue" >
        EFFECTIVE_YIELD,
      </if>
      <if test="DOWN_PAYMENT != null and DOWN_PAYMENT != emptyBigDecimalValue" >
        DOWN_PAYMENT,
      </if>
      <if test="CHARGE_AMOUNT != null and CHARGE_AMOUNT != emptyBigDecimalValue" >
        CHARGE_AMOUNT,
      </if>
      <if test="PROFIT_COLLECTED != null and PROFIT_COLLECTED != emptyBigDecimalValue" >
        PROFIT_COLLECTED,
      </if>
      <if test="CALENDAR_TYPE != null and !&quot;&quot;.equals(CALENDAR_TYPE)" >
        CALENDAR_TYPE,
      </if>
      <if test="UPFRONT_PROFIT_YN != null and !&quot;&quot;.equals(UPFRONT_PROFIT_YN)" >
        UPFRONT_PROFIT_YN,
      </if>
      <if test="UPFRONT_PROFIT_AMT != null and UPFRONT_PROFIT_AMT != emptyBigDecimalValue" >
        UPFRONT_PROFIT_AMT,
      </if>
      <if test="UPFRONT_PROFIT_PERCENT != null and UPFRONT_PROFIT_PERCENT != emptyBigDecimalValue" >
        UPFRONT_PROFIT_PERCENT,
      </if>
      <if test="ACCRUAL_BASIS != null and ACCRUAL_BASIS != emptyBigDecimalValue" >
        ACCRUAL_BASIS,
      </if>
      <if test="RESCHEDULE_FLAG != null and !&quot;&quot;.equals(RESCHEDULE_FLAG)" >
        RESCHEDULE_FLAG,
      </if>
      <if test="GRACE_PERIOD_COMPOUNDING_YN != null and !&quot;&quot;.equals(GRACE_PERIOD_COMPOUNDING_YN)" >
        GRACE_PERIOD_COMPOUNDING_YN,
      </if>
      <if test="GRACE_COMPOUND_PERIODICITY != null and !&quot;&quot;.equals(GRACE_COMPOUND_PERIODICITY)" >
        GRACE_COMPOUND_PERIODICITY,
      </if>
      <if test="RESCHEDULE_VALUE_DATE != null" >
        RESCHEDULE_VALUE_DATE,
      </if>
      <if test="OUTSTD_PRINCIPAL_INSTALL_DATE != null" >
        OUTSTD_PRINCIPAL_INSTALL_DATE,
      </if>
      <if test="RESCHEDULE_OUTSTANDING_AMT != null and RESCHEDULE_OUTSTANDING_AMT != emptyBigDecimalValue" >
        RESCHEDULE_OUTSTANDING_AMT,
      </if>
      <if test="RESCHEDULE_TYPE != null and RESCHEDULE_TYPE != emptyBigDecimalValue" >
        RESCHEDULE_TYPE,
      </if>
      <if test="PLAN_EXPECTED_YIELD != null and PLAN_EXPECTED_YIELD != emptyBigDecimalValue" >
        PLAN_EXPECTED_YIELD,
      </if>
      <if test="PLAN_MATURITY_DATE != null" >
        PLAN_MATURITY_DATE,
      </if>
      <if test="PLAN_LIBOR_RATE != null and PLAN_LIBOR_RATE != emptyBigDecimalValue" >
        PLAN_LIBOR_RATE,
      </if>
      <if test="PLAN_PRINCIPAL != null and PLAN_PRINCIPAL != emptyBigDecimalValue" >
        PLAN_PRINCIPAL,
      </if>
      <if test="PREV_RATE_REV_DATE != null" >
        PREV_RATE_REV_DATE,
      </if>
      <if test="NEXT_RATE_REV_DATE != null" >
        NEXT_RATE_REV_DATE,
      </if>
      <if test="OUTSTD_PRINCIPAL_AS_INSTALL_YN != null and !&quot;&quot;.equals(OUTSTD_PRINCIPAL_AS_INSTALL_YN)" >
        OUTSTD_PRINCIPAL_AS_INSTALL_YN,
      </if>
      <if test="EQUAL_SEGMENTS_YN != null and !&quot;&quot;.equals(EQUAL_SEGMENTS_YN)" >
        EQUAL_SEGMENTS_YN,
      </if>
      <if test="ACTUAL_GRACE_PERIOD != null and ACTUAL_GRACE_PERIOD != emptyBigDecimalValue" >
        ACTUAL_GRACE_PERIOD,
      </if>
      <if test="ACTUAL_GRACE_PERIODICITY != null and !&quot;&quot;.equals(ACTUAL_GRACE_PERIODICITY)" >
        ACTUAL_GRACE_PERIODICITY,
      </if>
      <if test="CALC_PROFIT_AMOUNT_ENTERED != null and CALC_PROFIT_AMOUNT_ENTERED != emptyBigDecimalValue" >
        CALC_PROFIT_AMOUNT_ENTERED,
      </if>
      <if test="DISBURSEMENT_EQUAL_INSTALL_YN != null and !&quot;&quot;.equals(DISBURSEMENT_EQUAL_INSTALL_YN)" >
        DISBURSEMENT_EQUAL_INSTALL_YN,
      </if>
      <if test="DEAL_PERIOD_COMPOUNDING_YN != null and !&quot;&quot;.equals(DEAL_PERIOD_COMPOUNDING_YN)" >
        DEAL_PERIOD_COMPOUNDING_YN,
      </if>
      <if test="GRACE_COMPOUND_PERIODICITY_NBR != null and GRACE_COMPOUND_PERIODICITY_NBR != emptyBigDecimalValue" >
        GRACE_COMPOUND_PERIODICITY_NBR,
      </if>
      <if test="ROUNDING_TYPE_INST_AMT != null and !&quot;&quot;.equals(ROUNDING_TYPE_INST_AMT)" >
        ROUNDING_TYPE_INST_AMT,
      </if>
      <if test="ROUNDING_TYPE_REPAY_AMT != null and !&quot;&quot;.equals(ROUNDING_TYPE_REPAY_AMT)" >
        ROUNDING_TYPE_REPAY_AMT,
      </if>
      <if test="INCLUDE_VAT_IN_INSTL_YN != null and !&quot;&quot;.equals(INCLUDE_VAT_IN_INSTL_YN)" >
        INCLUDE_VAT_IN_INSTL_YN,
      </if>
      <if test="VAT_PERCENTAGE != null and VAT_PERCENTAGE != emptyBigDecimalValue" >
        VAT_PERCENTAGE,
      </if>
      <if test="VAT_CODE != null and VAT_CODE != emptyBigDecimalValue" >
        VAT_CODE,
      </if>
      <if test="ASSET_RESIDUAL_AMOUNT != null and ASSET_RESIDUAL_AMOUNT != emptyBigDecimalValue" >
        ASSET_RESIDUAL_AMOUNT,
      </if>
      <if test="LAST_INST_ASSET_RESIDUAL_YN != null and !&quot;&quot;.equals(LAST_INST_ASSET_RESIDUAL_YN)" >
        LAST_INST_ASSET_RESIDUAL_YN,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="BRANCH != null and BRANCH != emptyBigDecimalValue" >
        #{BRANCH},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="PLAN_NBR != null and PLAN_NBR != emptyBigDecimalValue" >
        #{PLAN_NBR},
      </if>
      <if test="PLAN_SEQ != null and PLAN_SEQ != emptyBigDecimalValue" >
        #{PLAN_SEQ},
      </if>
      <if test="TRX_TYPE != null and !&quot;&quot;.equals(TRX_TYPE)" >
        #{TRX_TYPE},
      </if>
      <if test="TRX_NBR != null and TRX_NBR != emptyBigDecimalValue" >
        #{TRX_NBR},
      </if>
      <if test="TOTAL_AMT != null and TOTAL_AMT != emptyBigDecimalValue" >
        #{TOTAL_AMT},
      </if>
      <if test="TOTAL_AMT_PAID != null and TOTAL_AMT_PAID != emptyBigDecimalValue" >
        #{TOTAL_AMT_PAID},
      </if>
      <if test="CURRENCY != null and CURRENCY != emptyBigDecimalValue" >
        #{CURRENCY},
      </if>
      <if test="NO_OF_PAYMENTS != null and NO_OF_PAYMENTS != emptyBigDecimalValue" >
        #{NO_OF_PAYMENTS},
      </if>
      <if test="AMT_PER_PAYMENT != null and AMT_PER_PAYMENT != emptyBigDecimalValue" >
        #{AMT_PER_PAYMENT},
      </if>
      <if test="BALLOON_PAYMENT != null and BALLOON_PAYMENT != emptyBigDecimalValue" >
        #{BALLOON_PAYMENT},
      </if>
      <if test="NO_OF_BALLOONS != null and NO_OF_BALLOONS != emptyBigDecimalValue" >
        #{NO_OF_BALLOONS},
      </if>
      <if test="PAY_RES_AMT != null and !&quot;&quot;.equals(PAY_RES_AMT)" >
        #{PAY_RES_AMT},
      </if>
      <if test="PAYM_PERIODICITY != null and !&quot;&quot;.equals(PAYM_PERIODICITY)" >
        #{PAYM_PERIODICITY},
      </if>
      <if test="PAYM_PERIOD_NBR != null and PAYM_PERIOD_NBR != emptyBigDecimalValue" >
        #{PAYM_PERIOD_NBR},
      </if>
      <if test="PAYM_PERIOD_POS != null and !&quot;&quot;.equals(PAYM_PERIOD_POS)" >
        #{PAYM_PERIOD_POS},
      </if>
      <if test="FIRST_PAY_DATE != null" >
        #{FIRST_PAY_DATE},
      </if>
      <if test="STATUS != null and !&quot;&quot;.equals(STATUS)" >
        #{STATUS},
      </if>
      <if test="ROUNDING_FACTOR != null and ROUNDING_FACTOR != emptyBigDecimalValue" >
        #{ROUNDING_FACTOR},
      </if>
      <if test="SETTLEMENT_TYPE != null and !&quot;&quot;.equals(SETTLEMENT_TYPE)" >
        #{SETTLEMENT_TYPE},
      </if>
      <if test="PROMISSORY_NOTES != null and PROMISSORY_NOTES != emptyBigDecimalValue" >
        #{PROMISSORY_NOTES},
      </if>
      <if test="PROMISSORY_NOTES_OPTION != null and !&quot;&quot;.equals(PROMISSORY_NOTES_OPTION)" >
        #{PROMISSORY_NOTES_OPTION},
      </if>
      <if test="PROFIT_CALCULATION_METHOD != null and !&quot;&quot;.equals(PROFIT_CALCULATION_METHOD)" >
        #{PROFIT_CALCULATION_METHOD},
      </if>
      <if test="GRACE_PERIOD_OPTION != null and GRACE_PERIOD_OPTION != emptyBigDecimalValue" >
        #{GRACE_PERIOD_OPTION},
      </if>
      <if test="GRACE_PERIOD != null and GRACE_PERIOD != emptyBigDecimalValue" >
        #{GRACE_PERIOD},
      </if>
      <if test="SETTLEMENT_NBR != null and SETTLEMENT_NBR != emptyBigDecimalValue" >
        #{SETTLEMENT_NBR},
      </if>
      <if test="YIELD != null and YIELD != emptyBigDecimalValue" >
        #{YIELD},
      </if>
      <if test="GRACE_PERIODICITY != null and !&quot;&quot;.equals(GRACE_PERIODICITY)" >
        #{GRACE_PERIODICITY},
      </if>
      <if test="PROMISSORY_NOTES_PRINTED != null and PROMISSORY_NOTES_PRINTED != emptyBigDecimalValue" >
        #{PROMISSORY_NOTES_PRINTED},
      </if>
      <if test="COMMENCEMENT_DATE != null" >
        #{COMMENCEMENT_DATE},
      </if>
      <if test="CIF != null and CIF != emptyBigDecimalValue" >
        #{CIF},
      </if>
      <if test="TRSCLASS != null and TRSCLASS != emptyBigDecimalValue" >
        #{TRSCLASS},
      </if>
      <if test="AMORTIZED_LENGTH != null and AMORTIZED_LENGTH != emptyBigDecimalValue" >
        #{AMORTIZED_LENGTH},
      </if>
      <if test="BALLOON_AMT != null and BALLOON_AMT != emptyBigDecimalValue" >
        #{BALLOON_AMT},
      </if>
      <if test="ONBS_ROUNDING != null and ONBS_ROUNDING != emptyBigDecimalValue" >
        #{ONBS_ROUNDING},
      </if>
      <if test="OFFBS_ROUNDING != null and OFFBS_ROUNDING != emptyBigDecimalValue" >
        #{OFFBS_ROUNDING},
      </if>
      <if test="PROFIT_ROUNDING != null and PROFIT_ROUNDING != emptyBigDecimalValue" >
        #{PROFIT_ROUNDING},
      </if>
      <if test="REJECTED_BY != null and !&quot;&quot;.equals(REJECTED_BY)" >
        #{REJECTED_BY},
      </if>
      <if test="DATE_REJECTED != null" >
        #{DATE_REJECTED},
      </if>
      <if test="NOTES != null and !&quot;&quot;.equals(NOTES)" >
        #{NOTES},
      </if>
      <if test="TOTAL_AMT_NEW != null and TOTAL_AMT_NEW != emptyBigDecimalValue" >
        #{TOTAL_AMT_NEW},
      </if>
      <if test="AMT_PER_PAYMENT_NEW != null and AMT_PER_PAYMENT_NEW != emptyBigDecimalValue" >
        #{AMT_PER_PAYMENT_NEW},
      </if>
      <if test="COUNTER_PARTY != null and COUNTER_PARTY != emptyBigDecimalValue" >
        #{COUNTER_PARTY},
      </if>
      <if test="MERGED_PLAN_NBR != null and MERGED_PLAN_NBR != emptyBigDecimalValue" >
        #{MERGED_PLAN_NBR},
      </if>
      <if test="MERGED_PLAN_SEQ != null and MERGED_PLAN_SEQ != emptyBigDecimalValue" >
        #{MERGED_PLAN_SEQ},
      </if>
      <if test="RESCH_CY != null and RESCH_CY != emptyBigDecimalValue" >
        #{RESCH_CY},
      </if>
      <if test="RESCH_GL != null and RESCH_GL != emptyBigDecimalValue" >
        #{RESCH_GL},
      </if>
      <if test="RESCH_CIF != null and RESCH_CIF != emptyBigDecimalValue" >
        #{RESCH_CIF},
      </if>
      <if test="RESCH_SL != null and RESCH_SL != emptyBigDecimalValue" >
        #{RESCH_SL},
      </if>
      <if test="CLI_RESCH_CY != null and CLI_RESCH_CY != emptyBigDecimalValue" >
        #{CLI_RESCH_CY},
      </if>
      <if test="CLI_RESCH_GL != null and CLI_RESCH_GL != emptyBigDecimalValue" >
        #{CLI_RESCH_GL},
      </if>
      <if test="CLI_RESCH_CIF != null and CLI_RESCH_CIF != emptyBigDecimalValue" >
        #{CLI_RESCH_CIF},
      </if>
      <if test="CLI_RESCH_SL != null and CLI_RESCH_SL != emptyBigDecimalValue" >
        #{CLI_RESCH_SL},
      </if>
      <if test="PAST_DUE_CY != null and PAST_DUE_CY != emptyBigDecimalValue" >
        #{PAST_DUE_CY},
      </if>
      <if test="PAST_DUE_GL != null and PAST_DUE_GL != emptyBigDecimalValue" >
        #{PAST_DUE_GL},
      </if>
      <if test="PAST_DUE_CIF != null and PAST_DUE_CIF != emptyBigDecimalValue" >
        #{PAST_DUE_CIF},
      </if>
      <if test="PAST_DUE_SL != null and PAST_DUE_SL != emptyBigDecimalValue" >
        #{PAST_DUE_SL},
      </if>
      <if test="CLI_PAST_DUE_CY != null and CLI_PAST_DUE_CY != emptyBigDecimalValue" >
        #{CLI_PAST_DUE_CY},
      </if>
      <if test="CLI_PAST_DUE_GL != null and CLI_PAST_DUE_GL != emptyBigDecimalValue" >
        #{CLI_PAST_DUE_GL},
      </if>
      <if test="CLI_PAST_DUE_CIF != null and CLI_PAST_DUE_CIF != emptyBigDecimalValue" >
        #{CLI_PAST_DUE_CIF},
      </if>
      <if test="CLI_PAST_DUE_SL != null and CLI_PAST_DUE_SL != emptyBigDecimalValue" >
        #{CLI_PAST_DUE_SL},
      </if>
      <if test="PAST_DUE_AMT != null and PAST_DUE_AMT != emptyBigDecimalValue" >
        #{PAST_DUE_AMT},
      </if>
      <if test="PAST_DUE_AMT_CV != null and PAST_DUE_AMT_CV != emptyBigDecimalValue" >
        #{PAST_DUE_AMT_CV},
      </if>
      <if test="CLI_PAST_DUE_AMT != null and CLI_PAST_DUE_AMT != emptyBigDecimalValue" >
        #{CLI_PAST_DUE_AMT},
      </if>
      <if test="CLI_PAST_DUE_AMT_CV != null and CLI_PAST_DUE_AMT_CV != emptyBigDecimalValue" >
        #{CLI_PAST_DUE_AMT_CV},
      </if>
      <if test="MERGED_INV_GL != null and MERGED_INV_GL != emptyBigDecimalValue" >
        #{MERGED_INV_GL},
      </if>
      <if test="MERGED_INV_CIF != null and MERGED_INV_CIF != emptyBigDecimalValue" >
        #{MERGED_INV_CIF},
      </if>
      <if test="MERGED_INV_SL != null and MERGED_INV_SL != emptyBigDecimalValue" >
        #{MERGED_INV_SL},
      </if>
      <if test="CLI_MERGED_INV_GL != null and CLI_MERGED_INV_GL != emptyBigDecimalValue" >
        #{CLI_MERGED_INV_GL},
      </if>
      <if test="CLI_MERGED_INV_CIF != null and CLI_MERGED_INV_CIF != emptyBigDecimalValue" >
        #{CLI_MERGED_INV_CIF},
      </if>
      <if test="CLI_MERGED_INV_SL != null and CLI_MERGED_INV_SL != emptyBigDecimalValue" >
        #{CLI_MERGED_INV_SL},
      </if>
      <if test="REIMBURSED_PROFIT != null and REIMBURSED_PROFIT != emptyBigDecimalValue" >
        #{REIMBURSED_PROFIT},
      </if>
      <if test="PRINCIPAL_LAST != null and !&quot;&quot;.equals(PRINCIPAL_LAST)" >
        #{PRINCIPAL_LAST},
      </if>
      <if test="SWITCHED_AMOUNT != null and SWITCHED_AMOUNT != emptyBigDecimalValue" >
        #{SWITCHED_AMOUNT},
      </if>
      <if test="CREATED_BY != null and !&quot;&quot;.equals(CREATED_BY)" >
        #{CREATED_BY},
      </if>
      <if test="DATE_CREATED != null" >
        #{DATE_CREATED},
      </if>
      <if test="MODIFIED_BY != null and !&quot;&quot;.equals(MODIFIED_BY)" >
        #{MODIFIED_BY},
      </if>
      <if test="DATE_MODIFIED != null" >
        #{DATE_MODIFIED},
      </if>
      <if test="APPROVED_BY != null and !&quot;&quot;.equals(APPROVED_BY)" >
        #{APPROVED_BY},
      </if>
      <if test="DATE_APPROVED != null" >
        #{DATE_APPROVED},
      </if>
      <if test="REVERSED_BY != null and !&quot;&quot;.equals(REVERSED_BY)" >
        #{REVERSED_BY},
      </if>
      <if test="DATE_REVERSED != null" >
        #{DATE_REVERSED},
      </if>
      <if test="SERVER_CREATED_DATE != null" >
        #{SERVER_CREATED_DATE},
      </if>
      <if test="SERVER_APPROVED_DATE != null" >
        #{SERVER_APPROVED_DATE},
      </if>
      <if test="SERVER_REVERSED_DATE != null" >
        #{SERVER_REVERSED_DATE},
      </if>
      <if test="TEMPLATE_CODE != null and TEMPLATE_CODE != emptyBigDecimalValue" >
        #{TEMPLATE_CODE},
      </if>
      <if test="PROFIT_DIST_METHOD != null and !&quot;&quot;.equals(PROFIT_DIST_METHOD)" >
        #{PROFIT_DIST_METHOD},
      </if>
      <if test="EFFECTIVE_YIELD != null and EFFECTIVE_YIELD != emptyBigDecimalValue" >
        #{EFFECTIVE_YIELD},
      </if>
      <if test="DOWN_PAYMENT != null and DOWN_PAYMENT != emptyBigDecimalValue" >
        #{DOWN_PAYMENT},
      </if>
      <if test="CHARGE_AMOUNT != null and CHARGE_AMOUNT != emptyBigDecimalValue" >
        #{CHARGE_AMOUNT},
      </if>
      <if test="PROFIT_COLLECTED != null and PROFIT_COLLECTED != emptyBigDecimalValue" >
        #{PROFIT_COLLECTED},
      </if>
      <if test="CALENDAR_TYPE != null and !&quot;&quot;.equals(CALENDAR_TYPE)" >
        #{CALENDAR_TYPE},
      </if>
      <if test="UPFRONT_PROFIT_YN != null and !&quot;&quot;.equals(UPFRONT_PROFIT_YN)" >
        #{UPFRONT_PROFIT_YN},
      </if>
      <if test="UPFRONT_PROFIT_AMT != null and UPFRONT_PROFIT_AMT != emptyBigDecimalValue" >
        #{UPFRONT_PROFIT_AMT},
      </if>
      <if test="UPFRONT_PROFIT_PERCENT != null and UPFRONT_PROFIT_PERCENT != emptyBigDecimalValue" >
        #{UPFRONT_PROFIT_PERCENT},
      </if>
      <if test="ACCRUAL_BASIS != null and ACCRUAL_BASIS != emptyBigDecimalValue" >
        #{ACCRUAL_BASIS},
      </if>
      <if test="RESCHEDULE_FLAG != null and !&quot;&quot;.equals(RESCHEDULE_FLAG)" >
        #{RESCHEDULE_FLAG},
      </if>
      <if test="GRACE_PERIOD_COMPOUNDING_YN != null and !&quot;&quot;.equals(GRACE_PERIOD_COMPOUNDING_YN)" >
        #{GRACE_PERIOD_COMPOUNDING_YN},
      </if>
      <if test="GRACE_COMPOUND_PERIODICITY != null and !&quot;&quot;.equals(GRACE_COMPOUND_PERIODICITY)" >
        #{GRACE_COMPOUND_PERIODICITY},
      </if>
      <if test="RESCHEDULE_VALUE_DATE != null" >
        #{RESCHEDULE_VALUE_DATE},
      </if>
      <if test="OUTSTD_PRINCIPAL_INSTALL_DATE != null" >
        #{OUTSTD_PRINCIPAL_INSTALL_DATE},
      </if>
      <if test="RESCHEDULE_OUTSTANDING_AMT != null and RESCHEDULE_OUTSTANDING_AMT != emptyBigDecimalValue" >
        #{RESCHEDULE_OUTSTANDING_AMT},
      </if>
      <if test="RESCHEDULE_TYPE != null and RESCHEDULE_TYPE != emptyBigDecimalValue" >
        #{RESCHEDULE_TYPE},
      </if>
      <if test="PLAN_EXPECTED_YIELD != null and PLAN_EXPECTED_YIELD != emptyBigDecimalValue" >
        #{PLAN_EXPECTED_YIELD},
      </if>
      <if test="PLAN_MATURITY_DATE != null" >
        #{PLAN_MATURITY_DATE},
      </if>
      <if test="PLAN_LIBOR_RATE != null and PLAN_LIBOR_RATE != emptyBigDecimalValue" >
        #{PLAN_LIBOR_RATE},
      </if>
      <if test="PLAN_PRINCIPAL != null and PLAN_PRINCIPAL != emptyBigDecimalValue" >
        #{PLAN_PRINCIPAL},
      </if>
      <if test="PREV_RATE_REV_DATE != null" >
        #{PREV_RATE_REV_DATE},
      </if>
      <if test="NEXT_RATE_REV_DATE != null" >
        #{NEXT_RATE_REV_DATE},
      </if>
      <if test="OUTSTD_PRINCIPAL_AS_INSTALL_YN != null and !&quot;&quot;.equals(OUTSTD_PRINCIPAL_AS_INSTALL_YN)" >
        #{OUTSTD_PRINCIPAL_AS_INSTALL_YN},
      </if>
      <if test="EQUAL_SEGMENTS_YN != null and !&quot;&quot;.equals(EQUAL_SEGMENTS_YN)" >
        #{EQUAL_SEGMENTS_YN},
      </if>
      <if test="ACTUAL_GRACE_PERIOD != null and ACTUAL_GRACE_PERIOD != emptyBigDecimalValue" >
        #{ACTUAL_GRACE_PERIOD},
      </if>
      <if test="ACTUAL_GRACE_PERIODICITY != null and !&quot;&quot;.equals(ACTUAL_GRACE_PERIODICITY)" >
        #{ACTUAL_GRACE_PERIODICITY},
      </if>
      <if test="CALC_PROFIT_AMOUNT_ENTERED != null and CALC_PROFIT_AMOUNT_ENTERED != emptyBigDecimalValue" >
        #{CALC_PROFIT_AMOUNT_ENTERED},
      </if>
      <if test="DISBURSEMENT_EQUAL_INSTALL_YN != null and !&quot;&quot;.equals(DISBURSEMENT_EQUAL_INSTALL_YN)" >
        #{DISBURSEMENT_EQUAL_INSTALL_YN},
      </if>
      <if test="DEAL_PERIOD_COMPOUNDING_YN != null and !&quot;&quot;.equals(DEAL_PERIOD_COMPOUNDING_YN)" >
        #{DEAL_PERIOD_COMPOUNDING_YN},
      </if>
      <if test="GRACE_COMPOUND_PERIODICITY_NBR != null and GRACE_COMPOUND_PERIODICITY_NBR != emptyBigDecimalValue" >
        #{GRACE_COMPOUND_PERIODICITY_NBR},
      </if>
      <if test="ROUNDING_TYPE_INST_AMT != null and !&quot;&quot;.equals(ROUNDING_TYPE_INST_AMT)" >
        #{ROUNDING_TYPE_INST_AMT},
      </if>
      <if test="ROUNDING_TYPE_REPAY_AMT != null and !&quot;&quot;.equals(ROUNDING_TYPE_REPAY_AMT)" >
        #{ROUNDING_TYPE_REPAY_AMT},
      </if>
      <if test="INCLUDE_VAT_IN_INSTL_YN != null and !&quot;&quot;.equals(INCLUDE_VAT_IN_INSTL_YN)" >
        #{INCLUDE_VAT_IN_INSTL_YN},
      </if>
      <if test="VAT_PERCENTAGE != null and VAT_PERCENTAGE != emptyBigDecimalValue" >
        #{VAT_PERCENTAGE},
      </if>
      <if test="VAT_CODE != null and VAT_CODE != emptyBigDecimalValue" >
        #{VAT_CODE},
      </if>
      <if test="ASSET_RESIDUAL_AMOUNT != null and ASSET_RESIDUAL_AMOUNT != emptyBigDecimalValue" >
        #{ASSET_RESIDUAL_AMOUNT},
      </if>
      <if test="LAST_INST_ASSET_RESIDUAL_YN != null and !&quot;&quot;.equals(LAST_INST_ASSET_RESIDUAL_YN)" >
        #{LAST_INST_ASSET_RESIDUAL_YN},
      </if>
    </trim>
  </insert>
  <sql id="sql_updateFMSPAYPLAN" >
    update FMSPAYPLAN
    <set >
      <if test="TRX_TYPE != null" >
        <choose >
          <when test="TRX_TYPE.equals(&quot;&quot;)" >
            TRX_TYPE = NULL ,
          </when>
          <otherwise >
            TRX_TYPE = #{TRX_TYPE},
          </otherwise>
        </choose>
      </if>
      <if test="TRX_NBR != null" >
        <choose >
          <when test="TRX_NBR == emptyBigDecimalValue" >
            TRX_NBR = NULL ,
          </when>
          <otherwise >
            TRX_NBR = #{TRX_NBR},
          </otherwise>
        </choose>
      </if>
      <if test="TOTAL_AMT != null" >
        <choose >
          <when test="TOTAL_AMT == emptyBigDecimalValue" >
            TOTAL_AMT = NULL ,
          </when>
          <otherwise >
            TOTAL_AMT = #{TOTAL_AMT},
          </otherwise>
        </choose>
      </if>
      <if test="TOTAL_AMT_PAID != null" >
        <choose >
          <when test="TOTAL_AMT_PAID == emptyBigDecimalValue" >
            TOTAL_AMT_PAID = NULL ,
          </when>
          <otherwise >
            TOTAL_AMT_PAID = #{TOTAL_AMT_PAID},
          </otherwise>
        </choose>
      </if>
      <if test="CURRENCY != null" >
        <choose >
          <when test="CURRENCY == emptyBigDecimalValue" >
            CURRENCY = NULL ,
          </when>
          <otherwise >
            CURRENCY = #{CURRENCY},
          </otherwise>
        </choose>
      </if>
      <if test="NO_OF_PAYMENTS != null" >
        <choose >
          <when test="NO_OF_PAYMENTS == emptyBigDecimalValue" >
            NO_OF_PAYMENTS = NULL ,
          </when>
          <otherwise >
            NO_OF_PAYMENTS = #{NO_OF_PAYMENTS},
          </otherwise>
        </choose>
      </if>
      <if test="AMT_PER_PAYMENT != null" >
        <choose >
          <when test="AMT_PER_PAYMENT == emptyBigDecimalValue" >
            AMT_PER_PAYMENT = NULL ,
          </when>
          <otherwise >
            AMT_PER_PAYMENT = #{AMT_PER_PAYMENT},
          </otherwise>
        </choose>
      </if>
      <if test="BALLOON_PAYMENT != null" >
        <choose >
          <when test="BALLOON_PAYMENT == emptyBigDecimalValue" >
            BALLOON_PAYMENT = NULL ,
          </when>
          <otherwise >
            BALLOON_PAYMENT = #{BALLOON_PAYMENT},
          </otherwise>
        </choose>
      </if>
      <if test="NO_OF_BALLOONS != null" >
        <choose >
          <when test="NO_OF_BALLOONS == emptyBigDecimalValue" >
            NO_OF_BALLOONS = NULL ,
          </when>
          <otherwise >
            NO_OF_BALLOONS = #{NO_OF_BALLOONS},
          </otherwise>
        </choose>
      </if>
      <if test="PAY_RES_AMT != null" >
        <choose >
          <when test="PAY_RES_AMT.equals(&quot;&quot;)" >
            PAY_RES_AMT = NULL ,
          </when>
          <otherwise >
            PAY_RES_AMT = #{PAY_RES_AMT},
          </otherwise>
        </choose>
      </if>
      <if test="PAYM_PERIODICITY != null" >
        <choose >
          <when test="PAYM_PERIODICITY.equals(&quot;&quot;)" >
            PAYM_PERIODICITY = NULL ,
          </when>
          <otherwise >
            PAYM_PERIODICITY = #{PAYM_PERIODICITY},
          </otherwise>
        </choose>
      </if>
      <if test="PAYM_PERIOD_NBR != null" >
        <choose >
          <when test="PAYM_PERIOD_NBR == emptyBigDecimalValue" >
            PAYM_PERIOD_NBR = NULL ,
          </when>
          <otherwise >
            PAYM_PERIOD_NBR = #{PAYM_PERIOD_NBR},
          </otherwise>
        </choose>
      </if>
      <if test="PAYM_PERIOD_POS != null" >
        <choose >
          <when test="PAYM_PERIOD_POS.equals(&quot;&quot;)" >
            PAYM_PERIOD_POS = NULL ,
          </when>
          <otherwise >
            PAYM_PERIOD_POS = #{PAYM_PERIOD_POS},
          </otherwise>
        </choose>
      </if>
      <if test="FIRST_PAY_DATE != null" >
        FIRST_PAY_DATE = #{FIRST_PAY_DATE},
      </if>
      <if test="STATUS != null" >
        <choose >
          <when test="STATUS.equals(&quot;&quot;)" >
            STATUS = NULL ,
          </when>
          <otherwise >
            STATUS = #{STATUS},
          </otherwise>
        </choose>
      </if>
      <if test="ROUNDING_FACTOR != null" >
        <choose >
          <when test="ROUNDING_FACTOR == emptyBigDecimalValue" >
            ROUNDING_FACTOR = NULL ,
          </when>
          <otherwise >
            ROUNDING_FACTOR = #{ROUNDING_FACTOR},
          </otherwise>
        </choose>
      </if>
      <if test="SETTLEMENT_TYPE != null" >
        <choose >
          <when test="SETTLEMENT_TYPE.equals(&quot;&quot;)" >
            SETTLEMENT_TYPE = NULL ,
          </when>
          <otherwise >
            SETTLEMENT_TYPE = #{SETTLEMENT_TYPE},
          </otherwise>
        </choose>
      </if>
      <if test="PROMISSORY_NOTES != null" >
        <choose >
          <when test="PROMISSORY_NOTES == emptyBigDecimalValue" >
            PROMISSORY_NOTES = NULL ,
          </when>
          <otherwise >
            PROMISSORY_NOTES = #{PROMISSORY_NOTES},
          </otherwise>
        </choose>
      </if>
      <if test="PROMISSORY_NOTES_OPTION != null" >
        <choose >
          <when test="PROMISSORY_NOTES_OPTION.equals(&quot;&quot;)" >
            PROMISSORY_NOTES_OPTION = NULL ,
          </when>
          <otherwise >
            PROMISSORY_NOTES_OPTION = #{PROMISSORY_NOTES_OPTION},
          </otherwise>
        </choose>
      </if>
      <if test="PROFIT_CALCULATION_METHOD != null" >
        <choose >
          <when test="PROFIT_CALCULATION_METHOD.equals(&quot;&quot;)" >
            PROFIT_CALCULATION_METHOD = NULL ,
          </when>
          <otherwise >
            PROFIT_CALCULATION_METHOD = #{PROFIT_CALCULATION_METHOD},
          </otherwise>
        </choose>
      </if>
      <if test="GRACE_PERIOD_OPTION != null" >
        <choose >
          <when test="GRACE_PERIOD_OPTION == emptyBigDecimalValue" >
            GRACE_PERIOD_OPTION = NULL ,
          </when>
          <otherwise >
            GRACE_PERIOD_OPTION = #{GRACE_PERIOD_OPTION},
          </otherwise>
        </choose>
      </if>
      <if test="GRACE_PERIOD != null" >
        <choose >
          <when test="GRACE_PERIOD == emptyBigDecimalValue" >
            GRACE_PERIOD = NULL ,
          </when>
          <otherwise >
            GRACE_PERIOD = #{GRACE_PERIOD},
          </otherwise>
        </choose>
      </if>
      <if test="SETTLEMENT_NBR != null" >
        <choose >
          <when test="SETTLEMENT_NBR == emptyBigDecimalValue" >
            SETTLEMENT_NBR = NULL ,
          </when>
          <otherwise >
            SETTLEMENT_NBR = #{SETTLEMENT_NBR},
          </otherwise>
        </choose>
      </if>
      <if test="YIELD != null" >
        <choose >
          <when test="YIELD == emptyBigDecimalValue" >
            YIELD = NULL ,
          </when>
          <otherwise >
            YIELD = #{YIELD},
          </otherwise>
        </choose>
      </if>
      <if test="GRACE_PERIODICITY != null" >
        <choose >
          <when test="GRACE_PERIODICITY.equals(&quot;&quot;)" >
            GRACE_PERIODICITY = NULL ,
          </when>
          <otherwise >
            GRACE_PERIODICITY = #{GRACE_PERIODICITY},
          </otherwise>
        </choose>
      </if>
      <if test="PROMISSORY_NOTES_PRINTED != null" >
        <choose >
          <when test="PROMISSORY_NOTES_PRINTED == emptyBigDecimalValue" >
            PROMISSORY_NOTES_PRINTED = NULL ,
          </when>
          <otherwise >
            PROMISSORY_NOTES_PRINTED = #{PROMISSORY_NOTES_PRINTED},
          </otherwise>
        </choose>
      </if>
      <if test="COMMENCEMENT_DATE != null" >
        COMMENCEMENT_DATE = #{COMMENCEMENT_DATE},
      </if>
      <if test="CIF != null" >
        <choose >
          <when test="CIF == emptyBigDecimalValue" >
            CIF = NULL ,
          </when>
          <otherwise >
            CIF = #{CIF},
          </otherwise>
        </choose>
      </if>
      <if test="TRSCLASS != null" >
        <choose >
          <when test="TRSCLASS == emptyBigDecimalValue" >
            TRSCLASS = NULL ,
          </when>
          <otherwise >
            TRSCLASS = #{TRSCLASS},
          </otherwise>
        </choose>
      </if>
      <if test="AMORTIZED_LENGTH != null" >
        <choose >
          <when test="AMORTIZED_LENGTH == emptyBigDecimalValue" >
            AMORTIZED_LENGTH = NULL ,
          </when>
          <otherwise >
            AMORTIZED_LENGTH = #{AMORTIZED_LENGTH},
          </otherwise>
        </choose>
      </if>
      <if test="BALLOON_AMT != null" >
        <choose >
          <when test="BALLOON_AMT == emptyBigDecimalValue" >
            BALLOON_AMT = NULL ,
          </when>
          <otherwise >
            BALLOON_AMT = #{BALLOON_AMT},
          </otherwise>
        </choose>
      </if>
      <if test="ONBS_ROUNDING != null" >
        <choose >
          <when test="ONBS_ROUNDING == emptyBigDecimalValue" >
            ONBS_ROUNDING = NULL ,
          </when>
          <otherwise >
            ONBS_ROUNDING = #{ONBS_ROUNDING},
          </otherwise>
        </choose>
      </if>
      <if test="OFFBS_ROUNDING != null" >
        <choose >
          <when test="OFFBS_ROUNDING == emptyBigDecimalValue" >
            OFFBS_ROUNDING = NULL ,
          </when>
          <otherwise >
            OFFBS_ROUNDING = #{OFFBS_ROUNDING},
          </otherwise>
        </choose>
      </if>
      <if test="PROFIT_ROUNDING != null" >
        <choose >
          <when test="PROFIT_ROUNDING == emptyBigDecimalValue" >
            PROFIT_ROUNDING = NULL ,
          </when>
          <otherwise >
            PROFIT_ROUNDING = #{PROFIT_ROUNDING},
          </otherwise>
        </choose>
      </if>
      <if test="REJECTED_BY != null" >
        <choose >
          <when test="REJECTED_BY.equals(&quot;&quot;)" >
            REJECTED_BY = NULL ,
          </when>
          <otherwise >
            REJECTED_BY = #{REJECTED_BY},
          </otherwise>
        </choose>
      </if>
      <if test="DATE_REJECTED != null" >
        DATE_REJECTED = #{DATE_REJECTED},
      </if>
      <if test="NOTES != null" >
        <choose >
          <when test="NOTES.equals(&quot;&quot;)" >
            NOTES = NULL ,
          </when>
          <otherwise >
            NOTES = #{NOTES},
          </otherwise>
        </choose>
      </if>
      <if test="TOTAL_AMT_NEW != null" >
        <choose >
          <when test="TOTAL_AMT_NEW == emptyBigDecimalValue" >
            TOTAL_AMT_NEW = NULL ,
          </when>
          <otherwise >
            TOTAL_AMT_NEW = #{TOTAL_AMT_NEW},
          </otherwise>
        </choose>
      </if>
      <if test="AMT_PER_PAYMENT_NEW != null" >
        <choose >
          <when test="AMT_PER_PAYMENT_NEW == emptyBigDecimalValue" >
            AMT_PER_PAYMENT_NEW = NULL ,
          </when>
          <otherwise >
            AMT_PER_PAYMENT_NEW = #{AMT_PER_PAYMENT_NEW},
          </otherwise>
        </choose>
      </if>
      <if test="COUNTER_PARTY != null" >
        <choose >
          <when test="COUNTER_PARTY == emptyBigDecimalValue" >
            COUNTER_PARTY = NULL ,
          </when>
          <otherwise >
            COUNTER_PARTY = #{COUNTER_PARTY},
          </otherwise>
        </choose>
      </if>
      <if test="MERGED_PLAN_NBR != null" >
        <choose >
          <when test="MERGED_PLAN_NBR == emptyBigDecimalValue" >
            MERGED_PLAN_NBR = NULL ,
          </when>
          <otherwise >
            MERGED_PLAN_NBR = #{MERGED_PLAN_NBR},
          </otherwise>
        </choose>
      </if>
      <if test="MERGED_PLAN_SEQ != null" >
        <choose >
          <when test="MERGED_PLAN_SEQ == emptyBigDecimalValue" >
            MERGED_PLAN_SEQ = NULL ,
          </when>
          <otherwise >
            MERGED_PLAN_SEQ = #{MERGED_PLAN_SEQ},
          </otherwise>
        </choose>
      </if>
      <if test="RESCH_CY != null" >
        <choose >
          <when test="RESCH_CY == emptyBigDecimalValue" >
            RESCH_CY = NULL ,
          </when>
          <otherwise >
            RESCH_CY = #{RESCH_CY},
          </otherwise>
        </choose>
      </if>
      <if test="RESCH_GL != null" >
        <choose >
          <when test="RESCH_GL == emptyBigDecimalValue" >
            RESCH_GL = NULL ,
          </when>
          <otherwise >
            RESCH_GL = #{RESCH_GL},
          </otherwise>
        </choose>
      </if>
      <if test="RESCH_CIF != null" >
        <choose >
          <when test="RESCH_CIF == emptyBigDecimalValue" >
            RESCH_CIF = NULL ,
          </when>
          <otherwise >
            RESCH_CIF = #{RESCH_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="RESCH_SL != null" >
        <choose >
          <when test="RESCH_SL == emptyBigDecimalValue" >
            RESCH_SL = NULL ,
          </when>
          <otherwise >
            RESCH_SL = #{RESCH_SL},
          </otherwise>
        </choose>
      </if>
      <if test="CLI_RESCH_CY != null" >
        <choose >
          <when test="CLI_RESCH_CY == emptyBigDecimalValue" >
            CLI_RESCH_CY = NULL ,
          </when>
          <otherwise >
            CLI_RESCH_CY = #{CLI_RESCH_CY},
          </otherwise>
        </choose>
      </if>
      <if test="CLI_RESCH_GL != null" >
        <choose >
          <when test="CLI_RESCH_GL == emptyBigDecimalValue" >
            CLI_RESCH_GL = NULL ,
          </when>
          <otherwise >
            CLI_RESCH_GL = #{CLI_RESCH_GL},
          </otherwise>
        </choose>
      </if>
      <if test="CLI_RESCH_CIF != null" >
        <choose >
          <when test="CLI_RESCH_CIF == emptyBigDecimalValue" >
            CLI_RESCH_CIF = NULL ,
          </when>
          <otherwise >
            CLI_RESCH_CIF = #{CLI_RESCH_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="CLI_RESCH_SL != null" >
        <choose >
          <when test="CLI_RESCH_SL == emptyBigDecimalValue" >
            CLI_RESCH_SL = NULL ,
          </when>
          <otherwise >
            CLI_RESCH_SL = #{CLI_RESCH_SL},
          </otherwise>
        </choose>
      </if>
      <if test="PAST_DUE_CY != null" >
        <choose >
          <when test="PAST_DUE_CY == emptyBigDecimalValue" >
            PAST_DUE_CY = NULL ,
          </when>
          <otherwise >
            PAST_DUE_CY = #{PAST_DUE_CY},
          </otherwise>
        </choose>
      </if>
      <if test="PAST_DUE_GL != null" >
        <choose >
          <when test="PAST_DUE_GL == emptyBigDecimalValue" >
            PAST_DUE_GL = NULL ,
          </when>
          <otherwise >
            PAST_DUE_GL = #{PAST_DUE_GL},
          </otherwise>
        </choose>
      </if>
      <if test="PAST_DUE_CIF != null" >
        <choose >
          <when test="PAST_DUE_CIF == emptyBigDecimalValue" >
            PAST_DUE_CIF = NULL ,
          </when>
          <otherwise >
            PAST_DUE_CIF = #{PAST_DUE_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="PAST_DUE_SL != null" >
        <choose >
          <when test="PAST_DUE_SL == emptyBigDecimalValue" >
            PAST_DUE_SL = NULL ,
          </when>
          <otherwise >
            PAST_DUE_SL = #{PAST_DUE_SL},
          </otherwise>
        </choose>
      </if>
      <if test="CLI_PAST_DUE_CY != null" >
        <choose >
          <when test="CLI_PAST_DUE_CY == emptyBigDecimalValue" >
            CLI_PAST_DUE_CY = NULL ,
          </when>
          <otherwise >
            CLI_PAST_DUE_CY = #{CLI_PAST_DUE_CY},
          </otherwise>
        </choose>
      </if>
      <if test="CLI_PAST_DUE_GL != null" >
        <choose >
          <when test="CLI_PAST_DUE_GL == emptyBigDecimalValue" >
            CLI_PAST_DUE_GL = NULL ,
          </when>
          <otherwise >
            CLI_PAST_DUE_GL = #{CLI_PAST_DUE_GL},
          </otherwise>
        </choose>
      </if>
      <if test="CLI_PAST_DUE_CIF != null" >
        <choose >
          <when test="CLI_PAST_DUE_CIF == emptyBigDecimalValue" >
            CLI_PAST_DUE_CIF = NULL ,
          </when>
          <otherwise >
            CLI_PAST_DUE_CIF = #{CLI_PAST_DUE_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="CLI_PAST_DUE_SL != null" >
        <choose >
          <when test="CLI_PAST_DUE_SL == emptyBigDecimalValue" >
            CLI_PAST_DUE_SL = NULL ,
          </when>
          <otherwise >
            CLI_PAST_DUE_SL = #{CLI_PAST_DUE_SL},
          </otherwise>
        </choose>
      </if>
      <if test="PAST_DUE_AMT != null" >
        <choose >
          <when test="PAST_DUE_AMT == emptyBigDecimalValue" >
            PAST_DUE_AMT = NULL ,
          </when>
          <otherwise >
            PAST_DUE_AMT = #{PAST_DUE_AMT},
          </otherwise>
        </choose>
      </if>
      <if test="PAST_DUE_AMT_CV != null" >
        <choose >
          <when test="PAST_DUE_AMT_CV == emptyBigDecimalValue" >
            PAST_DUE_AMT_CV = NULL ,
          </when>
          <otherwise >
            PAST_DUE_AMT_CV = #{PAST_DUE_AMT_CV},
          </otherwise>
        </choose>
      </if>
      <if test="CLI_PAST_DUE_AMT != null" >
        <choose >
          <when test="CLI_PAST_DUE_AMT == emptyBigDecimalValue" >
            CLI_PAST_DUE_AMT = NULL ,
          </when>
          <otherwise >
            CLI_PAST_DUE_AMT = #{CLI_PAST_DUE_AMT},
          </otherwise>
        </choose>
      </if>
      <if test="CLI_PAST_DUE_AMT_CV != null" >
        <choose >
          <when test="CLI_PAST_DUE_AMT_CV == emptyBigDecimalValue" >
            CLI_PAST_DUE_AMT_CV = NULL ,
          </when>
          <otherwise >
            CLI_PAST_DUE_AMT_CV = #{CLI_PAST_DUE_AMT_CV},
          </otherwise>
        </choose>
      </if>
      <if test="MERGED_INV_GL != null" >
        <choose >
          <when test="MERGED_INV_GL == emptyBigDecimalValue" >
            MERGED_INV_GL = NULL ,
          </when>
          <otherwise >
            MERGED_INV_GL = #{MERGED_INV_GL},
          </otherwise>
        </choose>
      </if>
      <if test="MERGED_INV_CIF != null" >
        <choose >
          <when test="MERGED_INV_CIF == emptyBigDecimalValue" >
            MERGED_INV_CIF = NULL ,
          </when>
          <otherwise >
            MERGED_INV_CIF = #{MERGED_INV_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="MERGED_INV_SL != null" >
        <choose >
          <when test="MERGED_INV_SL == emptyBigDecimalValue" >
            MERGED_INV_SL = NULL ,
          </when>
          <otherwise >
            MERGED_INV_SL = #{MERGED_INV_SL},
          </otherwise>
        </choose>
      </if>
      <if test="CLI_MERGED_INV_GL != null" >
        <choose >
          <when test="CLI_MERGED_INV_GL == emptyBigDecimalValue" >
            CLI_MERGED_INV_GL = NULL ,
          </when>
          <otherwise >
            CLI_MERGED_INV_GL = #{CLI_MERGED_INV_GL},
          </otherwise>
        </choose>
      </if>
      <if test="CLI_MERGED_INV_CIF != null" >
        <choose >
          <when test="CLI_MERGED_INV_CIF == emptyBigDecimalValue" >
            CLI_MERGED_INV_CIF = NULL ,
          </when>
          <otherwise >
            CLI_MERGED_INV_CIF = #{CLI_MERGED_INV_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="CLI_MERGED_INV_SL != null" >
        <choose >
          <when test="CLI_MERGED_INV_SL == emptyBigDecimalValue" >
            CLI_MERGED_INV_SL = NULL ,
          </when>
          <otherwise >
            CLI_MERGED_INV_SL = #{CLI_MERGED_INV_SL},
          </otherwise>
        </choose>
      </if>
      <if test="REIMBURSED_PROFIT != null" >
        <choose >
          <when test="REIMBURSED_PROFIT == emptyBigDecimalValue" >
            REIMBURSED_PROFIT = NULL ,
          </when>
          <otherwise >
            REIMBURSED_PROFIT = #{REIMBURSED_PROFIT},
          </otherwise>
        </choose>
      </if>
      <if test="PRINCIPAL_LAST != null" >
        <choose >
          <when test="PRINCIPAL_LAST.equals(&quot;&quot;)" >
            PRINCIPAL_LAST = NULL ,
          </when>
          <otherwise >
            PRINCIPAL_LAST = #{PRINCIPAL_LAST},
          </otherwise>
        </choose>
      </if>
      <if test="SWITCHED_AMOUNT != null" >
        <choose >
          <when test="SWITCHED_AMOUNT == emptyBigDecimalValue" >
            SWITCHED_AMOUNT = NULL ,
          </when>
          <otherwise >
            SWITCHED_AMOUNT = #{SWITCHED_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="CREATED_BY != null" >
        <choose >
          <when test="CREATED_BY.equals(&quot;&quot;)" >
            CREATED_BY = NULL ,
          </when>
          <otherwise >
            CREATED_BY = #{CREATED_BY},
          </otherwise>
        </choose>
      </if>
      <if test="DATE_CREATED != null" >
        DATE_CREATED = #{DATE_CREATED},
      </if>
      <if test="MODIFIED_BY != null" >
        <choose >
          <when test="MODIFIED_BY.equals(&quot;&quot;)" >
            MODIFIED_BY = NULL ,
          </when>
          <otherwise >
            MODIFIED_BY = #{MODIFIED_BY},
          </otherwise>
        </choose>
      </if>
      <if test="DATE_MODIFIED != null" >
        DATE_MODIFIED = #{DATE_MODIFIED},
      </if>
      <if test="APPROVED_BY != null" >
        <choose >
          <when test="APPROVED_BY.equals(&quot;&quot;)" >
            APPROVED_BY = NULL ,
          </when>
          <otherwise >
            APPROVED_BY = #{APPROVED_BY},
          </otherwise>
        </choose>
      </if>
      <if test="DATE_APPROVED != null" >
        DATE_APPROVED = #{DATE_APPROVED},
      </if>
      <if test="REVERSED_BY != null" >
        <choose >
          <when test="REVERSED_BY.equals(&quot;&quot;)" >
            REVERSED_BY = NULL ,
          </when>
          <otherwise >
            REVERSED_BY = #{REVERSED_BY},
          </otherwise>
        </choose>
      </if>
      <if test="DATE_REVERSED != null" >
        DATE_REVERSED = #{DATE_REVERSED},
      </if>
      <if test="SERVER_CREATED_DATE != null" >
        SERVER_CREATED_DATE = #{SERVER_CREATED_DATE},
      </if>
      <if test="SERVER_APPROVED_DATE != null" >
        SERVER_APPROVED_DATE = #{SERVER_APPROVED_DATE},
      </if>
      <if test="SERVER_REVERSED_DATE != null" >
        SERVER_REVERSED_DATE = #{SERVER_REVERSED_DATE},
      </if>
      <if test="TEMPLATE_CODE != null" >
        <choose >
          <when test="TEMPLATE_CODE == emptyBigDecimalValue" >
            TEMPLATE_CODE = NULL ,
          </when>
          <otherwise >
            TEMPLATE_CODE = #{TEMPLATE_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="PROFIT_DIST_METHOD != null" >
        <choose >
          <when test="PROFIT_DIST_METHOD.equals(&quot;&quot;)" >
            PROFIT_DIST_METHOD = NULL ,
          </when>
          <otherwise >
            PROFIT_DIST_METHOD = #{PROFIT_DIST_METHOD},
          </otherwise>
        </choose>
      </if>
      <if test="EFFECTIVE_YIELD != null" >
        <choose >
          <when test="EFFECTIVE_YIELD == emptyBigDecimalValue" >
            EFFECTIVE_YIELD = NULL ,
          </when>
          <otherwise >
            EFFECTIVE_YIELD = #{EFFECTIVE_YIELD},
          </otherwise>
        </choose>
      </if>
      <if test="DOWN_PAYMENT != null" >
        <choose >
          <when test="DOWN_PAYMENT == emptyBigDecimalValue" >
            DOWN_PAYMENT = NULL ,
          </when>
          <otherwise >
            DOWN_PAYMENT = #{DOWN_PAYMENT},
          </otherwise>
        </choose>
      </if>
      <if test="CHARGE_AMOUNT != null" >
        <choose >
          <when test="CHARGE_AMOUNT == emptyBigDecimalValue" >
            CHARGE_AMOUNT = NULL ,
          </when>
          <otherwise >
            CHARGE_AMOUNT = #{CHARGE_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="PROFIT_COLLECTED != null" >
        <choose >
          <when test="PROFIT_COLLECTED == emptyBigDecimalValue" >
            PROFIT_COLLECTED = NULL ,
          </when>
          <otherwise >
            PROFIT_COLLECTED = #{PROFIT_COLLECTED},
          </otherwise>
        </choose>
      </if>
      <if test="CALENDAR_TYPE != null" >
        <choose >
          <when test="CALENDAR_TYPE.equals(&quot;&quot;)" >
            CALENDAR_TYPE = NULL ,
          </when>
          <otherwise >
            CALENDAR_TYPE = #{CALENDAR_TYPE},
          </otherwise>
        </choose>
      </if>
      <if test="UPFRONT_PROFIT_YN != null" >
        <choose >
          <when test="UPFRONT_PROFIT_YN.equals(&quot;&quot;)" >
            UPFRONT_PROFIT_YN = NULL ,
          </when>
          <otherwise >
            UPFRONT_PROFIT_YN = #{UPFRONT_PROFIT_YN},
          </otherwise>
        </choose>
      </if>
      <if test="UPFRONT_PROFIT_AMT != null" >
        <choose >
          <when test="UPFRONT_PROFIT_AMT == emptyBigDecimalValue" >
            UPFRONT_PROFIT_AMT = NULL ,
          </when>
          <otherwise >
            UPFRONT_PROFIT_AMT = #{UPFRONT_PROFIT_AMT},
          </otherwise>
        </choose>
      </if>
      <if test="UPFRONT_PROFIT_PERCENT != null" >
        <choose >
          <when test="UPFRONT_PROFIT_PERCENT == emptyBigDecimalValue" >
            UPFRONT_PROFIT_PERCENT = NULL ,
          </when>
          <otherwise >
            UPFRONT_PROFIT_PERCENT = #{UPFRONT_PROFIT_PERCENT},
          </otherwise>
        </choose>
      </if>
      <if test="ACCRUAL_BASIS != null" >
        <choose >
          <when test="ACCRUAL_BASIS == emptyBigDecimalValue" >
            ACCRUAL_BASIS = NULL ,
          </when>
          <otherwise >
            ACCRUAL_BASIS = #{ACCRUAL_BASIS},
          </otherwise>
        </choose>
      </if>
      <if test="RESCHEDULE_FLAG != null" >
        <choose >
          <when test="RESCHEDULE_FLAG.equals(&quot;&quot;)" >
            RESCHEDULE_FLAG = NULL ,
          </when>
          <otherwise >
            RESCHEDULE_FLAG = #{RESCHEDULE_FLAG},
          </otherwise>
        </choose>
      </if>
      <if test="GRACE_PERIOD_COMPOUNDING_YN != null" >
        <choose >
          <when test="GRACE_PERIOD_COMPOUNDING_YN.equals(&quot;&quot;)" >
            GRACE_PERIOD_COMPOUNDING_YN = NULL ,
          </when>
          <otherwise >
            GRACE_PERIOD_COMPOUNDING_YN = #{GRACE_PERIOD_COMPOUNDING_YN},
          </otherwise>
        </choose>
      </if>
      <if test="GRACE_COMPOUND_PERIODICITY != null" >
        <choose >
          <when test="GRACE_COMPOUND_PERIODICITY.equals(&quot;&quot;)" >
            GRACE_COMPOUND_PERIODICITY = NULL ,
          </when>
          <otherwise >
            GRACE_COMPOUND_PERIODICITY = #{GRACE_COMPOUND_PERIODICITY},
          </otherwise>
        </choose>
      </if>
      <if test="RESCHEDULE_VALUE_DATE != null" >
        RESCHEDULE_VALUE_DATE = #{RESCHEDULE_VALUE_DATE},
      </if>
      <if test="OUTSTD_PRINCIPAL_INSTALL_DATE != null" >
        OUTSTD_PRINCIPAL_INSTALL_DATE = #{OUTSTD_PRINCIPAL_INSTALL_DATE},
      </if>
      <if test="RESCHEDULE_OUTSTANDING_AMT != null" >
        <choose >
          <when test="RESCHEDULE_OUTSTANDING_AMT == emptyBigDecimalValue" >
            RESCHEDULE_OUTSTANDING_AMT = NULL ,
          </when>
          <otherwise >
            RESCHEDULE_OUTSTANDING_AMT = #{RESCHEDULE_OUTSTANDING_AMT},
          </otherwise>
        </choose>
      </if>
      <if test="RESCHEDULE_TYPE != null" >
        <choose >
          <when test="RESCHEDULE_TYPE == emptyBigDecimalValue" >
            RESCHEDULE_TYPE = NULL ,
          </when>
          <otherwise >
            RESCHEDULE_TYPE = #{RESCHEDULE_TYPE},
          </otherwise>
        </choose>
      </if>
      <if test="PLAN_EXPECTED_YIELD != null" >
        <choose >
          <when test="PLAN_EXPECTED_YIELD == emptyBigDecimalValue" >
            PLAN_EXPECTED_YIELD = NULL ,
          </when>
          <otherwise >
            PLAN_EXPECTED_YIELD = #{PLAN_EXPECTED_YIELD},
          </otherwise>
        </choose>
      </if>
      <if test="PLAN_MATURITY_DATE != null" >
        PLAN_MATURITY_DATE = #{PLAN_MATURITY_DATE},
      </if>
      <if test="PLAN_LIBOR_RATE != null" >
        <choose >
          <when test="PLAN_LIBOR_RATE == emptyBigDecimalValue" >
            PLAN_LIBOR_RATE = NULL ,
          </when>
          <otherwise >
            PLAN_LIBOR_RATE = #{PLAN_LIBOR_RATE},
          </otherwise>
        </choose>
      </if>
      <if test="PLAN_PRINCIPAL != null" >
        <choose >
          <when test="PLAN_PRINCIPAL == emptyBigDecimalValue" >
            PLAN_PRINCIPAL = NULL ,
          </when>
          <otherwise >
            PLAN_PRINCIPAL = #{PLAN_PRINCIPAL},
          </otherwise>
        </choose>
      </if>
      <if test="PREV_RATE_REV_DATE != null" >
        PREV_RATE_REV_DATE = #{PREV_RATE_REV_DATE},
      </if>
      <if test="NEXT_RATE_REV_DATE != null" >
        NEXT_RATE_REV_DATE = #{NEXT_RATE_REV_DATE},
      </if>
      <if test="OUTSTD_PRINCIPAL_AS_INSTALL_YN != null" >
        <choose >
          <when test="OUTSTD_PRINCIPAL_AS_INSTALL_YN.equals(&quot;&quot;)" >
            OUTSTD_PRINCIPAL_AS_INSTALL_YN = NULL ,
          </when>
          <otherwise >
            OUTSTD_PRINCIPAL_AS_INSTALL_YN = #{OUTSTD_PRINCIPAL_AS_INSTALL_YN},
          </otherwise>
        </choose>
      </if>
      <if test="EQUAL_SEGMENTS_YN != null" >
        <choose >
          <when test="EQUAL_SEGMENTS_YN.equals(&quot;&quot;)" >
            EQUAL_SEGMENTS_YN = NULL ,
          </when>
          <otherwise >
            EQUAL_SEGMENTS_YN = #{EQUAL_SEGMENTS_YN},
          </otherwise>
        </choose>
      </if>
      <if test="ACTUAL_GRACE_PERIOD != null" >
        <choose >
          <when test="ACTUAL_GRACE_PERIOD == emptyBigDecimalValue" >
            ACTUAL_GRACE_PERIOD = NULL ,
          </when>
          <otherwise >
            ACTUAL_GRACE_PERIOD = #{ACTUAL_GRACE_PERIOD},
          </otherwise>
        </choose>
      </if>
      <if test="ACTUAL_GRACE_PERIODICITY != null" >
        <choose >
          <when test="ACTUAL_GRACE_PERIODICITY.equals(&quot;&quot;)" >
            ACTUAL_GRACE_PERIODICITY = NULL ,
          </when>
          <otherwise >
            ACTUAL_GRACE_PERIODICITY = #{ACTUAL_GRACE_PERIODICITY},
          </otherwise>
        </choose>
      </if>
      <if test="CALC_PROFIT_AMOUNT_ENTERED != null" >
        <choose >
          <when test="CALC_PROFIT_AMOUNT_ENTERED == emptyBigDecimalValue" >
            CALC_PROFIT_AMOUNT_ENTERED = NULL ,
          </when>
          <otherwise >
            CALC_PROFIT_AMOUNT_ENTERED = #{CALC_PROFIT_AMOUNT_ENTERED},
          </otherwise>
        </choose>
      </if>
      <if test="DISBURSEMENT_EQUAL_INSTALL_YN != null" >
        <choose >
          <when test="DISBURSEMENT_EQUAL_INSTALL_YN.equals(&quot;&quot;)" >
            DISBURSEMENT_EQUAL_INSTALL_YN = NULL ,
          </when>
          <otherwise >
            DISBURSEMENT_EQUAL_INSTALL_YN = #{DISBURSEMENT_EQUAL_INSTALL_YN},
          </otherwise>
        </choose>
      </if>
      <if test="DEAL_PERIOD_COMPOUNDING_YN != null" >
        <choose >
          <when test="DEAL_PERIOD_COMPOUNDING_YN.equals(&quot;&quot;)" >
            DEAL_PERIOD_COMPOUNDING_YN = NULL ,
          </when>
          <otherwise >
            DEAL_PERIOD_COMPOUNDING_YN = #{DEAL_PERIOD_COMPOUNDING_YN},
          </otherwise>
        </choose>
      </if>
      <if test="GRACE_COMPOUND_PERIODICITY_NBR != null" >
        <choose >
          <when test="GRACE_COMPOUND_PERIODICITY_NBR == emptyBigDecimalValue" >
            GRACE_COMPOUND_PERIODICITY_NBR = NULL ,
          </when>
          <otherwise >
            GRACE_COMPOUND_PERIODICITY_NBR = #{GRACE_COMPOUND_PERIODICITY_NBR},
          </otherwise>
        </choose>
      </if>
      <if test="ROUNDING_TYPE_INST_AMT != null" >
        <choose >
          <when test="ROUNDING_TYPE_INST_AMT.equals(&quot;&quot;)" >
            ROUNDING_TYPE_INST_AMT = NULL ,
          </when>
          <otherwise >
            ROUNDING_TYPE_INST_AMT = #{ROUNDING_TYPE_INST_AMT},
          </otherwise>
        </choose>
      </if>
      <if test="ROUNDING_TYPE_REPAY_AMT != null" >
        <choose >
          <when test="ROUNDING_TYPE_REPAY_AMT.equals(&quot;&quot;)" >
            ROUNDING_TYPE_REPAY_AMT = NULL ,
          </when>
          <otherwise >
            ROUNDING_TYPE_REPAY_AMT = #{ROUNDING_TYPE_REPAY_AMT},
          </otherwise>
        </choose>
      </if>
      <if test="INCLUDE_VAT_IN_INSTL_YN != null" >
        <choose >
          <when test="INCLUDE_VAT_IN_INSTL_YN.equals(&quot;&quot;)" >
            INCLUDE_VAT_IN_INSTL_YN = NULL ,
          </when>
          <otherwise >
            INCLUDE_VAT_IN_INSTL_YN = #{INCLUDE_VAT_IN_INSTL_YN},
          </otherwise>
        </choose>
      </if>
      <if test="VAT_PERCENTAGE != null" >
        <choose >
          <when test="VAT_PERCENTAGE == emptyBigDecimalValue" >
            VAT_PERCENTAGE = NULL ,
          </when>
          <otherwise >
            VAT_PERCENTAGE = #{VAT_PERCENTAGE},
          </otherwise>
        </choose>
      </if>
      <if test="VAT_CODE != null" >
        <choose >
          <when test="VAT_CODE == emptyBigDecimalValue" >
            VAT_CODE = NULL ,
          </when>
          <otherwise >
            VAT_CODE = #{VAT_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="ASSET_RESIDUAL_AMOUNT != null" >
        <choose >
          <when test="ASSET_RESIDUAL_AMOUNT == emptyBigDecimalValue" >
            ASSET_RESIDUAL_AMOUNT = NULL ,
          </when>
          <otherwise >
            ASSET_RESIDUAL_AMOUNT = #{ASSET_RESIDUAL_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="LAST_INST_ASSET_RESIDUAL_YN != null" >
        <choose >
          <when test="LAST_INST_ASSET_RESIDUAL_YN.equals(&quot;&quot;)" >
            LAST_INST_ASSET_RESIDUAL_YN = NULL ,
          </when>
          <otherwise >
            LAST_INST_ASSET_RESIDUAL_YN = #{LAST_INST_ASSET_RESIDUAL_YN},
          </otherwise>
        </choose>
      </if>
    </set>
    where BRANCH = #{BRANCH}
      and COMP_CODE = #{COMP_CODE}
      and PLAN_NBR = #{PLAN_NBR}
      and PLAN_SEQ = #{PLAN_SEQ}
  </sql>
  <update id="updateFMSPAYPLAN" parameterType="com.path.dbmaps.vo.FMSPAYPLANVO" >
    <include refid="sql_updateFMSPAYPLAN" />
  </update>
</mapper>