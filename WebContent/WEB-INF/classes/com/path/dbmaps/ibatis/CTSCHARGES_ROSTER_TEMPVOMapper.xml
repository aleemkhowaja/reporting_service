<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="CTSCHARGES_ROSTER_TEMP" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.CTSCHARGES_ROSTER_TEMPVO" >
    <id column="CODE" property="CODE" />
    <id column="COMP_CODE" property="COMP_CODE" />
    <id column="CY_CODE" property="CY_CODE" />
    <id column="SEQ" property="SEQ" />
    <result column="FROM_AMT" property="FROM_AMT" />
    <result column="TO_AMT" property="TO_AMT" />
    <result column="PERCENTAGE" property="PERCENTAGE" />
    <result column="MIN_AMT" property="MIN_AMT" />
    <result column="MAX_AMT" property="MAX_AMT" />
    <result column="DISC_AMT" property="DISC_AMT" />
     <result column="USER_ID" property="USER_ID" />
	<result column="ENTITY_TYPE" property="ENTITY_TYPE" />
	<result column="ENTITY_CODE" property="ENTITY_CODE" />
	<result column="SEG_ACC_BR" property="SEG_ACC_BR" />
	<result column="SEG_ACC_CY" property="SEG_ACC_CY" />
	<result column="SEG_ACC_GL" property="SEG_ACC_GL" />
	<result column="SEG_ACC_CIF" property="SEG_ACC_CIF" />
	<result column="SEG_ACC_SL" property="SEG_ACC_SL" />
	<result column="PRODUCT_TYPE" property="PRODUCT_TYPE" />
	<result column="PRODUCT_CODE" property="PRODUCT_CODE" />
	<result column="SCHEMA_TYPE" property="SCHEMA_TYPE" />
	<result column="SCHEMA_CODE" property="SCHEMA_CODE" />
	<result column="CHEQUE_TYPE" property="CHEQUE_TYPE" />
	<result column="ISSUE_TYPE" property="ISSUE_TYPE" />
	<result column="LEAVES" property="LEAVES" />
	<result column="CHARGES_CY_POLICY" property="CHARGES_CY_POLICY" />
	<result column="CASH_ACCOUNT" property="CASH_ACCOUNT" />
	<result column="ACTION_TYPE" property="ACTION_TYPE" />
  </resultMap>
  <sql id="Base_Column_List" >
    CODE, COMP_CODE, CY_CODE, SEQ, FROM_AMT, TO_AMT, PERCENTAGE, MIN_AMT, MAX_AMT, DISC_AMT,USER_ID, ENTITY_TYPE, ENTITY_CODE, SEG_ACC_BR, SEG_ACC_CY, SEG_ACC_GL, 
    SEG_ACC_CIF, SEG_ACC_SL, PRODUCT_TYPE, PRODUCT_CODE, SCHEMA_TYPE, SCHEMA_CODE, CHEQUE_TYPE, ISSUE_TYPE, 
    LEAVES, CHARGES_CY_POLICY, CASH_ACCOUNT, ACTION_TYPE 
  </sql>
  <select id="selectCTSCHARGES_ROSTER_TEMP" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.CTSCHARGES_ROSTER_TEMPVOKey" >
    select 
    <include refid="Base_Column_List" />
	from CTSCHARGES_ROSTER_TEMP
	where CODE = #{CODE}
	and COMP_CODE = #{COMP_CODE}
	and CY_CODE = #{CY_CODE}
	and SEQ = #{SEQ}
	and USER_ID = #{USER_ID}
	and ENTITY_TYPE = #{ENTITY_TYPE}
	and ENTITY_CODE =
	#{ENTITY_CODE}
	and PRODUCT_TYPE = #{PRODUCT_TYPE}
	and PRODUCT_CODE =
	#{PRODUCT_CODE}
	and SCHEMA_TYPE = #{SCHEMA_TYPE}
	and SCHEMA_CODE =
	#{SCHEMA_CODE}
  </select>
  <delete id="deleteCTSCHARGES_ROSTER_TEMP" parameterType="com.path.dbmaps.vo.CTSCHARGES_ROSTER_TEMPVOKey" >
	delete from CTSCHARGES_ROSTER_TEMP
	where CODE = #{CODE}
	and COMP_CODE = #{COMP_CODE}
	and CY_CODE = #{CY_CODE}
	and SEQ = #{SEQ}
	and USER_ID = #{USER_ID}
	and ENTITY_TYPE = #{ENTITY_TYPE}
	and ENTITY_CODE =
	#{ENTITY_CODE}
	and PRODUCT_TYPE = #{PRODUCT_TYPE}
	and PRODUCT_CODE =
	#{PRODUCT_CODE}
	and SCHEMA_TYPE = #{SCHEMA_TYPE}
	and SCHEMA_CODE =
	#{SCHEMA_CODE}
  </delete>
  <insert id="insertCTSCHARGES_ROSTER_TEMP" parameterType="com.path.dbmaps.vo.CTSCHARGES_ROSTER_TEMPVO" >
    insert into CTSCHARGES_ROSTER_TEMP
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="CODE != null and CODE != emptyBigDecimalValue" >
        CODE,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="CY_CODE != null and CY_CODE != emptyBigDecimalValue" >
        CY_CODE,
      </if>
      <if test="SEQ != null and SEQ != emptyBigDecimalValue" >
        SEQ,
      </if>
      <if test="FROM_AMT != null and FROM_AMT != emptyBigDecimalValue" >
        FROM_AMT,
      </if>
      <if test="TO_AMT != null and TO_AMT != emptyBigDecimalValue" >
        TO_AMT,
      </if>
      <if test="PERCENTAGE != null and PERCENTAGE != emptyBigDecimalValue" >
        PERCENTAGE,
      </if>
      <if test="MIN_AMT != null and MIN_AMT != emptyBigDecimalValue" >
        MIN_AMT,
      </if>
      <if test="MAX_AMT != null and MAX_AMT != emptyBigDecimalValue" >
        MAX_AMT,
      </if>
      <if test="DISC_AMT != null and DISC_AMT != emptyBigDecimalValue" >
        DISC_AMT,
      </if>
      <if test="USER_ID != null">
		USER_ID,
	</if>
	<if test="ENTITY_TYPE != null">
		ENTITY_TYPE,
	</if>
	<if test="PRODUCT_TYPE != null">
		PRODUCT_TYPE,
	</if>
	<if test="SCHEMA_TYPE != null">
		SCHEMA_TYPE,
	</if>
	<if test="ISSUE_TYPE != null">
		ISSUE_TYPE,
	</if>
	<if test="CHARGES_CY_POLICY != null">
		CHARGES_CY_POLICY,
	</if>
	<if test="CASH_ACCOUNT != null">
		CASH_ACCOUNT,
	</if>
	<if test="ACTION_TYPE != null">
		ACTION_TYPE,
	</if>
	<if test="SEG_ACC_BR != null and SEG_ACC_BR != emptyBigDecimalValue">
		SEG_ACC_BR,
	</if>
	<if test="SEG_ACC_CY != null and SEG_ACC_CY != emptyBigDecimalValue">
		SEG_ACC_CY,
	</if>
	<if test="SEG_ACC_GL != null and SEG_ACC_GL != emptyBigDecimalValue">
		SEG_ACC_GL,
	</if>
	<if
		test="SEG_ACC_CIF != null and SEG_ACC_CIF != emptyBigDecimalValue">
		SEG_ACC_CIF,
	</if>
	<if test="SEG_ACC_SL != null and SEG_ACC_SL != emptyBigDecimalValue">
		SEG_ACC_SL,
	</if>
	<if
		test="CHEQUE_TYPE != null and CHEQUE_TYPE != emptyBigDecimalValue">
		CHEQUE_TYPE,
	</if>
	<if test="LEAVES != null and LEAVES != emptyBigDecimalValue">
		LEAVES,
	</if>
	<if
		test="ENTITY_CODE != null and ENTITY_CODE != emptyBigDecimalValue">
		ENTITY_CODE,
	</if>
	<if
		test="PRODUCT_CODE != null">
		PRODUCT_CODE,
	</if>
	<if
		test="SCHEMA_CODE != null and SCHEMA_CODE != emptyBigDecimalValue">
		SCHEMA_CODE,
	</if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="CODE != null and CODE != emptyBigDecimalValue" >
        #{CODE},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="CY_CODE != null and CY_CODE != emptyBigDecimalValue" >
        #{CY_CODE},
      </if>
      <if test="SEQ != null and SEQ != emptyBigDecimalValue" >
        #{SEQ},
      </if>
      <if test="FROM_AMT != null and FROM_AMT != emptyBigDecimalValue" >
        #{FROM_AMT},
      </if>
      <if test="TO_AMT != null and TO_AMT != emptyBigDecimalValue" >
        #{TO_AMT},
      </if>
      <if test="PERCENTAGE != null and PERCENTAGE != emptyBigDecimalValue" >
        #{PERCENTAGE},
      </if>
      <if test="MIN_AMT != null and MIN_AMT != emptyBigDecimalValue" >
        #{MIN_AMT},
      </if>
      <if test="MAX_AMT != null and MAX_AMT != emptyBigDecimalValue" >
        #{MAX_AMT},
      </if>
      <if test="DISC_AMT != null and DISC_AMT != emptyBigDecimalValue" >
        #{DISC_AMT},
      </if>
      <if test="USER_ID != null">
		#{USER_ID},
	</if>
	<if test="ENTITY_TYPE != null">
		#{ENTITY_TYPE},
	</if>
	<if test="PRODUCT_TYPE != null">
		#{PRODUCT_TYPE},
	</if>
	<if test="SCHEMA_TYPE != null">
		#{SCHEMA_TYPE},
	</if>
	<if test="ISSUE_TYPE != null">
		#{ISSUE_TYPE},
	</if>
	<if test="CHARGES_CY_POLICY != null">
		#{CHARGES_CY_POLICY},
	</if>
	<if test="CASH_ACCOUNT != null">
		#{CASH_ACCOUNT},
	</if>
	<if test="ACTION_TYPE != null">
		#{ACTION_TYPE},
	</if>
	<if test="SEG_ACC_BR != null and SEG_ACC_BR != emptyBigDecimalValue">
		#{SEG_ACC_BR},
	</if>
	<if test="SEG_ACC_CY != null and SEG_ACC_CY != emptyBigDecimalValue">
		#{SEG_ACC_CY},
	</if>
	<if test="SEG_ACC_GL != null and SEG_ACC_GL != emptyBigDecimalValue">
		#{SEG_ACC_GL},
	</if>
	<if	test="SEG_ACC_CIF != null and SEG_ACC_CIF != emptyBigDecimalValue">
		#{SEG_ACC_CIF},
	</if>
	<if test="SEG_ACC_SL != null and SEG_ACC_SL != emptyBigDecimalValue">
		#{SEG_ACC_SL},
	</if>
	<if test="CHEQUE_TYPE != null and CHEQUE_TYPE != emptyBigDecimalValue">
		#{CHEQUE_TYPE},
	</if>
	<if test="LEAVES != null and LEAVES != emptyBigDecimalValue">
		#{LEAVES},
	</if>
	<if test="ENTITY_CODE != null and ENTITY_CODE != emptyBigDecimalValue">
		#{ENTITY_CODE},
	</if>
	<if test="PRODUCT_CODE != null">
		#{PRODUCT_CODE},
	</if>
	<if test="SCHEMA_CODE != null and SCHEMA_CODE != emptyBigDecimalValue">
		#{SCHEMA_CODE},
	</if>
    </trim>
  </insert>
  <sql id="sql_updateCTSCHARGES_ROSTER_TEMP" >
    update CTSCHARGES_ROSTER_TEMP
    <set >
      <if test="FROM_AMT != null" >
        <choose >
          <when test="FROM_AMT == emptyBigDecimalValue" >
            FROM_AMT = NULL ,
          </when>
          <otherwise >
            FROM_AMT = #{FROM_AMT},
          </otherwise>
        </choose>
      </if>
      <if test="TO_AMT != null" >
        <choose >
          <when test="TO_AMT == emptyBigDecimalValue" >
            TO_AMT = NULL ,
          </when>
          <otherwise >
            TO_AMT = #{TO_AMT},
          </otherwise>
        </choose>
      </if>
      <if test="PERCENTAGE != null" >
        <choose >
          <when test="PERCENTAGE == emptyBigDecimalValue" >
            PERCENTAGE = NULL ,
          </when>
          <otherwise >
            PERCENTAGE = #{PERCENTAGE},
          </otherwise>
        </choose>
      </if>
      <if test="MIN_AMT != null" >
        <choose >
          <when test="MIN_AMT == emptyBigDecimalValue" >
            MIN_AMT = NULL ,
          </when>
          <otherwise >
            MIN_AMT = #{MIN_AMT},
          </otherwise>
        </choose>
      </if>
      <if test="MAX_AMT != null" >
        <choose >
          <when test="MAX_AMT == emptyBigDecimalValue" >
            MAX_AMT = NULL ,
          </when>
          <otherwise >
            MAX_AMT = #{MAX_AMT},
          </otherwise>
        </choose>
      </if>
      <if test="DISC_AMT != null" >
        <choose >
          <when test="DISC_AMT == emptyBigDecimalValue" >
            DISC_AMT = NULL ,
          </when>
          <otherwise >
            DISC_AMT = #{DISC_AMT},
          </otherwise>
        </choose>
      </if>
      <if test="ISSUE_TYPE != null">
	ISSUE_TYPE=	#{ISSUE_TYPE},
	</if>
	<if test="CHARGES_CY_POLICY != null">
	CHARGES_CY_POLICY=	#{CHARGES_CY_POLICY},
	</if>
	<if test="CASH_ACCOUNT != null">
	CASH_ACCOUNT=	#{CASH_ACCOUNT},
	</if>
	<if test="ACTION_TYPE != null">
	ACTION_TYPE=  #{ACTION_TYPE},
	</if>
     
      <if test="SEG_ACC_BR != null" >
        <choose >
          <when test="SEG_ACC_BR == emptyBigDecimalValue" >
            SEG_ACC_BR = NULL ,
          </when>
          <otherwise >
            SEG_ACC_BR = #{SEG_ACC_BR},
          </otherwise>
        </choose>
      </if>
      
       <if test="SEG_ACC_CY  != null" >
        <choose >
          <when test="SEG_ACC_CY  == emptyBigDecimalValue" >
            SEG_ACC_CY  = NULL ,
          </when>
          <otherwise >
            SEG_ACC_CY  = #{SEG_ACC_CY},
          </otherwise>
        </choose>
      </if>
      
       <if test="SEG_ACC_GL  != null" >
        <choose >
          <when test="SEG_ACC_GL  == emptyBigDecimalValue" >
            SEG_ACC_GL  = NULL ,
          </when>
          <otherwise >
            SEG_ACC_GL  = #{SEG_ACC_GL},
          </otherwise>
        </choose>
      </if> 
      <if test="SEG_ACC_CIF  != null" >
        <choose >
          <when test="SEG_ACC_CIF  == emptyBigDecimalValue" >
            SEG_ACC_CIF  = NULL ,
          </when>
          <otherwise >
            SEG_ACC_CIF  = #{SEG_ACC_CIF},
          </otherwise>
        </choose>
      </if>
      
      <if test="SEG_ACC_SL  != null" >
        <choose >
          <when test="SEG_ACC_SL  == emptyBigDecimalValue" >
            SEG_ACC_SL  = NULL ,
          </when>
          <otherwise >
            SEG_ACC_SL  = #{SEG_ACC_SL},
          </otherwise>
        </choose>
      </if>
      
      <if test="CHEQUE_TYPE  != null" >
        <choose >
          <when test="CHEQUE_TYPE  == emptyBigDecimalValue" >
            HOF_TRX_TYPE = NULL ,
          </when>
          <otherwise >
            CHEQUE_TYPE  = #{CHEQUE_TYPE},
          </otherwise>
        </choose>
      </if>
      
      <if test="LEAVES  != null" >
        <choose >
          <when test="LEAVES  == emptyBigDecimalValue" >
            LEAVES  = NULL ,
          </when>
          <otherwise >
            LEAVES  = #{LEAVES},
          </otherwise>
        </choose>
      </if>
      
    </set>
	where CODE = #{CODE}
	and COMP_CODE = #{COMP_CODE}
	and CY_CODE = #{CY_CODE}
	and SEQ = #{SEQ}
	and USER_ID = #{USER_ID}
	and ENTITY_TYPE = #{ENTITY_TYPE}
	and ENTITY_CODE =
	#{ENTITY_CODE}
	and PRODUCT_TYPE = #{PRODUCT_TYPE}
	and PRODUCT_CODE =
	#{PRODUCT_CODE}
	and SCHEMA_TYPE = #{SCHEMA_TYPE}
	and SCHEMA_CODE =
	#{SCHEMA_CODE}
  </sql>
  <update id="updateCTSCHARGES_ROSTER_TEMP" parameterType="com.path.dbmaps.vo.CTSCHARGES_ROSTER_TEMPVO" >
    <include refid="sql_updateCTSCHARGES_ROSTER_TEMP" />
  </update>
</mapper>