<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="FMSAPPLCHARGES" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.FMSAPPLCHARGESVO" >
    <id column="BRANCH_CODE" property="BRANCH_CODE" />
    <id column="CHARGES_CODE" property="CHARGES_CODE" />
    <id column="COMP_CODE" property="COMP_CODE" />
    <id column="LINE_NO" property="LINE_NO" />
    <id column="PLAN_LINE_NO" property="PLAN_LINE_NO" />
    <id column="SERIAL_NO" property="SERIAL_NO" />
    <result column="CHARGES_AMOUNT" property="CHARGES_AMOUNT" />
    <result column="CR_ACC_BRANCH" property="CR_ACC_BRANCH" />
    <result column="CR_ACC_CURRENCY" property="CR_ACC_CURRENCY" />
    <result column="CR_ACC_GL" property="CR_ACC_GL" />
    <result column="CR_ACC_CIF_SUB_NO" property="CR_ACC_CIF_SUB_NO" />
    <result column="CR_ACC_SL_NO" property="CR_ACC_SL_NO" />
    <result column="PROFIT_ON_CHARGES" property="PROFIT_ON_CHARGES" />
    <result column="APP_TYPE" property="APP_TYPE" />
    <result column="EXCH_RATE" property="EXCH_RATE" />
    <result column="CHARGES_MULTDIV" property="CHARGES_MULTDIV" />
    <result column="CHARGES_AMT_FC" property="CHARGES_AMT_FC" />
    <result column="CHARGES_AMT_CV" property="CHARGES_AMT_CV" />
    <result column="CHARGE_TYPE" property="CHARGE_TYPE" />
    <result column="COLLECT_CHARGE_AT_DEAL_YN" property="COLLECT_CHARGE_AT_DEAL_YN" />
    <result column="COLLECT_CHARGES_ACCOUNT_TYPE" property="COLLECT_CHARGES_ACCOUNT_TYPE" />
    <result column="PERCENTAGE" property="PERCENTAGE" />
    <result column="CHARGES_APP" property="CHARGES_APP" />
    <result column="FLG_DOC" property="FLG_DOC" />
    <result column="FLG_ISSUE" property="FLG_ISSUE" />
    <result column="FLG_AMEND" property="FLG_AMEND" />
    <result column="FLG_SHIPPING" property="FLG_SHIPPING" />
    <result column="FLG_NOSTRO" property="FLG_NOSTRO" />
    <result column="FLG_ACCPTANCE" property="FLG_ACCPTANCE" />
    <result column="FLG_SETTLEMENT" property="FLG_SETTLEMENT" />
    <result column="FLG_CLOSE" property="FLG_CLOSE" />
    <result column="PASS_ACCRUAL" property="PASS_ACCRUAL" />
    <result column="ROUNDING_POINT" property="ROUNDING_POINT" />
    <result column="ROUNDING" property="ROUNDING" />
    <result column="COMMISSION_GL" property="COMMISSION_GL" />
    <result column="COMMISSION_CIF" property="COMMISSION_CIF" />
    <result column="COMMISSION_SL" property="COMMISSION_SL" />
    <result column="CR_ACC_BR" property="CR_ACC_BR" />
    <result column="DEFAULT_LOGGED_CR_BR" property="DEFAULT_LOGGED_CR_BR" />
    <result column="APPLY_MONTH_FROM" property="APPLY_MONTH_FROM" />
    <result column="APPLY_MONTH_TO" property="APPLY_MONTH_TO" />
    <result column="APPLY_COND" property="APPLY_COND" />
    <result column="DIFFERENT_CY_CHARGE" property="DIFFERENT_CY_CHARGE" />
    <result column="VISIBLE_IN_FMS" property="VISIBLE_IN_FMS" />
    <result column="FLG_AMEND_V" property="FLG_AMEND_V" />
    <result column="FLG_AMEND_O" property="FLG_AMEND_O" />
    <result column="FLG_AMEND_S" property="FLG_AMEND_S" />
    <result column="FLG_AMEND_L" property="FLG_AMEND_L" />
    <result column="CHARGE_AMT_PER_INST_YN" property="CHARGE_AMT_PER_INST_YN" />
    <result column="VAT_CODE" property="VAT_CODE" />
    <result column="FREQUENTLY_CHARGE" property="FREQUENTLY_CHARGE" />
    <result column="FLG_DECLARATION" property="FLG_DECLARATION" />
    <result column="FLG_DOMICILIATION" property="FLG_DOMICILIATION" />
    <result column="FLG_PRESETTLEMENT" property="FLG_PRESETTLEMENT" />
    <result column="COMMISSION_PERCENT" property="COMMISSION_PERCENT" />
    <result column="APPLY_DAILY_PERCENT" property="APPLY_DAILY_PERCENT" />
    <result column="FLG_RET_BILL" property="FLG_RET_BILL" />
    <result column="CREDIT_TO_SD_ACCOUNT_YN" property="CREDIT_TO_SD_ACCOUNT_YN" />
    <result column="COLLECT_AT_FAC_APPROVAL" property="COLLECT_AT_FAC_APPROVAL" />
    <result column="NON_PROV_AMT_CHARGE" property="NON_PROV_AMT_CHARGE" />
    <result column="PROV_AMT_CHARGE" property="PROV_AMT_CHARGE" />
  </resultMap>
  <sql id="Base_Column_List" >
    BRANCH_CODE, CHARGES_CODE, COMP_CODE, LINE_NO, PLAN_LINE_NO, SERIAL_NO, CHARGES_AMOUNT, 
    CR_ACC_BRANCH, CR_ACC_CURRENCY, CR_ACC_GL, CR_ACC_CIF_SUB_NO, CR_ACC_SL_NO, PROFIT_ON_CHARGES, 
    APP_TYPE, EXCH_RATE, CHARGES_MULTDIV, CHARGES_AMT_FC, CHARGES_AMT_CV, CHARGE_TYPE, 
    COLLECT_CHARGE_AT_DEAL_YN, COLLECT_CHARGES_ACCOUNT_TYPE, PERCENTAGE, CHARGES_APP, 
    FLG_DOC, FLG_ISSUE, FLG_AMEND, FLG_SHIPPING, FLG_NOSTRO, FLG_ACCPTANCE, FLG_SETTLEMENT, 
    FLG_CLOSE, PASS_ACCRUAL, ROUNDING_POINT, ROUNDING, COMMISSION_GL, COMMISSION_CIF, 
    COMMISSION_SL, CR_ACC_BR, DEFAULT_LOGGED_CR_BR, APPLY_MONTH_FROM, APPLY_MONTH_TO, 
    APPLY_COND, DIFFERENT_CY_CHARGE, VISIBLE_IN_FMS, FLG_AMEND_V, FLG_AMEND_O, FLG_AMEND_S, 
    FLG_AMEND_L, CHARGE_AMT_PER_INST_YN, VAT_CODE, FREQUENTLY_CHARGE, FLG_DECLARATION, 
    FLG_DOMICILIATION, FLG_PRESETTLEMENT, COMMISSION_PERCENT, APPLY_DAILY_PERCENT, FLG_RET_BILL, 
    CREDIT_TO_SD_ACCOUNT_YN, COLLECT_AT_FAC_APPROVAL, NON_PROV_AMT_CHARGE, PROV_AMT_CHARGE
  </sql>
  <select id="selectFMSAPPLCHARGES" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.FMSAPPLCHARGESVOKey" >
    select 
    <include refid="Base_Column_List" />
    from FMSAPPLCHARGES
    where BRANCH_CODE = #{BRANCH_CODE}
      and CHARGES_CODE = #{CHARGES_CODE}
      and COMP_CODE = #{COMP_CODE}
      and LINE_NO = #{LINE_NO}
      and PLAN_LINE_NO = #{PLAN_LINE_NO}
      and SERIAL_NO = #{SERIAL_NO}
  </select>
  <delete id="deleteFMSAPPLCHARGES" parameterType="com.path.dbmaps.vo.FMSAPPLCHARGESVOKey" >
    delete from FMSAPPLCHARGES
    where BRANCH_CODE = #{BRANCH_CODE}
      and CHARGES_CODE = #{CHARGES_CODE}
      and COMP_CODE = #{COMP_CODE}
      and LINE_NO = #{LINE_NO}
      and PLAN_LINE_NO = #{PLAN_LINE_NO}
      and SERIAL_NO = #{SERIAL_NO}
  </delete>
  <insert id="insertFMSAPPLCHARGES" parameterType="com.path.dbmaps.vo.FMSAPPLCHARGESVO" >
    insert into FMSAPPLCHARGES
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        BRANCH_CODE,
      </if>
      <if test="CHARGES_CODE != null and CHARGES_CODE != emptyBigDecimalValue" >
        CHARGES_CODE,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="LINE_NO != null and LINE_NO != emptyBigDecimalValue" >
        LINE_NO,
      </if>
      <if test="PLAN_LINE_NO != null and PLAN_LINE_NO != emptyBigDecimalValue" >
        PLAN_LINE_NO,
      </if>
      <if test="SERIAL_NO != null and SERIAL_NO != emptyBigDecimalValue" >
        SERIAL_NO,
      </if>
      <if test="CHARGES_AMOUNT != null and CHARGES_AMOUNT != emptyBigDecimalValue" >
        CHARGES_AMOUNT,
      </if>
      <if test="CR_ACC_BRANCH != null and CR_ACC_BRANCH != emptyBigDecimalValue" >
        CR_ACC_BRANCH,
      </if>
      <if test="CR_ACC_CURRENCY != null and CR_ACC_CURRENCY != emptyBigDecimalValue" >
        CR_ACC_CURRENCY,
      </if>
      <if test="CR_ACC_GL != null and CR_ACC_GL != emptyBigDecimalValue" >
        CR_ACC_GL,
      </if>
      <if test="CR_ACC_CIF_SUB_NO != null and CR_ACC_CIF_SUB_NO != emptyBigDecimalValue" >
        CR_ACC_CIF_SUB_NO,
      </if>
      <if test="CR_ACC_SL_NO != null and CR_ACC_SL_NO != emptyBigDecimalValue" >
        CR_ACC_SL_NO,
      </if>
      <if test="PROFIT_ON_CHARGES != null and PROFIT_ON_CHARGES != emptyBigDecimalValue" >
        PROFIT_ON_CHARGES,
      </if>
      <if test="APP_TYPE != null and !&quot;&quot;.equals(APP_TYPE)" >
        APP_TYPE,
      </if>
      <if test="EXCH_RATE != null and EXCH_RATE != emptyBigDecimalValue" >
        EXCH_RATE,
      </if>
      <if test="CHARGES_MULTDIV != null and !&quot;&quot;.equals(CHARGES_MULTDIV)" >
        CHARGES_MULTDIV,
      </if>
      <if test="CHARGES_AMT_FC != null and CHARGES_AMT_FC != emptyBigDecimalValue" >
        CHARGES_AMT_FC,
      </if>
      <if test="CHARGES_AMT_CV != null and CHARGES_AMT_CV != emptyBigDecimalValue" >
        CHARGES_AMT_CV,
      </if>
      <if test="CHARGE_TYPE != null and !&quot;&quot;.equals(CHARGE_TYPE)" >
        CHARGE_TYPE,
      </if>
      <if test="COLLECT_CHARGE_AT_DEAL_YN != null and !&quot;&quot;.equals(COLLECT_CHARGE_AT_DEAL_YN)" >
        COLLECT_CHARGE_AT_DEAL_YN,
      </if>
      <if test="COLLECT_CHARGES_ACCOUNT_TYPE != null and !&quot;&quot;.equals(COLLECT_CHARGES_ACCOUNT_TYPE)" >
        COLLECT_CHARGES_ACCOUNT_TYPE,
      </if>
      <if test="PERCENTAGE != null and PERCENTAGE != emptyBigDecimalValue" >
        PERCENTAGE,
      </if>
      <if test="CHARGES_APP != null and !&quot;&quot;.equals(CHARGES_APP)" >
        CHARGES_APP,
      </if>
      <if test="FLG_DOC != null and !&quot;&quot;.equals(FLG_DOC)" >
        FLG_DOC,
      </if>
      <if test="FLG_ISSUE != null and !&quot;&quot;.equals(FLG_ISSUE)" >
        FLG_ISSUE,
      </if>
      <if test="FLG_AMEND != null and !&quot;&quot;.equals(FLG_AMEND)" >
        FLG_AMEND,
      </if>
      <if test="FLG_SHIPPING != null and !&quot;&quot;.equals(FLG_SHIPPING)" >
        FLG_SHIPPING,
      </if>
      <if test="FLG_NOSTRO != null and !&quot;&quot;.equals(FLG_NOSTRO)" >
        FLG_NOSTRO,
      </if>
      <if test="FLG_ACCPTANCE != null and !&quot;&quot;.equals(FLG_ACCPTANCE)" >
        FLG_ACCPTANCE,
      </if>
      <if test="FLG_SETTLEMENT != null and !&quot;&quot;.equals(FLG_SETTLEMENT)" >
        FLG_SETTLEMENT,
      </if>
      <if test="FLG_CLOSE != null and !&quot;&quot;.equals(FLG_CLOSE)" >
        FLG_CLOSE,
      </if>
      <if test="PASS_ACCRUAL != null and !&quot;&quot;.equals(PASS_ACCRUAL)" >
        PASS_ACCRUAL,
      </if>
      <if test="ROUNDING_POINT != null and ROUNDING_POINT != emptyBigDecimalValue" >
        ROUNDING_POINT,
      </if>
      <if test="ROUNDING != null and !&quot;&quot;.equals(ROUNDING)" >
        ROUNDING,
      </if>
      <if test="COMMISSION_GL != null and COMMISSION_GL != emptyBigDecimalValue" >
        COMMISSION_GL,
      </if>
      <if test="COMMISSION_CIF != null and COMMISSION_CIF != emptyBigDecimalValue" >
        COMMISSION_CIF,
      </if>
      <if test="COMMISSION_SL != null and COMMISSION_SL != emptyBigDecimalValue" >
        COMMISSION_SL,
      </if>
      <if test="CR_ACC_BR != null and CR_ACC_BR != emptyBigDecimalValue" >
        CR_ACC_BR,
      </if>
      <if test="DEFAULT_LOGGED_CR_BR != null and !&quot;&quot;.equals(DEFAULT_LOGGED_CR_BR)" >
        DEFAULT_LOGGED_CR_BR,
      </if>
      <if test="APPLY_MONTH_FROM != null and APPLY_MONTH_FROM != emptyBigDecimalValue" >
        APPLY_MONTH_FROM,
      </if>
      <if test="APPLY_MONTH_TO != null and APPLY_MONTH_TO != emptyBigDecimalValue" >
        APPLY_MONTH_TO,
      </if>
      <if test="APPLY_COND != null and !&quot;&quot;.equals(APPLY_COND)" >
        APPLY_COND,
      </if>
      <if test="DIFFERENT_CY_CHARGE != null and !&quot;&quot;.equals(DIFFERENT_CY_CHARGE)" >
        DIFFERENT_CY_CHARGE,
      </if>
      <if test="VISIBLE_IN_FMS != null and !&quot;&quot;.equals(VISIBLE_IN_FMS)" >
        VISIBLE_IN_FMS,
      </if>
      <if test="FLG_AMEND_V != null and !&quot;&quot;.equals(FLG_AMEND_V)" >
        FLG_AMEND_V,
      </if>
      <if test="FLG_AMEND_O != null and !&quot;&quot;.equals(FLG_AMEND_O)" >
        FLG_AMEND_O,
      </if>
      <if test="FLG_AMEND_S != null and !&quot;&quot;.equals(FLG_AMEND_S)" >
        FLG_AMEND_S,
      </if>
      <if test="FLG_AMEND_L != null and !&quot;&quot;.equals(FLG_AMEND_L)" >
        FLG_AMEND_L,
      </if>
      <if test="CHARGE_AMT_PER_INST_YN != null and !&quot;&quot;.equals(CHARGE_AMT_PER_INST_YN)" >
        CHARGE_AMT_PER_INST_YN,
      </if>
      <if test="VAT_CODE != null and VAT_CODE != emptyBigDecimalValue" >
        VAT_CODE,
      </if>
      <if test="FREQUENTLY_CHARGE != null and !&quot;&quot;.equals(FREQUENTLY_CHARGE)" >
        FREQUENTLY_CHARGE,
      </if>
      <if test="FLG_DECLARATION != null and !&quot;&quot;.equals(FLG_DECLARATION)" >
        FLG_DECLARATION,
      </if>
      <if test="FLG_DOMICILIATION != null and !&quot;&quot;.equals(FLG_DOMICILIATION)" >
        FLG_DOMICILIATION,
      </if>
      <if test="FLG_PRESETTLEMENT != null and !&quot;&quot;.equals(FLG_PRESETTLEMENT)" >
        FLG_PRESETTLEMENT,
      </if>
      <if test="COMMISSION_PERCENT != null and COMMISSION_PERCENT != emptyBigDecimalValue" >
        COMMISSION_PERCENT,
      </if>
      <if test="APPLY_DAILY_PERCENT != null and !&quot;&quot;.equals(APPLY_DAILY_PERCENT)" >
        APPLY_DAILY_PERCENT,
      </if>
      <if test="FLG_RET_BILL != null and !&quot;&quot;.equals(FLG_RET_BILL)" >
        FLG_RET_BILL,
      </if>
      <if test="CREDIT_TO_SD_ACCOUNT_YN != null and !&quot;&quot;.equals(CREDIT_TO_SD_ACCOUNT_YN)" >
        CREDIT_TO_SD_ACCOUNT_YN,
      </if>
      <if test="COLLECT_AT_FAC_APPROVAL != null and !&quot;&quot;.equals(COLLECT_AT_FAC_APPROVAL)" >
        COLLECT_AT_FAC_APPROVAL,
      </if>
      <if test="NON_PROV_AMT_CHARGE != null and NON_PROV_AMT_CHARGE != emptyBigDecimalValue" >
        NON_PROV_AMT_CHARGE,
      </if>
      <if test="PROV_AMT_CHARGE != null and PROV_AMT_CHARGE != emptyBigDecimalValue" >
        PROV_AMT_CHARGE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        #{BRANCH_CODE},
      </if>
      <if test="CHARGES_CODE != null and CHARGES_CODE != emptyBigDecimalValue" >
        #{CHARGES_CODE},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="LINE_NO != null and LINE_NO != emptyBigDecimalValue" >
        #{LINE_NO},
      </if>
      <if test="PLAN_LINE_NO != null and PLAN_LINE_NO != emptyBigDecimalValue" >
        #{PLAN_LINE_NO},
      </if>
      <if test="SERIAL_NO != null and SERIAL_NO != emptyBigDecimalValue" >
        #{SERIAL_NO},
      </if>
      <if test="CHARGES_AMOUNT != null and CHARGES_AMOUNT != emptyBigDecimalValue" >
        #{CHARGES_AMOUNT},
      </if>
      <if test="CR_ACC_BRANCH != null and CR_ACC_BRANCH != emptyBigDecimalValue" >
        #{CR_ACC_BRANCH},
      </if>
      <if test="CR_ACC_CURRENCY != null and CR_ACC_CURRENCY != emptyBigDecimalValue" >
        #{CR_ACC_CURRENCY},
      </if>
      <if test="CR_ACC_GL != null and CR_ACC_GL != emptyBigDecimalValue" >
        #{CR_ACC_GL},
      </if>
      <if test="CR_ACC_CIF_SUB_NO != null and CR_ACC_CIF_SUB_NO != emptyBigDecimalValue" >
        #{CR_ACC_CIF_SUB_NO},
      </if>
      <if test="CR_ACC_SL_NO != null and CR_ACC_SL_NO != emptyBigDecimalValue" >
        #{CR_ACC_SL_NO},
      </if>
      <if test="PROFIT_ON_CHARGES != null and PROFIT_ON_CHARGES != emptyBigDecimalValue" >
        #{PROFIT_ON_CHARGES},
      </if>
      <if test="APP_TYPE != null and !&quot;&quot;.equals(APP_TYPE)" >
        #{APP_TYPE},
      </if>
      <if test="EXCH_RATE != null and EXCH_RATE != emptyBigDecimalValue" >
        #{EXCH_RATE},
      </if>
      <if test="CHARGES_MULTDIV != null and !&quot;&quot;.equals(CHARGES_MULTDIV)" >
        #{CHARGES_MULTDIV},
      </if>
      <if test="CHARGES_AMT_FC != null and CHARGES_AMT_FC != emptyBigDecimalValue" >
        #{CHARGES_AMT_FC},
      </if>
      <if test="CHARGES_AMT_CV != null and CHARGES_AMT_CV != emptyBigDecimalValue" >
        #{CHARGES_AMT_CV},
      </if>
      <if test="CHARGE_TYPE != null and !&quot;&quot;.equals(CHARGE_TYPE)" >
        #{CHARGE_TYPE},
      </if>
      <if test="COLLECT_CHARGE_AT_DEAL_YN != null and !&quot;&quot;.equals(COLLECT_CHARGE_AT_DEAL_YN)" >
        #{COLLECT_CHARGE_AT_DEAL_YN},
      </if>
      <if test="COLLECT_CHARGES_ACCOUNT_TYPE != null and !&quot;&quot;.equals(COLLECT_CHARGES_ACCOUNT_TYPE)" >
        #{COLLECT_CHARGES_ACCOUNT_TYPE},
      </if>
      <if test="PERCENTAGE != null and PERCENTAGE != emptyBigDecimalValue" >
        #{PERCENTAGE},
      </if>
      <if test="CHARGES_APP != null and !&quot;&quot;.equals(CHARGES_APP)" >
        #{CHARGES_APP},
      </if>
      <if test="FLG_DOC != null and !&quot;&quot;.equals(FLG_DOC)" >
        #{FLG_DOC},
      </if>
      <if test="FLG_ISSUE != null and !&quot;&quot;.equals(FLG_ISSUE)" >
        #{FLG_ISSUE},
      </if>
      <if test="FLG_AMEND != null and !&quot;&quot;.equals(FLG_AMEND)" >
        #{FLG_AMEND},
      </if>
      <if test="FLG_SHIPPING != null and !&quot;&quot;.equals(FLG_SHIPPING)" >
        #{FLG_SHIPPING},
      </if>
      <if test="FLG_NOSTRO != null and !&quot;&quot;.equals(FLG_NOSTRO)" >
        #{FLG_NOSTRO},
      </if>
      <if test="FLG_ACCPTANCE != null and !&quot;&quot;.equals(FLG_ACCPTANCE)" >
        #{FLG_ACCPTANCE},
      </if>
      <if test="FLG_SETTLEMENT != null and !&quot;&quot;.equals(FLG_SETTLEMENT)" >
        #{FLG_SETTLEMENT},
      </if>
      <if test="FLG_CLOSE != null and !&quot;&quot;.equals(FLG_CLOSE)" >
        #{FLG_CLOSE},
      </if>
      <if test="PASS_ACCRUAL != null and !&quot;&quot;.equals(PASS_ACCRUAL)" >
        #{PASS_ACCRUAL},
      </if>
      <if test="ROUNDING_POINT != null and ROUNDING_POINT != emptyBigDecimalValue" >
        #{ROUNDING_POINT},
      </if>
      <if test="ROUNDING != null and !&quot;&quot;.equals(ROUNDING)" >
        #{ROUNDING},
      </if>
      <if test="COMMISSION_GL != null and COMMISSION_GL != emptyBigDecimalValue" >
        #{COMMISSION_GL},
      </if>
      <if test="COMMISSION_CIF != null and COMMISSION_CIF != emptyBigDecimalValue" >
        #{COMMISSION_CIF},
      </if>
      <if test="COMMISSION_SL != null and COMMISSION_SL != emptyBigDecimalValue" >
        #{COMMISSION_SL},
      </if>
      <if test="CR_ACC_BR != null and CR_ACC_BR != emptyBigDecimalValue" >
        #{CR_ACC_BR},
      </if>
      <if test="DEFAULT_LOGGED_CR_BR != null and !&quot;&quot;.equals(DEFAULT_LOGGED_CR_BR)" >
        #{DEFAULT_LOGGED_CR_BR},
      </if>
      <if test="APPLY_MONTH_FROM != null and APPLY_MONTH_FROM != emptyBigDecimalValue" >
        #{APPLY_MONTH_FROM},
      </if>
      <if test="APPLY_MONTH_TO != null and APPLY_MONTH_TO != emptyBigDecimalValue" >
        #{APPLY_MONTH_TO},
      </if>
      <if test="APPLY_COND != null and !&quot;&quot;.equals(APPLY_COND)" >
        #{APPLY_COND},
      </if>
      <if test="DIFFERENT_CY_CHARGE != null and !&quot;&quot;.equals(DIFFERENT_CY_CHARGE)" >
        #{DIFFERENT_CY_CHARGE},
      </if>
      <if test="VISIBLE_IN_FMS != null and !&quot;&quot;.equals(VISIBLE_IN_FMS)" >
        #{VISIBLE_IN_FMS},
      </if>
      <if test="FLG_AMEND_V != null and !&quot;&quot;.equals(FLG_AMEND_V)" >
        #{FLG_AMEND_V},
      </if>
      <if test="FLG_AMEND_O != null and !&quot;&quot;.equals(FLG_AMEND_O)" >
        #{FLG_AMEND_O},
      </if>
      <if test="FLG_AMEND_S != null and !&quot;&quot;.equals(FLG_AMEND_S)" >
        #{FLG_AMEND_S},
      </if>
      <if test="FLG_AMEND_L != null and !&quot;&quot;.equals(FLG_AMEND_L)" >
        #{FLG_AMEND_L},
      </if>
      <if test="CHARGE_AMT_PER_INST_YN != null and !&quot;&quot;.equals(CHARGE_AMT_PER_INST_YN)" >
        #{CHARGE_AMT_PER_INST_YN},
      </if>
      <if test="VAT_CODE != null and VAT_CODE != emptyBigDecimalValue" >
        #{VAT_CODE},
      </if>
      <if test="FREQUENTLY_CHARGE != null and !&quot;&quot;.equals(FREQUENTLY_CHARGE)" >
        #{FREQUENTLY_CHARGE},
      </if>
      <if test="FLG_DECLARATION != null and !&quot;&quot;.equals(FLG_DECLARATION)" >
        #{FLG_DECLARATION},
      </if>
      <if test="FLG_DOMICILIATION != null and !&quot;&quot;.equals(FLG_DOMICILIATION)" >
        #{FLG_DOMICILIATION},
      </if>
      <if test="FLG_PRESETTLEMENT != null and !&quot;&quot;.equals(FLG_PRESETTLEMENT)" >
        #{FLG_PRESETTLEMENT},
      </if>
      <if test="COMMISSION_PERCENT != null and COMMISSION_PERCENT != emptyBigDecimalValue" >
        #{COMMISSION_PERCENT},
      </if>
      <if test="APPLY_DAILY_PERCENT != null and !&quot;&quot;.equals(APPLY_DAILY_PERCENT)" >
        #{APPLY_DAILY_PERCENT},
      </if>
      <if test="FLG_RET_BILL != null and !&quot;&quot;.equals(FLG_RET_BILL)" >
        #{FLG_RET_BILL},
      </if>
      <if test="CREDIT_TO_SD_ACCOUNT_YN != null and !&quot;&quot;.equals(CREDIT_TO_SD_ACCOUNT_YN)" >
        #{CREDIT_TO_SD_ACCOUNT_YN},
      </if>
      <if test="COLLECT_AT_FAC_APPROVAL != null and !&quot;&quot;.equals(COLLECT_AT_FAC_APPROVAL)" >
        #{COLLECT_AT_FAC_APPROVAL},
      </if>
      <if test="NON_PROV_AMT_CHARGE != null and NON_PROV_AMT_CHARGE != emptyBigDecimalValue" >
        #{NON_PROV_AMT_CHARGE},
      </if>
      <if test="PROV_AMT_CHARGE != null and PROV_AMT_CHARGE != emptyBigDecimalValue" >
        #{PROV_AMT_CHARGE},
      </if>
    </trim>
  </insert>
  <sql id="sql_updateFMSAPPLCHARGES" >
    update FMSAPPLCHARGES
    <set >
      <if test="CHARGES_AMOUNT != null" >
        <choose >
          <when test="CHARGES_AMOUNT == emptyBigDecimalValue" >
            CHARGES_AMOUNT = NULL ,
          </when>
          <otherwise >
            CHARGES_AMOUNT = #{CHARGES_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="CR_ACC_BRANCH != null" >
        <choose >
          <when test="CR_ACC_BRANCH == emptyBigDecimalValue" >
            CR_ACC_BRANCH = NULL ,
          </when>
          <otherwise >
            CR_ACC_BRANCH = #{CR_ACC_BRANCH},
          </otherwise>
        </choose>
      </if>
      <if test="CR_ACC_CURRENCY != null" >
        <choose >
          <when test="CR_ACC_CURRENCY == emptyBigDecimalValue" >
            CR_ACC_CURRENCY = NULL ,
          </when>
          <otherwise >
            CR_ACC_CURRENCY = #{CR_ACC_CURRENCY},
          </otherwise>
        </choose>
      </if>
      <if test="CR_ACC_GL != null" >
        <choose >
          <when test="CR_ACC_GL == emptyBigDecimalValue" >
            CR_ACC_GL = NULL ,
          </when>
          <otherwise >
            CR_ACC_GL = #{CR_ACC_GL},
          </otherwise>
        </choose>
      </if>
      <if test="CR_ACC_CIF_SUB_NO != null" >
        <choose >
          <when test="CR_ACC_CIF_SUB_NO == emptyBigDecimalValue" >
            CR_ACC_CIF_SUB_NO = NULL ,
          </when>
          <otherwise >
            CR_ACC_CIF_SUB_NO = #{CR_ACC_CIF_SUB_NO},
          </otherwise>
        </choose>
      </if>
      <if test="CR_ACC_SL_NO != null" >
        <choose >
          <when test="CR_ACC_SL_NO == emptyBigDecimalValue" >
            CR_ACC_SL_NO = NULL ,
          </when>
          <otherwise >
            CR_ACC_SL_NO = #{CR_ACC_SL_NO},
          </otherwise>
        </choose>
      </if>
      <if test="PROFIT_ON_CHARGES != null" >
        <choose >
          <when test="PROFIT_ON_CHARGES == emptyBigDecimalValue" >
            PROFIT_ON_CHARGES = NULL ,
          </when>
          <otherwise >
            PROFIT_ON_CHARGES = #{PROFIT_ON_CHARGES},
          </otherwise>
        </choose>
      </if>
      <if test="APP_TYPE != null" >
        <choose >
          <when test="APP_TYPE.equals(&quot;&quot;)" >
            APP_TYPE = NULL ,
          </when>
          <otherwise >
            APP_TYPE = #{APP_TYPE},
          </otherwise>
        </choose>
      </if>
      <if test="EXCH_RATE != null" >
        <choose >
          <when test="EXCH_RATE == emptyBigDecimalValue" >
            EXCH_RATE = NULL ,
          </when>
          <otherwise >
            EXCH_RATE = #{EXCH_RATE},
          </otherwise>
        </choose>
      </if>
      <if test="CHARGES_MULTDIV != null" >
        <choose >
          <when test="CHARGES_MULTDIV.equals(&quot;&quot;)" >
            CHARGES_MULTDIV = NULL ,
          </when>
          <otherwise >
            CHARGES_MULTDIV = #{CHARGES_MULTDIV},
          </otherwise>
        </choose>
      </if>
      <if test="CHARGES_AMT_FC != null" >
        <choose >
          <when test="CHARGES_AMT_FC == emptyBigDecimalValue" >
            CHARGES_AMT_FC = NULL ,
          </when>
          <otherwise >
            CHARGES_AMT_FC = #{CHARGES_AMT_FC},
          </otherwise>
        </choose>
      </if>
      <if test="CHARGES_AMT_CV != null" >
        <choose >
          <when test="CHARGES_AMT_CV == emptyBigDecimalValue" >
            CHARGES_AMT_CV = NULL ,
          </when>
          <otherwise >
            CHARGES_AMT_CV = #{CHARGES_AMT_CV},
          </otherwise>
        </choose>
      </if>
      <if test="CHARGE_TYPE != null" >
        <choose >
          <when test="CHARGE_TYPE.equals(&quot;&quot;)" >
            CHARGE_TYPE = NULL ,
          </when>
          <otherwise >
            CHARGE_TYPE = #{CHARGE_TYPE},
          </otherwise>
        </choose>
      </if>
      <if test="COLLECT_CHARGE_AT_DEAL_YN != null" >
        <choose >
          <when test="COLLECT_CHARGE_AT_DEAL_YN.equals(&quot;&quot;)" >
            COLLECT_CHARGE_AT_DEAL_YN = NULL ,
          </when>
          <otherwise >
            COLLECT_CHARGE_AT_DEAL_YN = #{COLLECT_CHARGE_AT_DEAL_YN},
          </otherwise>
        </choose>
      </if>
      <if test="COLLECT_CHARGES_ACCOUNT_TYPE != null" >
        <choose >
          <when test="COLLECT_CHARGES_ACCOUNT_TYPE.equals(&quot;&quot;)" >
            COLLECT_CHARGES_ACCOUNT_TYPE = NULL ,
          </when>
          <otherwise >
            COLLECT_CHARGES_ACCOUNT_TYPE = #{COLLECT_CHARGES_ACCOUNT_TYPE},
          </otherwise>
        </choose>
      </if>
      <if test="PERCENTAGE != null" >
        <choose >
          <when test="PERCENTAGE == emptyBigDecimalValue" >
            PERCENTAGE = NULL ,
          </when>
          <otherwise >
            PERCENTAGE = #{PERCENTAGE},
          </otherwise>
        </choose>
      </if>
      <if test="CHARGES_APP != null" >
        <choose >
          <when test="CHARGES_APP.equals(&quot;&quot;)" >
            CHARGES_APP = NULL ,
          </when>
          <otherwise >
            CHARGES_APP = #{CHARGES_APP},
          </otherwise>
        </choose>
      </if>
      <if test="FLG_DOC != null" >
        <choose >
          <when test="FLG_DOC.equals(&quot;&quot;)" >
            FLG_DOC = NULL ,
          </when>
          <otherwise >
            FLG_DOC = #{FLG_DOC},
          </otherwise>
        </choose>
      </if>
      <if test="FLG_ISSUE != null" >
        <choose >
          <when test="FLG_ISSUE.equals(&quot;&quot;)" >
            FLG_ISSUE = NULL ,
          </when>
          <otherwise >
            FLG_ISSUE = #{FLG_ISSUE},
          </otherwise>
        </choose>
      </if>
      <if test="FLG_AMEND != null" >
        <choose >
          <when test="FLG_AMEND.equals(&quot;&quot;)" >
            FLG_AMEND = NULL ,
          </when>
          <otherwise >
            FLG_AMEND = #{FLG_AMEND},
          </otherwise>
        </choose>
      </if>
      <if test="FLG_SHIPPING != null" >
        <choose >
          <when test="FLG_SHIPPING.equals(&quot;&quot;)" >
            FLG_SHIPPING = NULL ,
          </when>
          <otherwise >
            FLG_SHIPPING = #{FLG_SHIPPING},
          </otherwise>
        </choose>
      </if>
      <if test="FLG_NOSTRO != null" >
        <choose >
          <when test="FLG_NOSTRO.equals(&quot;&quot;)" >
            FLG_NOSTRO = NULL ,
          </when>
          <otherwise >
            FLG_NOSTRO = #{FLG_NOSTRO},
          </otherwise>
        </choose>
      </if>
      <if test="FLG_ACCPTANCE != null" >
        <choose >
          <when test="FLG_ACCPTANCE.equals(&quot;&quot;)" >
            FLG_ACCPTANCE = NULL ,
          </when>
          <otherwise >
            FLG_ACCPTANCE = #{FLG_ACCPTANCE},
          </otherwise>
        </choose>
      </if>
      <if test="FLG_SETTLEMENT != null" >
        <choose >
          <when test="FLG_SETTLEMENT.equals(&quot;&quot;)" >
            FLG_SETTLEMENT = NULL ,
          </when>
          <otherwise >
            FLG_SETTLEMENT = #{FLG_SETTLEMENT},
          </otherwise>
        </choose>
      </if>
      <if test="FLG_CLOSE != null" >
        <choose >
          <when test="FLG_CLOSE.equals(&quot;&quot;)" >
            FLG_CLOSE = NULL ,
          </when>
          <otherwise >
            FLG_CLOSE = #{FLG_CLOSE},
          </otherwise>
        </choose>
      </if>
      <if test="PASS_ACCRUAL != null" >
        <choose >
          <when test="PASS_ACCRUAL.equals(&quot;&quot;)" >
            PASS_ACCRUAL = NULL ,
          </when>
          <otherwise >
            PASS_ACCRUAL = #{PASS_ACCRUAL},
          </otherwise>
        </choose>
      </if>
      <if test="ROUNDING_POINT != null" >
        <choose >
          <when test="ROUNDING_POINT == emptyBigDecimalValue" >
            ROUNDING_POINT = NULL ,
          </when>
          <otherwise >
            ROUNDING_POINT = #{ROUNDING_POINT},
          </otherwise>
        </choose>
      </if>
      <if test="ROUNDING != null" >
        <choose >
          <when test="ROUNDING.equals(&quot;&quot;)" >
            ROUNDING = NULL ,
          </when>
          <otherwise >
            ROUNDING = #{ROUNDING},
          </otherwise>
        </choose>
      </if>
      <if test="COMMISSION_GL != null" >
        <choose >
          <when test="COMMISSION_GL == emptyBigDecimalValue" >
            COMMISSION_GL = NULL ,
          </when>
          <otherwise >
            COMMISSION_GL = #{COMMISSION_GL},
          </otherwise>
        </choose>
      </if>
      <if test="COMMISSION_CIF != null" >
        <choose >
          <when test="COMMISSION_CIF == emptyBigDecimalValue" >
            COMMISSION_CIF = NULL ,
          </when>
          <otherwise >
            COMMISSION_CIF = #{COMMISSION_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="COMMISSION_SL != null" >
        <choose >
          <when test="COMMISSION_SL == emptyBigDecimalValue" >
            COMMISSION_SL = NULL ,
          </when>
          <otherwise >
            COMMISSION_SL = #{COMMISSION_SL},
          </otherwise>
        </choose>
      </if>
      <if test="CR_ACC_BR != null" >
        <choose >
          <when test="CR_ACC_BR == emptyBigDecimalValue" >
            CR_ACC_BR = NULL ,
          </when>
          <otherwise >
            CR_ACC_BR = #{CR_ACC_BR},
          </otherwise>
        </choose>
      </if>
      <if test="DEFAULT_LOGGED_CR_BR != null" >
        <choose >
          <when test="DEFAULT_LOGGED_CR_BR.equals(&quot;&quot;)" >
            DEFAULT_LOGGED_CR_BR = NULL ,
          </when>
          <otherwise >
            DEFAULT_LOGGED_CR_BR = #{DEFAULT_LOGGED_CR_BR},
          </otherwise>
        </choose>
      </if>
      <if test="APPLY_MONTH_FROM != null" >
        <choose >
          <when test="APPLY_MONTH_FROM == emptyBigDecimalValue" >
            APPLY_MONTH_FROM = NULL ,
          </when>
          <otherwise >
            APPLY_MONTH_FROM = #{APPLY_MONTH_FROM},
          </otherwise>
        </choose>
      </if>
      <if test="APPLY_MONTH_TO != null" >
        <choose >
          <when test="APPLY_MONTH_TO == emptyBigDecimalValue" >
            APPLY_MONTH_TO = NULL ,
          </when>
          <otherwise >
            APPLY_MONTH_TO = #{APPLY_MONTH_TO},
          </otherwise>
        </choose>
      </if>
      <if test="APPLY_COND != null" >
        <choose >
          <when test="APPLY_COND.equals(&quot;&quot;)" >
            APPLY_COND = NULL ,
          </when>
          <otherwise >
            APPLY_COND = #{APPLY_COND},
          </otherwise>
        </choose>
      </if>
      <if test="DIFFERENT_CY_CHARGE != null" >
        <choose >
          <when test="DIFFERENT_CY_CHARGE.equals(&quot;&quot;)" >
            DIFFERENT_CY_CHARGE = NULL ,
          </when>
          <otherwise >
            DIFFERENT_CY_CHARGE = #{DIFFERENT_CY_CHARGE},
          </otherwise>
        </choose>
      </if>
      <if test="VISIBLE_IN_FMS != null" >
        <choose >
          <when test="VISIBLE_IN_FMS.equals(&quot;&quot;)" >
            VISIBLE_IN_FMS = NULL ,
          </when>
          <otherwise >
            VISIBLE_IN_FMS = #{VISIBLE_IN_FMS},
          </otherwise>
        </choose>
      </if>
      <if test="FLG_AMEND_V != null" >
        <choose >
          <when test="FLG_AMEND_V.equals(&quot;&quot;)" >
            FLG_AMEND_V = NULL ,
          </when>
          <otherwise >
            FLG_AMEND_V = #{FLG_AMEND_V},
          </otherwise>
        </choose>
      </if>
      <if test="FLG_AMEND_O != null" >
        <choose >
          <when test="FLG_AMEND_O.equals(&quot;&quot;)" >
            FLG_AMEND_O = NULL ,
          </when>
          <otherwise >
            FLG_AMEND_O = #{FLG_AMEND_O},
          </otherwise>
        </choose>
      </if>
      <if test="FLG_AMEND_S != null" >
        <choose >
          <when test="FLG_AMEND_S.equals(&quot;&quot;)" >
            FLG_AMEND_S = NULL ,
          </when>
          <otherwise >
            FLG_AMEND_S = #{FLG_AMEND_S},
          </otherwise>
        </choose>
      </if>
      <if test="FLG_AMEND_L != null" >
        <choose >
          <when test="FLG_AMEND_L.equals(&quot;&quot;)" >
            FLG_AMEND_L = NULL ,
          </when>
          <otherwise >
            FLG_AMEND_L = #{FLG_AMEND_L},
          </otherwise>
        </choose>
      </if>
      <if test="CHARGE_AMT_PER_INST_YN != null" >
        <choose >
          <when test="CHARGE_AMT_PER_INST_YN.equals(&quot;&quot;)" >
            CHARGE_AMT_PER_INST_YN = NULL ,
          </when>
          <otherwise >
            CHARGE_AMT_PER_INST_YN = #{CHARGE_AMT_PER_INST_YN},
          </otherwise>
        </choose>
      </if>
      <if test="VAT_CODE != null" >
        <choose >
          <when test="VAT_CODE == emptyBigDecimalValue" >
            VAT_CODE = NULL ,
          </when>
          <otherwise >
            VAT_CODE = #{VAT_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="FREQUENTLY_CHARGE != null" >
        <choose >
          <when test="FREQUENTLY_CHARGE.equals(&quot;&quot;)" >
            FREQUENTLY_CHARGE = NULL ,
          </when>
          <otherwise >
            FREQUENTLY_CHARGE = #{FREQUENTLY_CHARGE},
          </otherwise>
        </choose>
      </if>
      <if test="FLG_DECLARATION != null" >
        <choose >
          <when test="FLG_DECLARATION.equals(&quot;&quot;)" >
            FLG_DECLARATION = NULL ,
          </when>
          <otherwise >
            FLG_DECLARATION = #{FLG_DECLARATION},
          </otherwise>
        </choose>
      </if>
      <if test="FLG_DOMICILIATION != null" >
        <choose >
          <when test="FLG_DOMICILIATION.equals(&quot;&quot;)" >
            FLG_DOMICILIATION = NULL ,
          </when>
          <otherwise >
            FLG_DOMICILIATION = #{FLG_DOMICILIATION},
          </otherwise>
        </choose>
      </if>
      <if test="FLG_PRESETTLEMENT != null" >
        <choose >
          <when test="FLG_PRESETTLEMENT.equals(&quot;&quot;)" >
            FLG_PRESETTLEMENT = NULL ,
          </when>
          <otherwise >
            FLG_PRESETTLEMENT = #{FLG_PRESETTLEMENT},
          </otherwise>
        </choose>
      </if>
      <if test="COMMISSION_PERCENT != null" >
        <choose >
          <when test="COMMISSION_PERCENT == emptyBigDecimalValue" >
            COMMISSION_PERCENT = NULL ,
          </when>
          <otherwise >
            COMMISSION_PERCENT = #{COMMISSION_PERCENT},
          </otherwise>
        </choose>
      </if>
      <if test="APPLY_DAILY_PERCENT != null" >
        <choose >
          <when test="APPLY_DAILY_PERCENT.equals(&quot;&quot;)" >
            APPLY_DAILY_PERCENT = NULL ,
          </when>
          <otherwise >
            APPLY_DAILY_PERCENT = #{APPLY_DAILY_PERCENT},
          </otherwise>
        </choose>
      </if>
      <if test="FLG_RET_BILL != null" >
        <choose >
          <when test="FLG_RET_BILL.equals(&quot;&quot;)" >
            FLG_RET_BILL = NULL ,
          </when>
          <otherwise >
            FLG_RET_BILL = #{FLG_RET_BILL},
          </otherwise>
        </choose>
      </if>
      <if test="CREDIT_TO_SD_ACCOUNT_YN != null" >
        <choose >
          <when test="CREDIT_TO_SD_ACCOUNT_YN.equals(&quot;&quot;)" >
            CREDIT_TO_SD_ACCOUNT_YN = NULL ,
          </when>
          <otherwise >
            CREDIT_TO_SD_ACCOUNT_YN = #{CREDIT_TO_SD_ACCOUNT_YN},
          </otherwise>
        </choose>
      </if>
      <if test="COLLECT_AT_FAC_APPROVAL != null" >
        <choose >
          <when test="COLLECT_AT_FAC_APPROVAL.equals(&quot;&quot;)" >
            COLLECT_AT_FAC_APPROVAL = NULL ,
          </when>
          <otherwise >
            COLLECT_AT_FAC_APPROVAL = #{COLLECT_AT_FAC_APPROVAL},
          </otherwise>
        </choose>
      </if>
      <if test="NON_PROV_AMT_CHARGE != null" >
        <choose >
          <when test="NON_PROV_AMT_CHARGE == emptyBigDecimalValue" >
            NON_PROV_AMT_CHARGE = NULL ,
          </when>
          <otherwise >
            NON_PROV_AMT_CHARGE = #{NON_PROV_AMT_CHARGE},
          </otherwise>
        </choose>
      </if>
      <if test="PROV_AMT_CHARGE != null" >
        <choose >
          <when test="PROV_AMT_CHARGE == emptyBigDecimalValue" >
            PROV_AMT_CHARGE = NULL ,
          </when>
          <otherwise >
            PROV_AMT_CHARGE = #{PROV_AMT_CHARGE},
          </otherwise>
        </choose>
      </if>
    </set>
    where BRANCH_CODE = #{BRANCH_CODE}
      and CHARGES_CODE = #{CHARGES_CODE}
      and COMP_CODE = #{COMP_CODE}
      and LINE_NO = #{LINE_NO}
      and PLAN_LINE_NO = #{PLAN_LINE_NO}
      and SERIAL_NO = #{SERIAL_NO}
  </sql>
  <update id="updateFMSAPPLCHARGES" parameterType="com.path.dbmaps.vo.FMSAPPLCHARGESVO" >
    <include refid="sql_updateFMSAPPLCHARGES" />
  </update>
</mapper>