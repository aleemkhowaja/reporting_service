<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="ATM_ENG_OUTGOING_REQUEST" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.ATM_ENG_OUTGOING_REQUESTVO" >
    <id column="ATM_ENG_OUTGOING_REQUEST_ID" property="ATM_ENG_OUTGOING_REQUEST_ID" />
    <result column="INTERFACE_ID" property="INTERFACE_ID" />
    <result column="MESSAGE_ID" property="MESSAGE_ID" />
    <result column="MTI_CODE_REQUEST" property="MTI_CODE_REQUEST" />
    <result column="MESSAGE_REQUEST" property="MESSAGE_REQUEST" />
    <result column="SENT_TIME" property="SENT_TIME" />
    <result column="STATUS" property="STATUS" />
    <result column="ERROR_MESSAGE" property="ERROR_MESSAGE" />
  </resultMap>
  <sql id="Base_Column_List" >
    ATM_ENG_OUTGOING_REQUEST_ID, INTERFACE_ID, MESSAGE_ID, MTI_CODE_REQUEST, MESSAGE_REQUEST, 
    SENT_TIME, STATUS, ERROR_MESSAGE
  </sql>
  <select id="selectATM_ENG_OUTGOING_REQUEST" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.ATM_ENG_OUTGOING_REQUESTVO" >
    select 
    <include refid="Base_Column_List" />
    from ATM_ENG_OUTGOING_REQUEST
    where ATM_ENG_OUTGOING_REQUEST_ID = #{ATM_ENG_OUTGOING_REQUEST_ID}
  </select>
  <delete id="deleteATM_ENG_OUTGOING_REQUEST" parameterType="com.path.dbmaps.vo.ATM_ENG_OUTGOING_REQUESTVO" >
    delete from ATM_ENG_OUTGOING_REQUEST
    where ATM_ENG_OUTGOING_REQUEST_ID = #{ATM_ENG_OUTGOING_REQUEST_ID}
  </delete>
  <insert id="insertATM_ENG_OUTGOING_REQUEST" parameterType="com.path.dbmaps.vo.ATM_ENG_OUTGOING_REQUESTVO" >
    <selectKey resultType="java.math.BigDecimal" keyProperty="ATM_ENG_OUTGOING_REQUEST_ID" order="BEFORE" >
		<if test="isOracle == 1">
			SELECT ATM_ENG_OUTGOING_REQUEST_SEQ.NEXTVAL FROM dual
		</if>
		<if test="isSybase == 1 and isSQLServer != 1 " >
			SELECT next_identity('ATM_ENG_OUTGOING_REQUEST')
		</if>
		<if test="isSQLServer == 1 " >
			SELECT IDENT_CURRENT ('ATM_ENG_OUTGOING_REQUEST') + 1
		</if>
	</selectKey>
    insert into ATM_ENG_OUTGOING_REQUEST
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="isOracle == 1">
        ATM_ENG_OUTGOING_REQUEST_ID,
      </if>
      <if test="INTERFACE_ID != null and INTERFACE_ID != emptyBigDecimalValue" >
        INTERFACE_ID,
      </if>
      <if test="MESSAGE_ID != null and MESSAGE_ID != emptyBigDecimalValue" >
        MESSAGE_ID,
      </if>
      <if test="MTI_CODE_REQUEST != null and !&quot;&quot;.equals(MTI_CODE_REQUEST)" >
        MTI_CODE_REQUEST,
      </if>
      <if test="MESSAGE_REQUEST != null and !&quot;&quot;.equals(MESSAGE_REQUEST)" >
        MESSAGE_REQUEST,
      </if>
      <if test="SENT_TIME != null" >
        SENT_TIME,
      </if>
      <if test="STATUS != null and !&quot;&quot;.equals(STATUS)" >
        STATUS,
      </if>
      <if test="ERROR_MESSAGE != null and !&quot;&quot;.equals(ERROR_MESSAGE)" >
        ERROR_MESSAGE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
       <if test="isOracle == 1">
        #{ATM_ENG_OUTGOING_REQUEST_ID},
      </if>
      <if test="INTERFACE_ID != null and INTERFACE_ID != emptyBigDecimalValue" >
        #{INTERFACE_ID},
      </if>
      <if test="MESSAGE_ID != null and MESSAGE_ID != emptyBigDecimalValue" >
        #{MESSAGE_ID},
      </if>
      <if test="MTI_CODE_REQUEST != null and !&quot;&quot;.equals(MTI_CODE_REQUEST)" >
        #{MTI_CODE_REQUEST},
      </if>
      <if test="MESSAGE_REQUEST != null and !&quot;&quot;.equals(MESSAGE_REQUEST)" >
        #{MESSAGE_REQUEST},
      </if>
      <if test="SENT_TIME != null" >
        #{SENT_TIME},
      </if>
      <if test="STATUS != null and !&quot;&quot;.equals(STATUS)" >
        #{STATUS},
      </if>
      <if test="ERROR_MESSAGE != null and !&quot;&quot;.equals(ERROR_MESSAGE)" >
        #{ERROR_MESSAGE},
      </if>
    </trim>
  </insert>
  <sql id="sql_updateATM_ENG_OUTGOING_REQUEST" >
    update ATM_ENG_OUTGOING_REQUEST
    <set >
      <if test="INTERFACE_ID != null" >
        <choose >
          <when test="INTERFACE_ID == emptyBigDecimalValue" >
            INTERFACE_ID = NULL ,
          </when>
          <otherwise >
            INTERFACE_ID = #{INTERFACE_ID},
          </otherwise>
        </choose>
      </if>
      <if test="MESSAGE_ID != null" >
        <choose >
          <when test="MESSAGE_ID == emptyBigDecimalValue" >
            MESSAGE_ID = NULL ,
          </when>
          <otherwise >
            MESSAGE_ID = #{MESSAGE_ID},
          </otherwise>
        </choose>
      </if>
      <if test="MTI_CODE_REQUEST != null" >
        <choose >
          <when test="MTI_CODE_REQUEST.equals(&quot;&quot;)" >
            MTI_CODE_REQUEST = NULL ,
          </when>
          <otherwise >
            MTI_CODE_REQUEST = #{MTI_CODE_REQUEST},
          </otherwise>
        </choose>
      </if>
      <if test="MESSAGE_REQUEST != null" >
        <choose >
          <when test="MESSAGE_REQUEST.equals(&quot;&quot;)" >
            MESSAGE_REQUEST = NULL ,
          </when>
          <otherwise >
            MESSAGE_REQUEST = #{MESSAGE_REQUEST},
          </otherwise>
        </choose>
      </if>
      <if test="SENT_TIME != null" >
        SENT_TIME = #{SENT_TIME},
      </if>
      <if test="STATUS != null" >
        <choose >
          <when test="STATUS.equals(&quot;&quot;)" >
            STATUS = NULL ,
          </when>
          <otherwise >
            STATUS = #{STATUS},
          </otherwise>
        </choose>
      </if>
      <if test="ERROR_MESSAGE != null" >
        <choose >
          <when test="ERROR_MESSAGE.equals(&quot;&quot;)" >
            ERROR_MESSAGE = NULL ,
          </when>
          <otherwise >
            ERROR_MESSAGE = #{ERROR_MESSAGE},
          </otherwise>
        </choose>
      </if>
    </set>
    where ATM_ENG_OUTGOING_REQUEST_ID = #{ATM_ENG_OUTGOING_REQUEST_ID}
  </sql>
  <update id="updateATM_ENG_OUTGOING_REQUEST" parameterType="com.path.dbmaps.vo.ATM_ENG_OUTGOING_REQUESTVO" >
    <include refid="sql_updateATM_ENG_OUTGOING_REQUEST" />
  </update>
</mapper>