<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TRSCHARGES_ROSTER" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.TRSCHARGES_ROSTERVO" >
    <id column="CODE" property="CODE" />
    <id column="COMP_CODE" property="COMP_CODE" />
    <id column="SEQ" property="SEQ" />
    <result column="FROM_AMT" property="FROM_AMT" />
    <result column="TO_AMT" property="TO_AMT" />
    <result column="PERCENTAGE" property="PERCENTAGE" />
    <result column="AMOUNT" property="AMOUNT" />
    <result column="FACTOR" property="FACTOR" />
    <result column="CIF_PROFILE" property="CIF_PROFILE" />
    <result column="MINIMUM_AMT" property="MINIMUM_AMT" />
    <result column="CURRENCY_CODE" property="CURRENCY_CODE" />
  </resultMap>
  <sql id="Base_Column_List" >
    CODE, COMP_CODE, SEQ, FROM_AMT, TO_AMT, PERCENTAGE, AMOUNT, FACTOR, CIF_PROFILE, 
    MINIMUM_AMT, CURRENCY_CODE
  </sql>
  <select id="selectTRSCHARGES_ROSTER" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.TRSCHARGES_ROSTERVOKey" >
    select 
    <include refid="Base_Column_List" />
    from TRSCHARGES_ROSTER
    where CODE = #{CODE}
      and COMP_CODE = #{COMP_CODE}
      and SEQ = #{SEQ}
  </select>
  <delete id="deleteTRSCHARGES_ROSTER" parameterType="com.path.dbmaps.vo.TRSCHARGES_ROSTERVOKey" >
    delete from TRSCHARGES_ROSTER
    where CODE = #{CODE}
      and COMP_CODE = #{COMP_CODE}
      and SEQ = #{SEQ}
  </delete>
  <insert id="insertTRSCHARGES_ROSTER" parameterType="com.path.dbmaps.vo.TRSCHARGES_ROSTERVO" >
    insert into TRSCHARGES_ROSTER
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="CODE != null and CODE != emptyBigDecimalValue" >
        CODE,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="SEQ != null and SEQ != emptyBigDecimalValue" >
        SEQ,
      </if>
      <if test="FROM_AMT != null and FROM_AMT != emptyBigDecimalValue" >
        FROM_AMT,
      </if>
      <if test="TO_AMT != null and TO_AMT != emptyBigDecimalValue" >
        TO_AMT,
      </if>
      <if test="PERCENTAGE != null and PERCENTAGE != emptyBigDecimalValue" >
        PERCENTAGE,
      </if>
      <if test="AMOUNT != null and AMOUNT != emptyBigDecimalValue" >
        AMOUNT,
      </if>
      <if test="FACTOR != null and FACTOR != emptyBigDecimalValue" >
        FACTOR,
      </if>
      <if test="CIF_PROFILE != null and CIF_PROFILE != emptyBigDecimalValue" >
        CIF_PROFILE,
      </if>
      <if test="MINIMUM_AMT != null and MINIMUM_AMT != emptyBigDecimalValue" >
        MINIMUM_AMT,
      </if>
      <if test="CURRENCY_CODE != null and CURRENCY_CODE != emptyBigDecimalValue" >
        CURRENCY_CODE,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="CODE != null and CODE != emptyBigDecimalValue" >
        #{CODE},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="SEQ != null and SEQ != emptyBigDecimalValue" >
        #{SEQ},
      </if>
      <if test="FROM_AMT != null and FROM_AMT != emptyBigDecimalValue" >
        #{FROM_AMT},
      </if>
      <if test="TO_AMT != null and TO_AMT != emptyBigDecimalValue" >
        #{TO_AMT},
      </if>
      <if test="PERCENTAGE != null and PERCENTAGE != emptyBigDecimalValue" >
        #{PERCENTAGE},
      </if>
      <if test="AMOUNT != null and AMOUNT != emptyBigDecimalValue" >
        #{AMOUNT},
      </if>
      <if test="FACTOR != null and FACTOR != emptyBigDecimalValue" >
        #{FACTOR},
      </if>
      <if test="CIF_PROFILE != null and CIF_PROFILE != emptyBigDecimalValue" >
        #{CIF_PROFILE},
      </if>
      <if test="MINIMUM_AMT != null and MINIMUM_AMT != emptyBigDecimalValue" >
        #{MINIMUM_AMT},
      </if>
      <if test="CURRENCY_CODE != null and CURRENCY_CODE != emptyBigDecimalValue" >
        #{CURRENCY_CODE},
      </if>
    </trim>
  </insert>
  <sql id="sql_updateTRSCHARGES_ROSTER" >
    update TRSCHARGES_ROSTER
    <set >
      <if test="FROM_AMT != null" >
        <choose >
          <when test="FROM_AMT == emptyBigDecimalValue" >
            FROM_AMT = NULL ,
          </when>
          <otherwise >
            FROM_AMT = #{FROM_AMT},
          </otherwise>
        </choose>
      </if>
      <if test="TO_AMT != null" >
        <choose >
          <when test="TO_AMT == emptyBigDecimalValue" >
            TO_AMT = NULL ,
          </when>
          <otherwise >
            TO_AMT = #{TO_AMT},
          </otherwise>
        </choose>
      </if>
      <if test="PERCENTAGE != null" >
        <choose >
          <when test="PERCENTAGE == emptyBigDecimalValue" >
            PERCENTAGE = NULL ,
          </when>
          <otherwise >
            PERCENTAGE = #{PERCENTAGE},
          </otherwise>
        </choose>
      </if>
      <if test="AMOUNT != null" >
        <choose >
          <when test="AMOUNT == emptyBigDecimalValue" >
            AMOUNT = NULL ,
          </when>
          <otherwise >
            AMOUNT = #{AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="FACTOR != null" >
        <choose >
          <when test="FACTOR == emptyBigDecimalValue" >
            FACTOR = NULL ,
          </when>
          <otherwise >
            FACTOR = #{FACTOR},
          </otherwise>
        </choose>
      </if>
      <if test="CIF_PROFILE != null" >
        <choose >
          <when test="CIF_PROFILE == emptyBigDecimalValue" >
            CIF_PROFILE = NULL ,
          </when>
          <otherwise >
            CIF_PROFILE = #{CIF_PROFILE},
          </otherwise>
        </choose>
      </if>
      <if test="MINIMUM_AMT != null" >
        <choose >
          <when test="MINIMUM_AMT == emptyBigDecimalValue" >
            MINIMUM_AMT = NULL ,
          </when>
          <otherwise >
            MINIMUM_AMT = #{MINIMUM_AMT},
          </otherwise>
        </choose>
      </if>
      <if test="CURRENCY_CODE != null" >
        <choose >
          <when test="CURRENCY_CODE == emptyBigDecimalValue" >
            CURRENCY_CODE = NULL ,
          </when>
          <otherwise >
            CURRENCY_CODE = #{CURRENCY_CODE},
          </otherwise>
        </choose>
      </if>
    </set>
    where CODE = #{CODE}
      and COMP_CODE = #{COMP_CODE}
      and SEQ = #{SEQ}
  </sql>
  <update id="updateTRSCHARGES_ROSTER" parameterType="com.path.dbmaps.vo.TRSCHARGES_ROSTERVO" >
    <include refid="sql_updateTRSCHARGES_ROSTER" />
  </update>
</mapper>