<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TRS_PROVISION_PROCESS" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.TRS_PROVISION_PROCESSVO" >
    <id column="BRANCH_CODE" property="BRANCH_CODE" />
    <id column="COMP_CODE" property="COMP_CODE" />
    <id column="DEAL_NO" property="DEAL_NO" />
    <id column="INSTALLMENT_DATE" property="INSTALLMENT_DATE" />
    <id column="INSTALLMENT_NBR" property="INSTALLMENT_NBR" />
    <id column="PLAN_NBR" property="PLAN_NBR" />
    <id column="PLAN_SEQ" property="PLAN_SEQ" />
    <id column="PROCESS_NBR" property="PROCESS_NBR" />
    <result column="PROCESS_DATE" property="PROCESS_DATE" />
    <result column="PROCESSED_BY" property="PROCESSED_BY" />
    <result column="DEAL_CLASS" property="DEAL_CLASS" />
    <result column="DEAL_CATEGORY" property="DEAL_CATEGORY" />
    <result column="COUNTER_PARTY" property="COUNTER_PARTY" />
    <result column="TRANSFER_IND" property="TRANSFER_IND" />
    <result column="PROVISION_IND" property="PROVISION_IND" />
    <result column="TEMPLATE_TYPE_PROVISION" property="TEMPLATE_TYPE_PROVISION" />
    <result column="CLIENT_TEMPLATE_CODE" property="CLIENT_TEMPLATE_CODE" />
    <result column="BANK_TEMPLATE_CODE" property="BANK_TEMPLATE_CODE" />
    <result column="TEMPLATE_TYPE_TRANSFER" property="TEMPLATE_TYPE_TRANSFER" />
    <result column="TEMPLATE_CODE_TRANSFER_CLIENT" property="TEMPLATE_CODE_TRANSFER_CLIENT" />
    <result column="TEMPLATE_CODE_TRANSFER_COMP" property="TEMPLATE_CODE_TRANSFER_COMP" />
    <result column="DEAL_CURRENCY" property="DEAL_CURRENCY" />
    <result column="TRANSFER_GL" property="TRANSFER_GL" />
    <result column="TRANSFER_CIF" property="TRANSFER_CIF" />
    <result column="TRANSFER_SL" property="TRANSFER_SL" />
    <result column="CLI_TRANSFER_GL" property="CLI_TRANSFER_GL" />
    <result column="CLI_TRANSFER_CIF" property="CLI_TRANSFER_CIF" />
    <result column="CLI_TRANSFER_SL" property="CLI_TRANSFER_SL" />
    <result column="DR_PROV_GL" property="DR_PROV_GL" />
    <result column="DR_PROV_CIF" property="DR_PROV_CIF" />
    <result column="DR_PROV_SL" property="DR_PROV_SL" />
    <result column="CR_PROV_GL" property="CR_PROV_GL" />
    <result column="CR_PROV_CIF" property="CR_PROV_CIF" />
    <result column="CR_PROV_SL" property="CR_PROV_SL" />
    <result column="DR_CLI_PROV_GL" property="DR_CLI_PROV_GL" />
    <result column="DR_CLI_PROV_CIF" property="DR_CLI_PROV_CIF" />
    <result column="DR_CLI_PROV_SL" property="DR_CLI_PROV_SL" />
    <result column="CR_CLI_PROV_GL" property="CR_CLI_PROV_GL" />
    <result column="CR_CLI_PROV_CIF" property="CR_CLI_PROV_CIF" />
    <result column="CR_CLI_PROV_SL" property="CR_CLI_PROV_SL" />
    <result column="PROVISION_PERCENT" property="PROVISION_PERCENT" />
    <result column="COLLATERAL_PERCENT" property="COLLATERAL_PERCENT" />
    <result column="TRANSFER_AMOUNT" property="TRANSFER_AMOUNT" />
    <result column="TRANSFER_AMOUNT_CV" property="TRANSFER_AMOUNT_CV" />
    <result column="CONTRIB_TRANSFER_AMOUNT" property="CONTRIB_TRANSFER_AMOUNT" />
    <result column="CONTRIB_TRANSFER_AMOUNT_CV" property="CONTRIB_TRANSFER_AMOUNT_CV" />
    <result column="MODARIB_TRANSFER_AMOUNT" property="MODARIB_TRANSFER_AMOUNT" />
    <result column="MODARIB_TRANSFER_AMOUNT_CV" property="MODARIB_TRANSFER_AMOUNT_CV" />
    <result column="PROVISION_AMOUNT" property="PROVISION_AMOUNT" />
    <result column="PROVISION_AMOUNT_CV" property="PROVISION_AMOUNT_CV" />
    <result column="CONTRIB_PROVISION_AMOUNT" property="CONTRIB_PROVISION_AMOUNT" />
    <result column="CONTRIB_PROVISION_AMOUNT_CV" property="CONTRIB_PROVISION_AMOUNT_CV" />
    <result column="MODARIB_PROVISION_AMOUNT" property="MODARIB_PROVISION_AMOUNT" />
    <result column="MODARIB_PROVISION_AMOUNT_CV" property="MODARIB_PROVISION_AMOUNT_CV" />
    <result column="TRSDET_LINE_NO" property="TRSDET_LINE_NO" />
    <result column="CONTRIB_TRF_AMT_SETTLE" property="CONTRIB_TRF_AMT_SETTLE" />
    <result column="CONTRIB_TRF_AMT_SETTLE_CV" property="CONTRIB_TRF_AMT_SETTLE_CV" />
    <result column="MODARIB_TRF_AMT_SETTLE" property="MODARIB_TRF_AMT_SETTLE" />
    <result column="MODARIB_TRF_AMT_SETTLE_CV" property="MODARIB_TRF_AMT_SETTLE_CV" />
    <result column="CONTRIB_PROV_AMT_SETTLE" property="CONTRIB_PROV_AMT_SETTLE" />
    <result column="CONTRIB_PROV_AMT_SETTLE_CV" property="CONTRIB_PROV_AMT_SETTLE_CV" />
    <result column="MODARIB_PROV_AMT_SETTLE" property="MODARIB_PROV_AMT_SETTLE" />
    <result column="MODARIB_PROV_AMT_SETTLE_CV" property="MODARIB_PROV_AMT_SETTLE_CV" />
    <result column="PROCESS_IND" property="PROCESS_IND" />
    <result column="REVERSAL_IND" property="REVERSAL_IND" />
    <result column="PARTY_TYPE" property="PARTY_TYPE" />
    <result column="EXCH_RATE" property="EXCH_RATE" />
    <result column="UNIT" property="UNIT" />
    <result column="EXCH_MULT_DIV" property="EXCH_MULT_DIV" />
    <result column="CONTRIB_TRANSFER_PROFIT" property="CONTRIB_TRANSFER_PROFIT" />
    <result column="CONTRIB_TRANSFER_PROFIT_CV" property="CONTRIB_TRANSFER_PROFIT_CV" />
    <result column="PROFIT_UPFRONT" property="PROFIT_UPFRONT" />
    <result column="PRODUCT_CLASS" property="PRODUCT_CLASS" />
    <result column="PROVISION_AMOUNT_CV_OLD" property="PROVISION_AMOUNT_CV_OLD" />
    <result column="EXPECTED_CASH_FLOW_VALUE_CV" property="EXPECTED_CASH_FLOW_VALUE_CV" />
    <result column="EXPECTED_CASH_FLOW_VALUE_FC" property="EXPECTED_CASH_FLOW_VALUE_FC" />
    <result column="EXPECTED_CASH_FLOW_DATE" property="EXPECTED_CASH_FLOW_DATE" />
    <result column="PROVISION_TYPE_IND" property="PROVISION_TYPE_IND" />
    <result column="STATUS" property="STATUS" />
    <result column="CV_AMOUNT" property="CV_AMOUNT" />
    <result column="DEFERRED_PROFIT_CV" property="DEFERRED_PROFIT_CV" />
    <result column="SUSPENDED_PROFIT_CV" property="SUSPENDED_PROFIT_CV" />
    <result column="COLLATERAL_CV" property="COLLATERAL_CV" />
    <result column="PROVISION_PERCENT_USER" property="PROVISION_PERCENT_USER" />
    <result column="PROVISION_BASIS" property="PROVISION_BASIS" />
    <result column="CONSIDERED_COLLATERAL_CV" property="CONSIDERED_COLLATERAL_CV" />
    <result column="PROVISION_RECOVERY_AMT_FC" property="PROVISION_RECOVERY_AMT_FC" />
    <result column="PROVISION_RECOVERY_AMT_CV" property="PROVISION_RECOVERY_AMT_CV" />
    <result column="RESTRUCTURE_IND" property="RESTRUCTURE_IND" />
    <result column="DEAL_AMOUNT_OUTSTANDING" property="DEAL_AMOUNT_OUTSTANDING" />
    <result column="PRINCIPAL_OUTSTANDING" property="PRINCIPAL_OUTSTANDING" />
    <result column="OWING_OUTSTANDING" property="OWING_OUTSTANDING" />
    <result column="OPENING_BALANCE_PROVISION" property="OPENING_BALANCE_PROVISION" />
    <result column="OPENING_BALANCE_SPIIS" property="OPENING_BALANCE_SPIIS" />
    <result column="OPENING_BALANCE_IIS" property="OPENING_BALANCE_IIS" />
    <result column="PROVISION_CHARGED" property="PROVISION_CHARGED" />
    <result column="PROVISION_WRITE_BACK_CHARGED" property="PROVISION_WRITE_BACK_CHARGED" />
    <result column="PROVISION_WRITE_OFF" property="PROVISION_WRITE_OFF" />
    <result column="SPIIS_CHARGED" property="SPIIS_CHARGED" />
    <result column="SPIIS_WRITE_BACK" property="SPIIS_WRITE_BACK" />
    <result column="SPIIS_WRITE_OFF" property="SPIIS_WRITE_OFF" />
    <result column="IIS_CHARGED" property="IIS_CHARGED" />
    <result column="IIS_WRITE_BACK" property="IIS_WRITE_BACK" />
    <result column="IIS_WRITE_OFF" property="IIS_WRITE_OFF" />
    <result column="ACCRUED_AMOUNT" property="ACCRUED_AMOUNT" />
    <result column="UNEARNED_INCOME" property="UNEARNED_INCOME" />
    <result column="SHORTFALL" property="SHORTFALL" />
    <result column="WRITE_BACK" property="WRITE_BACK" />
    <result column="ADJUSTMENT" property="ADJUSTMENT" />
    <result column="ADJUSTMENT_TRX_NO" property="ADJUSTMENT_TRX_NO" />
    <result column="OPENING_PROVISION_ADJUSTMENT" property="OPENING_PROVISION_ADJUSTMENT" />
    <result column="PROVISION_RETAIN_AMT" property="PROVISION_RETAIN_AMT" />
    <result column="PROVISION_RETAIN_AMT_CV" property="PROVISION_RETAIN_AMT_CV" />
    <result column="PROVISION_ADDITIONAL_AMT" property="PROVISION_ADDITIONAL_AMT" />
    <result column="PROVISION_ADDITIONAL_AMT_CV" property="PROVISION_ADDITIONAL_AMT_CV" />
    <result column="SETTLEMENT_NBR" property="SETTLEMENT_NBR" />
    <result column="REVERSAL_SETTLEMENT_NBR" property="REVERSAL_SETTLEMENT_NBR" />
    <result column="CREATED_FROM" property="CREATED_FROM" />
    <result column="RESCH_SPIIS_WRITE_BACK" property="RESCH_SPIIS_WRITE_BACK" />
    <result column="RESCH_IIS_WRITE_BACK" property="RESCH_IIS_WRITE_BACK" />
    <result column="REVERSE_PROCESS_DATE" property="REVERSE_PROCESS_DATE" />
    <result column="DUE_DAYS" property="DUE_DAYS" />
    <result column="AMEND_STATUS" property="AMEND_STATUS" />
    <result column="AMEND_TRX_BRANCH" property="AMEND_TRX_BRANCH" />
    <result column="AMEND_TRX_NO" property="AMEND_TRX_NO" />
    <result column="PROCESS_REF_NBR" property="PROCESS_REF_NBR" />
  </resultMap>
  <sql id="Base_Column_List" >
    BRANCH_CODE, COMP_CODE, DEAL_NO, INSTALLMENT_DATE, INSTALLMENT_NBR, PLAN_NBR, PLAN_SEQ, 
    PROCESS_NBR, PROCESS_DATE, PROCESSED_BY, DEAL_CLASS, DEAL_CATEGORY, COUNTER_PARTY, 
    TRANSFER_IND, PROVISION_IND, TEMPLATE_TYPE_PROVISION, CLIENT_TEMPLATE_CODE, BANK_TEMPLATE_CODE, 
    TEMPLATE_TYPE_TRANSFER, TEMPLATE_CODE_TRANSFER_CLIENT, TEMPLATE_CODE_TRANSFER_COMP, 
    DEAL_CURRENCY, TRANSFER_GL, TRANSFER_CIF, TRANSFER_SL, CLI_TRANSFER_GL, CLI_TRANSFER_CIF, 
    CLI_TRANSFER_SL, DR_PROV_GL, DR_PROV_CIF, DR_PROV_SL, CR_PROV_GL, CR_PROV_CIF, CR_PROV_SL, 
    DR_CLI_PROV_GL, DR_CLI_PROV_CIF, DR_CLI_PROV_SL, CR_CLI_PROV_GL, CR_CLI_PROV_CIF, 
    CR_CLI_PROV_SL, PROVISION_PERCENT, COLLATERAL_PERCENT, TRANSFER_AMOUNT, TRANSFER_AMOUNT_CV, 
    CONTRIB_TRANSFER_AMOUNT, CONTRIB_TRANSFER_AMOUNT_CV, MODARIB_TRANSFER_AMOUNT, MODARIB_TRANSFER_AMOUNT_CV, 
    PROVISION_AMOUNT, PROVISION_AMOUNT_CV, CONTRIB_PROVISION_AMOUNT, CONTRIB_PROVISION_AMOUNT_CV, 
    MODARIB_PROVISION_AMOUNT, MODARIB_PROVISION_AMOUNT_CV, TRSDET_LINE_NO, CONTRIB_TRF_AMT_SETTLE, 
    CONTRIB_TRF_AMT_SETTLE_CV, MODARIB_TRF_AMT_SETTLE, MODARIB_TRF_AMT_SETTLE_CV, CONTRIB_PROV_AMT_SETTLE, 
    CONTRIB_PROV_AMT_SETTLE_CV, MODARIB_PROV_AMT_SETTLE, MODARIB_PROV_AMT_SETTLE_CV, 
    PROCESS_IND, REVERSAL_IND, PARTY_TYPE, EXCH_RATE, UNIT, EXCH_MULT_DIV, CONTRIB_TRANSFER_PROFIT, 
    CONTRIB_TRANSFER_PROFIT_CV, PROFIT_UPFRONT, PRODUCT_CLASS, PROVISION_AMOUNT_CV_OLD, 
    EXPECTED_CASH_FLOW_VALUE_CV, EXPECTED_CASH_FLOW_VALUE_FC, EXPECTED_CASH_FLOW_DATE, 
    PROVISION_TYPE_IND, STATUS, CV_AMOUNT, DEFERRED_PROFIT_CV, SUSPENDED_PROFIT_CV, COLLATERAL_CV, 
    PROVISION_PERCENT_USER, PROVISION_BASIS, CONSIDERED_COLLATERAL_CV, PROVISION_RECOVERY_AMT_FC, 
    PROVISION_RECOVERY_AMT_CV, RESTRUCTURE_IND, DEAL_AMOUNT_OUTSTANDING, PRINCIPAL_OUTSTANDING, 
    OWING_OUTSTANDING, OPENING_BALANCE_PROVISION, OPENING_BALANCE_SPIIS, OPENING_BALANCE_IIS, 
    PROVISION_CHARGED, PROVISION_WRITE_BACK_CHARGED, PROVISION_WRITE_OFF, SPIIS_CHARGED, 
    SPIIS_WRITE_BACK, SPIIS_WRITE_OFF, IIS_CHARGED, IIS_WRITE_BACK, IIS_WRITE_OFF, ACCRUED_AMOUNT, 
    UNEARNED_INCOME, SHORTFALL, WRITE_BACK, ADJUSTMENT, ADJUSTMENT_TRX_NO, OPENING_PROVISION_ADJUSTMENT, 
    PROVISION_RETAIN_AMT, PROVISION_RETAIN_AMT_CV, PROVISION_ADDITIONAL_AMT, PROVISION_ADDITIONAL_AMT_CV, 
    SETTLEMENT_NBR, REVERSAL_SETTLEMENT_NBR, CREATED_FROM, RESCH_SPIIS_WRITE_BACK, RESCH_IIS_WRITE_BACK, 
    REVERSE_PROCESS_DATE, DUE_DAYS, AMEND_STATUS, AMEND_TRX_BRANCH, AMEND_TRX_NO, PROCESS_REF_NBR
  </sql>
  <select id="selectTRS_PROVISION_PROCESS" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.TRS_PROVISION_PROCESSVOKey" >
    select 
    <include refid="Base_Column_List" />
    from TRS_PROVISION_PROCESS
    where BRANCH_CODE = #{BRANCH_CODE}
      and COMP_CODE = #{COMP_CODE}
      and DEAL_NO = #{DEAL_NO}
      and INSTALLMENT_DATE = #{INSTALLMENT_DATE}
      and INSTALLMENT_NBR = #{INSTALLMENT_NBR}
      and PLAN_NBR = #{PLAN_NBR}
      and PLAN_SEQ = #{PLAN_SEQ}
      and PROCESS_NBR = #{PROCESS_NBR}
  </select>
  <delete id="deleteTRS_PROVISION_PROCESS" parameterType="com.path.dbmaps.vo.TRS_PROVISION_PROCESSVOKey" >
    delete from TRS_PROVISION_PROCESS
    where BRANCH_CODE = #{BRANCH_CODE}
      and COMP_CODE = #{COMP_CODE}
      and DEAL_NO = #{DEAL_NO}
      and INSTALLMENT_DATE = #{INSTALLMENT_DATE}
      and INSTALLMENT_NBR = #{INSTALLMENT_NBR}
      and PLAN_NBR = #{PLAN_NBR}
      and PLAN_SEQ = #{PLAN_SEQ}
      and PROCESS_NBR = #{PROCESS_NBR}
  </delete>
  <insert id="insertTRS_PROVISION_PROCESS" parameterType="com.path.dbmaps.vo.TRS_PROVISION_PROCESSVO" >
    insert into TRS_PROVISION_PROCESS
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        BRANCH_CODE,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="DEAL_NO != null and DEAL_NO != emptyBigDecimalValue" >
        DEAL_NO,
      </if>
      <if test="INSTALLMENT_DATE != null" >
        INSTALLMENT_DATE,
      </if>
      <if test="INSTALLMENT_NBR != null and INSTALLMENT_NBR != emptyBigDecimalValue" >
        INSTALLMENT_NBR,
      </if>
      <if test="PLAN_NBR != null and PLAN_NBR != emptyBigDecimalValue" >
        PLAN_NBR,
      </if>
      <if test="PLAN_SEQ != null and PLAN_SEQ != emptyBigDecimalValue" >
        PLAN_SEQ,
      </if>
      <if test="PROCESS_NBR != null and PROCESS_NBR != emptyBigDecimalValue" >
        PROCESS_NBR,
      </if>
      <if test="PROCESS_DATE != null" >
        PROCESS_DATE,
      </if>
      <if test="PROCESSED_BY != null" >
        PROCESSED_BY,
      </if>
      <if test="DEAL_CLASS != null and DEAL_CLASS != emptyBigDecimalValue" >
        DEAL_CLASS,
      </if>
      <if test="DEAL_CATEGORY != null and DEAL_CATEGORY != emptyBigDecimalValue" >
        DEAL_CATEGORY,
      </if>
      <if test="COUNTER_PARTY != null and COUNTER_PARTY != emptyBigDecimalValue" >
        COUNTER_PARTY,
      </if>
      <if test="TRANSFER_IND != null" >
        TRANSFER_IND,
      </if>
      <if test="PROVISION_IND != null" >
        PROVISION_IND,
      </if>
      <if test="TEMPLATE_TYPE_PROVISION != null and TEMPLATE_TYPE_PROVISION != emptyBigDecimalValue" >
        TEMPLATE_TYPE_PROVISION,
      </if>
      <if test="CLIENT_TEMPLATE_CODE != null and CLIENT_TEMPLATE_CODE != emptyBigDecimalValue" >
        CLIENT_TEMPLATE_CODE,
      </if>
      <if test="BANK_TEMPLATE_CODE != null and BANK_TEMPLATE_CODE != emptyBigDecimalValue" >
        BANK_TEMPLATE_CODE,
      </if>
      <if test="TEMPLATE_TYPE_TRANSFER != null and TEMPLATE_TYPE_TRANSFER != emptyBigDecimalValue" >
        TEMPLATE_TYPE_TRANSFER,
      </if>
      <if test="TEMPLATE_CODE_TRANSFER_CLIENT != null and TEMPLATE_CODE_TRANSFER_CLIENT != emptyBigDecimalValue" >
        TEMPLATE_CODE_TRANSFER_CLIENT,
      </if>
      <if test="TEMPLATE_CODE_TRANSFER_COMP != null and TEMPLATE_CODE_TRANSFER_COMP != emptyBigDecimalValue" >
        TEMPLATE_CODE_TRANSFER_COMP,
      </if>
      <if test="DEAL_CURRENCY != null and DEAL_CURRENCY != emptyBigDecimalValue" >
        DEAL_CURRENCY,
      </if>
      <if test="TRANSFER_GL != null and TRANSFER_GL != emptyBigDecimalValue" >
        TRANSFER_GL,
      </if>
      <if test="TRANSFER_CIF != null and TRANSFER_CIF != emptyBigDecimalValue" >
        TRANSFER_CIF,
      </if>
      <if test="TRANSFER_SL != null and TRANSFER_SL != emptyBigDecimalValue" >
        TRANSFER_SL,
      </if>
      <if test="CLI_TRANSFER_GL != null and CLI_TRANSFER_GL != emptyBigDecimalValue" >
        CLI_TRANSFER_GL,
      </if>
      <if test="CLI_TRANSFER_CIF != null and CLI_TRANSFER_CIF != emptyBigDecimalValue" >
        CLI_TRANSFER_CIF,
      </if>
      <if test="CLI_TRANSFER_SL != null and CLI_TRANSFER_SL != emptyBigDecimalValue" >
        CLI_TRANSFER_SL,
      </if>
      <if test="DR_PROV_GL != null and DR_PROV_GL != emptyBigDecimalValue" >
        DR_PROV_GL,
      </if>
      <if test="DR_PROV_CIF != null and DR_PROV_CIF != emptyBigDecimalValue" >
        DR_PROV_CIF,
      </if>
      <if test="DR_PROV_SL != null and DR_PROV_SL != emptyBigDecimalValue" >
        DR_PROV_SL,
      </if>
      <if test="CR_PROV_GL != null and CR_PROV_GL != emptyBigDecimalValue" >
        CR_PROV_GL,
      </if>
      <if test="CR_PROV_CIF != null and CR_PROV_CIF != emptyBigDecimalValue" >
        CR_PROV_CIF,
      </if>
      <if test="CR_PROV_SL != null and CR_PROV_SL != emptyBigDecimalValue" >
        CR_PROV_SL,
      </if>
      <if test="DR_CLI_PROV_GL != null and DR_CLI_PROV_GL != emptyBigDecimalValue" >
        DR_CLI_PROV_GL,
      </if>
      <if test="DR_CLI_PROV_CIF != null and DR_CLI_PROV_CIF != emptyBigDecimalValue" >
        DR_CLI_PROV_CIF,
      </if>
      <if test="DR_CLI_PROV_SL != null and DR_CLI_PROV_SL != emptyBigDecimalValue" >
        DR_CLI_PROV_SL,
      </if>
      <if test="CR_CLI_PROV_GL != null and CR_CLI_PROV_GL != emptyBigDecimalValue" >
        CR_CLI_PROV_GL,
      </if>
      <if test="CR_CLI_PROV_CIF != null and CR_CLI_PROV_CIF != emptyBigDecimalValue" >
        CR_CLI_PROV_CIF,
      </if>
      <if test="CR_CLI_PROV_SL != null and CR_CLI_PROV_SL != emptyBigDecimalValue" >
        CR_CLI_PROV_SL,
      </if>
      <if test="PROVISION_PERCENT != null and PROVISION_PERCENT != emptyBigDecimalValue" >
        PROVISION_PERCENT,
      </if>
      <if test="COLLATERAL_PERCENT != null and COLLATERAL_PERCENT != emptyBigDecimalValue" >
        COLLATERAL_PERCENT,
      </if>
      <if test="TRANSFER_AMOUNT != null and TRANSFER_AMOUNT != emptyBigDecimalValue" >
        TRANSFER_AMOUNT,
      </if>
      <if test="TRANSFER_AMOUNT_CV != null and TRANSFER_AMOUNT_CV != emptyBigDecimalValue" >
        TRANSFER_AMOUNT_CV,
      </if>
      <if test="CONTRIB_TRANSFER_AMOUNT != null and CONTRIB_TRANSFER_AMOUNT != emptyBigDecimalValue" >
        CONTRIB_TRANSFER_AMOUNT,
      </if>
      <if test="CONTRIB_TRANSFER_AMOUNT_CV != null and CONTRIB_TRANSFER_AMOUNT_CV != emptyBigDecimalValue" >
        CONTRIB_TRANSFER_AMOUNT_CV,
      </if>
      <if test="MODARIB_TRANSFER_AMOUNT != null and MODARIB_TRANSFER_AMOUNT != emptyBigDecimalValue" >
        MODARIB_TRANSFER_AMOUNT,
      </if>
      <if test="MODARIB_TRANSFER_AMOUNT_CV != null and MODARIB_TRANSFER_AMOUNT_CV != emptyBigDecimalValue" >
        MODARIB_TRANSFER_AMOUNT_CV,
      </if>
      <if test="PROVISION_AMOUNT != null and PROVISION_AMOUNT != emptyBigDecimalValue" >
        PROVISION_AMOUNT,
      </if>
      <if test="PROVISION_AMOUNT_CV != null and PROVISION_AMOUNT_CV != emptyBigDecimalValue" >
        PROVISION_AMOUNT_CV,
      </if>
      <if test="CONTRIB_PROVISION_AMOUNT != null and CONTRIB_PROVISION_AMOUNT != emptyBigDecimalValue" >
        CONTRIB_PROVISION_AMOUNT,
      </if>
      <if test="CONTRIB_PROVISION_AMOUNT_CV != null and CONTRIB_PROVISION_AMOUNT_CV != emptyBigDecimalValue" >
        CONTRIB_PROVISION_AMOUNT_CV,
      </if>
      <if test="MODARIB_PROVISION_AMOUNT != null and MODARIB_PROVISION_AMOUNT != emptyBigDecimalValue" >
        MODARIB_PROVISION_AMOUNT,
      </if>
      <if test="MODARIB_PROVISION_AMOUNT_CV != null and MODARIB_PROVISION_AMOUNT_CV != emptyBigDecimalValue" >
        MODARIB_PROVISION_AMOUNT_CV,
      </if>
      <if test="TRSDET_LINE_NO != null and TRSDET_LINE_NO != emptyBigDecimalValue" >
        TRSDET_LINE_NO,
      </if>
      <if test="CONTRIB_TRF_AMT_SETTLE != null and CONTRIB_TRF_AMT_SETTLE != emptyBigDecimalValue" >
        CONTRIB_TRF_AMT_SETTLE,
      </if>
      <if test="CONTRIB_TRF_AMT_SETTLE_CV != null and CONTRIB_TRF_AMT_SETTLE_CV != emptyBigDecimalValue" >
        CONTRIB_TRF_AMT_SETTLE_CV,
      </if>
      <if test="MODARIB_TRF_AMT_SETTLE != null and MODARIB_TRF_AMT_SETTLE != emptyBigDecimalValue" >
        MODARIB_TRF_AMT_SETTLE,
      </if>
      <if test="MODARIB_TRF_AMT_SETTLE_CV != null and MODARIB_TRF_AMT_SETTLE_CV != emptyBigDecimalValue" >
        MODARIB_TRF_AMT_SETTLE_CV,
      </if>
      <if test="CONTRIB_PROV_AMT_SETTLE != null and CONTRIB_PROV_AMT_SETTLE != emptyBigDecimalValue" >
        CONTRIB_PROV_AMT_SETTLE,
      </if>
      <if test="CONTRIB_PROV_AMT_SETTLE_CV != null and CONTRIB_PROV_AMT_SETTLE_CV != emptyBigDecimalValue" >
        CONTRIB_PROV_AMT_SETTLE_CV,
      </if>
      <if test="MODARIB_PROV_AMT_SETTLE != null and MODARIB_PROV_AMT_SETTLE != emptyBigDecimalValue" >
        MODARIB_PROV_AMT_SETTLE,
      </if>
      <if test="MODARIB_PROV_AMT_SETTLE_CV != null and MODARIB_PROV_AMT_SETTLE_CV != emptyBigDecimalValue" >
        MODARIB_PROV_AMT_SETTLE_CV,
      </if>
      <if test="PROCESS_IND != null" >
        PROCESS_IND,
      </if>
      <if test="REVERSAL_IND != null" >
        REVERSAL_IND,
      </if>
      <if test="PARTY_TYPE != null" >
        PARTY_TYPE,
      </if>
      <if test="EXCH_RATE != null and EXCH_RATE != emptyBigDecimalValue" >
        EXCH_RATE,
      </if>
      <if test="UNIT != null and UNIT != emptyBigDecimalValue" >
        UNIT,
      </if>
      <if test="EXCH_MULT_DIV != null" >
        EXCH_MULT_DIV,
      </if>
      <if test="CONTRIB_TRANSFER_PROFIT != null and CONTRIB_TRANSFER_PROFIT != emptyBigDecimalValue" >
        CONTRIB_TRANSFER_PROFIT,
      </if>
      <if test="CONTRIB_TRANSFER_PROFIT_CV != null and CONTRIB_TRANSFER_PROFIT_CV != emptyBigDecimalValue" >
        CONTRIB_TRANSFER_PROFIT_CV,
      </if>
      <if test="PROFIT_UPFRONT != null" >
        PROFIT_UPFRONT,
      </if>
      <if test="PRODUCT_CLASS != null and PRODUCT_CLASS != emptyBigDecimalValue" >
        PRODUCT_CLASS,
      </if>
      <if test="PROVISION_AMOUNT_CV_OLD != null and PROVISION_AMOUNT_CV_OLD != emptyBigDecimalValue" >
        PROVISION_AMOUNT_CV_OLD,
      </if>
      <if test="EXPECTED_CASH_FLOW_VALUE_CV != null and EXPECTED_CASH_FLOW_VALUE_CV != emptyBigDecimalValue" >
        EXPECTED_CASH_FLOW_VALUE_CV,
      </if>
      <if test="EXPECTED_CASH_FLOW_VALUE_FC != null and EXPECTED_CASH_FLOW_VALUE_FC != emptyBigDecimalValue" >
        EXPECTED_CASH_FLOW_VALUE_FC,
      </if>
      <if test="EXPECTED_CASH_FLOW_DATE != null" >
        EXPECTED_CASH_FLOW_DATE,
      </if>
      <if test="PROVISION_TYPE_IND != null" >
        PROVISION_TYPE_IND,
      </if>
      <if test="STATUS != null" >
        STATUS,
      </if>
      <if test="CV_AMOUNT != null and CV_AMOUNT != emptyBigDecimalValue" >
        CV_AMOUNT,
      </if>
      <if test="DEFERRED_PROFIT_CV != null and DEFERRED_PROFIT_CV != emptyBigDecimalValue" >
        DEFERRED_PROFIT_CV,
      </if>
      <if test="SUSPENDED_PROFIT_CV != null and SUSPENDED_PROFIT_CV != emptyBigDecimalValue" >
        SUSPENDED_PROFIT_CV,
      </if>
      <if test="COLLATERAL_CV != null and COLLATERAL_CV != emptyBigDecimalValue" >
        COLLATERAL_CV,
      </if>
      <if test="PROVISION_PERCENT_USER != null and PROVISION_PERCENT_USER != emptyBigDecimalValue" >
        PROVISION_PERCENT_USER,
      </if>
      <if test="PROVISION_BASIS != null" >
        PROVISION_BASIS,
      </if>
      <if test="CONSIDERED_COLLATERAL_CV != null and CONSIDERED_COLLATERAL_CV != emptyBigDecimalValue" >
        CONSIDERED_COLLATERAL_CV,
      </if>
      <if test="PROVISION_RECOVERY_AMT_FC != null and PROVISION_RECOVERY_AMT_FC != emptyBigDecimalValue" >
        PROVISION_RECOVERY_AMT_FC,
      </if>
      <if test="PROVISION_RECOVERY_AMT_CV != null and PROVISION_RECOVERY_AMT_CV != emptyBigDecimalValue" >
        PROVISION_RECOVERY_AMT_CV,
      </if>
      <if test="RESTRUCTURE_IND != null and RESTRUCTURE_IND != emptyBigDecimalValue" >
        RESTRUCTURE_IND,
      </if>
      <if test="DEAL_AMOUNT_OUTSTANDING != null and DEAL_AMOUNT_OUTSTANDING != emptyBigDecimalValue" >
        DEAL_AMOUNT_OUTSTANDING,
      </if>
      <if test="PRINCIPAL_OUTSTANDING != null and PRINCIPAL_OUTSTANDING != emptyBigDecimalValue" >
        PRINCIPAL_OUTSTANDING,
      </if>
      <if test="OWING_OUTSTANDING != null and OWING_OUTSTANDING != emptyBigDecimalValue" >
        OWING_OUTSTANDING,
      </if>
      <if test="OPENING_BALANCE_PROVISION != null and OPENING_BALANCE_PROVISION != emptyBigDecimalValue" >
        OPENING_BALANCE_PROVISION,
      </if>
      <if test="OPENING_BALANCE_SPIIS != null and OPENING_BALANCE_SPIIS != emptyBigDecimalValue" >
        OPENING_BALANCE_SPIIS,
      </if>
      <if test="OPENING_BALANCE_IIS != null and OPENING_BALANCE_IIS != emptyBigDecimalValue" >
        OPENING_BALANCE_IIS,
      </if>
      <if test="PROVISION_CHARGED != null and PROVISION_CHARGED != emptyBigDecimalValue" >
        PROVISION_CHARGED,
      </if>
      <if test="PROVISION_WRITE_BACK_CHARGED != null and PROVISION_WRITE_BACK_CHARGED != emptyBigDecimalValue" >
        PROVISION_WRITE_BACK_CHARGED,
      </if>
      <if test="PROVISION_WRITE_OFF != null and PROVISION_WRITE_OFF != emptyBigDecimalValue" >
        PROVISION_WRITE_OFF,
      </if>
      <if test="SPIIS_CHARGED != null and SPIIS_CHARGED != emptyBigDecimalValue" >
        SPIIS_CHARGED,
      </if>
      <if test="SPIIS_WRITE_BACK != null and SPIIS_WRITE_BACK != emptyBigDecimalValue" >
        SPIIS_WRITE_BACK,
      </if>
      <if test="SPIIS_WRITE_OFF != null and SPIIS_WRITE_OFF != emptyBigDecimalValue" >
        SPIIS_WRITE_OFF,
      </if>
      <if test="IIS_CHARGED != null and IIS_CHARGED != emptyBigDecimalValue" >
        IIS_CHARGED,
      </if>
      <if test="IIS_WRITE_BACK != null and IIS_WRITE_BACK != emptyBigDecimalValue" >
        IIS_WRITE_BACK,
      </if>
      <if test="IIS_WRITE_OFF != null and IIS_WRITE_OFF != emptyBigDecimalValue" >
        IIS_WRITE_OFF,
      </if>
      <if test="ACCRUED_AMOUNT != null and ACCRUED_AMOUNT != emptyBigDecimalValue" >
        ACCRUED_AMOUNT,
      </if>
      <if test="UNEARNED_INCOME != null and UNEARNED_INCOME != emptyBigDecimalValue" >
        UNEARNED_INCOME,
      </if>
      <if test="SHORTFALL != null and SHORTFALL != emptyBigDecimalValue" >
        SHORTFALL,
      </if>
      <if test="WRITE_BACK != null and WRITE_BACK != emptyBigDecimalValue" >
        WRITE_BACK,
      </if>
      <if test="ADJUSTMENT != null and ADJUSTMENT != emptyBigDecimalValue" >
        ADJUSTMENT,
      </if>
      <if test="ADJUSTMENT_TRX_NO != null and ADJUSTMENT_TRX_NO != emptyBigDecimalValue" >
        ADJUSTMENT_TRX_NO,
      </if>
      <if test="OPENING_PROVISION_ADJUSTMENT != null and OPENING_PROVISION_ADJUSTMENT != emptyBigDecimalValue" >
        OPENING_PROVISION_ADJUSTMENT,
      </if>
      <if test="PROVISION_RETAIN_AMT != null and PROVISION_RETAIN_AMT != emptyBigDecimalValue" >
        PROVISION_RETAIN_AMT,
      </if>
      <if test="PROVISION_RETAIN_AMT_CV != null and PROVISION_RETAIN_AMT_CV != emptyBigDecimalValue" >
        PROVISION_RETAIN_AMT_CV,
      </if>
      <if test="PROVISION_ADDITIONAL_AMT != null and PROVISION_ADDITIONAL_AMT != emptyBigDecimalValue" >
        PROVISION_ADDITIONAL_AMT,
      </if>
      <if test="PROVISION_ADDITIONAL_AMT_CV != null and PROVISION_ADDITIONAL_AMT_CV != emptyBigDecimalValue" >
        PROVISION_ADDITIONAL_AMT_CV,
      </if>
      <if test="SETTLEMENT_NBR != null and SETTLEMENT_NBR != emptyBigDecimalValue" >
        SETTLEMENT_NBR,
      </if>
      <if test="REVERSAL_SETTLEMENT_NBR != null and REVERSAL_SETTLEMENT_NBR != emptyBigDecimalValue" >
        REVERSAL_SETTLEMENT_NBR,
      </if>
      <if test="CREATED_FROM != null" >
        CREATED_FROM,
      </if>
      <if test="RESCH_SPIIS_WRITE_BACK != null and RESCH_SPIIS_WRITE_BACK != emptyBigDecimalValue" >
        RESCH_SPIIS_WRITE_BACK,
      </if>
      <if test="RESCH_IIS_WRITE_BACK != null and RESCH_IIS_WRITE_BACK != emptyBigDecimalValue" >
        RESCH_IIS_WRITE_BACK,
      </if>
      <if test="REVERSE_PROCESS_DATE != null" >
        REVERSE_PROCESS_DATE,
      </if>
      <if test="DUE_DAYS != null and DUE_DAYS != emptyBigDecimalValue" >
        DUE_DAYS,
      </if>
      <if test="AMEND_STATUS != null" >
        AMEND_STATUS,
      </if>
      <if test="AMEND_TRX_BRANCH != null and AMEND_TRX_BRANCH != emptyBigDecimalValue" >
        AMEND_TRX_BRANCH,
      </if>
      <if test="AMEND_TRX_NO != null and AMEND_TRX_NO != emptyBigDecimalValue" >
        AMEND_TRX_NO,
      </if>
      <if test="PROCESS_REF_NBR != null and PROCESS_REF_NBR != emptyBigDecimalValue" >
        PROCESS_REF_NBR,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        #{BRANCH_CODE},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="DEAL_NO != null and DEAL_NO != emptyBigDecimalValue" >
        #{DEAL_NO},
      </if>
      <if test="INSTALLMENT_DATE != null" >
        #{INSTALLMENT_DATE},
      </if>
      <if test="INSTALLMENT_NBR != null and INSTALLMENT_NBR != emptyBigDecimalValue" >
        #{INSTALLMENT_NBR},
      </if>
      <if test="PLAN_NBR != null and PLAN_NBR != emptyBigDecimalValue" >
        #{PLAN_NBR},
      </if>
      <if test="PLAN_SEQ != null and PLAN_SEQ != emptyBigDecimalValue" >
        #{PLAN_SEQ},
      </if>
      <if test="PROCESS_NBR != null and PROCESS_NBR != emptyBigDecimalValue" >
        #{PROCESS_NBR},
      </if>
      <if test="PROCESS_DATE != null" >
        #{PROCESS_DATE},
      </if>
      <if test="PROCESSED_BY != null" >
        #{PROCESSED_BY},
      </if>
      <if test="DEAL_CLASS != null and DEAL_CLASS != emptyBigDecimalValue" >
        #{DEAL_CLASS},
      </if>
      <if test="DEAL_CATEGORY != null and DEAL_CATEGORY != emptyBigDecimalValue" >
        #{DEAL_CATEGORY},
      </if>
      <if test="COUNTER_PARTY != null and COUNTER_PARTY != emptyBigDecimalValue" >
        #{COUNTER_PARTY},
      </if>
      <if test="TRANSFER_IND != null" >
        #{TRANSFER_IND},
      </if>
      <if test="PROVISION_IND != null" >
        #{PROVISION_IND},
      </if>
      <if test="TEMPLATE_TYPE_PROVISION != null and TEMPLATE_TYPE_PROVISION != emptyBigDecimalValue" >
        #{TEMPLATE_TYPE_PROVISION},
      </if>
      <if test="CLIENT_TEMPLATE_CODE != null and CLIENT_TEMPLATE_CODE != emptyBigDecimalValue" >
        #{CLIENT_TEMPLATE_CODE},
      </if>
      <if test="BANK_TEMPLATE_CODE != null and BANK_TEMPLATE_CODE != emptyBigDecimalValue" >
        #{BANK_TEMPLATE_CODE},
      </if>
      <if test="TEMPLATE_TYPE_TRANSFER != null and TEMPLATE_TYPE_TRANSFER != emptyBigDecimalValue" >
        #{TEMPLATE_TYPE_TRANSFER},
      </if>
      <if test="TEMPLATE_CODE_TRANSFER_CLIENT != null and TEMPLATE_CODE_TRANSFER_CLIENT != emptyBigDecimalValue" >
        #{TEMPLATE_CODE_TRANSFER_CLIENT},
      </if>
      <if test="TEMPLATE_CODE_TRANSFER_COMP != null and TEMPLATE_CODE_TRANSFER_COMP != emptyBigDecimalValue" >
        #{TEMPLATE_CODE_TRANSFER_COMP},
      </if>
      <if test="DEAL_CURRENCY != null and DEAL_CURRENCY != emptyBigDecimalValue" >
        #{DEAL_CURRENCY},
      </if>
      <if test="TRANSFER_GL != null and TRANSFER_GL != emptyBigDecimalValue" >
        #{TRANSFER_GL},
      </if>
      <if test="TRANSFER_CIF != null and TRANSFER_CIF != emptyBigDecimalValue" >
        #{TRANSFER_CIF},
      </if>
      <if test="TRANSFER_SL != null and TRANSFER_SL != emptyBigDecimalValue" >
        #{TRANSFER_SL},
      </if>
      <if test="CLI_TRANSFER_GL != null and CLI_TRANSFER_GL != emptyBigDecimalValue" >
        #{CLI_TRANSFER_GL},
      </if>
      <if test="CLI_TRANSFER_CIF != null and CLI_TRANSFER_CIF != emptyBigDecimalValue" >
        #{CLI_TRANSFER_CIF},
      </if>
      <if test="CLI_TRANSFER_SL != null and CLI_TRANSFER_SL != emptyBigDecimalValue" >
        #{CLI_TRANSFER_SL},
      </if>
      <if test="DR_PROV_GL != null and DR_PROV_GL != emptyBigDecimalValue" >
        #{DR_PROV_GL},
      </if>
      <if test="DR_PROV_CIF != null and DR_PROV_CIF != emptyBigDecimalValue" >
        #{DR_PROV_CIF},
      </if>
      <if test="DR_PROV_SL != null and DR_PROV_SL != emptyBigDecimalValue" >
        #{DR_PROV_SL},
      </if>
      <if test="CR_PROV_GL != null and CR_PROV_GL != emptyBigDecimalValue" >
        #{CR_PROV_GL},
      </if>
      <if test="CR_PROV_CIF != null and CR_PROV_CIF != emptyBigDecimalValue" >
        #{CR_PROV_CIF},
      </if>
      <if test="CR_PROV_SL != null and CR_PROV_SL != emptyBigDecimalValue" >
        #{CR_PROV_SL},
      </if>
      <if test="DR_CLI_PROV_GL != null and DR_CLI_PROV_GL != emptyBigDecimalValue" >
        #{DR_CLI_PROV_GL},
      </if>
      <if test="DR_CLI_PROV_CIF != null and DR_CLI_PROV_CIF != emptyBigDecimalValue" >
        #{DR_CLI_PROV_CIF},
      </if>
      <if test="DR_CLI_PROV_SL != null and DR_CLI_PROV_SL != emptyBigDecimalValue" >
        #{DR_CLI_PROV_SL},
      </if>
      <if test="CR_CLI_PROV_GL != null and CR_CLI_PROV_GL != emptyBigDecimalValue" >
        #{CR_CLI_PROV_GL},
      </if>
      <if test="CR_CLI_PROV_CIF != null and CR_CLI_PROV_CIF != emptyBigDecimalValue" >
        #{CR_CLI_PROV_CIF},
      </if>
      <if test="CR_CLI_PROV_SL != null and CR_CLI_PROV_SL != emptyBigDecimalValue" >
        #{CR_CLI_PROV_SL},
      </if>
      <if test="PROVISION_PERCENT != null and PROVISION_PERCENT != emptyBigDecimalValue" >
        #{PROVISION_PERCENT},
      </if>
      <if test="COLLATERAL_PERCENT != null and COLLATERAL_PERCENT != emptyBigDecimalValue" >
        #{COLLATERAL_PERCENT},
      </if>
      <if test="TRANSFER_AMOUNT != null and TRANSFER_AMOUNT != emptyBigDecimalValue" >
        #{TRANSFER_AMOUNT},
      </if>
      <if test="TRANSFER_AMOUNT_CV != null and TRANSFER_AMOUNT_CV != emptyBigDecimalValue" >
        #{TRANSFER_AMOUNT_CV},
      </if>
      <if test="CONTRIB_TRANSFER_AMOUNT != null and CONTRIB_TRANSFER_AMOUNT != emptyBigDecimalValue" >
        #{CONTRIB_TRANSFER_AMOUNT},
      </if>
      <if test="CONTRIB_TRANSFER_AMOUNT_CV != null and CONTRIB_TRANSFER_AMOUNT_CV != emptyBigDecimalValue" >
        #{CONTRIB_TRANSFER_AMOUNT_CV},
      </if>
      <if test="MODARIB_TRANSFER_AMOUNT != null and MODARIB_TRANSFER_AMOUNT != emptyBigDecimalValue" >
        #{MODARIB_TRANSFER_AMOUNT},
      </if>
      <if test="MODARIB_TRANSFER_AMOUNT_CV != null and MODARIB_TRANSFER_AMOUNT_CV != emptyBigDecimalValue" >
        #{MODARIB_TRANSFER_AMOUNT_CV},
      </if>
      <if test="PROVISION_AMOUNT != null and PROVISION_AMOUNT != emptyBigDecimalValue" >
        #{PROVISION_AMOUNT},
      </if>
      <if test="PROVISION_AMOUNT_CV != null and PROVISION_AMOUNT_CV != emptyBigDecimalValue" >
        #{PROVISION_AMOUNT_CV},
      </if>
      <if test="CONTRIB_PROVISION_AMOUNT != null and CONTRIB_PROVISION_AMOUNT != emptyBigDecimalValue" >
        #{CONTRIB_PROVISION_AMOUNT},
      </if>
      <if test="CONTRIB_PROVISION_AMOUNT_CV != null and CONTRIB_PROVISION_AMOUNT_CV != emptyBigDecimalValue" >
        #{CONTRIB_PROVISION_AMOUNT_CV},
      </if>
      <if test="MODARIB_PROVISION_AMOUNT != null and MODARIB_PROVISION_AMOUNT != emptyBigDecimalValue" >
        #{MODARIB_PROVISION_AMOUNT},
      </if>
      <if test="MODARIB_PROVISION_AMOUNT_CV != null and MODARIB_PROVISION_AMOUNT_CV != emptyBigDecimalValue" >
        #{MODARIB_PROVISION_AMOUNT_CV},
      </if>
      <if test="TRSDET_LINE_NO != null and TRSDET_LINE_NO != emptyBigDecimalValue" >
        #{TRSDET_LINE_NO},
      </if>
      <if test="CONTRIB_TRF_AMT_SETTLE != null and CONTRIB_TRF_AMT_SETTLE != emptyBigDecimalValue" >
        #{CONTRIB_TRF_AMT_SETTLE},
      </if>
      <if test="CONTRIB_TRF_AMT_SETTLE_CV != null and CONTRIB_TRF_AMT_SETTLE_CV != emptyBigDecimalValue" >
        #{CONTRIB_TRF_AMT_SETTLE_CV},
      </if>
      <if test="MODARIB_TRF_AMT_SETTLE != null and MODARIB_TRF_AMT_SETTLE != emptyBigDecimalValue" >
        #{MODARIB_TRF_AMT_SETTLE},
      </if>
      <if test="MODARIB_TRF_AMT_SETTLE_CV != null and MODARIB_TRF_AMT_SETTLE_CV != emptyBigDecimalValue" >
        #{MODARIB_TRF_AMT_SETTLE_CV},
      </if>
      <if test="CONTRIB_PROV_AMT_SETTLE != null and CONTRIB_PROV_AMT_SETTLE != emptyBigDecimalValue" >
        #{CONTRIB_PROV_AMT_SETTLE},
      </if>
      <if test="CONTRIB_PROV_AMT_SETTLE_CV != null and CONTRIB_PROV_AMT_SETTLE_CV != emptyBigDecimalValue" >
        #{CONTRIB_PROV_AMT_SETTLE_CV},
      </if>
      <if test="MODARIB_PROV_AMT_SETTLE != null and MODARIB_PROV_AMT_SETTLE != emptyBigDecimalValue" >
        #{MODARIB_PROV_AMT_SETTLE},
      </if>
      <if test="MODARIB_PROV_AMT_SETTLE_CV != null and MODARIB_PROV_AMT_SETTLE_CV != emptyBigDecimalValue" >
        #{MODARIB_PROV_AMT_SETTLE_CV},
      </if>
      <if test="PROCESS_IND != null" >
        #{PROCESS_IND},
      </if>
      <if test="REVERSAL_IND != null" >
        #{REVERSAL_IND},
      </if>
      <if test="PARTY_TYPE != null" >
        #{PARTY_TYPE},
      </if>
      <if test="EXCH_RATE != null and EXCH_RATE != emptyBigDecimalValue" >
        #{EXCH_RATE},
      </if>
      <if test="UNIT != null and UNIT != emptyBigDecimalValue" >
        #{UNIT},
      </if>
      <if test="EXCH_MULT_DIV != null" >
        #{EXCH_MULT_DIV},
      </if>
      <if test="CONTRIB_TRANSFER_PROFIT != null and CONTRIB_TRANSFER_PROFIT != emptyBigDecimalValue" >
        #{CONTRIB_TRANSFER_PROFIT},
      </if>
      <if test="CONTRIB_TRANSFER_PROFIT_CV != null and CONTRIB_TRANSFER_PROFIT_CV != emptyBigDecimalValue" >
        #{CONTRIB_TRANSFER_PROFIT_CV},
      </if>
      <if test="PROFIT_UPFRONT != null" >
        #{PROFIT_UPFRONT},
      </if>
      <if test="PRODUCT_CLASS != null and PRODUCT_CLASS != emptyBigDecimalValue" >
        #{PRODUCT_CLASS},
      </if>
      <if test="PROVISION_AMOUNT_CV_OLD != null and PROVISION_AMOUNT_CV_OLD != emptyBigDecimalValue" >
        #{PROVISION_AMOUNT_CV_OLD},
      </if>
      <if test="EXPECTED_CASH_FLOW_VALUE_CV != null and EXPECTED_CASH_FLOW_VALUE_CV != emptyBigDecimalValue" >
        #{EXPECTED_CASH_FLOW_VALUE_CV},
      </if>
      <if test="EXPECTED_CASH_FLOW_VALUE_FC != null and EXPECTED_CASH_FLOW_VALUE_FC != emptyBigDecimalValue" >
        #{EXPECTED_CASH_FLOW_VALUE_FC},
      </if>
      <if test="EXPECTED_CASH_FLOW_DATE != null" >
        #{EXPECTED_CASH_FLOW_DATE},
      </if>
      <if test="PROVISION_TYPE_IND != null" >
        #{PROVISION_TYPE_IND},
      </if>
      <if test="STATUS != null" >
        #{STATUS},
      </if>
      <if test="CV_AMOUNT != null and CV_AMOUNT != emptyBigDecimalValue" >
        #{CV_AMOUNT},
      </if>
      <if test="DEFERRED_PROFIT_CV != null and DEFERRED_PROFIT_CV != emptyBigDecimalValue" >
        #{DEFERRED_PROFIT_CV},
      </if>
      <if test="SUSPENDED_PROFIT_CV != null and SUSPENDED_PROFIT_CV != emptyBigDecimalValue" >
        #{SUSPENDED_PROFIT_CV},
      </if>
      <if test="COLLATERAL_CV != null and COLLATERAL_CV != emptyBigDecimalValue" >
        #{COLLATERAL_CV},
      </if>
      <if test="PROVISION_PERCENT_USER != null and PROVISION_PERCENT_USER != emptyBigDecimalValue" >
        #{PROVISION_PERCENT_USER},
      </if>
      <if test="PROVISION_BASIS != null" >
        #{PROVISION_BASIS},
      </if>
      <if test="CONSIDERED_COLLATERAL_CV != null and CONSIDERED_COLLATERAL_CV != emptyBigDecimalValue" >
        #{CONSIDERED_COLLATERAL_CV},
      </if>
      <if test="PROVISION_RECOVERY_AMT_FC != null and PROVISION_RECOVERY_AMT_FC != emptyBigDecimalValue" >
        #{PROVISION_RECOVERY_AMT_FC},
      </if>
      <if test="PROVISION_RECOVERY_AMT_CV != null and PROVISION_RECOVERY_AMT_CV != emptyBigDecimalValue" >
        #{PROVISION_RECOVERY_AMT_CV},
      </if>
      <if test="RESTRUCTURE_IND != null and RESTRUCTURE_IND != emptyBigDecimalValue" >
        #{RESTRUCTURE_IND},
      </if>
      <if test="DEAL_AMOUNT_OUTSTANDING != null and DEAL_AMOUNT_OUTSTANDING != emptyBigDecimalValue" >
        #{DEAL_AMOUNT_OUTSTANDING},
      </if>
      <if test="PRINCIPAL_OUTSTANDING != null and PRINCIPAL_OUTSTANDING != emptyBigDecimalValue" >
        #{PRINCIPAL_OUTSTANDING},
      </if>
      <if test="OWING_OUTSTANDING != null and OWING_OUTSTANDING != emptyBigDecimalValue" >
        #{OWING_OUTSTANDING},
      </if>
      <if test="OPENING_BALANCE_PROVISION != null and OPENING_BALANCE_PROVISION != emptyBigDecimalValue" >
        #{OPENING_BALANCE_PROVISION},
      </if>
      <if test="OPENING_BALANCE_SPIIS != null and OPENING_BALANCE_SPIIS != emptyBigDecimalValue" >
        #{OPENING_BALANCE_SPIIS},
      </if>
      <if test="OPENING_BALANCE_IIS != null and OPENING_BALANCE_IIS != emptyBigDecimalValue" >
        #{OPENING_BALANCE_IIS},
      </if>
      <if test="PROVISION_CHARGED != null and PROVISION_CHARGED != emptyBigDecimalValue" >
        #{PROVISION_CHARGED},
      </if>
      <if test="PROVISION_WRITE_BACK_CHARGED != null and PROVISION_WRITE_BACK_CHARGED != emptyBigDecimalValue" >
        #{PROVISION_WRITE_BACK_CHARGED},
      </if>
      <if test="PROVISION_WRITE_OFF != null and PROVISION_WRITE_OFF != emptyBigDecimalValue" >
        #{PROVISION_WRITE_OFF},
      </if>
      <if test="SPIIS_CHARGED != null and SPIIS_CHARGED != emptyBigDecimalValue" >
        #{SPIIS_CHARGED},
      </if>
      <if test="SPIIS_WRITE_BACK != null and SPIIS_WRITE_BACK != emptyBigDecimalValue" >
        #{SPIIS_WRITE_BACK},
      </if>
      <if test="SPIIS_WRITE_OFF != null and SPIIS_WRITE_OFF != emptyBigDecimalValue" >
        #{SPIIS_WRITE_OFF},
      </if>
      <if test="IIS_CHARGED != null and IIS_CHARGED != emptyBigDecimalValue" >
        #{IIS_CHARGED},
      </if>
      <if test="IIS_WRITE_BACK != null and IIS_WRITE_BACK != emptyBigDecimalValue" >
        #{IIS_WRITE_BACK},
      </if>
      <if test="IIS_WRITE_OFF != null and IIS_WRITE_OFF != emptyBigDecimalValue" >
        #{IIS_WRITE_OFF},
      </if>
      <if test="ACCRUED_AMOUNT != null and ACCRUED_AMOUNT != emptyBigDecimalValue" >
        #{ACCRUED_AMOUNT},
      </if>
      <if test="UNEARNED_INCOME != null and UNEARNED_INCOME != emptyBigDecimalValue" >
        #{UNEARNED_INCOME},
      </if>
      <if test="SHORTFALL != null and SHORTFALL != emptyBigDecimalValue" >
        #{SHORTFALL},
      </if>
      <if test="WRITE_BACK != null and WRITE_BACK != emptyBigDecimalValue" >
        #{WRITE_BACK},
      </if>
      <if test="ADJUSTMENT != null and ADJUSTMENT != emptyBigDecimalValue" >
        #{ADJUSTMENT},
      </if>
      <if test="ADJUSTMENT_TRX_NO != null and ADJUSTMENT_TRX_NO != emptyBigDecimalValue" >
        #{ADJUSTMENT_TRX_NO},
      </if>
      <if test="OPENING_PROVISION_ADJUSTMENT != null and OPENING_PROVISION_ADJUSTMENT != emptyBigDecimalValue" >
        #{OPENING_PROVISION_ADJUSTMENT},
      </if>
      <if test="PROVISION_RETAIN_AMT != null and PROVISION_RETAIN_AMT != emptyBigDecimalValue" >
        #{PROVISION_RETAIN_AMT},
      </if>
      <if test="PROVISION_RETAIN_AMT_CV != null and PROVISION_RETAIN_AMT_CV != emptyBigDecimalValue" >
        #{PROVISION_RETAIN_AMT_CV},
      </if>
      <if test="PROVISION_ADDITIONAL_AMT != null and PROVISION_ADDITIONAL_AMT != emptyBigDecimalValue" >
        #{PROVISION_ADDITIONAL_AMT},
      </if>
      <if test="PROVISION_ADDITIONAL_AMT_CV != null and PROVISION_ADDITIONAL_AMT_CV != emptyBigDecimalValue" >
        #{PROVISION_ADDITIONAL_AMT_CV},
      </if>
      <if test="SETTLEMENT_NBR != null and SETTLEMENT_NBR != emptyBigDecimalValue" >
        #{SETTLEMENT_NBR},
      </if>
      <if test="REVERSAL_SETTLEMENT_NBR != null and REVERSAL_SETTLEMENT_NBR != emptyBigDecimalValue" >
        #{REVERSAL_SETTLEMENT_NBR},
      </if>
      <if test="CREATED_FROM != null" >
        #{CREATED_FROM},
      </if>
      <if test="RESCH_SPIIS_WRITE_BACK != null and RESCH_SPIIS_WRITE_BACK != emptyBigDecimalValue" >
        #{RESCH_SPIIS_WRITE_BACK},
      </if>
      <if test="RESCH_IIS_WRITE_BACK != null and RESCH_IIS_WRITE_BACK != emptyBigDecimalValue" >
        #{RESCH_IIS_WRITE_BACK},
      </if>
      <if test="REVERSE_PROCESS_DATE != null" >
        #{REVERSE_PROCESS_DATE},
      </if>
      <if test="DUE_DAYS != null and DUE_DAYS != emptyBigDecimalValue" >
        #{DUE_DAYS},
      </if>
      <if test="AMEND_STATUS != null" >
        #{AMEND_STATUS},
      </if>
      <if test="AMEND_TRX_BRANCH != null and AMEND_TRX_BRANCH != emptyBigDecimalValue" >
        #{AMEND_TRX_BRANCH},
      </if>
      <if test="AMEND_TRX_NO != null and AMEND_TRX_NO != emptyBigDecimalValue" >
        #{AMEND_TRX_NO},
      </if>
      <if test="PROCESS_REF_NBR != null and PROCESS_REF_NBR != emptyBigDecimalValue" >
        #{PROCESS_REF_NBR},
      </if>
    </trim>
  </insert>
  <sql id="sql_updateTRS_PROVISION_PROCESS" >
    update TRS_PROVISION_PROCESS
    <set >
      <if test="PROCESS_DATE != null" >
        PROCESS_DATE = #{PROCESS_DATE},
      </if>
      <if test="PROCESSED_BY != null" >
        PROCESSED_BY = #{PROCESSED_BY},
      </if>
      <if test="DEAL_CLASS != null" >
        <choose >
          <when test="DEAL_CLASS == emptyBigDecimalValue" >
            DEAL_CLASS = NULL ,
          </when>
          <otherwise >
            DEAL_CLASS = #{DEAL_CLASS},
          </otherwise>
        </choose>
      </if>
      <if test="DEAL_CATEGORY != null" >
        <choose >
          <when test="DEAL_CATEGORY == emptyBigDecimalValue" >
            DEAL_CATEGORY = NULL ,
          </when>
          <otherwise >
            DEAL_CATEGORY = #{DEAL_CATEGORY},
          </otherwise>
        </choose>
      </if>
      <if test="COUNTER_PARTY != null" >
        <choose >
          <when test="COUNTER_PARTY == emptyBigDecimalValue" >
            COUNTER_PARTY = NULL ,
          </when>
          <otherwise >
            COUNTER_PARTY = #{COUNTER_PARTY},
          </otherwise>
        </choose>
      </if>
      <if test="TRANSFER_IND != null" >
        TRANSFER_IND = #{TRANSFER_IND},
      </if>
      <if test="PROVISION_IND != null" >
        PROVISION_IND = #{PROVISION_IND},
      </if>
      <if test="TEMPLATE_TYPE_PROVISION != null" >
        <choose >
          <when test="TEMPLATE_TYPE_PROVISION == emptyBigDecimalValue" >
            TEMPLATE_TYPE_PROVISION = NULL ,
          </when>
          <otherwise >
            TEMPLATE_TYPE_PROVISION = #{TEMPLATE_TYPE_PROVISION},
          </otherwise>
        </choose>
      </if>
      <if test="CLIENT_TEMPLATE_CODE != null" >
        <choose >
          <when test="CLIENT_TEMPLATE_CODE == emptyBigDecimalValue" >
            CLIENT_TEMPLATE_CODE = NULL ,
          </when>
          <otherwise >
            CLIENT_TEMPLATE_CODE = #{CLIENT_TEMPLATE_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="BANK_TEMPLATE_CODE != null" >
        <choose >
          <when test="BANK_TEMPLATE_CODE == emptyBigDecimalValue" >
            BANK_TEMPLATE_CODE = NULL ,
          </when>
          <otherwise >
            BANK_TEMPLATE_CODE = #{BANK_TEMPLATE_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="TEMPLATE_TYPE_TRANSFER != null" >
        <choose >
          <when test="TEMPLATE_TYPE_TRANSFER == emptyBigDecimalValue" >
            TEMPLATE_TYPE_TRANSFER = NULL ,
          </when>
          <otherwise >
            TEMPLATE_TYPE_TRANSFER = #{TEMPLATE_TYPE_TRANSFER},
          </otherwise>
        </choose>
      </if>
      <if test="TEMPLATE_CODE_TRANSFER_CLIENT != null" >
        <choose >
          <when test="TEMPLATE_CODE_TRANSFER_CLIENT == emptyBigDecimalValue" >
            TEMPLATE_CODE_TRANSFER_CLIENT = NULL ,
          </when>
          <otherwise >
            TEMPLATE_CODE_TRANSFER_CLIENT = #{TEMPLATE_CODE_TRANSFER_CLIENT},
          </otherwise>
        </choose>
      </if>
      <if test="TEMPLATE_CODE_TRANSFER_COMP != null" >
        <choose >
          <when test="TEMPLATE_CODE_TRANSFER_COMP == emptyBigDecimalValue" >
            TEMPLATE_CODE_TRANSFER_COMP = NULL ,
          </when>
          <otherwise >
            TEMPLATE_CODE_TRANSFER_COMP = #{TEMPLATE_CODE_TRANSFER_COMP},
          </otherwise>
        </choose>
      </if>
      <if test="DEAL_CURRENCY != null" >
        <choose >
          <when test="DEAL_CURRENCY == emptyBigDecimalValue" >
            DEAL_CURRENCY = NULL ,
          </when>
          <otherwise >
            DEAL_CURRENCY = #{DEAL_CURRENCY},
          </otherwise>
        </choose>
      </if>
      <if test="TRANSFER_GL != null" >
        <choose >
          <when test="TRANSFER_GL == emptyBigDecimalValue" >
            TRANSFER_GL = NULL ,
          </when>
          <otherwise >
            TRANSFER_GL = #{TRANSFER_GL},
          </otherwise>
        </choose>
      </if>
      <if test="TRANSFER_CIF != null" >
        <choose >
          <when test="TRANSFER_CIF == emptyBigDecimalValue" >
            TRANSFER_CIF = NULL ,
          </when>
          <otherwise >
            TRANSFER_CIF = #{TRANSFER_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="TRANSFER_SL != null" >
        <choose >
          <when test="TRANSFER_SL == emptyBigDecimalValue" >
            TRANSFER_SL = NULL ,
          </when>
          <otherwise >
            TRANSFER_SL = #{TRANSFER_SL},
          </otherwise>
        </choose>
      </if>
      <if test="CLI_TRANSFER_GL != null" >
        <choose >
          <when test="CLI_TRANSFER_GL == emptyBigDecimalValue" >
            CLI_TRANSFER_GL = NULL ,
          </when>
          <otherwise >
            CLI_TRANSFER_GL = #{CLI_TRANSFER_GL},
          </otherwise>
        </choose>
      </if>
      <if test="CLI_TRANSFER_CIF != null" >
        <choose >
          <when test="CLI_TRANSFER_CIF == emptyBigDecimalValue" >
            CLI_TRANSFER_CIF = NULL ,
          </when>
          <otherwise >
            CLI_TRANSFER_CIF = #{CLI_TRANSFER_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="CLI_TRANSFER_SL != null" >
        <choose >
          <when test="CLI_TRANSFER_SL == emptyBigDecimalValue" >
            CLI_TRANSFER_SL = NULL ,
          </when>
          <otherwise >
            CLI_TRANSFER_SL = #{CLI_TRANSFER_SL},
          </otherwise>
        </choose>
      </if>
      <if test="DR_PROV_GL != null" >
        <choose >
          <when test="DR_PROV_GL == emptyBigDecimalValue" >
            DR_PROV_GL = NULL ,
          </when>
          <otherwise >
            DR_PROV_GL = #{DR_PROV_GL},
          </otherwise>
        </choose>
      </if>
      <if test="DR_PROV_CIF != null" >
        <choose >
          <when test="DR_PROV_CIF == emptyBigDecimalValue" >
            DR_PROV_CIF = NULL ,
          </when>
          <otherwise >
            DR_PROV_CIF = #{DR_PROV_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="DR_PROV_SL != null" >
        <choose >
          <when test="DR_PROV_SL == emptyBigDecimalValue" >
            DR_PROV_SL = NULL ,
          </when>
          <otherwise >
            DR_PROV_SL = #{DR_PROV_SL},
          </otherwise>
        </choose>
      </if>
      <if test="CR_PROV_GL != null" >
        <choose >
          <when test="CR_PROV_GL == emptyBigDecimalValue" >
            CR_PROV_GL = NULL ,
          </when>
          <otherwise >
            CR_PROV_GL = #{CR_PROV_GL},
          </otherwise>
        </choose>
      </if>
      <if test="CR_PROV_CIF != null" >
        <choose >
          <when test="CR_PROV_CIF == emptyBigDecimalValue" >
            CR_PROV_CIF = NULL ,
          </when>
          <otherwise >
            CR_PROV_CIF = #{CR_PROV_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="CR_PROV_SL != null" >
        <choose >
          <when test="CR_PROV_SL == emptyBigDecimalValue" >
            CR_PROV_SL = NULL ,
          </when>
          <otherwise >
            CR_PROV_SL = #{CR_PROV_SL},
          </otherwise>
        </choose>
      </if>
      <if test="DR_CLI_PROV_GL != null" >
        <choose >
          <when test="DR_CLI_PROV_GL == emptyBigDecimalValue" >
            DR_CLI_PROV_GL = NULL ,
          </when>
          <otherwise >
            DR_CLI_PROV_GL = #{DR_CLI_PROV_GL},
          </otherwise>
        </choose>
      </if>
      <if test="DR_CLI_PROV_CIF != null" >
        <choose >
          <when test="DR_CLI_PROV_CIF == emptyBigDecimalValue" >
            DR_CLI_PROV_CIF = NULL ,
          </when>
          <otherwise >
            DR_CLI_PROV_CIF = #{DR_CLI_PROV_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="DR_CLI_PROV_SL != null" >
        <choose >
          <when test="DR_CLI_PROV_SL == emptyBigDecimalValue" >
            DR_CLI_PROV_SL = NULL ,
          </when>
          <otherwise >
            DR_CLI_PROV_SL = #{DR_CLI_PROV_SL},
          </otherwise>
        </choose>
      </if>
      <if test="CR_CLI_PROV_GL != null" >
        <choose >
          <when test="CR_CLI_PROV_GL == emptyBigDecimalValue" >
            CR_CLI_PROV_GL = NULL ,
          </when>
          <otherwise >
            CR_CLI_PROV_GL = #{CR_CLI_PROV_GL},
          </otherwise>
        </choose>
      </if>
      <if test="CR_CLI_PROV_CIF != null" >
        <choose >
          <when test="CR_CLI_PROV_CIF == emptyBigDecimalValue" >
            CR_CLI_PROV_CIF = NULL ,
          </when>
          <otherwise >
            CR_CLI_PROV_CIF = #{CR_CLI_PROV_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="CR_CLI_PROV_SL != null" >
        <choose >
          <when test="CR_CLI_PROV_SL == emptyBigDecimalValue" >
            CR_CLI_PROV_SL = NULL ,
          </when>
          <otherwise >
            CR_CLI_PROV_SL = #{CR_CLI_PROV_SL},
          </otherwise>
        </choose>
      </if>
      <if test="PROVISION_PERCENT != null" >
        <choose >
          <when test="PROVISION_PERCENT == emptyBigDecimalValue" >
            PROVISION_PERCENT = NULL ,
          </when>
          <otherwise >
            PROVISION_PERCENT = #{PROVISION_PERCENT},
          </otherwise>
        </choose>
      </if>
      <if test="COLLATERAL_PERCENT != null" >
        <choose >
          <when test="COLLATERAL_PERCENT == emptyBigDecimalValue" >
            COLLATERAL_PERCENT = NULL ,
          </when>
          <otherwise >
            COLLATERAL_PERCENT = #{COLLATERAL_PERCENT},
          </otherwise>
        </choose>
      </if>
      <if test="TRANSFER_AMOUNT != null" >
        <choose >
          <when test="TRANSFER_AMOUNT == emptyBigDecimalValue" >
            TRANSFER_AMOUNT = NULL ,
          </when>
          <otherwise >
            TRANSFER_AMOUNT = #{TRANSFER_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="TRANSFER_AMOUNT_CV != null" >
        <choose >
          <when test="TRANSFER_AMOUNT_CV == emptyBigDecimalValue" >
            TRANSFER_AMOUNT_CV = NULL ,
          </when>
          <otherwise >
            TRANSFER_AMOUNT_CV = #{TRANSFER_AMOUNT_CV},
          </otherwise>
        </choose>
      </if>
      <if test="CONTRIB_TRANSFER_AMOUNT != null" >
        <choose >
          <when test="CONTRIB_TRANSFER_AMOUNT == emptyBigDecimalValue" >
            CONTRIB_TRANSFER_AMOUNT = NULL ,
          </when>
          <otherwise >
            CONTRIB_TRANSFER_AMOUNT = #{CONTRIB_TRANSFER_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="CONTRIB_TRANSFER_AMOUNT_CV != null" >
        <choose >
          <when test="CONTRIB_TRANSFER_AMOUNT_CV == emptyBigDecimalValue" >
            CONTRIB_TRANSFER_AMOUNT_CV = NULL ,
          </when>
          <otherwise >
            CONTRIB_TRANSFER_AMOUNT_CV = #{CONTRIB_TRANSFER_AMOUNT_CV},
          </otherwise>
        </choose>
      </if>
      <if test="MODARIB_TRANSFER_AMOUNT != null" >
        <choose >
          <when test="MODARIB_TRANSFER_AMOUNT == emptyBigDecimalValue" >
            MODARIB_TRANSFER_AMOUNT = NULL ,
          </when>
          <otherwise >
            MODARIB_TRANSFER_AMOUNT = #{MODARIB_TRANSFER_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="MODARIB_TRANSFER_AMOUNT_CV != null" >
        <choose >
          <when test="MODARIB_TRANSFER_AMOUNT_CV == emptyBigDecimalValue" >
            MODARIB_TRANSFER_AMOUNT_CV = NULL ,
          </when>
          <otherwise >
            MODARIB_TRANSFER_AMOUNT_CV = #{MODARIB_TRANSFER_AMOUNT_CV},
          </otherwise>
        </choose>
      </if>
      <if test="PROVISION_AMOUNT != null" >
        <choose >
          <when test="PROVISION_AMOUNT == emptyBigDecimalValue" >
            PROVISION_AMOUNT = NULL ,
          </when>
          <otherwise >
            PROVISION_AMOUNT = #{PROVISION_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="PROVISION_AMOUNT_CV != null" >
        <choose >
          <when test="PROVISION_AMOUNT_CV == emptyBigDecimalValue" >
            PROVISION_AMOUNT_CV = NULL ,
          </when>
          <otherwise >
            PROVISION_AMOUNT_CV = #{PROVISION_AMOUNT_CV},
          </otherwise>
        </choose>
      </if>
      <if test="CONTRIB_PROVISION_AMOUNT != null" >
        <choose >
          <when test="CONTRIB_PROVISION_AMOUNT == emptyBigDecimalValue" >
            CONTRIB_PROVISION_AMOUNT = NULL ,
          </when>
          <otherwise >
            CONTRIB_PROVISION_AMOUNT = #{CONTRIB_PROVISION_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="CONTRIB_PROVISION_AMOUNT_CV != null" >
        <choose >
          <when test="CONTRIB_PROVISION_AMOUNT_CV == emptyBigDecimalValue" >
            CONTRIB_PROVISION_AMOUNT_CV = NULL ,
          </when>
          <otherwise >
            CONTRIB_PROVISION_AMOUNT_CV = #{CONTRIB_PROVISION_AMOUNT_CV},
          </otherwise>
        </choose>
      </if>
      <if test="MODARIB_PROVISION_AMOUNT != null" >
        <choose >
          <when test="MODARIB_PROVISION_AMOUNT == emptyBigDecimalValue" >
            MODARIB_PROVISION_AMOUNT = NULL ,
          </when>
          <otherwise >
            MODARIB_PROVISION_AMOUNT = #{MODARIB_PROVISION_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="MODARIB_PROVISION_AMOUNT_CV != null" >
        <choose >
          <when test="MODARIB_PROVISION_AMOUNT_CV == emptyBigDecimalValue" >
            MODARIB_PROVISION_AMOUNT_CV = NULL ,
          </when>
          <otherwise >
            MODARIB_PROVISION_AMOUNT_CV = #{MODARIB_PROVISION_AMOUNT_CV},
          </otherwise>
        </choose>
      </if>
      <if test="TRSDET_LINE_NO != null" >
        <choose >
          <when test="TRSDET_LINE_NO == emptyBigDecimalValue" >
            TRSDET_LINE_NO = NULL ,
          </when>
          <otherwise >
            TRSDET_LINE_NO = #{TRSDET_LINE_NO},
          </otherwise>
        </choose>
      </if>
      <if test="CONTRIB_TRF_AMT_SETTLE != null" >
        <choose >
          <when test="CONTRIB_TRF_AMT_SETTLE == emptyBigDecimalValue" >
            CONTRIB_TRF_AMT_SETTLE = NULL ,
          </when>
          <otherwise >
            CONTRIB_TRF_AMT_SETTLE = #{CONTRIB_TRF_AMT_SETTLE},
          </otherwise>
        </choose>
      </if>
      <if test="CONTRIB_TRF_AMT_SETTLE_CV != null" >
        <choose >
          <when test="CONTRIB_TRF_AMT_SETTLE_CV == emptyBigDecimalValue" >
            CONTRIB_TRF_AMT_SETTLE_CV = NULL ,
          </when>
          <otherwise >
            CONTRIB_TRF_AMT_SETTLE_CV = #{CONTRIB_TRF_AMT_SETTLE_CV},
          </otherwise>
        </choose>
      </if>
      <if test="MODARIB_TRF_AMT_SETTLE != null" >
        <choose >
          <when test="MODARIB_TRF_AMT_SETTLE == emptyBigDecimalValue" >
            MODARIB_TRF_AMT_SETTLE = NULL ,
          </when>
          <otherwise >
            MODARIB_TRF_AMT_SETTLE = #{MODARIB_TRF_AMT_SETTLE},
          </otherwise>
        </choose>
      </if>
      <if test="MODARIB_TRF_AMT_SETTLE_CV != null" >
        <choose >
          <when test="MODARIB_TRF_AMT_SETTLE_CV == emptyBigDecimalValue" >
            MODARIB_TRF_AMT_SETTLE_CV = NULL ,
          </when>
          <otherwise >
            MODARIB_TRF_AMT_SETTLE_CV = #{MODARIB_TRF_AMT_SETTLE_CV},
          </otherwise>
        </choose>
      </if>
      <if test="CONTRIB_PROV_AMT_SETTLE != null" >
        <choose >
          <when test="CONTRIB_PROV_AMT_SETTLE == emptyBigDecimalValue" >
            CONTRIB_PROV_AMT_SETTLE = NULL ,
          </when>
          <otherwise >
            CONTRIB_PROV_AMT_SETTLE = #{CONTRIB_PROV_AMT_SETTLE},
          </otherwise>
        </choose>
      </if>
      <if test="CONTRIB_PROV_AMT_SETTLE_CV != null" >
        <choose >
          <when test="CONTRIB_PROV_AMT_SETTLE_CV == emptyBigDecimalValue" >
            CONTRIB_PROV_AMT_SETTLE_CV = NULL ,
          </when>
          <otherwise >
            CONTRIB_PROV_AMT_SETTLE_CV = #{CONTRIB_PROV_AMT_SETTLE_CV},
          </otherwise>
        </choose>
      </if>
      <if test="MODARIB_PROV_AMT_SETTLE != null" >
        <choose >
          <when test="MODARIB_PROV_AMT_SETTLE == emptyBigDecimalValue" >
            MODARIB_PROV_AMT_SETTLE = NULL ,
          </when>
          <otherwise >
            MODARIB_PROV_AMT_SETTLE = #{MODARIB_PROV_AMT_SETTLE},
          </otherwise>
        </choose>
      </if>
      <if test="MODARIB_PROV_AMT_SETTLE_CV != null" >
        <choose >
          <when test="MODARIB_PROV_AMT_SETTLE_CV == emptyBigDecimalValue" >
            MODARIB_PROV_AMT_SETTLE_CV = NULL ,
          </when>
          <otherwise >
            MODARIB_PROV_AMT_SETTLE_CV = #{MODARIB_PROV_AMT_SETTLE_CV},
          </otherwise>
        </choose>
      </if>
      <if test="PROCESS_IND != null" >
        PROCESS_IND = #{PROCESS_IND},
      </if>
      <if test="REVERSAL_IND != null" >
        REVERSAL_IND = #{REVERSAL_IND},
      </if>
      <if test="PARTY_TYPE != null" >
        PARTY_TYPE = #{PARTY_TYPE},
      </if>
      <if test="EXCH_RATE != null" >
        <choose >
          <when test="EXCH_RATE == emptyBigDecimalValue" >
            EXCH_RATE = NULL ,
          </when>
          <otherwise >
            EXCH_RATE = #{EXCH_RATE},
          </otherwise>
        </choose>
      </if>
      <if test="UNIT != null" >
        <choose >
          <when test="UNIT == emptyBigDecimalValue" >
            UNIT = NULL ,
          </when>
          <otherwise >
            UNIT = #{UNIT},
          </otherwise>
        </choose>
      </if>
      <if test="EXCH_MULT_DIV != null" >
        EXCH_MULT_DIV = #{EXCH_MULT_DIV},
      </if>
      <if test="CONTRIB_TRANSFER_PROFIT != null" >
        <choose >
          <when test="CONTRIB_TRANSFER_PROFIT == emptyBigDecimalValue" >
            CONTRIB_TRANSFER_PROFIT = NULL ,
          </when>
          <otherwise >
            CONTRIB_TRANSFER_PROFIT = #{CONTRIB_TRANSFER_PROFIT},
          </otherwise>
        </choose>
      </if>
      <if test="CONTRIB_TRANSFER_PROFIT_CV != null" >
        <choose >
          <when test="CONTRIB_TRANSFER_PROFIT_CV == emptyBigDecimalValue" >
            CONTRIB_TRANSFER_PROFIT_CV = NULL ,
          </when>
          <otherwise >
            CONTRIB_TRANSFER_PROFIT_CV = #{CONTRIB_TRANSFER_PROFIT_CV},
          </otherwise>
        </choose>
      </if>
      <if test="PROFIT_UPFRONT != null" >
        PROFIT_UPFRONT = #{PROFIT_UPFRONT},
      </if>
      <if test="PRODUCT_CLASS != null" >
        <choose >
          <when test="PRODUCT_CLASS == emptyBigDecimalValue" >
            PRODUCT_CLASS = NULL ,
          </when>
          <otherwise >
            PRODUCT_CLASS = #{PRODUCT_CLASS},
          </otherwise>
        </choose>
      </if>
      <if test="PROVISION_AMOUNT_CV_OLD != null" >
        <choose >
          <when test="PROVISION_AMOUNT_CV_OLD == emptyBigDecimalValue" >
            PROVISION_AMOUNT_CV_OLD = NULL ,
          </when>
          <otherwise >
            PROVISION_AMOUNT_CV_OLD = #{PROVISION_AMOUNT_CV_OLD},
          </otherwise>
        </choose>
      </if>
      <if test="EXPECTED_CASH_FLOW_VALUE_CV != null" >
        <choose >
          <when test="EXPECTED_CASH_FLOW_VALUE_CV == emptyBigDecimalValue" >
            EXPECTED_CASH_FLOW_VALUE_CV = NULL ,
          </when>
          <otherwise >
            EXPECTED_CASH_FLOW_VALUE_CV = #{EXPECTED_CASH_FLOW_VALUE_CV},
          </otherwise>
        </choose>
      </if>
      <if test="EXPECTED_CASH_FLOW_VALUE_FC != null" >
        <choose >
          <when test="EXPECTED_CASH_FLOW_VALUE_FC == emptyBigDecimalValue" >
            EXPECTED_CASH_FLOW_VALUE_FC = NULL ,
          </when>
          <otherwise >
            EXPECTED_CASH_FLOW_VALUE_FC = #{EXPECTED_CASH_FLOW_VALUE_FC},
          </otherwise>
        </choose>
      </if>
      <if test="EXPECTED_CASH_FLOW_DATE != null" >
        EXPECTED_CASH_FLOW_DATE = #{EXPECTED_CASH_FLOW_DATE},
      </if>
      <if test="PROVISION_TYPE_IND != null" >
        PROVISION_TYPE_IND = #{PROVISION_TYPE_IND},
      </if>
      <if test="STATUS != null" >
        STATUS = #{STATUS},
      </if>
      <if test="CV_AMOUNT != null" >
        <choose >
          <when test="CV_AMOUNT == emptyBigDecimalValue" >
            CV_AMOUNT = NULL ,
          </when>
          <otherwise >
            CV_AMOUNT = #{CV_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="DEFERRED_PROFIT_CV != null" >
        <choose >
          <when test="DEFERRED_PROFIT_CV == emptyBigDecimalValue" >
            DEFERRED_PROFIT_CV = NULL ,
          </when>
          <otherwise >
            DEFERRED_PROFIT_CV = #{DEFERRED_PROFIT_CV},
          </otherwise>
        </choose>
      </if>
      <if test="SUSPENDED_PROFIT_CV != null" >
        <choose >
          <when test="SUSPENDED_PROFIT_CV == emptyBigDecimalValue" >
            SUSPENDED_PROFIT_CV = NULL ,
          </when>
          <otherwise >
            SUSPENDED_PROFIT_CV = #{SUSPENDED_PROFIT_CV},
          </otherwise>
        </choose>
      </if>
      <if test="COLLATERAL_CV != null" >
        <choose >
          <when test="COLLATERAL_CV == emptyBigDecimalValue" >
            COLLATERAL_CV = NULL ,
          </when>
          <otherwise >
            COLLATERAL_CV = #{COLLATERAL_CV},
          </otherwise>
        </choose>
      </if>
      <if test="PROVISION_PERCENT_USER != null" >
        <choose >
          <when test="PROVISION_PERCENT_USER == emptyBigDecimalValue" >
            PROVISION_PERCENT_USER = NULL ,
          </when>
          <otherwise >
            PROVISION_PERCENT_USER = #{PROVISION_PERCENT_USER},
          </otherwise>
        </choose>
      </if>
      <if test="PROVISION_BASIS != null" >
        PROVISION_BASIS = #{PROVISION_BASIS},
      </if>
      <if test="CONSIDERED_COLLATERAL_CV != null" >
        <choose >
          <when test="CONSIDERED_COLLATERAL_CV == emptyBigDecimalValue" >
            CONSIDERED_COLLATERAL_CV = NULL ,
          </when>
          <otherwise >
            CONSIDERED_COLLATERAL_CV = #{CONSIDERED_COLLATERAL_CV},
          </otherwise>
        </choose>
      </if>
      <if test="PROVISION_RECOVERY_AMT_FC != null" >
        <choose >
          <when test="PROVISION_RECOVERY_AMT_FC == emptyBigDecimalValue" >
            PROVISION_RECOVERY_AMT_FC = NULL ,
          </when>
          <otherwise >
            PROVISION_RECOVERY_AMT_FC = #{PROVISION_RECOVERY_AMT_FC},
          </otherwise>
        </choose>
      </if>
      <if test="PROVISION_RECOVERY_AMT_CV != null" >
        <choose >
          <when test="PROVISION_RECOVERY_AMT_CV == emptyBigDecimalValue" >
            PROVISION_RECOVERY_AMT_CV = NULL ,
          </when>
          <otherwise >
            PROVISION_RECOVERY_AMT_CV = #{PROVISION_RECOVERY_AMT_CV},
          </otherwise>
        </choose>
      </if>
      <if test="RESTRUCTURE_IND != null" >
        <choose >
          <when test="RESTRUCTURE_IND == emptyBigDecimalValue" >
            RESTRUCTURE_IND = NULL ,
          </when>
          <otherwise >
            RESTRUCTURE_IND = #{RESTRUCTURE_IND},
          </otherwise>
        </choose>
      </if>
      <if test="DEAL_AMOUNT_OUTSTANDING != null" >
        <choose >
          <when test="DEAL_AMOUNT_OUTSTANDING == emptyBigDecimalValue" >
            DEAL_AMOUNT_OUTSTANDING = NULL ,
          </when>
          <otherwise >
            DEAL_AMOUNT_OUTSTANDING = #{DEAL_AMOUNT_OUTSTANDING},
          </otherwise>
        </choose>
      </if>
      <if test="PRINCIPAL_OUTSTANDING != null" >
        <choose >
          <when test="PRINCIPAL_OUTSTANDING == emptyBigDecimalValue" >
            PRINCIPAL_OUTSTANDING = NULL ,
          </when>
          <otherwise >
            PRINCIPAL_OUTSTANDING = #{PRINCIPAL_OUTSTANDING},
          </otherwise>
        </choose>
      </if>
      <if test="OWING_OUTSTANDING != null" >
        <choose >
          <when test="OWING_OUTSTANDING == emptyBigDecimalValue" >
            OWING_OUTSTANDING = NULL ,
          </when>
          <otherwise >
            OWING_OUTSTANDING = #{OWING_OUTSTANDING},
          </otherwise>
        </choose>
      </if>
      <if test="OPENING_BALANCE_PROVISION != null" >
        <choose >
          <when test="OPENING_BALANCE_PROVISION == emptyBigDecimalValue" >
            OPENING_BALANCE_PROVISION = NULL ,
          </when>
          <otherwise >
            OPENING_BALANCE_PROVISION = #{OPENING_BALANCE_PROVISION},
          </otherwise>
        </choose>
      </if>
      <if test="OPENING_BALANCE_SPIIS != null" >
        <choose >
          <when test="OPENING_BALANCE_SPIIS == emptyBigDecimalValue" >
            OPENING_BALANCE_SPIIS = NULL ,
          </when>
          <otherwise >
            OPENING_BALANCE_SPIIS = #{OPENING_BALANCE_SPIIS},
          </otherwise>
        </choose>
      </if>
      <if test="OPENING_BALANCE_IIS != null" >
        <choose >
          <when test="OPENING_BALANCE_IIS == emptyBigDecimalValue" >
            OPENING_BALANCE_IIS = NULL ,
          </when>
          <otherwise >
            OPENING_BALANCE_IIS = #{OPENING_BALANCE_IIS},
          </otherwise>
        </choose>
      </if>
      <if test="PROVISION_CHARGED != null" >
        <choose >
          <when test="PROVISION_CHARGED == emptyBigDecimalValue" >
            PROVISION_CHARGED = NULL ,
          </when>
          <otherwise >
            PROVISION_CHARGED = #{PROVISION_CHARGED},
          </otherwise>
        </choose>
      </if>
      <if test="PROVISION_WRITE_BACK_CHARGED != null" >
        <choose >
          <when test="PROVISION_WRITE_BACK_CHARGED == emptyBigDecimalValue" >
            PROVISION_WRITE_BACK_CHARGED = NULL ,
          </when>
          <otherwise >
            PROVISION_WRITE_BACK_CHARGED = #{PROVISION_WRITE_BACK_CHARGED},
          </otherwise>
        </choose>
      </if>
      <if test="PROVISION_WRITE_OFF != null" >
        <choose >
          <when test="PROVISION_WRITE_OFF == emptyBigDecimalValue" >
            PROVISION_WRITE_OFF = NULL ,
          </when>
          <otherwise >
            PROVISION_WRITE_OFF = #{PROVISION_WRITE_OFF},
          </otherwise>
        </choose>
      </if>
      <if test="SPIIS_CHARGED != null" >
        <choose >
          <when test="SPIIS_CHARGED == emptyBigDecimalValue" >
            SPIIS_CHARGED = NULL ,
          </when>
          <otherwise >
            SPIIS_CHARGED = #{SPIIS_CHARGED},
          </otherwise>
        </choose>
      </if>
      <if test="SPIIS_WRITE_BACK != null" >
        <choose >
          <when test="SPIIS_WRITE_BACK == emptyBigDecimalValue" >
            SPIIS_WRITE_BACK = NULL ,
          </when>
          <otherwise >
            SPIIS_WRITE_BACK = #{SPIIS_WRITE_BACK},
          </otherwise>
        </choose>
      </if>
      <if test="SPIIS_WRITE_OFF != null" >
        <choose >
          <when test="SPIIS_WRITE_OFF == emptyBigDecimalValue" >
            SPIIS_WRITE_OFF = NULL ,
          </when>
          <otherwise >
            SPIIS_WRITE_OFF = #{SPIIS_WRITE_OFF},
          </otherwise>
        </choose>
      </if>
      <if test="IIS_CHARGED != null" >
        <choose >
          <when test="IIS_CHARGED == emptyBigDecimalValue" >
            IIS_CHARGED = NULL ,
          </when>
          <otherwise >
            IIS_CHARGED = #{IIS_CHARGED},
          </otherwise>
        </choose>
      </if>
      <if test="IIS_WRITE_BACK != null" >
        <choose >
          <when test="IIS_WRITE_BACK == emptyBigDecimalValue" >
            IIS_WRITE_BACK = NULL ,
          </when>
          <otherwise >
            IIS_WRITE_BACK = #{IIS_WRITE_BACK},
          </otherwise>
        </choose>
      </if>
      <if test="IIS_WRITE_OFF != null" >
        <choose >
          <when test="IIS_WRITE_OFF == emptyBigDecimalValue" >
            IIS_WRITE_OFF = NULL ,
          </when>
          <otherwise >
            IIS_WRITE_OFF = #{IIS_WRITE_OFF},
          </otherwise>
        </choose>
      </if>
      <if test="ACCRUED_AMOUNT != null" >
        <choose >
          <when test="ACCRUED_AMOUNT == emptyBigDecimalValue" >
            ACCRUED_AMOUNT = NULL ,
          </when>
          <otherwise >
            ACCRUED_AMOUNT = #{ACCRUED_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="UNEARNED_INCOME != null" >
        <choose >
          <when test="UNEARNED_INCOME == emptyBigDecimalValue" >
            UNEARNED_INCOME = NULL ,
          </when>
          <otherwise >
            UNEARNED_INCOME = #{UNEARNED_INCOME},
          </otherwise>
        </choose>
      </if>
      <if test="SHORTFALL != null" >
        <choose >
          <when test="SHORTFALL == emptyBigDecimalValue" >
            SHORTFALL = NULL ,
          </when>
          <otherwise >
            SHORTFALL = #{SHORTFALL},
          </otherwise>
        </choose>
      </if>
      <if test="WRITE_BACK != null" >
        <choose >
          <when test="WRITE_BACK == emptyBigDecimalValue" >
            WRITE_BACK = NULL ,
          </when>
          <otherwise >
            WRITE_BACK = #{WRITE_BACK},
          </otherwise>
        </choose>
      </if>
      <if test="ADJUSTMENT != null" >
        <choose >
          <when test="ADJUSTMENT == emptyBigDecimalValue" >
            ADJUSTMENT = NULL ,
          </when>
          <otherwise >
            ADJUSTMENT = #{ADJUSTMENT},
          </otherwise>
        </choose>
      </if>
      <if test="ADJUSTMENT_TRX_NO != null" >
        <choose >
          <when test="ADJUSTMENT_TRX_NO == emptyBigDecimalValue" >
            ADJUSTMENT_TRX_NO = NULL ,
          </when>
          <otherwise >
            ADJUSTMENT_TRX_NO = #{ADJUSTMENT_TRX_NO},
          </otherwise>
        </choose>
      </if>
      <if test="OPENING_PROVISION_ADJUSTMENT != null" >
        <choose >
          <when test="OPENING_PROVISION_ADJUSTMENT == emptyBigDecimalValue" >
            OPENING_PROVISION_ADJUSTMENT = NULL ,
          </when>
          <otherwise >
            OPENING_PROVISION_ADJUSTMENT = #{OPENING_PROVISION_ADJUSTMENT},
          </otherwise>
        </choose>
      </if>
      <if test="PROVISION_RETAIN_AMT != null" >
        <choose >
          <when test="PROVISION_RETAIN_AMT == emptyBigDecimalValue" >
            PROVISION_RETAIN_AMT = NULL ,
          </when>
          <otherwise >
            PROVISION_RETAIN_AMT = #{PROVISION_RETAIN_AMT},
          </otherwise>
        </choose>
      </if>
      <if test="PROVISION_RETAIN_AMT_CV != null" >
        <choose >
          <when test="PROVISION_RETAIN_AMT_CV == emptyBigDecimalValue" >
            PROVISION_RETAIN_AMT_CV = NULL ,
          </when>
          <otherwise >
            PROVISION_RETAIN_AMT_CV = #{PROVISION_RETAIN_AMT_CV},
          </otherwise>
        </choose>
      </if>
      <if test="PROVISION_ADDITIONAL_AMT != null" >
        <choose >
          <when test="PROVISION_ADDITIONAL_AMT == emptyBigDecimalValue" >
            PROVISION_ADDITIONAL_AMT = NULL ,
          </when>
          <otherwise >
            PROVISION_ADDITIONAL_AMT = #{PROVISION_ADDITIONAL_AMT},
          </otherwise>
        </choose>
      </if>
      <if test="PROVISION_ADDITIONAL_AMT_CV != null" >
        <choose >
          <when test="PROVISION_ADDITIONAL_AMT_CV == emptyBigDecimalValue" >
            PROVISION_ADDITIONAL_AMT_CV = NULL ,
          </when>
          <otherwise >
            PROVISION_ADDITIONAL_AMT_CV = #{PROVISION_ADDITIONAL_AMT_CV},
          </otherwise>
        </choose>
      </if>
      <if test="SETTLEMENT_NBR != null" >
        <choose >
          <when test="SETTLEMENT_NBR == emptyBigDecimalValue" >
            SETTLEMENT_NBR = NULL ,
          </when>
          <otherwise >
            SETTLEMENT_NBR = #{SETTLEMENT_NBR},
          </otherwise>
        </choose>
      </if>
      <if test="REVERSAL_SETTLEMENT_NBR != null" >
        <choose >
          <when test="REVERSAL_SETTLEMENT_NBR == emptyBigDecimalValue" >
            REVERSAL_SETTLEMENT_NBR = NULL ,
          </when>
          <otherwise >
            REVERSAL_SETTLEMENT_NBR = #{REVERSAL_SETTLEMENT_NBR},
          </otherwise>
        </choose>
      </if>
      <if test="CREATED_FROM != null" >
        CREATED_FROM = #{CREATED_FROM},
      </if>
      <if test="RESCH_SPIIS_WRITE_BACK != null" >
        <choose >
          <when test="RESCH_SPIIS_WRITE_BACK == emptyBigDecimalValue" >
            RESCH_SPIIS_WRITE_BACK = NULL ,
          </when>
          <otherwise >
            RESCH_SPIIS_WRITE_BACK = #{RESCH_SPIIS_WRITE_BACK},
          </otherwise>
        </choose>
      </if>
      <if test="RESCH_IIS_WRITE_BACK != null" >
        <choose >
          <when test="RESCH_IIS_WRITE_BACK == emptyBigDecimalValue" >
            RESCH_IIS_WRITE_BACK = NULL ,
          </when>
          <otherwise >
            RESCH_IIS_WRITE_BACK = #{RESCH_IIS_WRITE_BACK},
          </otherwise>
        </choose>
      </if>
      <if test="REVERSE_PROCESS_DATE != null" >
        REVERSE_PROCESS_DATE = #{REVERSE_PROCESS_DATE},
      </if>
      <if test="DUE_DAYS != null" >
        <choose >
          <when test="DUE_DAYS == emptyBigDecimalValue" >
            DUE_DAYS = NULL ,
          </when>
          <otherwise >
            DUE_DAYS = #{DUE_DAYS},
          </otherwise>
        </choose>
      </if>
      <if test="AMEND_STATUS != null" >
        AMEND_STATUS = #{AMEND_STATUS},
      </if>
      <if test="AMEND_TRX_BRANCH != null" >
        <choose >
          <when test="AMEND_TRX_BRANCH == emptyBigDecimalValue" >
            AMEND_TRX_BRANCH = NULL ,
          </when>
          <otherwise >
            AMEND_TRX_BRANCH = #{AMEND_TRX_BRANCH},
          </otherwise>
        </choose>
      </if>
      <if test="AMEND_TRX_NO != null" >
        <choose >
          <when test="AMEND_TRX_NO == emptyBigDecimalValue" >
            AMEND_TRX_NO = NULL ,
          </when>
          <otherwise >
            AMEND_TRX_NO = #{AMEND_TRX_NO},
          </otherwise>
        </choose>
      </if>
      <if test="PROCESS_REF_NBR != null" >
        <choose >
          <when test="PROCESS_REF_NBR == emptyBigDecimalValue" >
            PROCESS_REF_NBR = NULL ,
          </when>
          <otherwise >
            PROCESS_REF_NBR = #{PROCESS_REF_NBR},
          </otherwise>
        </choose>
      </if>
    </set>
    where BRANCH_CODE = #{BRANCH_CODE}
      and COMP_CODE = #{COMP_CODE}
      and DEAL_NO = #{DEAL_NO}
      and INSTALLMENT_DATE = #{INSTALLMENT_DATE}
      and INSTALLMENT_NBR = #{INSTALLMENT_NBR}
      and PLAN_NBR = #{PLAN_NBR}
      and PLAN_SEQ = #{PLAN_SEQ}
      and PROCESS_NBR = #{PROCESS_NBR}
  </sql>
  <update id="updateTRS_PROVISION_PROCESS" parameterType="com.path.dbmaps.vo.TRS_PROVISION_PROCESSVO" >
    <include refid="sql_updateTRS_PROVISION_PROCESS" />
  </update>
</mapper>