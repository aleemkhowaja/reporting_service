<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TRSCIFLIMIT_CHARGES_DET" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.TRSCIFLIMIT_CHARGES_DETVO" >
    <id column="BRANCH_CODE" property="BRANCH_CODE" />
    <id column="CIF_NO" property="CIF_NO" />
    <id column="COMP_CODE" property="COMP_CODE" />
    <id column="LINE_NO" property="LINE_NO" />
    <id column="SL_NO" property="SL_NO" />
    <result column="CHARGE_LINK" property="CHARGE_LINK" />
    <result column="CHARGE_CODE" property="CHARGE_CODE" />
    <result column="ACC_BRANCH_CODE" property="ACC_BRANCH_CODE" />
    <result column="ACC_CY" property="ACC_CY" />
    <result column="ACC_GL" property="ACC_GL" />
    <result column="ACC_CIF" property="ACC_CIF" />
    <result column="ACC_SL" property="ACC_SL" />
    <result column="CHARGES_AMOUNT" property="CHARGES_AMOUNT" />
    <result column="ACCOUNT_POSTED_YN" property="ACCOUNT_POSTED_YN" />
    <result column="COLLATERAL_NO" property="COLLATERAL_NO" />
    <result column="GROUP_ID" property="GROUP_ID" />
    <result column="CHARGES_FOR" property="CHARGES_FOR" />
    <result column="CHARGES_REVERSED_AMOUNT" property="CHARGES_REVERSED_AMOUNT" />
  </resultMap>
  <sql id="Base_Column_List" >
    BRANCH_CODE, CIF_NO, COMP_CODE, LINE_NO, SL_NO, CHARGE_LINK, CHARGE_CODE, ACC_BRANCH_CODE, 
    ACC_CY, ACC_GL, ACC_CIF, ACC_SL, CHARGES_AMOUNT, ACCOUNT_POSTED_YN, COLLATERAL_NO, 
    GROUP_ID, CHARGES_FOR, CHARGES_REVERSED_AMOUNT
  </sql>
  <select id="selectTRSCIFLIMIT_CHARGES_DET" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.TRSCIFLIMIT_CHARGES_DETVOKey" >
    select 
    <include refid="Base_Column_List" />
    from TRSCIFLIMIT_CHARGES_DET
    where BRANCH_CODE = #{BRANCH_CODE}
      and CIF_NO = #{CIF_NO}
      and COMP_CODE = #{COMP_CODE}
      and LINE_NO = #{LINE_NO}
      and SL_NO = #{SL_NO}
  </select>
  <delete id="deleteTRSCIFLIMIT_CHARGES_DET" parameterType="com.path.dbmaps.vo.TRSCIFLIMIT_CHARGES_DETVOKey" >
    delete from TRSCIFLIMIT_CHARGES_DET
    where BRANCH_CODE = #{BRANCH_CODE}
      and CIF_NO = #{CIF_NO}
      and COMP_CODE = #{COMP_CODE}
      and LINE_NO = #{LINE_NO}
      and SL_NO = #{SL_NO}
  </delete>
  <insert id="insertTRSCIFLIMIT_CHARGES_DET" parameterType="com.path.dbmaps.vo.TRSCIFLIMIT_CHARGES_DETVO" >
    insert into TRSCIFLIMIT_CHARGES_DET
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        BRANCH_CODE,
      </if>
      <if test="CIF_NO != null and CIF_NO != emptyBigDecimalValue" >
        CIF_NO,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="LINE_NO != null and LINE_NO != emptyBigDecimalValue" >
        LINE_NO,
      </if>
      <if test="SL_NO != null and SL_NO != emptyBigDecimalValue" >
        SL_NO,
      </if>
      <if test="CHARGE_LINK != null and CHARGE_LINK != emptyBigDecimalValue" >
        CHARGE_LINK,
      </if>
      <if test="CHARGE_CODE != null and CHARGE_CODE != emptyBigDecimalValue" >
        CHARGE_CODE,
      </if>
      <if test="ACC_BRANCH_CODE != null and ACC_BRANCH_CODE != emptyBigDecimalValue" >
        ACC_BRANCH_CODE,
      </if>
      <if test="ACC_CY != null and ACC_CY != emptyBigDecimalValue" >
        ACC_CY,
      </if>
      <if test="ACC_GL != null and ACC_GL != emptyBigDecimalValue" >
        ACC_GL,
      </if>
      <if test="ACC_CIF != null and ACC_CIF != emptyBigDecimalValue" >
        ACC_CIF,
      </if>
      <if test="ACC_SL != null and ACC_SL != emptyBigDecimalValue" >
        ACC_SL,
      </if>
      <if test="CHARGES_AMOUNT != null and CHARGES_AMOUNT != emptyBigDecimalValue" >
        CHARGES_AMOUNT,
      </if>
      <if test="ACCOUNT_POSTED_YN != null" >
        ACCOUNT_POSTED_YN,
      </if>
      <if test="COLLATERAL_NO != null and COLLATERAL_NO != emptyBigDecimalValue" >
        COLLATERAL_NO,
      </if>
      <if test="GROUP_ID != null and GROUP_ID != emptyBigDecimalValue" >
        GROUP_ID,
      </if>
      <if test="CHARGES_FOR != null" >
        CHARGES_FOR,
      </if>
      <if test="CHARGES_REVERSED_AMOUNT != null and CHARGES_REVERSED_AMOUNT != emptyBigDecimalValue" >
        CHARGES_REVERSED_AMOUNT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        #{BRANCH_CODE},
      </if>
      <if test="CIF_NO != null and CIF_NO != emptyBigDecimalValue" >
        #{CIF_NO},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="LINE_NO != null and LINE_NO != emptyBigDecimalValue" >
        #{LINE_NO},
      </if>
      <if test="SL_NO != null and SL_NO != emptyBigDecimalValue" >
        #{SL_NO},
      </if>
      <if test="CHARGE_LINK != null and CHARGE_LINK != emptyBigDecimalValue" >
        #{CHARGE_LINK},
      </if>
      <if test="CHARGE_CODE != null and CHARGE_CODE != emptyBigDecimalValue" >
        #{CHARGE_CODE},
      </if>
      <if test="ACC_BRANCH_CODE != null and ACC_BRANCH_CODE != emptyBigDecimalValue" >
        #{ACC_BRANCH_CODE},
      </if>
      <if test="ACC_CY != null and ACC_CY != emptyBigDecimalValue" >
        #{ACC_CY},
      </if>
      <if test="ACC_GL != null and ACC_GL != emptyBigDecimalValue" >
        #{ACC_GL},
      </if>
      <if test="ACC_CIF != null and ACC_CIF != emptyBigDecimalValue" >
        #{ACC_CIF},
      </if>
      <if test="ACC_SL != null and ACC_SL != emptyBigDecimalValue" >
        #{ACC_SL},
      </if>
      <if test="CHARGES_AMOUNT != null and CHARGES_AMOUNT != emptyBigDecimalValue" >
        #{CHARGES_AMOUNT},
      </if>
      <if test="ACCOUNT_POSTED_YN != null" >
        #{ACCOUNT_POSTED_YN},
      </if>
      <if test="COLLATERAL_NO != null and COLLATERAL_NO != emptyBigDecimalValue" >
        #{COLLATERAL_NO},
      </if>
      <if test="GROUP_ID != null and GROUP_ID != emptyBigDecimalValue" >
        #{GROUP_ID},
      </if>
      <if test="CHARGES_FOR != null" >
        #{CHARGES_FOR},
      </if>
      <if test="CHARGES_REVERSED_AMOUNT != null and CHARGES_REVERSED_AMOUNT != emptyBigDecimalValue" >
        #{CHARGES_REVERSED_AMOUNT},
      </if>
    </trim>
  </insert>
  <sql id="sql_updateTRSCIFLIMIT_CHARGES_DET" >
    update TRSCIFLIMIT_CHARGES_DET
    <set >
      <if test="CHARGE_LINK != null" >
        <choose >
          <when test="CHARGE_LINK == emptyBigDecimalValue" >
            CHARGE_LINK = NULL ,
          </when>
          <otherwise >
            CHARGE_LINK = #{CHARGE_LINK},
          </otherwise>
        </choose>
      </if>
      <if test="CHARGE_CODE != null" >
        <choose >
          <when test="CHARGE_CODE == emptyBigDecimalValue" >
            CHARGE_CODE = NULL ,
          </when>
          <otherwise >
            CHARGE_CODE = #{CHARGE_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="ACC_BRANCH_CODE != null" >
        <choose >
          <when test="ACC_BRANCH_CODE == emptyBigDecimalValue" >
            ACC_BRANCH_CODE = NULL ,
          </when>
          <otherwise >
            ACC_BRANCH_CODE = #{ACC_BRANCH_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="ACC_CY != null" >
        <choose >
          <when test="ACC_CY == emptyBigDecimalValue" >
            ACC_CY = NULL ,
          </when>
          <otherwise >
            ACC_CY = #{ACC_CY},
          </otherwise>
        </choose>
      </if>
      <if test="ACC_GL != null" >
        <choose >
          <when test="ACC_GL == emptyBigDecimalValue" >
            ACC_GL = NULL ,
          </when>
          <otherwise >
            ACC_GL = #{ACC_GL},
          </otherwise>
        </choose>
      </if>
      <if test="ACC_CIF != null" >
        <choose >
          <when test="ACC_CIF == emptyBigDecimalValue" >
            ACC_CIF = NULL ,
          </when>
          <otherwise >
            ACC_CIF = #{ACC_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="ACC_SL != null" >
        <choose >
          <when test="ACC_SL == emptyBigDecimalValue" >
            ACC_SL = NULL ,
          </when>
          <otherwise >
            ACC_SL = #{ACC_SL},
          </otherwise>
        </choose>
      </if>
      <if test="CHARGES_AMOUNT != null" >
        <choose >
          <when test="CHARGES_AMOUNT == emptyBigDecimalValue" >
            CHARGES_AMOUNT = NULL ,
          </when>
          <otherwise >
            CHARGES_AMOUNT = #{CHARGES_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="ACCOUNT_POSTED_YN != null" >
        ACCOUNT_POSTED_YN = #{ACCOUNT_POSTED_YN},
      </if>
      <if test="COLLATERAL_NO != null" >
        <choose >
          <when test="COLLATERAL_NO == emptyBigDecimalValue" >
            COLLATERAL_NO = NULL ,
          </when>
          <otherwise >
            COLLATERAL_NO = #{COLLATERAL_NO},
          </otherwise>
        </choose>
      </if>
      <if test="GROUP_ID != null" >
        <choose >
          <when test="GROUP_ID == emptyBigDecimalValue" >
            GROUP_ID = NULL ,
          </when>
          <otherwise >
            GROUP_ID = #{GROUP_ID},
          </otherwise>
        </choose>
      </if>
      <if test="CHARGES_FOR != null" >
        CHARGES_FOR = #{CHARGES_FOR},
      </if>
      <if test="CHARGES_REVERSED_AMOUNT != null" >
        <choose >
          <when test="CHARGES_REVERSED_AMOUNT == emptyBigDecimalValue" >
            CHARGES_REVERSED_AMOUNT = NULL ,
          </when>
          <otherwise >
            CHARGES_REVERSED_AMOUNT = #{CHARGES_REVERSED_AMOUNT},
          </otherwise>
        </choose>
      </if>
    </set>
    where BRANCH_CODE = #{BRANCH_CODE}
      and CIF_NO = #{CIF_NO}
      and COMP_CODE = #{COMP_CODE}
      and LINE_NO = #{LINE_NO}
      and SL_NO = #{SL_NO}
  </sql>
  <update id="updateTRSCIFLIMIT_CHARGES_DET" parameterType="com.path.dbmaps.vo.TRSCIFLIMIT_CHARGES_DETVO" >
    <include refid="sql_updateTRSCIFLIMIT_CHARGES_DET" />
  </update>
</mapper>