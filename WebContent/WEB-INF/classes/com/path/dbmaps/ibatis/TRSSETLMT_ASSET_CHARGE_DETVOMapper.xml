<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TRSSETLMT_ASSET_CHARGE_DET" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.TRSSETLMT_ASSET_CHARGE_DETVO" >
    <id column="BRANCH" property="BRANCH" />
    <id column="CHARGE_CODE" property="CHARGE_CODE" />
    <id column="COMP_CODE" property="COMP_CODE" />
    <id column="LINE_NO" property="LINE_NO" />
    <id column="SETTLEMENT_NBR" property="SETTLEMENT_NBR" />
    <result column="CREDIT_ACC_BR" property="CREDIT_ACC_BR" />
    <result column="CREDIT_ACC_CY" property="CREDIT_ACC_CY" />
    <result column="CREDIT_ACC_GL" property="CREDIT_ACC_GL" />
    <result column="CREDIT_ACC_CIF" property="CREDIT_ACC_CIF" />
    <result column="CREDIT_ACC_SL" property="CREDIT_ACC_SL" />
    <result column="CHARGES_MULTDIV" property="CHARGES_MULTDIV" />
    <result column="EXCH_RATE" property="EXCH_RATE" />
    <result column="DEAL_CY_AMT" property="DEAL_CY_AMT" />
    <result column="CHARGE_CY_AMT" property="CHARGE_CY_AMT" />
    <result column="BASE_CY_AMT" property="BASE_CY_AMT" />
    <result column="VAT_CODE" property="VAT_CODE" />
    <result column="VAT_DEAL_CY_AMT" property="VAT_DEAL_CY_AMT" />
    <result column="VAT_CHARGE_CY_AMT" property="VAT_CHARGE_CY_AMT" />
    <result column="VAT_BASE_CY_AMT" property="VAT_BASE_CY_AMT" />
  </resultMap>
  <sql id="Base_Column_List" >
    BRANCH, CHARGE_CODE, COMP_CODE, LINE_NO, SETTLEMENT_NBR, CREDIT_ACC_BR, CREDIT_ACC_CY, 
    CREDIT_ACC_GL, CREDIT_ACC_CIF, CREDIT_ACC_SL, CHARGES_MULTDIV, EXCH_RATE, DEAL_CY_AMT, 
    CHARGE_CY_AMT, BASE_CY_AMT, VAT_CODE, VAT_DEAL_CY_AMT, VAT_CHARGE_CY_AMT, VAT_BASE_CY_AMT
  </sql>
  <select id="selectTRSSETLMT_ASSET_CHARGE_DET" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.TRSSETLMT_ASSET_CHARGE_DETVOKey" >
    select 
    <include refid="Base_Column_List" />
    from TRSSETLMT_ASSET_CHARGE_DET
    where BRANCH = #{BRANCH}
      and CHARGE_CODE = #{CHARGE_CODE}
      and COMP_CODE = #{COMP_CODE}
      and LINE_NO = #{LINE_NO}
      and SETTLEMENT_NBR = #{SETTLEMENT_NBR}
  </select>
  <delete id="deleteTRSSETLMT_ASSET_CHARGE_DET" parameterType="com.path.dbmaps.vo.TRSSETLMT_ASSET_CHARGE_DETVOKey" >
    delete from TRSSETLMT_ASSET_CHARGE_DET
    where BRANCH = #{BRANCH}
      and CHARGE_CODE = #{CHARGE_CODE}
      and COMP_CODE = #{COMP_CODE}
      and LINE_NO = #{LINE_NO}
      and SETTLEMENT_NBR = #{SETTLEMENT_NBR}
  </delete>
  <insert id="insertTRSSETLMT_ASSET_CHARGE_DET" parameterType="com.path.dbmaps.vo.TRSSETLMT_ASSET_CHARGE_DETVO" >
    insert into TRSSETLMT_ASSET_CHARGE_DET
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="BRANCH != null and BRANCH != emptyBigDecimalValue" >
        BRANCH,
      </if>
      <if test="CHARGE_CODE != null and CHARGE_CODE != emptyBigDecimalValue" >
        CHARGE_CODE,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="LINE_NO != null and LINE_NO != emptyBigDecimalValue" >
        LINE_NO,
      </if>
      <if test="SETTLEMENT_NBR != null and SETTLEMENT_NBR != emptyBigDecimalValue" >
        SETTLEMENT_NBR,
      </if>
      <if test="CREDIT_ACC_BR != null and CREDIT_ACC_BR != emptyBigDecimalValue" >
        CREDIT_ACC_BR,
      </if>
      <if test="CREDIT_ACC_CY != null and CREDIT_ACC_CY != emptyBigDecimalValue" >
        CREDIT_ACC_CY,
      </if>
      <if test="CREDIT_ACC_GL != null and CREDIT_ACC_GL != emptyBigDecimalValue" >
        CREDIT_ACC_GL,
      </if>
      <if test="CREDIT_ACC_CIF != null and CREDIT_ACC_CIF != emptyBigDecimalValue" >
        CREDIT_ACC_CIF,
      </if>
      <if test="CREDIT_ACC_SL != null and CREDIT_ACC_SL != emptyBigDecimalValue" >
        CREDIT_ACC_SL,
      </if>
      <if test="CHARGES_MULTDIV != null and !&quot;&quot;.equals(CHARGES_MULTDIV)" >
        CHARGES_MULTDIV,
      </if>
      <if test="EXCH_RATE != null and EXCH_RATE != emptyBigDecimalValue" >
        EXCH_RATE,
      </if>
      <if test="DEAL_CY_AMT != null and DEAL_CY_AMT != emptyBigDecimalValue" >
        DEAL_CY_AMT,
      </if>
      <if test="CHARGE_CY_AMT != null and CHARGE_CY_AMT != emptyBigDecimalValue" >
        CHARGE_CY_AMT,
      </if>
      <if test="BASE_CY_AMT != null and BASE_CY_AMT != emptyBigDecimalValue" >
        BASE_CY_AMT,
      </if>
      <if test="VAT_CODE != null and VAT_CODE != emptyBigDecimalValue" >
        VAT_CODE,
      </if>
      <if test="VAT_DEAL_CY_AMT != null and VAT_DEAL_CY_AMT != emptyBigDecimalValue" >
        VAT_DEAL_CY_AMT,
      </if>
      <if test="VAT_CHARGE_CY_AMT != null and VAT_CHARGE_CY_AMT != emptyBigDecimalValue" >
        VAT_CHARGE_CY_AMT,
      </if>
      <if test="VAT_BASE_CY_AMT != null and VAT_BASE_CY_AMT != emptyBigDecimalValue" >
        VAT_BASE_CY_AMT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="BRANCH != null and BRANCH != emptyBigDecimalValue" >
        #{BRANCH},
      </if>
      <if test="CHARGE_CODE != null and CHARGE_CODE != emptyBigDecimalValue" >
        #{CHARGE_CODE},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="LINE_NO != null and LINE_NO != emptyBigDecimalValue" >
        #{LINE_NO},
      </if>
      <if test="SETTLEMENT_NBR != null and SETTLEMENT_NBR != emptyBigDecimalValue" >
        #{SETTLEMENT_NBR},
      </if>
      <if test="CREDIT_ACC_BR != null and CREDIT_ACC_BR != emptyBigDecimalValue" >
        #{CREDIT_ACC_BR},
      </if>
      <if test="CREDIT_ACC_CY != null and CREDIT_ACC_CY != emptyBigDecimalValue" >
        #{CREDIT_ACC_CY},
      </if>
      <if test="CREDIT_ACC_GL != null and CREDIT_ACC_GL != emptyBigDecimalValue" >
        #{CREDIT_ACC_GL},
      </if>
      <if test="CREDIT_ACC_CIF != null and CREDIT_ACC_CIF != emptyBigDecimalValue" >
        #{CREDIT_ACC_CIF},
      </if>
      <if test="CREDIT_ACC_SL != null and CREDIT_ACC_SL != emptyBigDecimalValue" >
        #{CREDIT_ACC_SL},
      </if>
      <if test="CHARGES_MULTDIV != null and !&quot;&quot;.equals(CHARGES_MULTDIV)" >
        #{CHARGES_MULTDIV},
      </if>
      <if test="EXCH_RATE != null and EXCH_RATE != emptyBigDecimalValue" >
        #{EXCH_RATE},
      </if>
      <if test="DEAL_CY_AMT != null and DEAL_CY_AMT != emptyBigDecimalValue" >
        #{DEAL_CY_AMT},
      </if>
      <if test="CHARGE_CY_AMT != null and CHARGE_CY_AMT != emptyBigDecimalValue" >
        #{CHARGE_CY_AMT},
      </if>
      <if test="BASE_CY_AMT != null and BASE_CY_AMT != emptyBigDecimalValue" >
        #{BASE_CY_AMT},
      </if>
      <if test="VAT_CODE != null and VAT_CODE != emptyBigDecimalValue" >
        #{VAT_CODE},
      </if>
      <if test="VAT_DEAL_CY_AMT != null and VAT_DEAL_CY_AMT != emptyBigDecimalValue" >
        #{VAT_DEAL_CY_AMT},
      </if>
      <if test="VAT_CHARGE_CY_AMT != null and VAT_CHARGE_CY_AMT != emptyBigDecimalValue" >
        #{VAT_CHARGE_CY_AMT},
      </if>
      <if test="VAT_BASE_CY_AMT != null and VAT_BASE_CY_AMT != emptyBigDecimalValue" >
        #{VAT_BASE_CY_AMT},
      </if>
    </trim>
  </insert>
  <sql id="sql_updateTRSSETLMT_ASSET_CHARGE_DET" >
    update TRSSETLMT_ASSET_CHARGE_DET
    <set >
      <if test="CREDIT_ACC_BR != null" >
        <choose >
          <when test="CREDIT_ACC_BR == emptyBigDecimalValue" >
            CREDIT_ACC_BR = NULL ,
          </when>
          <otherwise >
            CREDIT_ACC_BR = #{CREDIT_ACC_BR},
          </otherwise>
        </choose>
      </if>
      <if test="CREDIT_ACC_CY != null" >
        <choose >
          <when test="CREDIT_ACC_CY == emptyBigDecimalValue" >
            CREDIT_ACC_CY = NULL ,
          </when>
          <otherwise >
            CREDIT_ACC_CY = #{CREDIT_ACC_CY},
          </otherwise>
        </choose>
      </if>
      <if test="CREDIT_ACC_GL != null" >
        <choose >
          <when test="CREDIT_ACC_GL == emptyBigDecimalValue" >
            CREDIT_ACC_GL = NULL ,
          </when>
          <otherwise >
            CREDIT_ACC_GL = #{CREDIT_ACC_GL},
          </otherwise>
        </choose>
      </if>
      <if test="CREDIT_ACC_CIF != null" >
        <choose >
          <when test="CREDIT_ACC_CIF == emptyBigDecimalValue" >
            CREDIT_ACC_CIF = NULL ,
          </when>
          <otherwise >
            CREDIT_ACC_CIF = #{CREDIT_ACC_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="CREDIT_ACC_SL != null" >
        <choose >
          <when test="CREDIT_ACC_SL == emptyBigDecimalValue" >
            CREDIT_ACC_SL = NULL ,
          </when>
          <otherwise >
            CREDIT_ACC_SL = #{CREDIT_ACC_SL},
          </otherwise>
        </choose>
      </if>
      <if test="CHARGES_MULTDIV != null" >
        <choose >
          <when test="CHARGES_MULTDIV.equals(&quot;&quot;)" >
            CHARGES_MULTDIV = NULL ,
          </when>
          <otherwise >
            CHARGES_MULTDIV = #{CHARGES_MULTDIV},
          </otherwise>
        </choose>
      </if>
      <if test="EXCH_RATE != null" >
        <choose >
          <when test="EXCH_RATE == emptyBigDecimalValue" >
            EXCH_RATE = NULL ,
          </when>
          <otherwise >
            EXCH_RATE = #{EXCH_RATE},
          </otherwise>
        </choose>
      </if>
      <if test="DEAL_CY_AMT != null" >
        <choose >
          <when test="DEAL_CY_AMT == emptyBigDecimalValue" >
            DEAL_CY_AMT = NULL ,
          </when>
          <otherwise >
            DEAL_CY_AMT = #{DEAL_CY_AMT},
          </otherwise>
        </choose>
      </if>
      <if test="CHARGE_CY_AMT != null" >
        <choose >
          <when test="CHARGE_CY_AMT == emptyBigDecimalValue" >
            CHARGE_CY_AMT = NULL ,
          </when>
          <otherwise >
            CHARGE_CY_AMT = #{CHARGE_CY_AMT},
          </otherwise>
        </choose>
      </if>
      <if test="BASE_CY_AMT != null" >
        <choose >
          <when test="BASE_CY_AMT == emptyBigDecimalValue" >
            BASE_CY_AMT = NULL ,
          </when>
          <otherwise >
            BASE_CY_AMT = #{BASE_CY_AMT},
          </otherwise>
        </choose>
      </if>
      <if test="VAT_CODE != null" >
        <choose >
          <when test="VAT_CODE == emptyBigDecimalValue" >
            VAT_CODE = NULL ,
          </when>
          <otherwise >
            VAT_CODE = #{VAT_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="VAT_DEAL_CY_AMT != null" >
        <choose >
          <when test="VAT_DEAL_CY_AMT == emptyBigDecimalValue" >
            VAT_DEAL_CY_AMT = NULL ,
          </when>
          <otherwise >
            VAT_DEAL_CY_AMT = #{VAT_DEAL_CY_AMT},
          </otherwise>
        </choose>
      </if>
      <if test="VAT_CHARGE_CY_AMT != null" >
        <choose >
          <when test="VAT_CHARGE_CY_AMT == emptyBigDecimalValue" >
            VAT_CHARGE_CY_AMT = NULL ,
          </when>
          <otherwise >
            VAT_CHARGE_CY_AMT = #{VAT_CHARGE_CY_AMT},
          </otherwise>
        </choose>
      </if>
      <if test="VAT_BASE_CY_AMT != null" >
        <choose >
          <when test="VAT_BASE_CY_AMT == emptyBigDecimalValue" >
            VAT_BASE_CY_AMT = NULL ,
          </when>
          <otherwise >
            VAT_BASE_CY_AMT = #{VAT_BASE_CY_AMT},
          </otherwise>
        </choose>
      </if>
    </set>
    where BRANCH = #{BRANCH}
      and CHARGE_CODE = #{CHARGE_CODE}
      and COMP_CODE = #{COMP_CODE}
      and LINE_NO = #{LINE_NO}
      and SETTLEMENT_NBR = #{SETTLEMENT_NBR}
  </sql>
  <update id="updateTRSSETLMT_ASSET_CHARGE_DET" parameterType="com.path.dbmaps.vo.TRSSETLMT_ASSET_CHARGE_DETVO" >
    <include refid="sql_updateTRSSETLMT_ASSET_CHARGE_DET" />
  </update>
</mapper>