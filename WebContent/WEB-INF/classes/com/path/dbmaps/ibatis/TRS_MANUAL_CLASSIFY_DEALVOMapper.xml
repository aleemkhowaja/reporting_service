<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TRS_MANUAL_CLASSIFY_DEAL" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.TRS_MANUAL_CLASSIFY_DEALVO" >
    <id column="BRANCH_CODE" property="BRANCH_CODE" />
    <id column="COMP_CODE" property="COMP_CODE" />
    <id column="LINE_NO" property="LINE_NO" />
    <id column="TRS_NO" property="TRS_NO" />
    <result column="DEAL_BRANCH" property="DEAL_BRANCH" />
    <result column="DEAL_NO" property="DEAL_NO" />
    <result column="OUTSTANDING_PRINCIPAL" property="OUTSTANDING_PRINCIPAL" />
    <result column="OUTSTANDING_PRINCIPAL_CV" property="OUTSTANDING_PRINCIPAL_CV" />
    <result column="OUTSTANDING_PROFIT" property="OUTSTANDING_PROFIT" />
    <result column="OUTSTANDING_PROFIT_CV" property="OUTSTANDING_PROFIT_CV" />
    <result column="PAST_DUE_AMOUNT" property="PAST_DUE_AMOUNT" />
    <result column="EXCESS_SETTLED_PROFIT" property="EXCESS_SETTLED_PROFIT" />
    <result column="ACCRUED_PFT_AFTER_AS_OF_DATE" property="ACCRUED_PFT_AFTER_AS_OF_DATE" />
    <result column="UNEARNED_INCOME" property="UNEARNED_INCOME" />
    <result column="PLAN_NBR" property="PLAN_NBR" />
    <result column="PLAN_SEQ" property="PLAN_SEQ" />
    <result column="PLAN_SEQ_NEW" property="PLAN_SEQ_NEW" />
    <result column="SELECT_YN" property="SELECT_YN" />
    <result column="CTS_TRS_NO" property="CTS_TRS_NO" />
    <result column="OUTSTANDING_CHARGE_AMT" property="OUTSTANDING_CHARGE_AMT" />
  </resultMap>
  <sql id="Base_Column_List" >
    BRANCH_CODE, COMP_CODE, LINE_NO, TRS_NO, DEAL_BRANCH, DEAL_NO, OUTSTANDING_PRINCIPAL, 
    OUTSTANDING_PRINCIPAL_CV, OUTSTANDING_PROFIT, OUTSTANDING_PROFIT_CV, PAST_DUE_AMOUNT, 
    EXCESS_SETTLED_PROFIT, ACCRUED_PFT_AFTER_AS_OF_DATE, UNEARNED_INCOME, PLAN_NBR, PLAN_SEQ, 
    PLAN_SEQ_NEW, SELECT_YN, CTS_TRS_NO, OUTSTANDING_CHARGE_AMT
  </sql>
  <select id="selectTRS_MANUAL_CLASSIFY_DEAL" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.TRS_MANUAL_CLASSIFY_DEALVOKey" >
    select 
    <include refid="Base_Column_List" />
    from TRS_MANUAL_CLASSIFY_DEAL
    where BRANCH_CODE = #{BRANCH_CODE}
      and COMP_CODE = #{COMP_CODE}
      and LINE_NO = #{LINE_NO}
      and TRS_NO = #{TRS_NO}
  </select>
  <delete id="deleteTRS_MANUAL_CLASSIFY_DEAL" parameterType="com.path.dbmaps.vo.TRS_MANUAL_CLASSIFY_DEALVOKey" >
    delete from TRS_MANUAL_CLASSIFY_DEAL
    where BRANCH_CODE = #{BRANCH_CODE}
      and COMP_CODE = #{COMP_CODE}
      and LINE_NO = #{LINE_NO}
      and TRS_NO = #{TRS_NO}
  </delete>
  <insert id="insertTRS_MANUAL_CLASSIFY_DEAL" parameterType="com.path.dbmaps.vo.TRS_MANUAL_CLASSIFY_DEALVO" >
    insert into TRS_MANUAL_CLASSIFY_DEAL
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        BRANCH_CODE,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="LINE_NO != null and LINE_NO != emptyBigDecimalValue" >
        LINE_NO,
      </if>
      <if test="TRS_NO != null and TRS_NO != emptyBigDecimalValue" >
        TRS_NO,
      </if>
      <if test="DEAL_BRANCH != null and DEAL_BRANCH != emptyBigDecimalValue" >
        DEAL_BRANCH,
      </if>
      <if test="DEAL_NO != null and DEAL_NO != emptyBigDecimalValue" >
        DEAL_NO,
      </if>
      <if test="OUTSTANDING_PRINCIPAL != null and OUTSTANDING_PRINCIPAL != emptyBigDecimalValue" >
        OUTSTANDING_PRINCIPAL,
      </if>
      <if test="OUTSTANDING_PRINCIPAL_CV != null and OUTSTANDING_PRINCIPAL_CV != emptyBigDecimalValue" >
        OUTSTANDING_PRINCIPAL_CV,
      </if>
      <if test="OUTSTANDING_PROFIT != null and OUTSTANDING_PROFIT != emptyBigDecimalValue" >
        OUTSTANDING_PROFIT,
      </if>
      <if test="OUTSTANDING_PROFIT_CV != null and OUTSTANDING_PROFIT_CV != emptyBigDecimalValue" >
        OUTSTANDING_PROFIT_CV,
      </if>
      <if test="PAST_DUE_AMOUNT != null and PAST_DUE_AMOUNT != emptyBigDecimalValue" >
        PAST_DUE_AMOUNT,
      </if>
      <if test="EXCESS_SETTLED_PROFIT != null and EXCESS_SETTLED_PROFIT != emptyBigDecimalValue" >
        EXCESS_SETTLED_PROFIT,
      </if>
      <if test="ACCRUED_PFT_AFTER_AS_OF_DATE != null and ACCRUED_PFT_AFTER_AS_OF_DATE != emptyBigDecimalValue" >
        ACCRUED_PFT_AFTER_AS_OF_DATE,
      </if>
      <if test="UNEARNED_INCOME != null and UNEARNED_INCOME != emptyBigDecimalValue" >
        UNEARNED_INCOME,
      </if>
      <if test="PLAN_NBR != null and PLAN_NBR != emptyBigDecimalValue" >
        PLAN_NBR,
      </if>
      <if test="PLAN_SEQ != null and PLAN_SEQ != emptyBigDecimalValue" >
        PLAN_SEQ,
      </if>
      <if test="PLAN_SEQ_NEW != null and PLAN_SEQ_NEW != emptyBigDecimalValue" >
        PLAN_SEQ_NEW,
      </if>
      <if test="SELECT_YN != null" >
        SELECT_YN,
      </if>
      <if test="CTS_TRS_NO != null and CTS_TRS_NO != emptyBigDecimalValue" >
        CTS_TRS_NO,
      </if>
      <if test="OUTSTANDING_CHARGE_AMT != null and OUTSTANDING_CHARGE_AMT != emptyBigDecimalValue" >
        OUTSTANDING_CHARGE_AMT,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        #{BRANCH_CODE},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="LINE_NO != null and LINE_NO != emptyBigDecimalValue" >
        #{LINE_NO},
      </if>
      <if test="TRS_NO != null and TRS_NO != emptyBigDecimalValue" >
        #{TRS_NO},
      </if>
      <if test="DEAL_BRANCH != null and DEAL_BRANCH != emptyBigDecimalValue" >
        #{DEAL_BRANCH},
      </if>
      <if test="DEAL_NO != null and DEAL_NO != emptyBigDecimalValue" >
        #{DEAL_NO},
      </if>
      <if test="OUTSTANDING_PRINCIPAL != null and OUTSTANDING_PRINCIPAL != emptyBigDecimalValue" >
        #{OUTSTANDING_PRINCIPAL},
      </if>
      <if test="OUTSTANDING_PRINCIPAL_CV != null and OUTSTANDING_PRINCIPAL_CV != emptyBigDecimalValue" >
        #{OUTSTANDING_PRINCIPAL_CV},
      </if>
      <if test="OUTSTANDING_PROFIT != null and OUTSTANDING_PROFIT != emptyBigDecimalValue" >
        #{OUTSTANDING_PROFIT},
      </if>
      <if test="OUTSTANDING_PROFIT_CV != null and OUTSTANDING_PROFIT_CV != emptyBigDecimalValue" >
        #{OUTSTANDING_PROFIT_CV},
      </if>
      <if test="PAST_DUE_AMOUNT != null and PAST_DUE_AMOUNT != emptyBigDecimalValue" >
        #{PAST_DUE_AMOUNT},
      </if>
      <if test="EXCESS_SETTLED_PROFIT != null and EXCESS_SETTLED_PROFIT != emptyBigDecimalValue" >
        #{EXCESS_SETTLED_PROFIT},
      </if>
      <if test="ACCRUED_PFT_AFTER_AS_OF_DATE != null and ACCRUED_PFT_AFTER_AS_OF_DATE != emptyBigDecimalValue" >
        #{ACCRUED_PFT_AFTER_AS_OF_DATE},
      </if>
      <if test="UNEARNED_INCOME != null and UNEARNED_INCOME != emptyBigDecimalValue" >
        #{UNEARNED_INCOME},
      </if>
      <if test="PLAN_NBR != null and PLAN_NBR != emptyBigDecimalValue" >
        #{PLAN_NBR},
      </if>
      <if test="PLAN_SEQ != null and PLAN_SEQ != emptyBigDecimalValue" >
        #{PLAN_SEQ},
      </if>
      <if test="PLAN_SEQ_NEW != null and PLAN_SEQ_NEW != emptyBigDecimalValue" >
        #{PLAN_SEQ_NEW},
      </if>
      <if test="SELECT_YN != null" >
        #{SELECT_YN},
      </if>
      <if test="CTS_TRS_NO != null and CTS_TRS_NO != emptyBigDecimalValue" >
        #{CTS_TRS_NO},
      </if>
      <if test="OUTSTANDING_CHARGE_AMT != null and OUTSTANDING_CHARGE_AMT != emptyBigDecimalValue" >
        #{OUTSTANDING_CHARGE_AMT},
      </if>
    </trim>
  </insert>
  <sql id="sql_updateTRS_MANUAL_CLASSIFY_DEAL" >
    update TRS_MANUAL_CLASSIFY_DEAL
    <set >
      <if test="DEAL_BRANCH != null" >
        <choose >
          <when test="DEAL_BRANCH == emptyBigDecimalValue" >
            DEAL_BRANCH = NULL ,
          </when>
          <otherwise >
            DEAL_BRANCH = #{DEAL_BRANCH},
          </otherwise>
        </choose>
      </if>
      <if test="DEAL_NO != null" >
        <choose >
          <when test="DEAL_NO == emptyBigDecimalValue" >
            DEAL_NO = NULL ,
          </when>
          <otherwise >
            DEAL_NO = #{DEAL_NO},
          </otherwise>
        </choose>
      </if>
      <if test="OUTSTANDING_PRINCIPAL != null" >
        <choose >
          <when test="OUTSTANDING_PRINCIPAL == emptyBigDecimalValue" >
            OUTSTANDING_PRINCIPAL = NULL ,
          </when>
          <otherwise >
            OUTSTANDING_PRINCIPAL = #{OUTSTANDING_PRINCIPAL},
          </otherwise>
        </choose>
      </if>
      <if test="OUTSTANDING_PRINCIPAL_CV != null" >
        <choose >
          <when test="OUTSTANDING_PRINCIPAL_CV == emptyBigDecimalValue" >
            OUTSTANDING_PRINCIPAL_CV = NULL ,
          </when>
          <otherwise >
            OUTSTANDING_PRINCIPAL_CV = #{OUTSTANDING_PRINCIPAL_CV},
          </otherwise>
        </choose>
      </if>
      <if test="OUTSTANDING_PROFIT != null" >
        <choose >
          <when test="OUTSTANDING_PROFIT == emptyBigDecimalValue" >
            OUTSTANDING_PROFIT = NULL ,
          </when>
          <otherwise >
            OUTSTANDING_PROFIT = #{OUTSTANDING_PROFIT},
          </otherwise>
        </choose>
      </if>
      <if test="OUTSTANDING_PROFIT_CV != null" >
        <choose >
          <when test="OUTSTANDING_PROFIT_CV == emptyBigDecimalValue" >
            OUTSTANDING_PROFIT_CV = NULL ,
          </when>
          <otherwise >
            OUTSTANDING_PROFIT_CV = #{OUTSTANDING_PROFIT_CV},
          </otherwise>
        </choose>
      </if>
      <if test="PAST_DUE_AMOUNT != null" >
        <choose >
          <when test="PAST_DUE_AMOUNT == emptyBigDecimalValue" >
            PAST_DUE_AMOUNT = NULL ,
          </when>
          <otherwise >
            PAST_DUE_AMOUNT = #{PAST_DUE_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="EXCESS_SETTLED_PROFIT != null" >
        <choose >
          <when test="EXCESS_SETTLED_PROFIT == emptyBigDecimalValue" >
            EXCESS_SETTLED_PROFIT = NULL ,
          </when>
          <otherwise >
            EXCESS_SETTLED_PROFIT = #{EXCESS_SETTLED_PROFIT},
          </otherwise>
        </choose>
      </if>
      <if test="ACCRUED_PFT_AFTER_AS_OF_DATE != null" >
        <choose >
          <when test="ACCRUED_PFT_AFTER_AS_OF_DATE == emptyBigDecimalValue" >
            ACCRUED_PFT_AFTER_AS_OF_DATE = NULL ,
          </when>
          <otherwise >
            ACCRUED_PFT_AFTER_AS_OF_DATE = #{ACCRUED_PFT_AFTER_AS_OF_DATE},
          </otherwise>
        </choose>
      </if>
      <if test="UNEARNED_INCOME != null" >
        <choose >
          <when test="UNEARNED_INCOME == emptyBigDecimalValue" >
            UNEARNED_INCOME = NULL ,
          </when>
          <otherwise >
            UNEARNED_INCOME = #{UNEARNED_INCOME},
          </otherwise>
        </choose>
      </if>
      <if test="PLAN_NBR != null" >
        <choose >
          <when test="PLAN_NBR == emptyBigDecimalValue" >
            PLAN_NBR = NULL ,
          </when>
          <otherwise >
            PLAN_NBR = #{PLAN_NBR},
          </otherwise>
        </choose>
      </if>
      <if test="PLAN_SEQ != null" >
        <choose >
          <when test="PLAN_SEQ == emptyBigDecimalValue" >
            PLAN_SEQ = NULL ,
          </when>
          <otherwise >
            PLAN_SEQ = #{PLAN_SEQ},
          </otherwise>
        </choose>
      </if>
      <if test="PLAN_SEQ_NEW != null" >
        <choose >
          <when test="PLAN_SEQ_NEW == emptyBigDecimalValue" >
            PLAN_SEQ_NEW = NULL ,
          </when>
          <otherwise >
            PLAN_SEQ_NEW = #{PLAN_SEQ_NEW},
          </otherwise>
        </choose>
      </if>
      <if test="SELECT_YN != null" >
        SELECT_YN = #{SELECT_YN},
      </if>
      <if test="CTS_TRS_NO != null" >
        <choose >
          <when test="CTS_TRS_NO == emptyBigDecimalValue" >
            CTS_TRS_NO = NULL ,
          </when>
          <otherwise >
            CTS_TRS_NO = #{CTS_TRS_NO},
          </otherwise>
        </choose>
      </if>
      <if test="OUTSTANDING_CHARGE_AMT != null" >
        <choose >
          <when test="OUTSTANDING_CHARGE_AMT == emptyBigDecimalValue" >
            OUTSTANDING_CHARGE_AMT = NULL ,
          </when>
          <otherwise >
            OUTSTANDING_CHARGE_AMT = #{OUTSTANDING_CHARGE_AMT},
          </otherwise>
        </choose>
      </if>
    </set>
    where BRANCH_CODE = #{BRANCH_CODE}
      and COMP_CODE = #{COMP_CODE}
      and LINE_NO = #{LINE_NO}
      and TRS_NO = #{TRS_NO}
  </sql>
  <update id="updateTRS_MANUAL_CLASSIFY_DEAL" parameterType="com.path.dbmaps.vo.TRS_MANUAL_CLASSIFY_DEALVO" >
    <include refid="sql_updateTRS_MANUAL_CLASSIFY_DEAL" />
  </update>
</mapper>