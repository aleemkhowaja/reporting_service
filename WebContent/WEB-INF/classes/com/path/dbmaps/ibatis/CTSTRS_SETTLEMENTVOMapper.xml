<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="CTSTRS_SETTLEMENT" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.CTSTRS_SETTLEMENTVO" >
    <id column="BRANCH_CODE" property="BRANCH_CODE" />
    <id column="CB_IND" property="CB_IND" />
    <id column="CIF_LINE" property="CIF_LINE" />
    <id column="COMP_CODE" property="COMP_CODE" />
    <id column="LINE_NO" property="LINE_NO" />
    <id column="TRS_NO" property="TRS_NO" />
    <id column="TRS_TYPE" property="TRS_TYPE" />
    <result column="CIF_NO" property="CIF_NO" />
    <result column="ID_NO" property="ID_NO" />
    <result column="DEAL_NO" property="DEAL_NO" />
    <result column="SETTLEMENT_NO" property="SETTLEMENT_NO" />
    <result column="SELECTED_DEAL" property="SELECTED_DEAL" />
    <result column="CUSTOME_DEAL_NO" property="CUSTOME_DEAL_NO" />
    <result column="VALUE_DATE" property="VALUE_DATE" />
    <result column="MATURITY_DATE" property="MATURITY_DATE" />
    <result column="DEAL_CY" property="DEAL_CY" />
    <result column="PRINCIPAL_AMOUNT" property="PRINCIPAL_AMOUNT" />
    <result column="PROFIT_AMOUNT" property="PROFIT_AMOUNT" />
    <result column="MATURITY_AMOUNT" property="MATURITY_AMOUNT" />
    <result column="OUTSTANDING_AMOUNT" property="OUTSTANDING_AMOUNT" />
    <result column="PRODUCT_CLASS" property="PRODUCT_CLASS" />
    <result column="PRODUCT_CLASS_DESCRIPTION" property="PRODUCT_CLASS_DESCRIPTION" />
    <result column="ACC_ADDITIONAL_REF" property="ACC_ADDITIONAL_REF" />
    <result column="OUTSTANDING_AMOUNT_CV" property="OUTSTANDING_AMOUNT_CV" />
    <result column="PASTDUE_AMOUNT" property="PASTDUE_AMOUNT" />
    <result column="DEAL_STATUS" property="DEAL_STATUS" />
    <result column="LAST_PAY_DATE" property="LAST_PAY_DATE" />
    <result column="FIRST_PAY_DATE" property="FIRST_PAY_DATE" />
    <result column="NO_OF_PAYMENT" property="NO_OF_PAYMENT" />
    <result column="INST_AMOUNT" property="INST_AMOUNT" />
    <result column="PAST_DUE_DATE" property="PAST_DUE_DATE" />
    <result column="OWINGS" property="OWINGS" />
    <result column="LPC" property="LPC" />
    <result column="SD_IN_ARREAR" property="SD_IN_ARREAR" />
    <result column="TOTAL_AMOUNT" property="TOTAL_AMOUNT" />
    <result column="NEW_AMOUNT" property="NEW_AMOUNT" />
    <result column="ACTIVE_SIM_EXIST" property="ACTIVE_SIM_EXIST" />
    <result column="DEAL_BR" property="DEAL_BR" />
    <result column="VEHICLE_NUMBER" property="VEHICLE_NUMBER" />
    <result column="DEFERRED_TRX_CONFIRM_YN" property="DEFERRED_TRX_CONFIRM_YN" />
  </resultMap>
  <sql id="Base_Column_List" >
    BRANCH_CODE, CB_IND, CIF_LINE, COMP_CODE, LINE_NO, TRS_NO, TRS_TYPE, CIF_NO, ID_NO, 
    DEAL_NO, SETTLEMENT_NO, SELECTED_DEAL, CUSTOME_DEAL_NO, VALUE_DATE, MATURITY_DATE, 
    DEAL_CY, PRINCIPAL_AMOUNT, PROFIT_AMOUNT, MATURITY_AMOUNT, OUTSTANDING_AMOUNT, PRODUCT_CLASS, 
    PRODUCT_CLASS_DESCRIPTION, ACC_ADDITIONAL_REF, OUTSTANDING_AMOUNT_CV, PASTDUE_AMOUNT, 
    DEAL_STATUS, LAST_PAY_DATE, FIRST_PAY_DATE, NO_OF_PAYMENT, INST_AMOUNT, PAST_DUE_DATE, 
    OWINGS, LPC, SD_IN_ARREAR, TOTAL_AMOUNT, NEW_AMOUNT, ACTIVE_SIM_EXIST, DEAL_BR, VEHICLE_NUMBER, DEFERRED_TRX_CONFIRM_YN
  </sql>
  <select id="selectCTSTRS_SETTLEMENT" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.CTSTRS_SETTLEMENTVOKey" >
    select 
    <include refid="Base_Column_List" />
    from CTSTRS_SETTLEMENT
    where BRANCH_CODE = #{BRANCH_CODE}
      and CB_IND = #{CB_IND}
      and CIF_LINE = #{CIF_LINE}
      and COMP_CODE = #{COMP_CODE}
      and LINE_NO = #{LINE_NO}
      and TRS_NO = #{TRS_NO}
      and TRS_TYPE = #{TRS_TYPE}
  </select>
  <delete id="deleteCTSTRS_SETTLEMENT" parameterType="com.path.dbmaps.vo.CTSTRS_SETTLEMENTVOKey" >
    delete from CTSTRS_SETTLEMENT
    where BRANCH_CODE = #{BRANCH_CODE}
      and CB_IND = #{CB_IND}
      and CIF_LINE = #{CIF_LINE}
      and COMP_CODE = #{COMP_CODE}
      and LINE_NO = #{LINE_NO}
      and TRS_NO = #{TRS_NO}
      and TRS_TYPE = #{TRS_TYPE}
  </delete>
  <insert id="insertCTSTRS_SETTLEMENT" parameterType="com.path.dbmaps.vo.CTSTRS_SETTLEMENTVO" >
    insert into CTSTRS_SETTLEMENT
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        BRANCH_CODE,
      </if>
      <if test="CB_IND != null" >
        CB_IND,
      </if>
      <if test="CIF_LINE != null and CIF_LINE != emptyBigDecimalValue" >
        CIF_LINE,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="LINE_NO != null and LINE_NO != emptyBigDecimalValue" >
        LINE_NO,
      </if>
      <if test="TRS_NO != null and TRS_NO != emptyBigDecimalValue" >
        TRS_NO,
      </if>
      <if test="TRS_TYPE != null" >
        TRS_TYPE,
      </if>
      <if test="CIF_NO != null and CIF_NO != emptyBigDecimalValue" >
        CIF_NO,
      </if>
      <if test="ID_NO != null" >
        ID_NO,
      </if>
      <if test="DEAL_NO != null and DEAL_NO != emptyBigDecimalValue" >
        DEAL_NO,
      </if>
      <if test="SETTLEMENT_NO != null and SETTLEMENT_NO != emptyBigDecimalValue" >
        SETTLEMENT_NO,
      </if>
      <if test="SELECTED_DEAL != null" >
        SELECTED_DEAL,
      </if>
      <if test="CUSTOME_DEAL_NO != null" >
        CUSTOME_DEAL_NO,
      </if>
      <if test="VALUE_DATE != null" >
        VALUE_DATE,
      </if>
      <if test="MATURITY_DATE != null" >
        MATURITY_DATE,
      </if>
      <if test="DEAL_CY != null and DEAL_CY != emptyBigDecimalValue" >
        DEAL_CY,
      </if>
      <if test="PRINCIPAL_AMOUNT != null and PRINCIPAL_AMOUNT != emptyBigDecimalValue" >
        PRINCIPAL_AMOUNT,
      </if>
      <if test="PROFIT_AMOUNT != null and PROFIT_AMOUNT != emptyBigDecimalValue" >
        PROFIT_AMOUNT,
      </if>
      <if test="MATURITY_AMOUNT != null and MATURITY_AMOUNT != emptyBigDecimalValue" >
        MATURITY_AMOUNT,
      </if>
      <if test="OUTSTANDING_AMOUNT != null and OUTSTANDING_AMOUNT != emptyBigDecimalValue" >
        OUTSTANDING_AMOUNT,
      </if>
      <if test="PRODUCT_CLASS != null and PRODUCT_CLASS != emptyBigDecimalValue" >
        PRODUCT_CLASS,
      </if>
      <if test="PRODUCT_CLASS_DESCRIPTION != null" >
        PRODUCT_CLASS_DESCRIPTION,
      </if>
      <if test="ACC_ADDITIONAL_REF != null" >
        ACC_ADDITIONAL_REF,
      </if>
      <if test="OUTSTANDING_AMOUNT_CV != null and OUTSTANDING_AMOUNT_CV != emptyBigDecimalValue" >
        OUTSTANDING_AMOUNT_CV,
      </if>
      <if test="PASTDUE_AMOUNT != null and PASTDUE_AMOUNT != emptyBigDecimalValue" >
        PASTDUE_AMOUNT,
      </if>
      <if test="DEAL_STATUS != null" >
        DEAL_STATUS,
      </if>
      <if test="LAST_PAY_DATE != null" >
        LAST_PAY_DATE,
      </if>
      <if test="FIRST_PAY_DATE != null" >
        FIRST_PAY_DATE,
      </if>
      <if test="NO_OF_PAYMENT != null and NO_OF_PAYMENT != emptyBigDecimalValue" >
        NO_OF_PAYMENT,
      </if>
      <if test="INST_AMOUNT != null and INST_AMOUNT != emptyBigDecimalValue" >
        INST_AMOUNT,
      </if>
      <if test="PAST_DUE_DATE != null" >
        PAST_DUE_DATE,
      </if>
      <if test="OWINGS != null and OWINGS != emptyBigDecimalValue" >
        OWINGS,
      </if>
      <if test="LPC != null and LPC != emptyBigDecimalValue" >
        LPC,
      </if>
      <if test="SD_IN_ARREAR != null and SD_IN_ARREAR != emptyBigDecimalValue" >
        SD_IN_ARREAR,
      </if>
      <if test="TOTAL_AMOUNT != null and TOTAL_AMOUNT != emptyBigDecimalValue" >
        TOTAL_AMOUNT,
      </if>
      <if test="NEW_AMOUNT != null and NEW_AMOUNT != emptyBigDecimalValue" >
        NEW_AMOUNT,
      </if>
      <if test="ACTIVE_SIM_EXIST != null" >
        ACTIVE_SIM_EXIST,
      </if>
      <if test="DEAL_BR != null and DEAL_BR != emptyBigDecimalValue" >
        DEAL_BR,
      </if>
      <if test="VEHICLE_NUMBER != null" >
        VEHICLE_NUMBER,
      </if>
      <if test="DEFERRED_TRX_CONFIRM_YN != null" >
        DEFERRED_TRX_CONFIRM_YN,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        #{BRANCH_CODE},
      </if>
      <if test="CB_IND != null" >
        #{CB_IND},
      </if>
      <if test="CIF_LINE != null and CIF_LINE != emptyBigDecimalValue" >
        #{CIF_LINE},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="LINE_NO != null and LINE_NO != emptyBigDecimalValue" >
        #{LINE_NO},
      </if>
      <if test="TRS_NO != null and TRS_NO != emptyBigDecimalValue" >
        #{TRS_NO},
      </if>
      <if test="TRS_TYPE != null" >
        #{TRS_TYPE},
      </if>
      <if test="CIF_NO != null and CIF_NO != emptyBigDecimalValue" >
        #{CIF_NO},
      </if>
      <if test="ID_NO != null" >
        #{ID_NO},
      </if>
      <if test="DEAL_NO != null and DEAL_NO != emptyBigDecimalValue" >
        #{DEAL_NO},
      </if>
      <if test="SETTLEMENT_NO != null and SETTLEMENT_NO != emptyBigDecimalValue" >
        #{SETTLEMENT_NO},
      </if>
      <if test="SELECTED_DEAL != null" >
        #{SELECTED_DEAL},
      </if>
      <if test="CUSTOME_DEAL_NO != null" >
        #{CUSTOME_DEAL_NO},
      </if>
      <if test="VALUE_DATE != null" >
        #{VALUE_DATE},
      </if>
      <if test="MATURITY_DATE != null" >
        #{MATURITY_DATE},
      </if>
      <if test="DEAL_CY != null and DEAL_CY != emptyBigDecimalValue" >
        #{DEAL_CY},
      </if>
      <if test="PRINCIPAL_AMOUNT != null and PRINCIPAL_AMOUNT != emptyBigDecimalValue" >
        #{PRINCIPAL_AMOUNT},
      </if>
      <if test="PROFIT_AMOUNT != null and PROFIT_AMOUNT != emptyBigDecimalValue" >
        #{PROFIT_AMOUNT},
      </if>
      <if test="MATURITY_AMOUNT != null and MATURITY_AMOUNT != emptyBigDecimalValue" >
        #{MATURITY_AMOUNT},
      </if>
      <if test="OUTSTANDING_AMOUNT != null and OUTSTANDING_AMOUNT != emptyBigDecimalValue" >
        #{OUTSTANDING_AMOUNT},
      </if>
      <if test="PRODUCT_CLASS != null and PRODUCT_CLASS != emptyBigDecimalValue" >
        #{PRODUCT_CLASS},
      </if>
      <if test="PRODUCT_CLASS_DESCRIPTION != null" >
        #{PRODUCT_CLASS_DESCRIPTION},
      </if>
      <if test="ACC_ADDITIONAL_REF != null" >
        #{ACC_ADDITIONAL_REF},
      </if>
      <if test="OUTSTANDING_AMOUNT_CV != null and OUTSTANDING_AMOUNT_CV != emptyBigDecimalValue" >
        #{OUTSTANDING_AMOUNT_CV},
      </if>
      <if test="PASTDUE_AMOUNT != null and PASTDUE_AMOUNT != emptyBigDecimalValue" >
        #{PASTDUE_AMOUNT},
      </if>
      <if test="DEAL_STATUS != null" >
        #{DEAL_STATUS},
      </if>
      <if test="LAST_PAY_DATE != null" >
        #{LAST_PAY_DATE},
      </if>
      <if test="FIRST_PAY_DATE != null" >
        #{FIRST_PAY_DATE},
      </if>
      <if test="NO_OF_PAYMENT != null and NO_OF_PAYMENT != emptyBigDecimalValue" >
        #{NO_OF_PAYMENT},
      </if>
      <if test="INST_AMOUNT != null and INST_AMOUNT != emptyBigDecimalValue" >
        #{INST_AMOUNT},
      </if>
      <if test="PAST_DUE_DATE != null" >
        #{PAST_DUE_DATE},
      </if>
      <if test="OWINGS != null and OWINGS != emptyBigDecimalValue" >
        #{OWINGS},
      </if>
      <if test="LPC != null and LPC != emptyBigDecimalValue" >
        #{LPC},
      </if>
      <if test="SD_IN_ARREAR != null and SD_IN_ARREAR != emptyBigDecimalValue" >
        #{SD_IN_ARREAR},
      </if>
      <if test="TOTAL_AMOUNT != null and TOTAL_AMOUNT != emptyBigDecimalValue" >
        #{TOTAL_AMOUNT},
      </if>
      <if test="NEW_AMOUNT != null and NEW_AMOUNT != emptyBigDecimalValue" >
        #{NEW_AMOUNT},
      </if>
      <if test="ACTIVE_SIM_EXIST != null" >
        #{ACTIVE_SIM_EXIST},
      </if>
      <if test="DEAL_BR != null and DEAL_BR != emptyBigDecimalValue" >
        #{DEAL_BR},
      </if>
      <if test="VEHICLE_NUMBER != null" >
        #{VEHICLE_NUMBER},
      </if>
      <if test="DEFERRED_TRX_CONFIRM_YN != null" >
        #{DEFERRED_TRX_CONFIRM_YN},
      </if>
    </trim>
  </insert>
  <sql id="sql_updateCTSTRS_SETTLEMENT" >
    update CTSTRS_SETTLEMENT
    <set >
      <if test="CIF_NO != null" >
        <choose >
          <when test="CIF_NO == emptyBigDecimalValue" >
            CIF_NO = NULL ,
          </when>
          <otherwise >
            CIF_NO = #{CIF_NO},
          </otherwise>
        </choose>
      </if>
      <if test="ID_NO != null" >
        ID_NO = #{ID_NO},
      </if>
      <if test="DEAL_NO != null" >
        <choose >
          <when test="DEAL_NO == emptyBigDecimalValue" >
            DEAL_NO = NULL ,
          </when>
          <otherwise >
            DEAL_NO = #{DEAL_NO},
          </otherwise>
        </choose>
      </if>
      <if test="SETTLEMENT_NO != null" >
        <choose >
          <when test="SETTLEMENT_NO == emptyBigDecimalValue" >
            SETTLEMENT_NO = NULL ,
          </when>
          <otherwise >
            SETTLEMENT_NO = #{SETTLEMENT_NO},
          </otherwise>
        </choose>
      </if>
      <if test="SELECTED_DEAL != null" >
        SELECTED_DEAL = #{SELECTED_DEAL},
      </if>
      <if test="CUSTOME_DEAL_NO != null" >
        CUSTOME_DEAL_NO = #{CUSTOME_DEAL_NO},
      </if>
      <if test="VALUE_DATE != null" >
        VALUE_DATE = #{VALUE_DATE},
      </if>
      <if test="MATURITY_DATE != null" >
        MATURITY_DATE = #{MATURITY_DATE},
      </if>
      <if test="DEAL_CY != null" >
        <choose >
          <when test="DEAL_CY == emptyBigDecimalValue" >
            DEAL_CY = NULL ,
          </when>
          <otherwise >
            DEAL_CY = #{DEAL_CY},
          </otherwise>
        </choose>
      </if>
      <if test="PRINCIPAL_AMOUNT != null" >
        <choose >
          <when test="PRINCIPAL_AMOUNT == emptyBigDecimalValue" >
            PRINCIPAL_AMOUNT = NULL ,
          </when>
          <otherwise >
            PRINCIPAL_AMOUNT = #{PRINCIPAL_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="PROFIT_AMOUNT != null" >
        <choose >
          <when test="PROFIT_AMOUNT == emptyBigDecimalValue" >
            PROFIT_AMOUNT = NULL ,
          </when>
          <otherwise >
            PROFIT_AMOUNT = #{PROFIT_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="MATURITY_AMOUNT != null" >
        <choose >
          <when test="MATURITY_AMOUNT == emptyBigDecimalValue" >
            MATURITY_AMOUNT = NULL ,
          </when>
          <otherwise >
            MATURITY_AMOUNT = #{MATURITY_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="OUTSTANDING_AMOUNT != null" >
        <choose >
          <when test="OUTSTANDING_AMOUNT == emptyBigDecimalValue" >
            OUTSTANDING_AMOUNT = NULL ,
          </when>
          <otherwise >
            OUTSTANDING_AMOUNT = #{OUTSTANDING_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="PRODUCT_CLASS != null" >
        <choose >
          <when test="PRODUCT_CLASS == emptyBigDecimalValue" >
            PRODUCT_CLASS = NULL ,
          </when>
          <otherwise >
            PRODUCT_CLASS = #{PRODUCT_CLASS},
          </otherwise>
        </choose>
      </if>
      <if test="PRODUCT_CLASS_DESCRIPTION != null" >
        PRODUCT_CLASS_DESCRIPTION = #{PRODUCT_CLASS_DESCRIPTION},
      </if>
      <if test="ACC_ADDITIONAL_REF != null" >
        ACC_ADDITIONAL_REF = #{ACC_ADDITIONAL_REF},
      </if>
      <if test="OUTSTANDING_AMOUNT_CV != null" >
        <choose >
          <when test="OUTSTANDING_AMOUNT_CV == emptyBigDecimalValue" >
            OUTSTANDING_AMOUNT_CV = NULL ,
          </when>
          <otherwise >
            OUTSTANDING_AMOUNT_CV = #{OUTSTANDING_AMOUNT_CV},
          </otherwise>
        </choose>
      </if>
      <if test="PASTDUE_AMOUNT != null" >
        <choose >
          <when test="PASTDUE_AMOUNT == emptyBigDecimalValue" >
            PASTDUE_AMOUNT = NULL ,
          </when>
          <otherwise >
            PASTDUE_AMOUNT = #{PASTDUE_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="DEAL_STATUS != null" >
        DEAL_STATUS = #{DEAL_STATUS},
      </if>
      <if test="LAST_PAY_DATE != null" >
        LAST_PAY_DATE = #{LAST_PAY_DATE},
      </if>
      <if test="FIRST_PAY_DATE != null" >
        FIRST_PAY_DATE = #{FIRST_PAY_DATE},
      </if>
      <if test="NO_OF_PAYMENT != null" >
        <choose >
          <when test="NO_OF_PAYMENT == emptyBigDecimalValue" >
            NO_OF_PAYMENT = NULL ,
          </when>
          <otherwise >
            NO_OF_PAYMENT = #{NO_OF_PAYMENT},
          </otherwise>
        </choose>
      </if>
      <if test="INST_AMOUNT != null" >
        <choose >
          <when test="INST_AMOUNT == emptyBigDecimalValue" >
            INST_AMOUNT = NULL ,
          </when>
          <otherwise >
            INST_AMOUNT = #{INST_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="PAST_DUE_DATE != null" >
        PAST_DUE_DATE = #{PAST_DUE_DATE},
      </if>
      <if test="OWINGS != null" >
        <choose >
          <when test="OWINGS == emptyBigDecimalValue" >
            OWINGS = NULL ,
          </when>
          <otherwise >
            OWINGS = #{OWINGS},
          </otherwise>
        </choose>
      </if>
      <if test="LPC != null" >
        <choose >
          <when test="LPC == emptyBigDecimalValue" >
            LPC = NULL ,
          </when>
          <otherwise >
            LPC = #{LPC},
          </otherwise>
        </choose>
      </if>
      <if test="SD_IN_ARREAR != null" >
        <choose >
          <when test="SD_IN_ARREAR == emptyBigDecimalValue" >
            SD_IN_ARREAR = NULL ,
          </when>
          <otherwise >
            SD_IN_ARREAR = #{SD_IN_ARREAR},
          </otherwise>
        </choose>
      </if>
      <if test="TOTAL_AMOUNT != null" >
        <choose >
          <when test="TOTAL_AMOUNT == emptyBigDecimalValue" >
            TOTAL_AMOUNT = NULL ,
          </when>
          <otherwise >
            TOTAL_AMOUNT = #{TOTAL_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="NEW_AMOUNT != null" >
        <choose >
          <when test="NEW_AMOUNT == emptyBigDecimalValue" >
            NEW_AMOUNT = NULL ,
          </when>
          <otherwise >
            NEW_AMOUNT = #{NEW_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="ACTIVE_SIM_EXIST != null" >
        ACTIVE_SIM_EXIST = #{ACTIVE_SIM_EXIST},
      </if>
      <if test="DEAL_BR != null" >
        <choose >
          <when test="DEAL_BR == emptyBigDecimalValue" >
            DEAL_BR = NULL ,
          </when>
          <otherwise >
            DEAL_BR = #{DEAL_BR},
          </otherwise>
        </choose>
      </if>
      <if test="VEHICLE_NUMBER != null" >
        VEHICLE_NUMBER = #{VEHICLE_NUMBER},
      </if>
      <if test="DEFERRED_TRX_CONFIRM_YN != null" >
        DEFERRED_TRX_CONFIRM_YN = #{DEFERRED_TRX_CONFIRM_YN},
      </if>
    </set>
    where BRANCH_CODE = #{BRANCH_CODE}
      and CB_IND = #{CB_IND}
      and CIF_LINE = #{CIF_LINE}
      and COMP_CODE = #{COMP_CODE}
      and LINE_NO = #{LINE_NO}
      and TRS_NO = #{TRS_NO}
      and TRS_TYPE = #{TRS_TYPE}
  </sql>
  <update id="updateCTSTRS_SETTLEMENT" parameterType="com.path.dbmaps.vo.CTSTRS_SETTLEMENTVO" >
    <include refid="sql_updateCTSTRS_SETTLEMENT" />
  </update>
</mapper>