<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TRSASSET" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.TRSASSETVO" >
    <id column="BRANCH" property="BRANCH" />
    <id column="CODE" property="CODE" />
    <id column="COMP_CODE" property="COMP_CODE" />
    <result column="BRIEF_NAME_ENG" property="BRIEF_NAME_ENG" />
    <result column="LONG_NAME_ENG" property="LONG_NAME_ENG" />
    <result column="BRIEF_NAME_ARAB" property="BRIEF_NAME_ARAB" />
    <result column="LONG_NAME_ARAB" property="LONG_NAME_ARAB" />
    <result column="PURCHASE_AMOUNT" property="PURCHASE_AMOUNT" />
    <result column="PURCHASE_CY_CODE" property="PURCHASE_CY_CODE" />
    <result column="SALES_AMOUNT" property="SALES_AMOUNT" />
    <result column="SALES_CY_CODE" property="SALES_CY_CODE" />
    <result column="PURCHASE_CY_RATE" property="PURCHASE_CY_RATE" />
    <result column="PURCHASE_CY_UNIT" property="PURCHASE_CY_UNIT" />
    <result column="SALES_CY_RATE" property="SALES_CY_RATE" />
    <result column="SALES_CY_UNIT" property="SALES_CY_UNIT" />
    <result column="SALES_CY_MULT_DIV" property="SALES_CY_MULT_DIV" />
    <result column="PURCHASE_CY_MULT_DIV" property="PURCHASE_CY_MULT_DIV" />
    <result column="DEAL_NBR" property="DEAL_NBR" />
    <result column="ADD_NUMBER1" property="ADD_NUMBER1" />
    <result column="ADD_NUMBER2" property="ADD_NUMBER2" />
    <result column="ADD_NUMBER3" property="ADD_NUMBER3" />
    <result column="ADD_NUMBER4" property="ADD_NUMBER4" />
    <result column="ADD_NUMBER5" property="ADD_NUMBER5" />
    <result column="ADD_STRING1" property="ADD_STRING1" />
    <result column="ADD_STRING2" property="ADD_STRING2" />
    <result column="ADD_STRING3" property="ADD_STRING3" />
    <result column="ADD_STRING4" property="ADD_STRING4" />
    <result column="ADD_STRING5" property="ADD_STRING5" />
    <result column="ADD_DATE1" property="ADD_DATE1" />
    <result column="ADD_DATE2" property="ADD_DATE2" />
    <result column="ADD_DATE3" property="ADD_DATE3" />
    <result column="ADD_DATE4" property="ADD_DATE4" />
    <result column="ADD_DATE5" property="ADD_DATE5" />
  </resultMap>
  <sql id="Base_Column_List" >
    BRANCH, CODE, COMP_CODE, BRIEF_NAME_ENG, LONG_NAME_ENG, BRIEF_NAME_ARAB, LONG_NAME_ARAB, 
    PURCHASE_AMOUNT, PURCHASE_CY_CODE, SALES_AMOUNT, SALES_CY_CODE, PURCHASE_CY_RATE, 
    PURCHASE_CY_UNIT, SALES_CY_RATE, SALES_CY_UNIT, SALES_CY_MULT_DIV, PURCHASE_CY_MULT_DIV, 
    DEAL_NBR, ADD_NUMBER1, ADD_NUMBER2, ADD_NUMBER3, ADD_NUMBER4, ADD_NUMBER5, ADD_STRING1, 
    ADD_STRING2, ADD_STRING3, ADD_STRING4, ADD_STRING5, ADD_DATE1, ADD_DATE2, ADD_DATE3, 
    ADD_DATE4, ADD_DATE5
  </sql>
  <select id="selectTRSASSET" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.TRSASSETVOKey" >
    select 
    <include refid="Base_Column_List" />
    from TRSASSET
    where BRANCH = #{BRANCH}
      and CODE = #{CODE}
      and COMP_CODE = #{COMP_CODE}
  </select>
  <delete id="deleteTRSASSET" parameterType="com.path.dbmaps.vo.TRSASSETVOKey" >
    delete from TRSASSET
    where BRANCH = #{BRANCH}
      and CODE = #{CODE}
      and COMP_CODE = #{COMP_CODE}
  </delete>
  <insert id="insertTRSASSET" parameterType="com.path.dbmaps.vo.TRSASSETVO" >
    insert into TRSASSET
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="BRANCH != null and BRANCH != emptyBigDecimalValue" >
        BRANCH,
      </if>
      <if test="CODE != null and CODE != emptyBigDecimalValue" >
        CODE,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="BRIEF_NAME_ENG != null" >
        BRIEF_NAME_ENG,
      </if>
      <if test="LONG_NAME_ENG != null" >
        LONG_NAME_ENG,
      </if>
      <if test="BRIEF_NAME_ARAB != null" >
        BRIEF_NAME_ARAB,
      </if>
      <if test="LONG_NAME_ARAB != null" >
        LONG_NAME_ARAB,
      </if>
      <if test="PURCHASE_AMOUNT != null and PURCHASE_AMOUNT != emptyBigDecimalValue" >
        PURCHASE_AMOUNT,
      </if>
      <if test="PURCHASE_CY_CODE != null and PURCHASE_CY_CODE != emptyBigDecimalValue" >
        PURCHASE_CY_CODE,
      </if>
      <if test="SALES_AMOUNT != null and SALES_AMOUNT != emptyBigDecimalValue" >
        SALES_AMOUNT,
      </if>
      <if test="SALES_CY_CODE != null and SALES_CY_CODE != emptyBigDecimalValue" >
        SALES_CY_CODE,
      </if>
      <if test="PURCHASE_CY_RATE != null and PURCHASE_CY_RATE != emptyBigDecimalValue" >
        PURCHASE_CY_RATE,
      </if>
      <if test="PURCHASE_CY_UNIT != null and PURCHASE_CY_UNIT != emptyBigDecimalValue" >
        PURCHASE_CY_UNIT,
      </if>
      <if test="SALES_CY_RATE != null and SALES_CY_RATE != emptyBigDecimalValue" >
        SALES_CY_RATE,
      </if>
      <if test="SALES_CY_UNIT != null and SALES_CY_UNIT != emptyBigDecimalValue" >
        SALES_CY_UNIT,
      </if>
      <if test="SALES_CY_MULT_DIV != null" >
        SALES_CY_MULT_DIV,
      </if>
      <if test="PURCHASE_CY_MULT_DIV != null" >
        PURCHASE_CY_MULT_DIV,
      </if>
      <if test="DEAL_NBR != null and DEAL_NBR != emptyBigDecimalValue" >
        DEAL_NBR,
      </if>
      <if test="ADD_NUMBER1 != null and ADD_NUMBER1 != emptyBigDecimalValue" >
        ADD_NUMBER1,
      </if>
      <if test="ADD_NUMBER2 != null and ADD_NUMBER2 != emptyBigDecimalValue" >
        ADD_NUMBER2,
      </if>
      <if test="ADD_NUMBER3 != null and ADD_NUMBER3 != emptyBigDecimalValue" >
        ADD_NUMBER3,
      </if>
      <if test="ADD_NUMBER4 != null and ADD_NUMBER4 != emptyBigDecimalValue" >
        ADD_NUMBER4,
      </if>
      <if test="ADD_NUMBER5 != null and ADD_NUMBER5 != emptyBigDecimalValue" >
        ADD_NUMBER5,
      </if>
      <if test="ADD_STRING1 != null" >
        ADD_STRING1,
      </if>
      <if test="ADD_STRING2 != null" >
        ADD_STRING2,
      </if>
      <if test="ADD_STRING3 != null" >
        ADD_STRING3,
      </if>
      <if test="ADD_STRING4 != null" >
        ADD_STRING4,
      </if>
      <if test="ADD_STRING5 != null" >
        ADD_STRING5,
      </if>
      <if test="ADD_DATE1 != null" >
        ADD_DATE1,
      </if>
      <if test="ADD_DATE2 != null" >
        ADD_DATE2,
      </if>
      <if test="ADD_DATE3 != null" >
        ADD_DATE3,
      </if>
      <if test="ADD_DATE4 != null" >
        ADD_DATE4,
      </if>
      <if test="ADD_DATE5 != null" >
        ADD_DATE5,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="BRANCH != null and BRANCH != emptyBigDecimalValue" >
        #{BRANCH},
      </if>
      <if test="CODE != null and CODE != emptyBigDecimalValue" >
        #{CODE},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="BRIEF_NAME_ENG != null" >
        #{BRIEF_NAME_ENG},
      </if>
      <if test="LONG_NAME_ENG != null" >
        #{LONG_NAME_ENG},
      </if>
      <if test="BRIEF_NAME_ARAB != null" >
        #{BRIEF_NAME_ARAB},
      </if>
      <if test="LONG_NAME_ARAB != null" >
        #{LONG_NAME_ARAB},
      </if>
      <if test="PURCHASE_AMOUNT != null and PURCHASE_AMOUNT != emptyBigDecimalValue" >
        #{PURCHASE_AMOUNT},
      </if>
      <if test="PURCHASE_CY_CODE != null and PURCHASE_CY_CODE != emptyBigDecimalValue" >
        #{PURCHASE_CY_CODE},
      </if>
      <if test="SALES_AMOUNT != null and SALES_AMOUNT != emptyBigDecimalValue" >
        #{SALES_AMOUNT},
      </if>
      <if test="SALES_CY_CODE != null and SALES_CY_CODE != emptyBigDecimalValue" >
        #{SALES_CY_CODE},
      </if>
      <if test="PURCHASE_CY_RATE != null and PURCHASE_CY_RATE != emptyBigDecimalValue" >
        #{PURCHASE_CY_RATE},
      </if>
      <if test="PURCHASE_CY_UNIT != null and PURCHASE_CY_UNIT != emptyBigDecimalValue" >
        #{PURCHASE_CY_UNIT},
      </if>
      <if test="SALES_CY_RATE != null and SALES_CY_RATE != emptyBigDecimalValue" >
        #{SALES_CY_RATE},
      </if>
      <if test="SALES_CY_UNIT != null and SALES_CY_UNIT != emptyBigDecimalValue" >
        #{SALES_CY_UNIT},
      </if>
      <if test="SALES_CY_MULT_DIV != null" >
        #{SALES_CY_MULT_DIV},
      </if>
      <if test="PURCHASE_CY_MULT_DIV != null" >
        #{PURCHASE_CY_MULT_DIV},
      </if>
      <if test="DEAL_NBR != null and DEAL_NBR != emptyBigDecimalValue" >
        #{DEAL_NBR},
      </if>
      <if test="ADD_NUMBER1 != null and ADD_NUMBER1 != emptyBigDecimalValue" >
        #{ADD_NUMBER1},
      </if>
      <if test="ADD_NUMBER2 != null and ADD_NUMBER2 != emptyBigDecimalValue" >
        #{ADD_NUMBER2},
      </if>
      <if test="ADD_NUMBER3 != null and ADD_NUMBER3 != emptyBigDecimalValue" >
        #{ADD_NUMBER3},
      </if>
      <if test="ADD_NUMBER4 != null and ADD_NUMBER4 != emptyBigDecimalValue" >
        #{ADD_NUMBER4},
      </if>
      <if test="ADD_NUMBER5 != null and ADD_NUMBER5 != emptyBigDecimalValue" >
        #{ADD_NUMBER5},
      </if>
      <if test="ADD_STRING1 != null" >
        #{ADD_STRING1},
      </if>
      <if test="ADD_STRING2 != null" >
        #{ADD_STRING2},
      </if>
      <if test="ADD_STRING3 != null" >
        #{ADD_STRING3},
      </if>
      <if test="ADD_STRING4 != null" >
        #{ADD_STRING4},
      </if>
      <if test="ADD_STRING5 != null" >
        #{ADD_STRING5},
      </if>
      <if test="ADD_DATE1 != null" >
        #{ADD_DATE1},
      </if>
      <if test="ADD_DATE2 != null" >
        #{ADD_DATE2},
      </if>
      <if test="ADD_DATE3 != null" >
        #{ADD_DATE3},
      </if>
      <if test="ADD_DATE4 != null" >
        #{ADD_DATE4},
      </if>
      <if test="ADD_DATE5 != null" >
        #{ADD_DATE5},
      </if>
    </trim>
  </insert>
  <sql id="sql_updateTRSASSET" >
    update TRSASSET
    <set >
      <if test="BRIEF_NAME_ENG != null" >
        BRIEF_NAME_ENG = #{BRIEF_NAME_ENG},
      </if>
      <if test="LONG_NAME_ENG != null" >
        LONG_NAME_ENG = #{LONG_NAME_ENG},
      </if>
      <if test="BRIEF_NAME_ARAB != null" >
        BRIEF_NAME_ARAB = #{BRIEF_NAME_ARAB},
      </if>
      <if test="LONG_NAME_ARAB != null" >
        LONG_NAME_ARAB = #{LONG_NAME_ARAB},
      </if>
      <if test="PURCHASE_AMOUNT != null" >
        <choose >
          <when test="PURCHASE_AMOUNT == emptyBigDecimalValue" >
            PURCHASE_AMOUNT = NULL ,
          </when>
          <otherwise >
            PURCHASE_AMOUNT = #{PURCHASE_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="PURCHASE_CY_CODE != null" >
        <choose >
          <when test="PURCHASE_CY_CODE == emptyBigDecimalValue" >
            PURCHASE_CY_CODE = NULL ,
          </when>
          <otherwise >
            PURCHASE_CY_CODE = #{PURCHASE_CY_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="SALES_AMOUNT != null" >
        <choose >
          <when test="SALES_AMOUNT == emptyBigDecimalValue" >
            SALES_AMOUNT = NULL ,
          </when>
          <otherwise >
            SALES_AMOUNT = #{SALES_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="SALES_CY_CODE != null" >
        <choose >
          <when test="SALES_CY_CODE == emptyBigDecimalValue" >
            SALES_CY_CODE = NULL ,
          </when>
          <otherwise >
            SALES_CY_CODE = #{SALES_CY_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="PURCHASE_CY_RATE != null" >
        <choose >
          <when test="PURCHASE_CY_RATE == emptyBigDecimalValue" >
            PURCHASE_CY_RATE = NULL ,
          </when>
          <otherwise >
            PURCHASE_CY_RATE = #{PURCHASE_CY_RATE},
          </otherwise>
        </choose>
      </if>
      <if test="PURCHASE_CY_UNIT != null" >
        <choose >
          <when test="PURCHASE_CY_UNIT == emptyBigDecimalValue" >
            PURCHASE_CY_UNIT = NULL ,
          </when>
          <otherwise >
            PURCHASE_CY_UNIT = #{PURCHASE_CY_UNIT},
          </otherwise>
        </choose>
      </if>
      <if test="SALES_CY_RATE != null" >
        <choose >
          <when test="SALES_CY_RATE == emptyBigDecimalValue" >
            SALES_CY_RATE = NULL ,
          </when>
          <otherwise >
            SALES_CY_RATE = #{SALES_CY_RATE},
          </otherwise>
        </choose>
      </if>
      <if test="SALES_CY_UNIT != null" >
        <choose >
          <when test="SALES_CY_UNIT == emptyBigDecimalValue" >
            SALES_CY_UNIT = NULL ,
          </when>
          <otherwise >
            SALES_CY_UNIT = #{SALES_CY_UNIT},
          </otherwise>
        </choose>
      </if>
      <if test="SALES_CY_MULT_DIV != null" >
        SALES_CY_MULT_DIV = #{SALES_CY_MULT_DIV},
      </if>
      <if test="PURCHASE_CY_MULT_DIV != null" >
        PURCHASE_CY_MULT_DIV = #{PURCHASE_CY_MULT_DIV},
      </if>
      <if test="DEAL_NBR != null" >
        <choose >
          <when test="DEAL_NBR == emptyBigDecimalValue" >
            DEAL_NBR = NULL ,
          </when>
          <otherwise >
            DEAL_NBR = #{DEAL_NBR},
          </otherwise>
        </choose>
      </if>
      <if test="ADD_NUMBER1 != null" >
        <choose >
          <when test="ADD_NUMBER1 == emptyBigDecimalValue" >
            ADD_NUMBER1 = NULL ,
          </when>
          <otherwise >
            ADD_NUMBER1 = #{ADD_NUMBER1},
          </otherwise>
        </choose>
      </if>
      <if test="ADD_NUMBER2 != null" >
        <choose >
          <when test="ADD_NUMBER2 == emptyBigDecimalValue" >
            ADD_NUMBER2 = NULL ,
          </when>
          <otherwise >
            ADD_NUMBER2 = #{ADD_NUMBER2},
          </otherwise>
        </choose>
      </if>
      <if test="ADD_NUMBER3 != null" >
        <choose >
          <when test="ADD_NUMBER3 == emptyBigDecimalValue" >
            ADD_NUMBER3 = NULL ,
          </when>
          <otherwise >
            ADD_NUMBER3 = #{ADD_NUMBER3},
          </otherwise>
        </choose>
      </if>
      <if test="ADD_NUMBER4 != null" >
        <choose >
          <when test="ADD_NUMBER4 == emptyBigDecimalValue" >
            ADD_NUMBER4 = NULL ,
          </when>
          <otherwise >
            ADD_NUMBER4 = #{ADD_NUMBER4},
          </otherwise>
        </choose>
      </if>
      <if test="ADD_NUMBER5 != null" >
        <choose >
          <when test="ADD_NUMBER5 == emptyBigDecimalValue" >
            ADD_NUMBER5 = NULL ,
          </when>
          <otherwise >
            ADD_NUMBER5 = #{ADD_NUMBER5},
          </otherwise>
        </choose>
      </if>
      <if test="ADD_STRING1 != null" >
        ADD_STRING1 = #{ADD_STRING1},
      </if>
      <if test="ADD_STRING2 != null" >
        ADD_STRING2 = #{ADD_STRING2},
      </if>
      <if test="ADD_STRING3 != null" >
        ADD_STRING3 = #{ADD_STRING3},
      </if>
      <if test="ADD_STRING4 != null" >
        ADD_STRING4 = #{ADD_STRING4},
      </if>
      <if test="ADD_STRING5 != null" >
        ADD_STRING5 = #{ADD_STRING5},
      </if>
      <if test="ADD_DATE1 != null" >
        ADD_DATE1 = #{ADD_DATE1},
      </if>
      <if test="ADD_DATE2 != null" >
        ADD_DATE2 = #{ADD_DATE2},
      </if>
      <if test="ADD_DATE3 != null" >
        ADD_DATE3 = #{ADD_DATE3},
      </if>
      <if test="ADD_DATE4 != null" >
        ADD_DATE4 = #{ADD_DATE4},
      </if>
      <if test="ADD_DATE5 != null" >
        ADD_DATE5 = #{ADD_DATE5},
      </if>
    </set>
    where BRANCH = #{BRANCH}
      and CODE = #{CODE}
      and COMP_CODE = #{COMP_CODE}
  </sql>
  <update id="updateTRSASSET" parameterType="com.path.dbmaps.vo.TRSASSETVO" >
    <include refid="sql_updateTRSASSET" />
  </update>
</mapper>