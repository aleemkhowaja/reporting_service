<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="CASH_BALANCE_REMITT" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.CASH_BALANCE_REMITTVO" >
    <id column="BRANCH_CODE" property="BRANCH_CODE" />
    <id column="COMP_CODE" property="COMP_CODE" />
    <id column="LINE_NO" property="LINE_NO" />
    <id column="TRX_NO" property="TRX_NO" />
    <result column="REMITTANCE_TYPE" property="REMITTANCE_TYPE" />
    <result column="CURRENCY" property="CURRENCY" />
    <result column="SEQUENCE_FR" property="SEQUENCE_FR" />
    <result column="SEQUENCE_TO" property="SEQUENCE_TO" />
    <result column="QTY" property="QTY" />
    <result column="SERIAL" property="SERIAL" />
    <result column="VALUE" property="VALUE" />
    <result column="CTS_TRS_NO" property="CTS_TRS_NO" />
    <result column="REMIT_FROM_VAULT_NO" property="REMIT_FROM_VAULT_NO" />
    <result column="REMIT_TO_VAULT_NO" property="REMIT_TO_VAULT_NO" />
  </resultMap>
  <sql id="Base_Column_List" >
    BRANCH_CODE, COMP_CODE, LINE_NO, TRX_NO, REMITTANCE_TYPE, CURRENCY, SEQUENCE_FR, 
    SEQUENCE_TO, QTY, SERIAL, VALUE, CTS_TRS_NO , REMIT_FROM_VAULT_NO , REMIT_TO_VAULT_NO
  </sql>
  <select id="selectCASH_BALANCE_REMITT" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.CASH_BALANCE_REMITTVOKey" >
    select 
    <include refid="Base_Column_List" />
    from CASH_BALANCE_REMITT
    where BRANCH_CODE = #{BRANCH_CODE}
      and COMP_CODE = #{COMP_CODE}
      and LINE_NO = #{LINE_NO}
      and TRX_NO = #{TRX_NO}
  </select>
  <delete id="deleteCASH_BALANCE_REMITT" parameterType="com.path.dbmaps.vo.CASH_BALANCE_REMITTVOKey" >
    delete from CASH_BALANCE_REMITT
    where BRANCH_CODE = #{BRANCH_CODE}
      and COMP_CODE = #{COMP_CODE}
      and LINE_NO = #{LINE_NO}
      and TRX_NO = #{TRX_NO}
  </delete>
  <insert id="insertCASH_BALANCE_REMITT" parameterType="com.path.dbmaps.vo.CASH_BALANCE_REMITTVO" >
    insert into CASH_BALANCE_REMITT
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        BRANCH_CODE,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="LINE_NO != null and LINE_NO != emptyBigDecimalValue" >
        LINE_NO,
      </if>
      <if test="TRX_NO != null and TRX_NO != emptyBigDecimalValue" >
        TRX_NO,
      </if>
      <if test="REMITTANCE_TYPE != null and REMITTANCE_TYPE != emptyBigDecimalValue" >
        REMITTANCE_TYPE,
      </if>
      <if test="CURRENCY != null and CURRENCY != emptyBigDecimalValue" >
        CURRENCY,
      </if>
      <if test="SEQUENCE_FR != null and SEQUENCE_FR != emptyBigDecimalValue" >
        SEQUENCE_FR,
      </if>
      <if test="SEQUENCE_TO != null and SEQUENCE_TO != emptyBigDecimalValue" >
        SEQUENCE_TO,
      </if>
      <if test="QTY != null and QTY != emptyBigDecimalValue" >
        QTY,
      </if>
      <if test="SERIAL != null" >
        SERIAL,
      </if>
      <if test="VALUE != null and VALUE != emptyBigDecimalValue" >
        VALUE,
      </if>
      <if test="CTS_TRS_NO != null and CTS_TRS_NO != emptyBigDecimalValue" >
        CTS_TRS_NO,
      </if>
      <if test="REMIT_FROM_VAULT_NO != null and REMIT_FROM_VAULT_NO != emptyBigDecimalValue" >
        REMIT_FROM_VAULT_NO,
      </if>
      <if test="REMIT_TO_VAULT_NO != null and REMIT_TO_VAULT_NO != emptyBigDecimalValue" >
        REMIT_TO_VAULT_NO,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="BRANCH_CODE != null and BRANCH_CODE != emptyBigDecimalValue" >
        #{BRANCH_CODE},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="LINE_NO != null and LINE_NO != emptyBigDecimalValue" >
        #{LINE_NO},
      </if>
      <if test="TRX_NO != null and TRX_NO != emptyBigDecimalValue" >
        #{TRX_NO},
      </if>
      <if test="REMITTANCE_TYPE != null and REMITTANCE_TYPE != emptyBigDecimalValue" >
        #{REMITTANCE_TYPE},
      </if>
      <if test="CURRENCY != null and CURRENCY != emptyBigDecimalValue" >
        #{CURRENCY},
      </if>
      <if test="SEQUENCE_FR != null and SEQUENCE_FR != emptyBigDecimalValue" >
        #{SEQUENCE_FR},
      </if>
      <if test="SEQUENCE_TO != null and SEQUENCE_TO != emptyBigDecimalValue" >
        #{SEQUENCE_TO},
      </if>
      <if test="QTY != null and QTY != emptyBigDecimalValue" >
        #{QTY},
      </if>
      <if test="SERIAL != null" >
        #{SERIAL},
      </if>
      <if test="VALUE != null and VALUE != emptyBigDecimalValue" >
        #{VALUE},
      </if>
      <if test="CTS_TRS_NO != null and CTS_TRS_NO != emptyBigDecimalValue" >
        #{CTS_TRS_NO},
      </if>
      <if test="REMIT_FROM_VAULT_NO != null and REMIT_FROM_VAULT_NO != emptyBigDecimalValue" >
        #{REMIT_FROM_VAULT_NO},
      </if>
      <if test="REMIT_TO_VAULT_NO != null and REMIT_TO_VAULT_NO != emptyBigDecimalValue" >
        #{REMIT_TO_VAULT_NO},
      </if>
    </trim>
  </insert>
  <sql id="sql_updateCASH_BALANCE_REMITT" >
    update CASH_BALANCE_REMITT
    <set >
      <if test="REMITTANCE_TYPE != null" >
        <choose >
          <when test="REMITTANCE_TYPE == emptyBigDecimalValue" >
            REMITTANCE_TYPE = NULL ,
          </when>
          <otherwise >
            REMITTANCE_TYPE = #{REMITTANCE_TYPE},
          </otherwise>
        </choose>
      </if>
      <if test="CURRENCY != null" >
        <choose >
          <when test="CURRENCY == emptyBigDecimalValue" >
            CURRENCY = NULL ,
          </when>
          <otherwise >
            CURRENCY = #{CURRENCY},
          </otherwise>
        </choose>
      </if>
      <if test="SEQUENCE_FR != null" >
        <choose >
          <when test="SEQUENCE_FR == emptyBigDecimalValue" >
            SEQUENCE_FR = NULL ,
          </when>
          <otherwise >
            SEQUENCE_FR = #{SEQUENCE_FR},
          </otherwise>
        </choose>
      </if>
      <if test="SEQUENCE_TO != null" >
        <choose >
          <when test="SEQUENCE_TO == emptyBigDecimalValue" >
            SEQUENCE_TO = NULL ,
          </when>
          <otherwise >
            SEQUENCE_TO = #{SEQUENCE_TO},
          </otherwise>
        </choose>
      </if>
      <if test="QTY != null" >
        <choose >
          <when test="QTY == emptyBigDecimalValue" >
            QTY = NULL ,
          </when>
          <otherwise >
            QTY = #{QTY},
          </otherwise>
        </choose>
      </if>
      <if test="SERIAL != null" >
        SERIAL = #{SERIAL},
      </if>
      <if test="VALUE != null" >
        <choose >
          <when test="VALUE == emptyBigDecimalValue" >
            VALUE = NULL ,
          </when>
          <otherwise >
            VALUE = #{VALUE},
          </otherwise>
        </choose>
      </if>
      <if test="CTS_TRS_NO != null" >
        <choose >
          <when test="CTS_TRS_NO == emptyBigDecimalValue" >
            CTS_TRS_NO = NULL ,
          </when>
          <otherwise >
            CTS_TRS_NO = #{CTS_TRS_NO},
          </otherwise>
        </choose>
      </if>
      <if test="REMIT_FROM_VAULT_NO != null" >
        <choose >
          <when test="REMIT_FROM_VAULT_NO == emptyBigDecimalValue" >
            REMIT_FROM_VAULT_NO = NULL ,
          </when>
          <otherwise >
            REMIT_FROM_VAULT_NO = #{CTS_TRS_NO},
          </otherwise>
        </choose>
      </if>
      <if test="REMIT_TO_VAULT_NO != null" >
        <choose >
          <when test="REMIT_TO_VAULT_NO == emptyBigDecimalValue" >
            REMIT_TO_VAULT_NO = NULL ,
          </when>
          <otherwise >
            REMIT_TO_VAULT_NO = #{REMIT_TO_VAULT_NO},
          </otherwise>
        </choose>
      </if>
    </set>
    where BRANCH_CODE = #{BRANCH_CODE}
      and COMP_CODE = #{COMP_CODE}
      and LINE_NO = #{LINE_NO}
      and TRX_NO = #{TRX_NO}
  </sql>
  <update id="updateCASH_BALANCE_REMITT" parameterType="com.path.dbmaps.vo.CASH_BALANCE_REMITTVO" >
    <include refid="sql_updateCASH_BALANCE_REMITT" />
  </update>
</mapper>