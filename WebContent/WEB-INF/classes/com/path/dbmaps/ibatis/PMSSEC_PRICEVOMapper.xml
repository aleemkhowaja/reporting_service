<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="PMSSEC_PRICE" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.PMSSEC_PRICEVO" >
    <id column="BRANCH" property="BRANCH" />
    <id column="COMP_CODE" property="COMP_CODE" />
    <id column="MARKET_DATE" property="MARKET_DATE" />
    <id column="SECURITY_CODE1" property="SECURITY_CODE1" />
    <id column="SECURITY_CODE2" property="SECURITY_CODE2" />
    <result column="MAXIMUM_PRICE" property="MAXIMUM_PRICE" />
    <result column="MINIMUM_PRICE" property="MINIMUM_PRICE" />
    <result column="CLOSING_PRICE" property="CLOSING_PRICE" />
    <result column="TRADED_QTY" property="TRADED_QTY" />
    <result column="NUMBER_OF_TRADES" property="NUMBER_OF_TRADES" />
    <result column="VALUE_TRADED" property="VALUE_TRADED" />
    <result column="OPEN_PRICE" property="OPEN_PRICE" />
    <result column="STATUS" property="STATUS" />
    <result column="CURRENCY" property="CURRENCY" />
    <result column="CLOSING_PRICE_CV" property="CLOSING_PRICE_CV" />
    <result column="FUTURE_MAXIMUM_PRICE" property="FUTURE_MAXIMUM_PRICE" />
    <result column="FUTURE_MINIMUM_PRICE" property="FUTURE_MINIMUM_PRICE" />
    <result column="FUTURE_CLOSING_PRICE" property="FUTURE_CLOSING_PRICE" />
    <result column="PE_RATIO" property="PE_RATIO" />
    <result column="NPV" property="NPV" />
    <result column="DATE_CREATED" property="DATE_CREATED" />
    <result column="CREATED_BY" property="CREATED_BY" />
    <result column="DATE_MODIFIED" property="DATE_MODIFIED" />
    <result column="MODIFIED_BY" property="MODIFIED_BY" />
    <result column="NB_SHARES" property="NB_SHARES" />
    <result column="CR_BALANCE" property="CR_BALANCE" />
    <result column="DB_BALANCE" property="DB_BALANCE" />
    <result column="BID_PRICE" property="BID_PRICE" />
    <result column="UNREAL" property="UNREAL" />
    <result column="GROSS_NAV" property="GROSS_NAV" />
    <result column="ASK_PRICE" property="ASK_PRICE" />
    <result column="BID_VOLUME" property="BID_VOLUME" />
    <result column="ASK_VOLUME" property="ASK_VOLUME" />
    <result column="DATE_UPDATED" property="DATE_UPDATED" />
    <result column="PRICE_CHANGED_YN" property="PRICE_CHANGED_YN" />
    <result column="CONSIDER_IN_PROCESS_REG_YN" property="CONSIDER_IN_PROCESS_REG_YN" />
  </resultMap>
  <sql id="Base_Column_List" >
    BRANCH, COMP_CODE, MARKET_DATE, SECURITY_CODE1, SECURITY_CODE2, MAXIMUM_PRICE, MINIMUM_PRICE, 
    CLOSING_PRICE, TRADED_QTY, NUMBER_OF_TRADES, VALUE_TRADED, OPEN_PRICE, STATUS, CURRENCY, 
    CLOSING_PRICE_CV, FUTURE_MAXIMUM_PRICE, FUTURE_MINIMUM_PRICE, FUTURE_CLOSING_PRICE, 
    PE_RATIO, NPV, DATE_CREATED, CREATED_BY, DATE_MODIFIED, MODIFIED_BY, NB_SHARES, CR_BALANCE, 
    DB_BALANCE, BID_PRICE, UNREAL, GROSS_NAV, ASK_PRICE, BID_VOLUME, ASK_VOLUME, DATE_UPDATED, PRICE_CHANGED_YN,
    CONSIDER_IN_PROCESS_REG_YN
  </sql>
  <select id="selectPMSSEC_PRICE" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.PMSSEC_PRICEVOKey" >
    select 
    <include refid="Base_Column_List" />
    from PMSSEC_PRICE
    where BRANCH = #{BRANCH}
      and COMP_CODE = #{COMP_CODE}
      and MARKET_DATE = #{MARKET_DATE}
      and SECURITY_CODE1 = #{SECURITY_CODE1}
      and SECURITY_CODE2 = #{SECURITY_CODE2}
  </select>
  <delete id="deletePMSSEC_PRICE" parameterType="com.path.dbmaps.vo.PMSSEC_PRICEVOKey" >
    delete from PMSSEC_PRICE
    where BRANCH = #{BRANCH}
      and COMP_CODE = #{COMP_CODE}
      and MARKET_DATE = #{MARKET_DATE}
      and SECURITY_CODE1 = #{SECURITY_CODE1}
      and SECURITY_CODE2 = #{SECURITY_CODE2}
  </delete>
  <insert id="insertPMSSEC_PRICE" parameterType="com.path.dbmaps.vo.PMSSEC_PRICEVO" >
    insert into PMSSEC_PRICE
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="BRANCH != null and BRANCH != emptyBigDecimalValue" >
        BRANCH,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="MARKET_DATE != null" >
        MARKET_DATE,
      </if>
      <if test="SECURITY_CODE1 != null and SECURITY_CODE1 != emptyBigDecimalValue" >
        SECURITY_CODE1,
      </if>
      <if test="SECURITY_CODE2 != null and SECURITY_CODE2 != emptyBigDecimalValue" >
        SECURITY_CODE2,
      </if>
      <if test="MAXIMUM_PRICE != null and MAXIMUM_PRICE != emptyBigDecimalValue" >
        MAXIMUM_PRICE,
      </if>
      <if test="MINIMUM_PRICE != null and MINIMUM_PRICE != emptyBigDecimalValue" >
        MINIMUM_PRICE,
      </if>
      <if test="CLOSING_PRICE != null and CLOSING_PRICE != emptyBigDecimalValue" >
        CLOSING_PRICE,
      </if>
      <if test="TRADED_QTY != null and TRADED_QTY != emptyBigDecimalValue" >
        TRADED_QTY,
      </if>
      <if test="NUMBER_OF_TRADES != null and NUMBER_OF_TRADES != emptyBigDecimalValue" >
        NUMBER_OF_TRADES,
      </if>
      <if test="VALUE_TRADED != null and VALUE_TRADED != emptyBigDecimalValue" >
        VALUE_TRADED,
      </if>
      <if test="OPEN_PRICE != null and OPEN_PRICE != emptyBigDecimalValue" >
        OPEN_PRICE,
      </if>
      <if test="STATUS != null" >
        STATUS,
      </if>
      <if test="CURRENCY != null and CURRENCY != emptyBigDecimalValue" >
        CURRENCY,
      </if>
      <if test="CLOSING_PRICE_CV != null and CLOSING_PRICE_CV != emptyBigDecimalValue" >
        CLOSING_PRICE_CV,
      </if>
      <if test="FUTURE_MAXIMUM_PRICE != null and FUTURE_MAXIMUM_PRICE != emptyBigDecimalValue" >
        FUTURE_MAXIMUM_PRICE,
      </if>
      <if test="FUTURE_MINIMUM_PRICE != null and FUTURE_MINIMUM_PRICE != emptyBigDecimalValue" >
        FUTURE_MINIMUM_PRICE,
      </if>
      <if test="FUTURE_CLOSING_PRICE != null and FUTURE_CLOSING_PRICE != emptyBigDecimalValue" >
        FUTURE_CLOSING_PRICE,
      </if>
      <if test="PE_RATIO != null and PE_RATIO != emptyBigDecimalValue" >
        PE_RATIO,
      </if>
      <if test="NPV != null and NPV != emptyBigDecimalValue" >
        NPV,
      </if>
      <if test="DATE_CREATED != null" >
        DATE_CREATED,
      </if>
      <if test="CREATED_BY != null" >
        CREATED_BY,
      </if>
      <if test="DATE_MODIFIED != null" >
        DATE_MODIFIED,
      </if>
      <if test="MODIFIED_BY != null" >
        MODIFIED_BY,
      </if>
      <if test="NB_SHARES != null and NB_SHARES != emptyBigDecimalValue" >
        NB_SHARES,
      </if>
      <if test="CR_BALANCE != null and CR_BALANCE != emptyBigDecimalValue" >
        CR_BALANCE,
      </if>
      <if test="DB_BALANCE != null and DB_BALANCE != emptyBigDecimalValue" >
        DB_BALANCE,
      </if>
      <if test="BID_PRICE != null and BID_PRICE != emptyBigDecimalValue" >
        BID_PRICE,
      </if>
      <if test="UNREAL != null and UNREAL != emptyBigDecimalValue" >
        UNREAL,
      </if>
      <if test="GROSS_NAV != null and GROSS_NAV != emptyBigDecimalValue" >
        GROSS_NAV,
      </if>
      <if test="ASK_PRICE != null and ASK_PRICE != emptyBigDecimalValue" >
        ASK_PRICE,
      </if>
      <if test="BID_VOLUME != null and BID_VOLUME != emptyBigDecimalValue" >
        BID_VOLUME,
      </if>
      <if test="ASK_VOLUME != null and ASK_VOLUME != emptyBigDecimalValue" >
        ASK_VOLUME,
      </if>
      DATE_UPDATED,
      <if test="PRICE_CHANGED_YN != null" >
        PRICE_CHANGED_YN,
      </if>
      <if test="CONSIDER_IN_PROCESS_REG_YN != null and !&quot;&quot;.equals(CONSIDER_IN_PROCESS_REG_YN)" >
        CONSIDER_IN_PROCESS_REG_YN,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="BRANCH != null and BRANCH != emptyBigDecimalValue" >
        #{BRANCH},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="MARKET_DATE != null" >
        #{MARKET_DATE},
      </if>
      <if test="SECURITY_CODE1 != null and SECURITY_CODE1 != emptyBigDecimalValue" >
        #{SECURITY_CODE1},
      </if>
      <if test="SECURITY_CODE2 != null and SECURITY_CODE2 != emptyBigDecimalValue" >
        #{SECURITY_CODE2},
      </if>
      <if test="MAXIMUM_PRICE != null and MAXIMUM_PRICE != emptyBigDecimalValue" >
        #{MAXIMUM_PRICE},
      </if>
      <if test="MINIMUM_PRICE != null and MINIMUM_PRICE != emptyBigDecimalValue" >
        #{MINIMUM_PRICE},
      </if>
      <if test="CLOSING_PRICE != null and CLOSING_PRICE != emptyBigDecimalValue" >
        #{CLOSING_PRICE},
      </if>
      <if test="TRADED_QTY != null and TRADED_QTY != emptyBigDecimalValue" >
        #{TRADED_QTY},
      </if>
      <if test="NUMBER_OF_TRADES != null and NUMBER_OF_TRADES != emptyBigDecimalValue" >
        #{NUMBER_OF_TRADES},
      </if>
      <if test="VALUE_TRADED != null and VALUE_TRADED != emptyBigDecimalValue" >
        #{VALUE_TRADED},
      </if>
      <if test="OPEN_PRICE != null and OPEN_PRICE != emptyBigDecimalValue" >
        #{OPEN_PRICE},
      </if>
      <if test="STATUS != null" >
        #{STATUS},
      </if>
      <if test="CURRENCY != null and CURRENCY != emptyBigDecimalValue" >
        #{CURRENCY},
      </if>
      <if test="CLOSING_PRICE_CV != null and CLOSING_PRICE_CV != emptyBigDecimalValue" >
        #{CLOSING_PRICE_CV},
      </if>
      <if test="FUTURE_MAXIMUM_PRICE != null and FUTURE_MAXIMUM_PRICE != emptyBigDecimalValue" >
        #{FUTURE_MAXIMUM_PRICE},
      </if>
      <if test="FUTURE_MINIMUM_PRICE != null and FUTURE_MINIMUM_PRICE != emptyBigDecimalValue" >
        #{FUTURE_MINIMUM_PRICE},
      </if>
      <if test="FUTURE_CLOSING_PRICE != null and FUTURE_CLOSING_PRICE != emptyBigDecimalValue" >
        #{FUTURE_CLOSING_PRICE},
      </if>
      <if test="PE_RATIO != null and PE_RATIO != emptyBigDecimalValue" >
        #{PE_RATIO},
      </if>
      <if test="NPV != null and NPV != emptyBigDecimalValue" >
        #{NPV},
      </if>
      <if test="DATE_CREATED != null" >
        #{DATE_CREATED},
      </if>
      <if test="CREATED_BY != null" >
        #{CREATED_BY},
      </if>
      <if test="DATE_MODIFIED != null" >
        #{DATE_MODIFIED},
      </if>
      <if test="MODIFIED_BY != null" >
        #{MODIFIED_BY},
      </if>
      <if test="NB_SHARES != null and NB_SHARES != emptyBigDecimalValue" >
        #{NB_SHARES},
      </if>
      <if test="CR_BALANCE != null and CR_BALANCE != emptyBigDecimalValue" >
        #{CR_BALANCE},
      </if>
      <if test="DB_BALANCE != null and DB_BALANCE != emptyBigDecimalValue" >
        #{DB_BALANCE},
      </if>
      <if test="BID_PRICE != null and BID_PRICE != emptyBigDecimalValue" >
        #{BID_PRICE},
      </if>
      <if test="UNREAL != null and UNREAL != emptyBigDecimalValue" >
        #{UNREAL},
      </if>
      <if test="GROSS_NAV != null and GROSS_NAV != emptyBigDecimalValue" >
        #{GROSS_NAV},
      </if>
      <if test="ASK_PRICE != null and ASK_PRICE != emptyBigDecimalValue" >
        #{ASK_PRICE},
      </if>
      <if test="BID_VOLUME != null and BID_VOLUME != emptyBigDecimalValue" >
        #{BID_VOLUME},
      </if>
      <if test="ASK_VOLUME != null and ASK_VOLUME != emptyBigDecimalValue" >
        #{ASK_VOLUME},
      </if>
      <choose >
        <when test="isSybase == 1" >
           GETDATE(),
        </when>
        <otherwise >
           SYSDATE,
        </otherwise>
      </choose>
      <if test="PRICE_CHANGED_YN != null" >
        #{PRICE_CHANGED_YN},
      </if>
      <if test="CONSIDER_IN_PROCESS_REG_YN != null and !&quot;&quot;.equals(CONSIDER_IN_PROCESS_REG_YN)" >
        #{CONSIDER_IN_PROCESS_REG_YN},
      </if>
    </trim>
  </insert>
  <sql id="sql_updatePMSSEC_PRICE" >
    update PMSSEC_PRICE
    <set >
      <if test="MAXIMUM_PRICE != null" >
        <choose >
          <when test="MAXIMUM_PRICE == emptyBigDecimalValue" >
            MAXIMUM_PRICE = NULL ,
          </when>
          <otherwise >
            MAXIMUM_PRICE = #{MAXIMUM_PRICE},
          </otherwise>
        </choose>
      </if>
      <if test="MINIMUM_PRICE != null" >
        <choose >
          <when test="MINIMUM_PRICE == emptyBigDecimalValue" >
            MINIMUM_PRICE = NULL ,
          </when>
          <otherwise >
            MINIMUM_PRICE = #{MINIMUM_PRICE},
          </otherwise>
        </choose>
      </if>
      <if test="CLOSING_PRICE != null" >
        <choose >
          <when test="CLOSING_PRICE == emptyBigDecimalValue" >
            CLOSING_PRICE = NULL ,
          </when>
          <otherwise >
            CLOSING_PRICE = #{CLOSING_PRICE},
          </otherwise>
        </choose>
      </if>
      <if test="TRADED_QTY != null" >
        <choose >
          <when test="TRADED_QTY == emptyBigDecimalValue" >
            TRADED_QTY = NULL ,
          </when>
          <otherwise >
            TRADED_QTY = #{TRADED_QTY},
          </otherwise>
        </choose>
      </if>
      <if test="NUMBER_OF_TRADES != null" >
        <choose >
          <when test="NUMBER_OF_TRADES == emptyBigDecimalValue" >
            NUMBER_OF_TRADES = NULL ,
          </when>
          <otherwise >
            NUMBER_OF_TRADES = #{NUMBER_OF_TRADES},
          </otherwise>
        </choose>
      </if>
      <if test="VALUE_TRADED != null" >
        <choose >
          <when test="VALUE_TRADED == emptyBigDecimalValue" >
            VALUE_TRADED = NULL ,
          </when>
          <otherwise >
            VALUE_TRADED = #{VALUE_TRADED},
          </otherwise>
        </choose>
      </if>
      <if test="OPEN_PRICE != null" >
        <choose >
          <when test="OPEN_PRICE == emptyBigDecimalValue" >
            OPEN_PRICE = NULL ,
          </when>
          <otherwise >
            OPEN_PRICE = #{OPEN_PRICE},
          </otherwise>
        </choose>
      </if>
      <if test="STATUS != null" >
        STATUS = #{STATUS},
      </if>
      <if test="CURRENCY != null" >
        <choose >
          <when test="CURRENCY == emptyBigDecimalValue" >
            CURRENCY = NULL ,
          </when>
          <otherwise >
            CURRENCY = #{CURRENCY},
          </otherwise>
        </choose>
      </if>
      <if test="CLOSING_PRICE_CV != null" >
        <choose >
          <when test="CLOSING_PRICE_CV == emptyBigDecimalValue" >
            CLOSING_PRICE_CV = NULL ,
          </when>
          <otherwise >
            CLOSING_PRICE_CV = #{CLOSING_PRICE_CV},
          </otherwise>
        </choose>
      </if>
      <if test="FUTURE_MAXIMUM_PRICE != null" >
        <choose >
          <when test="FUTURE_MAXIMUM_PRICE == emptyBigDecimalValue" >
            FUTURE_MAXIMUM_PRICE = NULL ,
          </when>
          <otherwise >
            FUTURE_MAXIMUM_PRICE = #{FUTURE_MAXIMUM_PRICE},
          </otherwise>
        </choose>
      </if>
      <if test="FUTURE_MINIMUM_PRICE != null" >
        <choose >
          <when test="FUTURE_MINIMUM_PRICE == emptyBigDecimalValue" >
            FUTURE_MINIMUM_PRICE = NULL ,
          </when>
          <otherwise >
            FUTURE_MINIMUM_PRICE = #{FUTURE_MINIMUM_PRICE},
          </otherwise>
        </choose>
      </if>
      <if test="FUTURE_CLOSING_PRICE != null" >
        <choose >
          <when test="FUTURE_CLOSING_PRICE == emptyBigDecimalValue" >
            FUTURE_CLOSING_PRICE = NULL ,
          </when>
          <otherwise >
            FUTURE_CLOSING_PRICE = #{FUTURE_CLOSING_PRICE},
          </otherwise>
        </choose>
      </if>
      <if test="PE_RATIO != null" >
        <choose >
          <when test="PE_RATIO == emptyBigDecimalValue" >
            PE_RATIO = NULL ,
          </when>
          <otherwise >
            PE_RATIO = #{PE_RATIO},
          </otherwise>
        </choose>
      </if>
      <if test="NPV != null" >
        <choose >
          <when test="NPV == emptyBigDecimalValue" >
            NPV = NULL ,
          </when>
          <otherwise >
            NPV = #{NPV},
          </otherwise>
        </choose>
      </if>
      <if test="DATE_CREATED != null" >
        DATE_CREATED = #{DATE_CREATED},
      </if>
      <if test="CREATED_BY != null" >
        CREATED_BY = #{CREATED_BY},
      </if> 
      <if test="DATE_MODIFIED != null" >
        DATE_MODIFIED = #{DATE_MODIFIED},
      </if>
      <if test="MODIFIED_BY != null" >
        MODIFIED_BY = #{MODIFIED_BY},
      </if>
      <if test="NB_SHARES != null" >
        <choose >
          <when test="NB_SHARES == emptyBigDecimalValue" >
            NB_SHARES = NULL ,
          </when>
          <otherwise >
            NB_SHARES = #{NB_SHARES},
          </otherwise>
        </choose>
      </if>
      <if test="CR_BALANCE != null" >
        <choose >
          <when test="CR_BALANCE == emptyBigDecimalValue" >
            CR_BALANCE = NULL ,
          </when>
          <otherwise >
            CR_BALANCE = #{CR_BALANCE},
          </otherwise>
        </choose>
      </if>
      <if test="DB_BALANCE != null" >
        <choose >
          <when test="DB_BALANCE == emptyBigDecimalValue" >
            DB_BALANCE = NULL ,
          </when>
          <otherwise >
            DB_BALANCE = #{DB_BALANCE},
          </otherwise>
        </choose>
      </if>
      <if test="BID_PRICE != null" >
        <choose >
          <when test="BID_PRICE == emptyBigDecimalValue" >
            BID_PRICE = NULL ,
          </when>
          <otherwise >
            BID_PRICE = #{BID_PRICE},
          </otherwise>
        </choose>
      </if>
      <if test="UNREAL != null" >
        <choose >
          <when test="UNREAL == emptyBigDecimalValue" >
            UNREAL = NULL ,
          </when>
          <otherwise >
            UNREAL = #{UNREAL},
          </otherwise>
        </choose>
      </if>
      <if test="GROSS_NAV != null" >
        <choose >
          <when test="GROSS_NAV == emptyBigDecimalValue" >
            GROSS_NAV = NULL ,
          </when>
          <otherwise >
            GROSS_NAV = #{GROSS_NAV},
          </otherwise>
        </choose>
      </if>
      <if test="ASK_PRICE != null" >
        <choose >
          <when test="ASK_PRICE == emptyBigDecimalValue" >
            ASK_PRICE = NULL ,
          </when>
          <otherwise >
            ASK_PRICE = #{ASK_PRICE},
          </otherwise>
        </choose>
      </if>
      <if test="BID_VOLUME != null" >
        <choose >
          <when test="BID_VOLUME == emptyBigDecimalValue" >
            BID_VOLUME = NULL ,
          </when>
          <otherwise >
            BID_VOLUME = #{BID_VOLUME},
          </otherwise>
        </choose>
      </if>
      <if test="ASK_VOLUME != null" >
        <choose >
          <when test="ASK_VOLUME == emptyBigDecimalValue" >
            ASK_VOLUME = NULL ,
          </when>
          <otherwise >
            ASK_VOLUME = #{ASK_VOLUME},
          </otherwise>
        </choose>
      </if>
      DATE_UPDATED = 
      <choose >
        <when test="isSybase == 1" >
           GETDATE(),
        </when>
        <otherwise >
           SYSDATE,
        </otherwise>
      </choose>
      <if test="PRICE_CHANGED_YN != null" >
        PRICE_CHANGED_YN = #{PRICE_CHANGED_YN},
      </if> 
      <if test="CONSIDER_IN_PROCESS_REG_YN != null" >
        <choose >
          <when test="CONSIDER_IN_PROCESS_REG_YN.equals(&quot;&quot;)" >
            CONSIDER_IN_PROCESS_REG_YN = NULL ,
          </when>
          <otherwise >
            CONSIDER_IN_PROCESS_REG_YN = #{CONSIDER_IN_PROCESS_REG_YN},
          </otherwise>
        </choose>
      </if>
    </set>
    where BRANCH = #{BRANCH}
      and COMP_CODE = #{COMP_CODE}
      and MARKET_DATE = #{MARKET_DATE}
      and SECURITY_CODE1 = #{SECURITY_CODE1}
      and SECURITY_CODE2 = #{SECURITY_CODE2}
  </sql>
  <update id="updatePMSSEC_PRICE" parameterType="com.path.dbmaps.vo.PMSSEC_PRICEVO" >
    <include refid="sql_updatePMSSEC_PRICE" />
    <if test="DATE_UPDATED != null" >
      AND DATE_UPDATED = #{DATE_UPDATED}
    </if>
  </update>
</mapper>