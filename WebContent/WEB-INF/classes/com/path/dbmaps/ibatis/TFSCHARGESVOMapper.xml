<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="TFSCHARGES" >
  <resultMap id="BaseResultMap" type="com.path.dbmaps.vo.TFSCHARGESVO" >
    <id column="CODE" property="CODE" />
    <id column="COMP_CODE" property="COMP_CODE" />
    <result column="BRIEF_NAME_ENG" property="BRIEF_NAME_ENG" />
    <result column="LONG_NAME_ENG" property="LONG_NAME_ENG" />
    <result column="BRIEF_NAME_ARAB" property="BRIEF_NAME_ARAB" />
    <result column="LONG_NAME_ARAB" property="LONG_NAME_ARAB" />
    <result column="TYPE" property="TYPE" />
    <result column="FLAT_AMOUNT" property="FLAT_AMOUNT" />
    <result column="MINIMUM_AMOUNT" property="MINIMUM_AMOUNT" />
    <result column="CR_ACC_GL" property="CR_ACC_GL" />
    <result column="CR_ACC_CIF_SUB_NO" property="CR_ACC_CIF_SUB_NO" />
    <result column="CR_ACC_SL_NO" property="CR_ACC_SL_NO" />
    <result column="ROUNDING" property="ROUNDING" />
    <result column="ROUNDING_POINT" property="ROUNDING_POINT" />
    <result column="COMMISSION_GL" property="COMMISSION_GL" />
    <result column="COMMISSION_CIF" property="COMMISSION_CIF" />
    <result column="COMMISSION_SL" property="COMMISSION_SL" />
    <result column="PASS_ACCRUAL" property="PASS_ACCRUAL" />
    <result column="MAXIMUM_AMOUNT" property="MAXIMUM_AMOUNT" />
    <result column="CR_ACC_BR" property="CR_ACC_BR" />
    <result column="DEFAULT_LOGGED_CR_BR" property="DEFAULT_LOGGED_CR_BR" />
    <result column="DIFFERENT_CY_CHARGE" property="DIFFERENT_CY_CHARGE" />
    <result column="PERCENTAGE" property="PERCENTAGE" />
    <result column="COMP_MAT_DTE" property="COMP_MAT_DTE" />
    <result column="FIXED_AMNT" property="FIXED_AMNT" />
    <result column="ALLOW_MODIFY_MIN" property="ALLOW_MODIFY_MIN" />
    <result column="CHARGE_MODIFY_FLG" property="CHARGE_MODIFY_FLG" />
    <result column="CHARGE_MODIFY_NBR" property="CHARGE_MODIFY_NBR" />
    <result column="VAT_CODE" property="VAT_CODE" />
    <result column="ALLOW_MODIFY_CHARGES" property="ALLOW_MODIFY_CHARGES" />
    <result column="CONSIDER_FLAT_BASE_CY" property="CONSIDER_FLAT_BASE_CY" />
    <result column="CONSIDER_TAX_FED_CHARGES_YN" property="CONSIDER_TAX_FED_CHARGES_YN" />
    <result column="NON_PROV_AMT_CHARGE" property="NON_PROV_AMT_CHARGE" />
    <result column="PROV_AMT_CHARGE" property="PROV_AMT_CHARGE" />
    <result column="CUST_FLAT_AMOUNT" property="CUST_FLAT_AMOUNT" />
    <result column="CUST_PERC_AMOUNT" property="CUST_PERC_AMOUNT" />
    <result column="PENALTY_ACC_BR" property="PENALTY_ACC_BR" />
    <result column="PENALTY_ACC_GL" property="PENALTY_ACC_GL" />
    <result column="PENALTY_ACC_CIF_SUB_NO" property="PENALTY_ACC_CIF_SUB_NO" />
    <result column="PENALTY_ACC_SL" property="PENALTY_ACC_SL" />
    <result column="PAYMENT_ACC_BR" property="PAYMENT_ACC_BR" />
    <result column="PAYMENT_ACC_GL" property="PAYMENT_ACC_GL" />
    <result column="PAYMENT_ACC_CIF_SUB_NO" property="PAYMENT_ACC_CIF_SUB_NO" />
    <result column="PAYMENT_ACC_SL" property="PAYMENT_ACC_SL" />
    <result column="BANK_FLAT_AMOUNT" property="BANK_FLAT_AMOUNT" />
    <result column="BANK_PERC_AMOUNT" property="BANK_PERC_AMOUNT" />
    <result column="BANK_ACC_BR" property="BANK_ACC_BR" />
    <result column="BANK_ACC_GL" property="BANK_ACC_GL" />
    <result column="BANK_ACC_CIF_SUB_NO" property="BANK_ACC_CIF_SUB_NO" />
    <result column="BANK_ACC_SL" property="BANK_ACC_SL" />
    <result column="CREDIT_ACC_BR" property="CREDIT_ACC_BR" />
    <result column="CREDIT_ACC_GL" property="CREDIT_ACC_GL" />
    <result column="CREDIT_ACC_CIF_SUB_NO" property="CREDIT_ACC_CIF_SUB_NO" />
    <result column="CREDIT_ACC_SL" property="CREDIT_ACC_SL" />
    <result column="ADV_PAYMENT_PENALTY_IMPORT_LC" property="ADV_PAYMENT_PENALTY_IMPORT_LC" />
    <result column="STATUS" property="STATUS" />
    <result column="CREATED_BY" property="CREATED_BY" />
    <result column="CREATED_DATE" property="CREATED_DATE" />
    <result column="APPROVED_BY" property="APPROVED_BY" />
    <result column="APPROVED_DATE" property="APPROVED_DATE" />
    <result column="MODIFIED_BY" property="MODIFIED_BY" />
    <result column="MODIFIED_DATE" property="MODIFIED_DATE" />
    <result column="REJECTED_BY" property="REJECTED_BY" />
    <result column="REJECTED_DATE" property="REJECTED_DATE" />
    <result column="ADVANCE_CHARGE_BR" property="ADVANCE_CHARGE_BR" />
    <result column="ADVANCE_CHARGE_CIF" property="ADVANCE_CHARGE_CIF" />
    <result column="ADVANCE_CHARGE_GL" property="ADVANCE_CHARGE_GL" />
    <result column="ADVANCE_CHARGE_SL" property="ADVANCE_CHARGE_SL" />
    <result column="RECEIVABLE_BR" property="RECEIVABLE_BR" />
    <result column="RECEIVABLE_CIF" property="RECEIVABLE_CIF" />
    <result column="RECEIVABLE_GL" property="RECEIVABLE_GL" />
    <result column="RECEIVABLE_SL" property="RECEIVABLE_SL" />
    <result column="REVOLVING_CHARGE_YN" property="REVOLVING_CHARGE_YN" />
  </resultMap>
  <sql id="Base_Column_List" >
    CODE, COMP_CODE, BRIEF_NAME_ENG, LONG_NAME_ENG, BRIEF_NAME_ARAB, LONG_NAME_ARAB, 
    TYPE, FLAT_AMOUNT, MINIMUM_AMOUNT, CR_ACC_GL, CR_ACC_CIF_SUB_NO, CR_ACC_SL_NO, ROUNDING, 
    ROUNDING_POINT, COMMISSION_GL, COMMISSION_CIF, COMMISSION_SL, PASS_ACCRUAL, MAXIMUM_AMOUNT, 
    CR_ACC_BR, DEFAULT_LOGGED_CR_BR, DIFFERENT_CY_CHARGE, PERCENTAGE, COMP_MAT_DTE, FIXED_AMNT, 
    ALLOW_MODIFY_MIN, CHARGE_MODIFY_FLG, CHARGE_MODIFY_NBR, VAT_CODE, ALLOW_MODIFY_CHARGES, 
    CONSIDER_FLAT_BASE_CY, NON_PROV_AMT_CHARGE, CONSIDER_TAX_FED_CHARGES_YN, PROV_AMT_CHARGE, CUST_FLAT_AMOUNT, CUST_PERC_AMOUNT, 
    PENALTY_ACC_BR, PENALTY_ACC_GL, PENALTY_ACC_CIF_SUB_NO, PENALTY_ACC_SL, PAYMENT_ACC_BR, 
    PAYMENT_ACC_GL, PAYMENT_ACC_CIF_SUB_NO, PAYMENT_ACC_SL, BANK_FLAT_AMOUNT, BANK_PERC_AMOUNT, 
    BANK_ACC_BR, BANK_ACC_GL, BANK_ACC_CIF_SUB_NO, BANK_ACC_SL, CREDIT_ACC_BR, CREDIT_ACC_GL, 
    CREDIT_ACC_CIF_SUB_NO, CREDIT_ACC_SL, ADV_PAYMENT_PENALTY_IMPORT_LC, STATUS, CREATED_BY, CREATED_DATE, APPROVED_BY, APPROVED_DATE, MODIFIED_BY, 
    MODIFIED_DATE, REJECTED_BY, REJECTED_DATE, ADVANCE_CHARGE_BR, ADVANCE_CHARGE_CIF, 
    ADVANCE_CHARGE_GL, ADVANCE_CHARGE_SL, RECEIVABLE_BR, RECEIVABLE_CIF, RECEIVABLE_GL, 
    RECEIVABLE_SL, REVOLVING_CHARGE_YN
  </sql>
  <select id="selectTFSCHARGES" resultMap="BaseResultMap" parameterType="com.path.dbmaps.vo.TFSCHARGESVO" >
    select 
    <include refid="Base_Column_List" />
    from TFSCHARGES
    where CODE = #{CODE}
      and COMP_CODE = #{COMP_CODE}
  </select>
  <delete id="deleteTFSCHARGES" parameterType="com.path.dbmaps.vo.TFSCHARGESVO" >
    delete from TFSCHARGES
    where CODE = #{CODE}
      and COMP_CODE = #{COMP_CODE}
  </delete>
  <insert id="insertTFSCHARGES" parameterType="com.path.dbmaps.vo.TFSCHARGESVO" >
    insert into TFSCHARGES
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="CODE != null and CODE != emptyBigDecimalValue" >
        CODE,
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        COMP_CODE,
      </if>
      <if test="BRIEF_NAME_ENG != null" >
        BRIEF_NAME_ENG,
      </if>
      <if test="LONG_NAME_ENG != null" >
        LONG_NAME_ENG,
      </if>
      <if test="BRIEF_NAME_ARAB != null" >
        BRIEF_NAME_ARAB,
      </if>
      <if test="LONG_NAME_ARAB != null" >
        LONG_NAME_ARAB,
      </if>
      <if test="TYPE != null" >
        TYPE,
      </if>
      <if test="FLAT_AMOUNT != null and FLAT_AMOUNT != emptyBigDecimalValue" >
        FLAT_AMOUNT,
      </if>
      <if test="MINIMUM_AMOUNT != null and MINIMUM_AMOUNT != emptyBigDecimalValue" >
        MINIMUM_AMOUNT,
      </if>
      <if test="CR_ACC_GL != null and CR_ACC_GL != emptyBigDecimalValue" >
        CR_ACC_GL,
      </if>
      <if test="CR_ACC_CIF_SUB_NO != null and CR_ACC_CIF_SUB_NO != emptyBigDecimalValue" >
        CR_ACC_CIF_SUB_NO,
      </if>
      <if test="CR_ACC_SL_NO != null and CR_ACC_SL_NO != emptyBigDecimalValue" >
        CR_ACC_SL_NO,
      </if>
      <if test="ROUNDING != null" >
        ROUNDING,
      </if>
      <if test="ROUNDING_POINT != null and ROUNDING_POINT != emptyBigDecimalValue" >
        ROUNDING_POINT,
      </if>
      <if test="COMMISSION_GL != null and COMMISSION_GL != emptyBigDecimalValue" >
        COMMISSION_GL,
      </if>
      <if test="COMMISSION_CIF != null and COMMISSION_CIF != emptyBigDecimalValue" >
        COMMISSION_CIF,
      </if>
      <if test="COMMISSION_SL != null and COMMISSION_SL != emptyBigDecimalValue" >
        COMMISSION_SL,
      </if>
      <if test="PASS_ACCRUAL != null" >
        PASS_ACCRUAL,
      </if>
      <if test="MAXIMUM_AMOUNT != null and MAXIMUM_AMOUNT != emptyBigDecimalValue" >
        MAXIMUM_AMOUNT,
      </if>
      <if test="CR_ACC_BR != null and CR_ACC_BR != emptyBigDecimalValue" >
        CR_ACC_BR,
      </if>
      <if test="DEFAULT_LOGGED_CR_BR != null" >
        DEFAULT_LOGGED_CR_BR,
      </if>
      <if test="DIFFERENT_CY_CHARGE != null" >
        DIFFERENT_CY_CHARGE,
      </if>
      <if test="PERCENTAGE != null and PERCENTAGE != emptyBigDecimalValue" >
        PERCENTAGE,
      </if>
      <if test="COMP_MAT_DTE != null" >
        COMP_MAT_DTE,
      </if>
      <if test="FIXED_AMNT != null and FIXED_AMNT != emptyBigDecimalValue" >
        FIXED_AMNT,
      </if>
      <if test="ALLOW_MODIFY_MIN != null" >
        ALLOW_MODIFY_MIN,
      </if>
      <if test="CHARGE_MODIFY_FLG != null" >
        CHARGE_MODIFY_FLG,
      </if>
      <if test="CHARGE_MODIFY_NBR != null and CHARGE_MODIFY_NBR != emptyBigDecimalValue" >
        CHARGE_MODIFY_NBR,
      </if>
      <if test="VAT_CODE != null and VAT_CODE != emptyBigDecimalValue" >
        VAT_CODE,
      </if>
      <if test="ALLOW_MODIFY_CHARGES != null" >
        ALLOW_MODIFY_CHARGES,
      </if>
      <if test="CONSIDER_FLAT_BASE_CY != null" >
        CONSIDER_FLAT_BASE_CY,
      </if>
      <if test="NON_PROV_AMT_CHARGE != null and NON_PROV_AMT_CHARGE != emptyBigDecimalValue" >
        NON_PROV_AMT_CHARGE,
      </if>
      <if test="PROV_AMT_CHARGE != null and PROV_AMT_CHARGE != emptyBigDecimalValue" >
        PROV_AMT_CHARGE,
      </if>
      <if test="CUST_FLAT_AMOUNT != null and CUST_FLAT_AMOUNT != emptyBigDecimalValue" >
        CUST_FLAT_AMOUNT,
      </if>
      <if test="CUST_PERC_AMOUNT != null and CUST_PERC_AMOUNT != emptyBigDecimalValue" >
        CUST_PERC_AMOUNT,
      </if>
      <if test="PENALTY_ACC_BR != null and PENALTY_ACC_BR != emptyBigDecimalValue" >
        PENALTY_ACC_BR,
      </if>
      <if test="PENALTY_ACC_GL != null and PENALTY_ACC_GL != emptyBigDecimalValue" >
        PENALTY_ACC_GL,
      </if>
      <if test="PENALTY_ACC_CIF_SUB_NO != null and PENALTY_ACC_CIF_SUB_NO != emptyBigDecimalValue" >
        PENALTY_ACC_CIF_SUB_NO,
      </if>
      <if test="PENALTY_ACC_SL != null and PENALTY_ACC_SL != emptyBigDecimalValue" >
        PENALTY_ACC_SL,
      </if>
      <if test="PAYMENT_ACC_BR != null and PAYMENT_ACC_BR != emptyBigDecimalValue" >
        PAYMENT_ACC_BR,
      </if>
      <if test="PAYMENT_ACC_GL != null and PAYMENT_ACC_GL != emptyBigDecimalValue" >
        PAYMENT_ACC_GL,
      </if>
      <if test="PAYMENT_ACC_CIF_SUB_NO != null and PAYMENT_ACC_CIF_SUB_NO != emptyBigDecimalValue" >
        PAYMENT_ACC_CIF_SUB_NO,
      </if>
      <if test="PAYMENT_ACC_SL != null and PAYMENT_ACC_SL != emptyBigDecimalValue" >
        PAYMENT_ACC_SL,
      </if>
      <if test="BANK_FLAT_AMOUNT != null and BANK_FLAT_AMOUNT != emptyBigDecimalValue" >
        BANK_FLAT_AMOUNT,
      </if>
      <if test="BANK_PERC_AMOUNT != null and BANK_PERC_AMOUNT != emptyBigDecimalValue" >
        BANK_PERC_AMOUNT,
      </if>
      <if test="BANK_ACC_BR != null and BANK_ACC_BR != emptyBigDecimalValue" >
        BANK_ACC_BR,
      </if>
      <if test="BANK_ACC_GL != null and BANK_ACC_GL != emptyBigDecimalValue" >
        BANK_ACC_GL,
      </if>
      <if test="BANK_ACC_CIF_SUB_NO != null and BANK_ACC_CIF_SUB_NO != emptyBigDecimalValue" >
        BANK_ACC_CIF_SUB_NO,
      </if>
      <if test="BANK_ACC_SL != null and BANK_ACC_SL != emptyBigDecimalValue" >
        BANK_ACC_SL,
      </if>
      <if test="CREDIT_ACC_BR != null and CREDIT_ACC_BR != emptyBigDecimalValue" >
        CREDIT_ACC_BR,
      </if>
      <if test="CREDIT_ACC_GL != null and CREDIT_ACC_GL != emptyBigDecimalValue" >
        CREDIT_ACC_GL,
      </if>
      <if test="CREDIT_ACC_CIF_SUB_NO != null and CREDIT_ACC_CIF_SUB_NO != emptyBigDecimalValue" >
        CREDIT_ACC_CIF_SUB_NO,
      </if>
      <if test="CREDIT_ACC_SL != null and CREDIT_ACC_SL != emptyBigDecimalValue" >
        CREDIT_ACC_SL,
      </if>
      <if test="CONSIDER_TAX_FED_CHARGES_YN != null" >
        CONSIDER_TAX_FED_CHARGES_YN,
      </if>
      <if test="ADV_PAYMENT_PENALTY_IMPORT_LC != null" >
        ADV_PAYMENT_PENALTY_IMPORT_LC,
      </if>
      <if test="STATUS != null and !&quot;&quot;.equals(STATUS)" >
        STATUS,
      </if>
      <if test="CREATED_BY != null and !&quot;&quot;.equals(CREATED_BY)" >
        CREATED_BY,
      </if>
      <if test="CREATED_DATE != null" >
        CREATED_DATE,
      </if>
      <if test="APPROVED_BY != null and !&quot;&quot;.equals(APPROVED_BY)" >
        APPROVED_BY,
      </if>
      <if test="APPROVED_DATE != null" >
        APPROVED_DATE,
      </if>
      <if test="MODIFIED_BY != null and !&quot;&quot;.equals(MODIFIED_BY)" >
        MODIFIED_BY,
      </if>
      <if test="MODIFIED_DATE != null" >
        MODIFIED_DATE,
      </if>
      <if test="REJECTED_BY != null and !&quot;&quot;.equals(REJECTED_BY)" >
        REJECTED_BY,
      </if>
      <if test="REJECTED_DATE != null" >
        REJECTED_DATE,
      </if>
      <if test="ADVANCE_CHARGE_BR != null and ADVANCE_CHARGE_BR != emptyBigDecimalValue" >
        ADVANCE_CHARGE_BR,
      </if>
      <if test="ADVANCE_CHARGE_CIF != null and ADVANCE_CHARGE_CIF != emptyBigDecimalValue" >
        ADVANCE_CHARGE_CIF,
      </if>
      <if test="ADVANCE_CHARGE_GL != null and ADVANCE_CHARGE_GL != emptyBigDecimalValue" >
        ADVANCE_CHARGE_GL,
      </if>
      <if test="ADVANCE_CHARGE_SL != null and ADVANCE_CHARGE_SL != emptyBigDecimalValue" >
        ADVANCE_CHARGE_SL,
      </if>
      <if test="RECEIVABLE_BR != null and RECEIVABLE_BR != emptyBigDecimalValue" >
        RECEIVABLE_BR,
      </if>
      <if test="RECEIVABLE_CIF != null and RECEIVABLE_CIF != emptyBigDecimalValue" >
        RECEIVABLE_CIF,
      </if>
      <if test="RECEIVABLE_GL != null and RECEIVABLE_GL != emptyBigDecimalValue" >
        RECEIVABLE_GL,
      </if>
      <if test="RECEIVABLE_SL != null and RECEIVABLE_SL != emptyBigDecimalValue" >
        RECEIVABLE_SL,
      </if>
      <if test="REVOLVING_CHARGE_YN != null and !&quot;&quot;.equals(REVOLVING_CHARGE_YN)" >
        REVOLVING_CHARGE_YN,
      </if>
      
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="CODE != null and CODE != emptyBigDecimalValue" >
        #{CODE},
      </if>
      <if test="COMP_CODE != null and COMP_CODE != emptyBigDecimalValue" >
        #{COMP_CODE},
      </if>
      <if test="BRIEF_NAME_ENG != null" >
        #{BRIEF_NAME_ENG},
      </if>
      <if test="LONG_NAME_ENG != null" >
        #{LONG_NAME_ENG},
      </if>
      <if test="BRIEF_NAME_ARAB != null" >
        #{BRIEF_NAME_ARAB},
      </if>
      <if test="LONG_NAME_ARAB != null" >
        #{LONG_NAME_ARAB},
      </if>
      <if test="TYPE != null" >
        #{TYPE},
      </if>
      <if test="FLAT_AMOUNT != null and FLAT_AMOUNT != emptyBigDecimalValue" >
        #{FLAT_AMOUNT},
      </if>
      <if test="MINIMUM_AMOUNT != null and MINIMUM_AMOUNT != emptyBigDecimalValue" >
        #{MINIMUM_AMOUNT},
      </if>
      <if test="CR_ACC_GL != null and CR_ACC_GL != emptyBigDecimalValue" >
        #{CR_ACC_GL},
      </if>
      <if test="CR_ACC_CIF_SUB_NO != null and CR_ACC_CIF_SUB_NO != emptyBigDecimalValue" >
        #{CR_ACC_CIF_SUB_NO},
      </if>
      <if test="CR_ACC_SL_NO != null and CR_ACC_SL_NO != emptyBigDecimalValue" >
        #{CR_ACC_SL_NO},
      </if>
      <if test="ROUNDING != null" >
        #{ROUNDING},
      </if>
      <if test="ROUNDING_POINT != null and ROUNDING_POINT != emptyBigDecimalValue" >
        #{ROUNDING_POINT},
      </if>
      <if test="COMMISSION_GL != null and COMMISSION_GL != emptyBigDecimalValue" >
        #{COMMISSION_GL},
      </if>
      <if test="COMMISSION_CIF != null and COMMISSION_CIF != emptyBigDecimalValue" >
        #{COMMISSION_CIF},
      </if>
      <if test="COMMISSION_SL != null and COMMISSION_SL != emptyBigDecimalValue" >
        #{COMMISSION_SL},
      </if>
      <if test="PASS_ACCRUAL != null" >
        #{PASS_ACCRUAL},
      </if>
      <if test="MAXIMUM_AMOUNT != null and MAXIMUM_AMOUNT != emptyBigDecimalValue" >
        #{MAXIMUM_AMOUNT},
      </if>
      <if test="CR_ACC_BR != null and CR_ACC_BR != emptyBigDecimalValue" >
        #{CR_ACC_BR},
      </if>
      <if test="DEFAULT_LOGGED_CR_BR != null" >
        #{DEFAULT_LOGGED_CR_BR},
      </if>
      <if test="DIFFERENT_CY_CHARGE != null" >
        #{DIFFERENT_CY_CHARGE},
      </if>
      <if test="PERCENTAGE != null and PERCENTAGE != emptyBigDecimalValue" >
        #{PERCENTAGE},
      </if>
      <if test="COMP_MAT_DTE != null" >
        #{COMP_MAT_DTE},
      </if>
      <if test="FIXED_AMNT != null and FIXED_AMNT != emptyBigDecimalValue" >
        #{FIXED_AMNT},
      </if>
      <if test="ALLOW_MODIFY_MIN != null" >
        #{ALLOW_MODIFY_MIN},
      </if>
      <if test="CHARGE_MODIFY_FLG != null" >
        #{CHARGE_MODIFY_FLG},
      </if>
      <if test="CHARGE_MODIFY_NBR != null and CHARGE_MODIFY_NBR != emptyBigDecimalValue" >
        #{CHARGE_MODIFY_NBR},
      </if>
      <if test="VAT_CODE != null and VAT_CODE != emptyBigDecimalValue" >
        #{VAT_CODE},
      </if>
      <if test="ALLOW_MODIFY_CHARGES != null" >
        #{ALLOW_MODIFY_CHARGES},
      </if>
      <if test="CONSIDER_FLAT_BASE_CY != null" >
        #{CONSIDER_FLAT_BASE_CY},
      </if>
      <if test="NON_PROV_AMT_CHARGE != null and NON_PROV_AMT_CHARGE != emptyBigDecimalValue" >
        #{NON_PROV_AMT_CHARGE},
      </if>
      <if test="PROV_AMT_CHARGE != null and PROV_AMT_CHARGE != emptyBigDecimalValue" >
        #{PROV_AMT_CHARGE},
      </if>
      <if test="CUST_FLAT_AMOUNT != null and CUST_FLAT_AMOUNT != emptyBigDecimalValue" >
        #{CUST_FLAT_AMOUNT},
      </if>
      <if test="CUST_PERC_AMOUNT != null and CUST_PERC_AMOUNT != emptyBigDecimalValue" >
        #{CUST_PERC_AMOUNT},
      </if>
      <if test="PENALTY_ACC_BR != null and PENALTY_ACC_BR != emptyBigDecimalValue" >
        #{PENALTY_ACC_BR},
      </if>
      <if test="PENALTY_ACC_GL != null and PENALTY_ACC_GL != emptyBigDecimalValue" >
        #{PENALTY_ACC_GL},
      </if>
      <if test="PENALTY_ACC_CIF_SUB_NO != null and PENALTY_ACC_CIF_SUB_NO != emptyBigDecimalValue" >
        #{PENALTY_ACC_CIF_SUB_NO},
      </if>
      <if test="PENALTY_ACC_SL != null and PENALTY_ACC_SL != emptyBigDecimalValue" >
        #{PENALTY_ACC_SL},
      </if>
      <if test="PAYMENT_ACC_BR != null and PAYMENT_ACC_BR != emptyBigDecimalValue" >
        #{PAYMENT_ACC_BR},
      </if>
      <if test="PAYMENT_ACC_GL != null and PAYMENT_ACC_GL != emptyBigDecimalValue" >
        #{PAYMENT_ACC_GL},
      </if>
      <if test="PAYMENT_ACC_CIF_SUB_NO != null and PAYMENT_ACC_CIF_SUB_NO != emptyBigDecimalValue" >
        #{PAYMENT_ACC_CIF_SUB_NO},
      </if>
      <if test="PAYMENT_ACC_SL != null and PAYMENT_ACC_SL != emptyBigDecimalValue" >
        #{PAYMENT_ACC_SL},
      </if>
      <if test="BANK_FLAT_AMOUNT != null and BANK_FLAT_AMOUNT != emptyBigDecimalValue" >
        #{BANK_FLAT_AMOUNT},
      </if>
      <if test="BANK_PERC_AMOUNT != null and BANK_PERC_AMOUNT != emptyBigDecimalValue" >
        #{BANK_PERC_AMOUNT},
      </if>
      <if test="BANK_ACC_BR != null and BANK_ACC_BR != emptyBigDecimalValue" >
        #{BANK_ACC_BR},
      </if>
      <if test="BANK_ACC_GL != null and BANK_ACC_GL != emptyBigDecimalValue" >
        #{BANK_ACC_GL},
      </if>
      <if test="BANK_ACC_CIF_SUB_NO != null and BANK_ACC_CIF_SUB_NO != emptyBigDecimalValue" >
        #{BANK_ACC_CIF_SUB_NO},
      </if>
      <if test="BANK_ACC_SL != null and BANK_ACC_SL != emptyBigDecimalValue" >
        #{BANK_ACC_SL},
      </if>
      <if test="CREDIT_ACC_BR != null and CREDIT_ACC_BR != emptyBigDecimalValue" >
        #{CREDIT_ACC_BR},
      </if>
      <if test="CREDIT_ACC_GL != null and CREDIT_ACC_GL != emptyBigDecimalValue" >
        #{CREDIT_ACC_GL},
      </if>
      <if test="CREDIT_ACC_CIF_SUB_NO != null and CREDIT_ACC_CIF_SUB_NO != emptyBigDecimalValue" >
        #{CREDIT_ACC_CIF_SUB_NO},
      </if>
      <if test="CREDIT_ACC_SL != null and CREDIT_ACC_SL != emptyBigDecimalValue" >
        #{CREDIT_ACC_SL},
      </if>
      <if test="CONSIDER_TAX_FED_CHARGES_YN != null" >
        #{CONSIDER_TAX_FED_CHARGES_YN},
      </if>
      <if test="ADV_PAYMENT_PENALTY_IMPORT_LC != null" >
        #{ADV_PAYMENT_PENALTY_IMPORT_LC},
      </if>
      <if test="STATUS != null and !&quot;&quot;.equals(STATUS)" >
        #{STATUS},
      </if>
      <if test="CREATED_BY != null and !&quot;&quot;.equals(CREATED_BY)" >
        #{CREATED_BY},
      </if>
      <if test="CREATED_DATE != null" >
        #{CREATED_DATE},
      </if>
      <if test="APPROVED_BY != null and !&quot;&quot;.equals(APPROVED_BY)" >
        #{APPROVED_BY},
      </if>
      <if test="APPROVED_DATE != null" >
        #{APPROVED_DATE},
      </if>
      <if test="MODIFIED_BY != null and !&quot;&quot;.equals(MODIFIED_BY)" >
        #{MODIFIED_BY},
      </if>
      <if test="MODIFIED_DATE != null" >
        #{MODIFIED_DATE},
      </if>
      <if test="REJECTED_BY != null and !&quot;&quot;.equals(REJECTED_BY)" >
        #{REJECTED_BY},
      </if>
      <if test="REJECTED_DATE != null" >
        #{REJECTED_DATE},
      </if>
      <if test="ADVANCE_CHARGE_BR != null and ADVANCE_CHARGE_BR != emptyBigDecimalValue" >
        #{ADVANCE_CHARGE_BR},
      </if>
      <if test="ADVANCE_CHARGE_CIF != null and ADVANCE_CHARGE_CIF != emptyBigDecimalValue" >
        #{ADVANCE_CHARGE_CIF},
      </if>
      <if test="ADVANCE_CHARGE_GL != null and ADVANCE_CHARGE_GL != emptyBigDecimalValue">
        #{ADVANCE_CHARGE_GL},
      </if>
      <if test="ADVANCE_CHARGE_SL != null and ADVANCE_CHARGE_SL != emptyBigDecimalValue">
        #{ADVANCE_CHARGE_SL},
      </if>
      <if test="RECEIVABLE_BR != null and RECEIVABLE_BR != emptyBigDecimalValue">
        #{RECEIVABLE_BR},
      </if>
      <if test="RECEIVABLE_CIF != null and RECEIVABLE_CIF != emptyBigDecimalValue">
        #{RECEIVABLE_CIF},
      </if>
      <if test="RECEIVABLE_GL != null and RECEIVABLE_GL != emptyBigDecimalValue">
        #{RECEIVABLE_GL},
      </if>
      <if test="RECEIVABLE_SL != null and RECEIVABLE_SL != emptyBigDecimalValue">
        #{RECEIVABLE_SL},
      </if>
      <if test="REVOLVING_CHARGE_YN != null and !&quot;&quot;.equals(REVOLVING_CHARGE_YN)" >
        #{REVOLVING_CHARGE_YN},
      </if>
    </trim>
  </insert>
  <sql id="sql_updateTFSCHARGES" >
    update TFSCHARGES
    <set >
      <if test="BRIEF_NAME_ENG != null" >
        BRIEF_NAME_ENG = #{BRIEF_NAME_ENG},
      </if>
      <if test="LONG_NAME_ENG != null" >
        LONG_NAME_ENG = #{LONG_NAME_ENG},
      </if>
      <if test="BRIEF_NAME_ARAB != null" >
        BRIEF_NAME_ARAB = #{BRIEF_NAME_ARAB},
      </if>
      <if test="LONG_NAME_ARAB != null" >
        LONG_NAME_ARAB = #{LONG_NAME_ARAB},
      </if>
      <if test="TYPE != null" >
        TYPE = #{TYPE},
      </if>
      <if test="FLAT_AMOUNT != null" >
        <choose >
          <when test="FLAT_AMOUNT == emptyBigDecimalValue" >
            FLAT_AMOUNT = NULL ,
          </when>
          <otherwise >
            FLAT_AMOUNT = #{FLAT_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="MINIMUM_AMOUNT != null" >
        <choose >
          <when test="MINIMUM_AMOUNT == emptyBigDecimalValue" >
            MINIMUM_AMOUNT = NULL ,
          </when>
          <otherwise >
            MINIMUM_AMOUNT = #{MINIMUM_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="CR_ACC_GL != null" >
        <choose >
          <when test="CR_ACC_GL == emptyBigDecimalValue" >
            CR_ACC_GL = NULL ,
          </when>
          <otherwise >
            CR_ACC_GL = #{CR_ACC_GL},
          </otherwise>
        </choose>
      </if>
      <if test="CR_ACC_CIF_SUB_NO != null" >
        <choose >
          <when test="CR_ACC_CIF_SUB_NO == emptyBigDecimalValue" >
            CR_ACC_CIF_SUB_NO = NULL ,
          </when>
          <otherwise >
            CR_ACC_CIF_SUB_NO = #{CR_ACC_CIF_SUB_NO},
          </otherwise>
        </choose>
      </if>
      <if test="CR_ACC_SL_NO != null" >
        <choose >
          <when test="CR_ACC_SL_NO == emptyBigDecimalValue" >
            CR_ACC_SL_NO = NULL ,
          </when>
          <otherwise >
            CR_ACC_SL_NO = #{CR_ACC_SL_NO},
          </otherwise>
        </choose>
      </if>
      <if test="ROUNDING != null" >
        ROUNDING = #{ROUNDING},
      </if>
      <if test="ROUNDING_POINT != null" >
        <choose >
          <when test="ROUNDING_POINT == emptyBigDecimalValue" >
            ROUNDING_POINT = NULL ,
          </when>
          <otherwise >
            ROUNDING_POINT = #{ROUNDING_POINT},
          </otherwise>
        </choose>
      </if>
      <if test="COMMISSION_GL != null" >
        <choose >
          <when test="COMMISSION_GL == emptyBigDecimalValue" >
            COMMISSION_GL = NULL ,
          </when>
          <otherwise >
            COMMISSION_GL = #{COMMISSION_GL},
          </otherwise>
        </choose>
      </if>
      <if test="COMMISSION_CIF != null" >
        <choose >
          <when test="COMMISSION_CIF == emptyBigDecimalValue" >
            COMMISSION_CIF = NULL ,
          </when>
          <otherwise >
            COMMISSION_CIF = #{COMMISSION_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="COMMISSION_SL != null" >
        <choose >
          <when test="COMMISSION_SL == emptyBigDecimalValue" >
            COMMISSION_SL = NULL ,
          </when>
          <otherwise >
            COMMISSION_SL = #{COMMISSION_SL},
          </otherwise>
        </choose>
      </if>
      <if test="PASS_ACCRUAL != null" >
        PASS_ACCRUAL = #{PASS_ACCRUAL},
      </if>
      <if test="MAXIMUM_AMOUNT != null" >
        <choose >
          <when test="MAXIMUM_AMOUNT == emptyBigDecimalValue" >
            MAXIMUM_AMOUNT = NULL ,
          </when>
          <otherwise >
            MAXIMUM_AMOUNT = #{MAXIMUM_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="CR_ACC_BR != null" >
        <choose >
          <when test="CR_ACC_BR == emptyBigDecimalValue" >
            CR_ACC_BR = NULL ,
          </when>
          <otherwise >
            CR_ACC_BR = #{CR_ACC_BR},
          </otherwise>
        </choose>
      </if>
      <if test="DEFAULT_LOGGED_CR_BR != null" >
        DEFAULT_LOGGED_CR_BR = #{DEFAULT_LOGGED_CR_BR},
      </if>
      <if test="DIFFERENT_CY_CHARGE != null" >
        DIFFERENT_CY_CHARGE = #{DIFFERENT_CY_CHARGE},
      </if>
      <if test="PERCENTAGE != null" >
        <choose >
          <when test="PERCENTAGE == emptyBigDecimalValue" >
            PERCENTAGE = NULL ,
          </when>
          <otherwise >
            PERCENTAGE = #{PERCENTAGE},
          </otherwise>
        </choose>
      </if>
      <if test="COMP_MAT_DTE != null" >
        COMP_MAT_DTE = #{COMP_MAT_DTE},
      </if>
      <if test="FIXED_AMNT != null" >
        <choose >
          <when test="FIXED_AMNT == emptyBigDecimalValue" >
            FIXED_AMNT = NULL ,
          </when>
          <otherwise >
            FIXED_AMNT = #{FIXED_AMNT},
          </otherwise>
        </choose>
      </if>
      <if test="ALLOW_MODIFY_MIN != null" >
        ALLOW_MODIFY_MIN = #{ALLOW_MODIFY_MIN},
      </if>
      <if test="CHARGE_MODIFY_FLG != null" >
        CHARGE_MODIFY_FLG = #{CHARGE_MODIFY_FLG},
      </if>
      <if test="CHARGE_MODIFY_NBR != null" >
        <choose >
          <when test="CHARGE_MODIFY_NBR == emptyBigDecimalValue" >
            CHARGE_MODIFY_NBR = NULL ,
          </when>
          <otherwise >
            CHARGE_MODIFY_NBR = #{CHARGE_MODIFY_NBR},
          </otherwise>
        </choose>
      </if>
      <if test="VAT_CODE != null" >
        <choose >
          <when test="VAT_CODE == emptyBigDecimalValue" >
            VAT_CODE = NULL ,
          </when>
          <otherwise >
            VAT_CODE = #{VAT_CODE},
          </otherwise>
        </choose>
      </if>
      <if test="ALLOW_MODIFY_CHARGES != null" >
        ALLOW_MODIFY_CHARGES = #{ALLOW_MODIFY_CHARGES},
      </if>
      <if test="CONSIDER_FLAT_BASE_CY != null" >
        CONSIDER_FLAT_BASE_CY = #{CONSIDER_FLAT_BASE_CY},
      </if>
      <if test="NON_PROV_AMT_CHARGE != null" >
        <choose >
          <when test="NON_PROV_AMT_CHARGE == emptyBigDecimalValue" >
            NON_PROV_AMT_CHARGE = NULL ,
          </when>
          <otherwise >
            NON_PROV_AMT_CHARGE = #{NON_PROV_AMT_CHARGE},
          </otherwise>
        </choose>
      </if>
      <if test="PROV_AMT_CHARGE != null" >
        <choose >
          <when test="PROV_AMT_CHARGE == emptyBigDecimalValue" >
            PROV_AMT_CHARGE = NULL ,
          </when>
          <otherwise >
            PROV_AMT_CHARGE = #{PROV_AMT_CHARGE},
          </otherwise>
        </choose>
      </if>
      <if test="CUST_FLAT_AMOUNT != null" >
        <choose >
          <when test="CUST_FLAT_AMOUNT == emptyBigDecimalValue" >
            CUST_FLAT_AMOUNT = NULL ,
          </when>
          <otherwise >
            CUST_FLAT_AMOUNT = #{CUST_FLAT_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="CUST_PERC_AMOUNT != null" >
        <choose >
          <when test="CUST_PERC_AMOUNT == emptyBigDecimalValue" >
            CUST_PERC_AMOUNT = NULL ,
          </when>
          <otherwise >
            CUST_PERC_AMOUNT = #{CUST_PERC_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="PENALTY_ACC_BR != null" >
        <choose >
          <when test="PENALTY_ACC_BR == emptyBigDecimalValue" >
            PENALTY_ACC_BR = NULL ,
          </when>
          <otherwise >
            PENALTY_ACC_BR = #{PENALTY_ACC_BR},
          </otherwise>
        </choose>
      </if>
      <if test="PENALTY_ACC_GL != null" >
        <choose >
          <when test="PENALTY_ACC_GL == emptyBigDecimalValue" >
            PENALTY_ACC_GL = NULL ,
          </when>
          <otherwise >
            PENALTY_ACC_GL = #{PENALTY_ACC_GL},
          </otherwise>
        </choose>
      </if>
      <if test="PENALTY_ACC_CIF_SUB_NO != null" >
        <choose >
          <when test="PENALTY_ACC_CIF_SUB_NO == emptyBigDecimalValue" >
            PENALTY_ACC_CIF_SUB_NO = NULL ,
          </when>
          <otherwise >
            PENALTY_ACC_CIF_SUB_NO = #{PENALTY_ACC_CIF_SUB_NO},
          </otherwise>
        </choose>
      </if>
      <if test="PENALTY_ACC_SL != null" >
        <choose >
          <when test="PENALTY_ACC_SL == emptyBigDecimalValue" >
            PENALTY_ACC_SL = NULL ,
          </when>
          <otherwise >
            PENALTY_ACC_SL = #{PENALTY_ACC_SL},
          </otherwise>
        </choose>
      </if>
      <if test="PAYMENT_ACC_BR != null" >
        <choose >
          <when test="PAYMENT_ACC_BR == emptyBigDecimalValue" >
            PAYMENT_ACC_BR = NULL ,
          </when>
          <otherwise >
            PAYMENT_ACC_BR = #{PAYMENT_ACC_BR},
          </otherwise>
        </choose>
      </if>
      <if test="PAYMENT_ACC_GL != null" >
        <choose >
          <when test="PAYMENT_ACC_GL == emptyBigDecimalValue" >
            PAYMENT_ACC_GL = NULL ,
          </when>
          <otherwise >
            PAYMENT_ACC_GL = #{PAYMENT_ACC_GL},
          </otherwise>
        </choose>
      </if>
      <if test="PAYMENT_ACC_CIF_SUB_NO != null" >
        <choose >
          <when test="PAYMENT_ACC_CIF_SUB_NO == emptyBigDecimalValue" >
            PAYMENT_ACC_CIF_SUB_NO = NULL ,
          </when>
          <otherwise >
            PAYMENT_ACC_CIF_SUB_NO = #{PAYMENT_ACC_CIF_SUB_NO},
          </otherwise>
        </choose>
      </if>
      <if test="PAYMENT_ACC_SL != null" >
        <choose >
          <when test="PAYMENT_ACC_SL == emptyBigDecimalValue" >
            PAYMENT_ACC_SL = NULL ,
          </when>
          <otherwise >
            PAYMENT_ACC_SL = #{PAYMENT_ACC_SL},
          </otherwise>
        </choose>
      </if>
      <if test="BANK_FLAT_AMOUNT != null" >
        <choose >
          <when test="BANK_FLAT_AMOUNT == emptyBigDecimalValue" >
            BANK_FLAT_AMOUNT = NULL ,
          </when>
          <otherwise >
            BANK_FLAT_AMOUNT = #{BANK_FLAT_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="BANK_PERC_AMOUNT != null" >
        <choose >
          <when test="BANK_PERC_AMOUNT == emptyBigDecimalValue" >
            BANK_PERC_AMOUNT = NULL ,
          </when>
          <otherwise >
            BANK_PERC_AMOUNT = #{BANK_PERC_AMOUNT},
          </otherwise>
        </choose>
      </if>
      <if test="BANK_ACC_BR != null" >
        <choose >
          <when test="BANK_ACC_BR == emptyBigDecimalValue" >
            BANK_ACC_BR = NULL ,
          </when>
          <otherwise >
            BANK_ACC_BR = #{BANK_ACC_BR},
          </otherwise>
        </choose>
      </if>
      <if test="BANK_ACC_GL != null" >
        <choose >
          <when test="BANK_ACC_GL == emptyBigDecimalValue" >
            BANK_ACC_GL = NULL ,
          </when>
          <otherwise >
            BANK_ACC_GL = #{BANK_ACC_GL},
          </otherwise>
        </choose>
      </if>
      <if test="BANK_ACC_CIF_SUB_NO != null" >
        <choose >
          <when test="BANK_ACC_CIF_SUB_NO == emptyBigDecimalValue" >
            BANK_ACC_CIF_SUB_NO = NULL ,
          </when>
          <otherwise >
            BANK_ACC_CIF_SUB_NO = #{BANK_ACC_CIF_SUB_NO},
          </otherwise>
        </choose>
      </if>
      <if test="BANK_ACC_SL != null" >
        <choose >
          <when test="BANK_ACC_SL == emptyBigDecimalValue" >
            BANK_ACC_SL = NULL ,
          </when>
          <otherwise >
            BANK_ACC_SL = #{BANK_ACC_SL},
          </otherwise>
        </choose>
      </if>
      <if test="CREDIT_ACC_BR != null" >
        <choose >
          <when test="CREDIT_ACC_BR == emptyBigDecimalValue" >
            CREDIT_ACC_BR = NULL ,
          </when>
          <otherwise >
            CREDIT_ACC_BR = #{CREDIT_ACC_BR},
          </otherwise>
        </choose>
      </if>
      <if test="CREDIT_ACC_GL != null" >
        <choose >
          <when test="CREDIT_ACC_GL == emptyBigDecimalValue" >
            CREDIT_ACC_GL = NULL ,
          </when>
          <otherwise >
            CREDIT_ACC_GL = #{CREDIT_ACC_GL},
          </otherwise>
        </choose>
      </if>
      <if test="CREDIT_ACC_CIF_SUB_NO != null" >
        <choose >
          <when test="CREDIT_ACC_CIF_SUB_NO == emptyBigDecimalValue" >
            CREDIT_ACC_CIF_SUB_NO = NULL ,
          </when>
          <otherwise >
            CREDIT_ACC_CIF_SUB_NO = #{CREDIT_ACC_CIF_SUB_NO},
          </otherwise>
        </choose>
      </if>
      <if test="CREDIT_ACC_SL != null" >
        <choose >
          <when test="CREDIT_ACC_SL == emptyBigDecimalValue" >
            CREDIT_ACC_SL = NULL ,
          </when>
          <otherwise >
            CREDIT_ACC_SL = #{CREDIT_ACC_SL},
          </otherwise>
        </choose>
      </if>
      <if test="CONSIDER_TAX_FED_CHARGES_YN != null" >
        CONSIDER_TAX_FED_CHARGES_YN = #{CONSIDER_TAX_FED_CHARGES_YN},
      </if>
      <if test="ADV_PAYMENT_PENALTY_IMPORT_LC != null" >
        ADV_PAYMENT_PENALTY_IMPORT_LC = #{ADV_PAYMENT_PENALTY_IMPORT_LC},
      </if>
      <if test="STATUS != null" >
        <choose >
          <when test="STATUS.equals(&quot;&quot;)" >
            STATUS = NULL ,
          </when>
          <otherwise >
            STATUS = #{STATUS},
          </otherwise>
        </choose>
      </if>
      <if test="CREATED_BY != null" >
        <choose >
          <when test="CREATED_BY.equals(&quot;&quot;)" >
            CREATED_BY = NULL ,
          </when>
          <otherwise >
            CREATED_BY = #{CREATED_BY},
          </otherwise>
        </choose>
      </if>
      <if test="CREATED_DATE != null" >
        CREATED_DATE = #{CREATED_DATE},
      </if>
      <if test="APPROVED_BY != null" >
        <choose >
          <when test="APPROVED_BY.equals(&quot;&quot;)" >
            APPROVED_BY = NULL ,
          </when>
          <otherwise >
            APPROVED_BY = #{APPROVED_BY},
          </otherwise>
        </choose>
      </if>
      <if test="APPROVED_DATE != null" >
        APPROVED_DATE = #{APPROVED_DATE},
      </if>
      <if test="MODIFIED_BY != null" >
        <choose >
          <when test="MODIFIED_BY.equals(&quot;&quot;)" >
            MODIFIED_BY = NULL ,
          </when>
          <otherwise >
            MODIFIED_BY = #{MODIFIED_BY},
          </otherwise>
        </choose>
      </if>
      <if test="MODIFIED_DATE != null" >
        MODIFIED_DATE = #{MODIFIED_DATE},
      </if>
      <if test="REJECTED_BY != null" >
        <choose >
          <when test="REJECTED_BY.equals(&quot;&quot;)" >
            REJECTED_BY = NULL ,
          </when>
          <otherwise >
            REJECTED_BY = #{REJECTED_BY},
          </otherwise>
        </choose>
      </if>
      <if test="REJECTED_DATE != null" >
        REJECTED_DATE = #{REJECTED_DATE},
      </if>
      <if test="ADVANCE_CHARGE_BR != null" >
        <choose >
          <when test="ADVANCE_CHARGE_BR == emptyBigDecimalValue" >
            ADVANCE_CHARGE_BR = NULL ,
          </when>
          <otherwise >
            ADVANCE_CHARGE_BR = #{ADVANCE_CHARGE_BR},
          </otherwise>
        </choose>
      </if>
      <if test="ADVANCE_CHARGE_CIF != null" >
        <choose >
          <when test="ADVANCE_CHARGE_CIF == emptyBigDecimalValue" >
            ADVANCE_CHARGE_CIF = NULL ,
          </when>
          <otherwise >
            ADVANCE_CHARGE_CIF = #{ADVANCE_CHARGE_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="ADVANCE_CHARGE_GL != null" >
        <choose >
          <when test="ADVANCE_CHARGE_GL == emptyBigDecimalValue" >
            ADVANCE_CHARGE_GL = NULL ,
          </when>
          <otherwise >
            ADVANCE_CHARGE_GL = #{ADVANCE_CHARGE_GL},
          </otherwise>
        </choose>
      </if>
      <if test="ADVANCE_CHARGE_SL != null" >
        <choose >
          <when test="ADVANCE_CHARGE_SL == emptyBigDecimalValue" >
            ADVANCE_CHARGE_SL = NULL ,
          </when>
          <otherwise >
            ADVANCE_CHARGE_SL = #{ADVANCE_CHARGE_SL},
          </otherwise>
        </choose>
      </if>
      <if test="RECEIVABLE_BR != null" >
        <choose >
          <when test="RECEIVABLE_BR == emptyBigDecimalValue" >
            RECEIVABLE_BR = NULL ,
          </when>
          <otherwise >
            RECEIVABLE_BR = #{RECEIVABLE_BR},
          </otherwise>
        </choose>
      </if>
      <if test="RECEIVABLE_CIF != null" >
        <choose >
          <when test="RECEIVABLE_CIF == emptyBigDecimalValue" >
            RECEIVABLE_CIF = NULL ,
          </when>
          <otherwise >
            RECEIVABLE_CIF = #{RECEIVABLE_CIF},
          </otherwise>
        </choose>
      </if>
      <if test="RECEIVABLE_GL != null" >
        <choose >
          <when test="RECEIVABLE_GL == emptyBigDecimalValue" >
            RECEIVABLE_GL = NULL ,
          </when>
          <otherwise >
            RECEIVABLE_GL = #{RECEIVABLE_GL},
          </otherwise>
        </choose>
      </if>
      <if test="RECEIVABLE_SL != null" >
        <choose >
          <when test="RECEIVABLE_SL == emptyBigDecimalValue" >
            RECEIVABLE_SL = NULL ,
          </when>
          <otherwise >
            RECEIVABLE_SL = #{RECEIVABLE_SL},
          </otherwise>
        </choose>
      </if>
      <if test="REVOLVING_CHARGE_YN != null" >
        <choose >
          <when test="REVOLVING_CHARGE_YN.equals(&quot;&quot;)" >
            REVOLVING_CHARGE_YN = NULL ,
          </when>
          <otherwise >
            REVOLVING_CHARGE_YN = #{REVOLVING_CHARGE_YN},
          </otherwise>
        </choose>
      </if>
    </set>
    where CODE = #{CODE}
      and COMP_CODE = #{COMP_CODE}
  </sql>
  <update id="updateTFSCHARGES" parameterType="com.path.dbmaps.vo.TFSCHARGESVO" >
    <include refid="sql_updateTFSCHARGES" />
  </update>
</mapper>