<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="iisdealcharges">
	<sql id="select_productclassChargesList">
		SELECT
		TRSCHARGES.BRIEF_NAME_ENG,
		TRSCHARGES.CR_ACC_BRANCH,
		TRSCHARGES.CR_ACC_GL,
		TRSCHARGES.CR_ACC_CIF_SUB_NO,
		TRSCHARGES.CR_ACC_SL_NO,
		TRSCHARGES.FLAT_AMOUNT,
		TRSCHARGES.MINIMUM_AMOUNT,
		CASE WHEN
		PRODUCT_CLASS_LINK_CHARGES.CHARGE_PERCENTAGE = 0 OR
		PRODUCT_CLASS_LINK_CHARGES.CHARGE_PERCENTAGE IS NULL THEN
		TRSCHARGES.PERCENTAGE
		ELSE
		PRODUCT_CLASS_LINK_CHARGES.CHARGE_PERCENTAGE
		END PERCENTAGE ,
		TRSCHARGES.PERIODICITY ,
		TRSCHARGES.PERCENTAGE_OF_PROFIT_YN ,
		PRODUCT_CLASS_LINK_CHARGES.CHARGE_CODE,
		PRODUCT_CLASS_LINK_CHARGES.CHARGE_TYPE,
		PRODUCT_CLASS_LINK_CHARGES.COLLECT_CHARGE_AT_DEAL_YN,
		PRODUCT_CLASS_LINK_CHARGES.COLLECT_CHARGES_ACCOUNT_TYPE,
		PRODUCT_CLASS_LINK_CHARGES.CHARGE_AMT_PER_INST_YN,
		TRSCHARGES.PERIODICITY,
		TRSCHARGES.ALLOW_TO_EDIT_CHARGE_PER_YN ,
		TRSCHARGES.CREDIT_TO_SD_ACCOUNT_YN,
		TRSCHARGES.CR_ACC_CURRENCY,
		TRSCHARGES.SPECIFIC_ACC_BR_CY,
		TRSCHARGES.MAXIMUM_AMOUNT,
		TRSCHARGES.DR_ACC_BRANCH,
		TRSCHARGES.DR_ACC_CURRENCY,
		TRSCHARGES.DR_ACC_GL,
		TRSCHARGES.DR_ACC_CIF_SUB_NO,
		TRSCHARGES.DR_ACC_SL_NO,
		TRSCHARGES.PAY_AT_DEAL_CLOSURE_YN,
		TRSCLASS.EXCLUDE_CHARGES,
		TRSCLASS.INITIAL_PAYMENT_TYPE
		FROM
		PRODUCT_CLASS_LINK_CHARGES, TRSCHARGES, TRSCLASS
		WHERE (
		PRODUCT_CLASS_LINK_CHARGES.COMP_CODE = TRSCHARGES.COMP_CODE ) and
		(
		PRODUCT_CLASS_LINK_CHARGES.CHARGE_CODE = TRSCHARGES.CODE ) and
		(PRODUCT_CLASS_LINK_CHARGES.COMP_CODE = TRSCLASS.COMP_CODE)AND
		(PRODUCT_CLASS_LINK_CHARGES.CLASS_CODE= TRSCLASS.CODE)AND
		(
		PRODUCT_CLASS_LINK_CHARGES.COMP_CODE = #{COMP_CODE}) AND
		(
		PRODUCT_CLASS_LINK_CHARGES.CLASS_CODE = #{CODE} )  
	</sql>

	<select id="getProductclassCharges" parameterType="com.path.dbmaps.vo.TRSCLASSVOKey"
		resultMap="productclassChargesMap">
		<include refid="select_productclassChargesList" />
	</select>

	<resultMap id="productclassChargesMap"
		type="com.path.dbmaps.vo.PRODUCT_CLASS_LINK_CHARGESVO">
		<id column="CLASS_CODE" property="CLASS_CODE" />
		<id column="COMP_CODE" property="COMP_CODE" />
		<result column="COMP_CODE" property="COMP_CODE" />
		<result column="CLASS_CODE" property="CLASS_CODE" />
		<result column="ALLOW_EDIT" property="ALLOW_EDIT" />
		<result column="CHARGE_TYPE" property="CHARGE_TYPE" />
		<result column="INCLUDE_IN_DEAL_YN" property="INCLUDE_IN_DEAL_YN" />
		<result column="COLLECT_CHARGE_AT_DEAL_YN" property="COLLECT_CHARGE_AT_DEAL_YN" />
		<result column="COLLECT_CHARGES_ACCOUNT_TYPE" property="COLLECT_CHARGES_ACCOUNT_TYPE" />
		<result column="CHARGE_AMT_PER_INST_YN" property="CHARGE_AMT_PER_INST_YN" />
		<result column="VAT_CODE" property="VAT_CODE" />
		<result column="CREDIT_TO_SD_ACCOUNT_YN" property="CREDIT_TO_SD_ACCOUNT_YN" />
		<result column="REVERSE_CHARGE_CANCELLATION_YN" property="REVERSE_CHARGE_CANCELLATION_YN" />
		<result column="RVRS_CHARGE_CANCELLATION_YN" property="RVRS_CHARGE_CANCELLATION_YN" />
		<result column="CHARGE_PERCENTAGE" property="CHARGE_PERCENTAGE" />
	</resultMap>

	<select id="getCifProfile" parameterType="com.path.dbmaps.vo.CIFVOKey"
		resultType="BigDecimal">
		SELECT CIF_PROFILE FROM CIF WHERE COMP_CODE = #{COMP_CODE}
		AND CIF_NO =
		#{CIF_NO}
    </select>

	<select id="getChargeRosterCurrencyExists" parameterType="com.path.dbmaps.vo.TRSCHARGES_ROSTERVO"
		resultType="Long">
		SELECT COUNT(1) FROM TRSCHARGES_ROSTER
		WHERE
		(TRSCHARGES_ROSTER.CODE = #{CODE})
		AND ( TRSCHARGES_ROSTER.COMP_CODE =
		#{COMP_CODE} )
		AND (#{AMOUNT} BETWEEN TRSCHARGES_ROSTER.FROM_AMT AND
		TRSCHARGES_ROSTER.TO_AMT )
		AND TRSCHARGES_ROSTER.CURRENCY_CODE =
		(SELECT MAX(CURRENCY_CODE)
		FROM TRSCHARGES_ROSTER
		WHERE COMP_CODE =
		#{COMP_CODE}
		AND CODE = #{CODE}
		AND CURRENCY_CODE IN
		(0,#{CURRENCY_CODE}))
    </select>

	<select id="getChargeExists" parameterType="com.path.dbmaps.vo.TRSCHARGES_ROSTERVOKey"
		resultType="Long">
		SELECT COUNT(1)FROM TRSCHARGES_ROSTER
		WHERE
		(TRSCHARGES_ROSTER.CODE = #{CODE}) AND (TRSCHARGES_ROSTER.COMP_CODE =
		#{COMP_CODE}) 
	</select>

	<select id="getChargeRosterExists" parameterType="com.path.dbmaps.vo.TRSCHARGES_ROSTERVO"
		resultType="Long">
		SELECT COUNT(1) FROM TRSCHARGES_ROSTER
		WHERE
		(TRSCHARGES_ROSTER.CODE = #{CODE})
		AND ( TRSCHARGES_ROSTER.COMP_CODE =
		#{COMP_CODE} )
		AND (#{AMOUNT} BETWEEN TRSCHARGES_ROSTER.FROM_AMT AND
		TRSCHARGES_ROSTER.TO_AMT )
		AND CIF_PROFILE = #{CIF_PROFILE}
		AND
		TRSCHARGES_ROSTER.CURRENCY_CODE =
		(SELECT MAX(CURRENCY_CODE)
		FROM
		TRSCHARGES_ROSTER
		WHERE COMP_CODE = #{COMP_CODE}
		AND CODE = #{CODE}
		AND
		CURRENCY_CODE IN (0,#{CURRENCY_CODE}))
    </select>

	<select id="getChargeRosterDetails" parameterType="com.path.dbmaps.vo.TRSCHARGES_ROSTERVO"
		resultType="com.path.dbmaps.vo.TRSCHARGES_ROSTERVO">
		SELECT TRSCHARGES_ROSTER.PERCENTAGE,
		TRSCHARGES_ROSTER.AMOUNT,
		TRSCHARGES_ROSTER.FACTOR,
		TRSCHARGES_ROSTER.MINIMUM_AMT
		FROM TRSCHARGES_ROSTER
		WHERE (
		TRSCHARGES_ROSTER.CODE = #{CODE}) AND ( TRSCHARGES_ROSTER.COMP_CODE
		=
		#{COMP_CODE} )
		AND (#{AMOUNT} BETWEEN TRSCHARGES_ROSTER.FROM_AMT AND
		TRSCHARGES_ROSTER.TO_AMT )
		AND CIF_PROFILE = #{CIF_PROFILE}
		AND
		TRSCHARGES_ROSTER.CURRENCY_CODE =
		(SELECT MAX(CURRENCY_CODE)
		FROM
		TRSCHARGES_ROSTER
		WHERE COMP_CODE = #{COMP_CODE}
		AND CODE = #{CODE}
		AND
		CURRENCY_CODE IN (0,#{CURRENCY_CODE}))
    </select>

	<!-- TP# 227329;Ravikant.Singh ;29/09/2014 -added AND CIF_PROFILE = #{CIF_PROFILE} condition -->
      <select id="getChargeRosterDetailsWithOutCifProfile"
            parameterType="com.path.dbmaps.vo.TRSCHARGES_ROSTERVO" resultType="com.path.dbmaps.vo.TRSCHARGES_ROSTERVO">
            SELECT      TRSCHARGES_ROSTER.PERCENTAGE,   
                        TRSCHARGES_ROSTER.AMOUNT,   
                        TRSCHARGES_ROSTER.FACTOR,
                        TRSCHARGES_ROSTER.MINIMUM_AMT
            FROM TRSCHARGES_ROSTER  
            WHERE       ( TRSCHARGES_ROSTER.CODE = #{CODE})
            AND   (
                        TRSCHARGES_ROSTER.COMP_CODE = #{COMP_CODE} )
            AND   (#{AMOUNT} BETWEEN
                        TRSCHARGES_ROSTER.FROM_AMT AND
                        TRSCHARGES_ROSTER.TO_AMT )
            AND
                        TRSCHARGES_ROSTER.CURRENCY_CODE =
                  (SELECT MAX(CURRENCY_CODE)
            FROM
            TRSCHARGES_ROSTER
            WHERE COMP_CODE = #{COMP_CODE}
            AND CODE = #{CODE}
            AND
            CURRENCY_CODE IN (0,#{CURRENCY_CODE}))
    </select>

	<select id="getClassDetails" parameterType="com.path.dbmaps.vo.TRSCLASSVOKey"
		resultType="com.path.dbmaps.vo.TRSCLASSVO">
		SELECT TRSCLASS.INITIAL_PAYMENT_TYPE,
		TRSCLASS.EXCLUDE_CHARGES FROM TRSCLASS
		WHERE COMP_CODE = #{COMP_CODE}
		AND CODE = #{CODE}
    </select>

	<select id="getProductclassLinkCharges" parameterType="com.path.dbmaps.vo.TRSCLASSVOKey"
		resultType="com.path.dbmaps.vo.PRODUCT_CLASS_LINK_CHARGESVO">
		SELECT
		CASE WHEN
		PRODUCT_CLASS_LINK_CHARGES.CHARGE_PERCENTAGE = 0 OR
		PRODUCT_CLASS_LINK_CHARGES.CHARGE_PERCENTAGE IS NULL THEN
		TRSCHARGES.PERCENTAGE
		ELSE
		PRODUCT_CLASS_LINK_CHARGES.CHARGE_PERCENTAGE
		END PERCENTAGE ,
		PRODUCT_CLASS_LINK_CHARGES.CHARGE_CODE,
		PRODUCT_CLASS_LINK_CHARGES.CHARGE_TYPE,
		PRODUCT_CLASS_LINK_CHARGES.COLLECT_CHARGE_AT_DEAL_YN,
		PRODUCT_CLASS_LINK_CHARGES.COLLECT_CHARGES_ACCOUNT_TYPE,
		PRODUCT_CLASS_LINK_CHARGES.CHARGE_AMT_PER_INST_YN,
		PRODUCT_CLASS_LINK_CHARGES.CREDIT_TO_SD_ACCOUNT_YN,
		PRODUCT_CLASS_LINK_CHARGES.ALLOW_BLOCK_ACCT_NO_BALANCE_YN
		FROM
		PRODUCT_CLASS_LINK_CHARGES,TRSCHARGES
		WHERE (
		PRODUCT_CLASS_LINK_CHARGES.COMP_CODE = TRSCHARGES.COMP_CODE ) and
		(
		PRODUCT_CLASS_LINK_CHARGES.CHARGE_CODE = TRSCHARGES.CODE ) and
		(
		PRODUCT_CLASS_LINK_CHARGES.COMP_CODE = #{COMP_CODE}) AND
		(
		PRODUCT_CLASS_LINK_CHARGES.CLASS_CODE = #{CODE} )  
    </select>

	<select id="getTrsChargeDetails" parameterType="com.path.dbmaps.vo.TRSCHARGESVOKey"
		resultType="com.path.dbmaps.vo.TRSCHARGESVO">
		SELECT BRIEF_NAME_ENG,
		CR_ACC_BRANCH,
		CR_ACC_GL,
		CR_ACC_CIF_SUB_NO,
		CR_ACC_SL_NO,
		FLAT_AMOUNT,
		MINIMUM_AMOUNT,
		PERCENTAGE ,
		COLLATERAL_PERCENTAGE,
		PERCENTAGE_OF_PROFIT_YN,
		CHARGE_TYPE
		,
		CHARGE_AMT_PER_INST_YN ,
		VAT_CODE,
		ALLOW_TO_EDIT_CHARGES,
		ALLOW_TO_EDIT_VAT_CODE,
		CASE WHEN PERIODICITY IS NULL THEN 'D' ELSE PERIODICITY END PERIODICITY,
		ALLOW_TO_EDIT_CHARGE_PER_YN,
		CALCULATED_ON_AMT,
		CREDIT_TO_SD_ACCOUNT_YN,
		SPECIFIC_ACC_BR_CY,
		CR_ACC_CURRENCY,
		MAXIMUM_AMOUNT,
		PROFIT_ON_CHARGE,
		TRSCHARGES.DR_ACC_BRANCH,
		TRSCHARGES.DR_ACC_CURRENCY,
		TRSCHARGES.DR_ACC_GL,
		TRSCHARGES.DR_ACC_CIF_SUB_NO,
		TRSCHARGES.DR_ACC_SL_NO,
		TRSCHARGES.PAY_AT_DEAL_CLOSURE_YN,
		TRSCHARGES.INSURANCE,
		TRSCHARGES.PAY_NET_INCENT_PRINC_STLMT_YN,
		TRSCHARGES.ALLOW_TO_EDIT_CHARGE_CR_AC_YN,
		FLAT_AMOUNT_CURRENCY_TYPE
		FROM TRSCHARGES
		WHERE (TRSCHARGES.COMP_CODE= #{COMP_CODE}) AND
		(TRSCHARGES.CODE =
		#{CODE})  
    </select>

	<select id="getProductclassLinkChargesObject" parameterType="com.path.dbmaps.vo.PRODUCT_CLASS_LINK_CHARGESVOKey"
		resultType="com.path.dbmaps.vo.PRODUCT_CLASS_LINK_CHARGESVO">
		SELECT	PRODUCT_CLASS_LINK_CHARGES.CHARGE_TYPE,
				CHARGE_AMT_PER_INST_YN
		FROM 	PRODUCT_CLASS_LINK_CHARGES
		WHERE	PRODUCT_CLASS_LINK_CHARGES.COMP_CODE 	= #{COMP_CODE}
		AND		PRODUCT_CLASS_LINK_CHARGES.CLASS_CODE 	= #{CLASS_CODE}
		AND		CHARGE_CODE								= #{CHARGE_CODE}
 </select>

	<resultMap id="dealchargesMap" type="trsDealChargesCO">
		<id column="SERIAL_NO" property="SERIAL_NO" />
		<id column="LINE_NO" property="LINE_NO" />
		<result column="CHARGES_CODE" property="CHARGES_CODE" />
		<result column="CHARGES_AMOUNT" property="CHARGES_AMOUNT" />
		<result column="CR_ACC_BRANCH" property="CR_ACC_BRANCH" />
		<result column="CR_ACC_CURRENCY" property="CR_ACC_CURRENCY" />
		<result column="CR_ACC_GL" property="CR_ACC_GL" />
		<result column="CR_ACC_CIF_SUB_NO" property="CR_ACC_CIF_SUB_NO" />
		<result column="CR_ACC_SL_NO" property="CR_ACC_SL_NO" />
		<result column="PROFIT_ON_CHARGES" property="PROFIT_ON_CHARGES" />
		<result column="TRSCHARGES_BRIEF_NAME_ENG" property="lsBriefNameeng" />

		<result column="CHARGES_AMT_FC" property="CHARGES_AMT_FC" />
		<result column="CHARGES_AMT_CV" property="CHARGES_AMT_CV" />
		<result column="EXCH_RATE" property="EXCH_RATE" />
		<result column="CHARGES_MULTDIV" property="CHARGES_MULTDIV" />
		<result column="CHARGE_TYPE" property="CHARGE_TYPE" />

		<result column="COLLECT_CHARGE_AT_DEAL_YN" property="COLLECT_CHARGE_AT_DEAL_YN" />
		<result column="PERCENTAGE_OF_PROFIT_YN" property="TRSCHARGES_PERCENTAGE_OF_PROFIT_YN" />

		<result column="AMOUNT_CALCULATION_BASIS" property="AMOUNT_CALCULATION_BASIS" />
		<result column="CHARGES_PERCENTAGE" property="CHARGES_PERCENTAGE" />
		<result column="PERIODICAL_NUMBER" property="PERIODICAL_NUMBER" />
		<result column="PERIODICAL_PERIODICITY" property="PERIODICAL_PERIODICITY" />
		<result column="PERIODICAL_BASIS" property="PERIODICAL_BASIS" />
		<result column="CHARGE_AMT_PER_INST_YN" property="CHARGE_AMT_PER_INST_YN" />

		<result column="VAT_CODE" property="VAT_CODE" />
		<result column="VAT_CHARGE_INSUR_PERCENT" property="VAT_CHARGE_INSUR_PERCENT" />
		<result column="VAT_CHARGE_INSUR_AMT" property="VAT_CHARGE_INSUR_AMT" />
		<result column="VAT_BRIEF_NAME_ENG" property="VAT_BRIEF_NAME_ENG" />
		<result column="TRSCHARGES_PERIODICITY" property="TRSCHARGES_PERIODICITY" />
		<result column="ALLOW_TO_EDIT_CHARGE_PER_YN" property="TRSCHARGES_ALLOW_TO_EDIT_CHARGE_PER_YN" />
		<result column="CREDIT_TO_SD_ACCOUNT_YN" property="TRSCHARGES_CREDIT_TO_SD_ACCOUNT_YN" />
		<result column="PAY_AT_DEAL_CLOSURE_YN" property="PAY_AT_DEAL_CLOSURE_YN" />
		<result column="CALC_ON_CONTRACT_PRICE_YN" property="CALC_ON_CONTRACT_PRICE_YN" />
		<result column="baseCyDecimalPoint" property="dealChargesFormat_baseCy" />
		<result column="dealCyDecimalPoint" property="dealChargesFormat" />
		<result column="chargeCyDecimalPoint" property="dealChargesFormat_chargeCy" />
		<result column="lsBriefNameeng" property="lsBriefNameeng" />
		<!-- TP#190558; Saheer.Naduthodi; 20/07/2014 [START]-->
		<result column="drAccGL" property="drAccGL" />
		<result column="drAccCifSubNo" property="drAccCifSubNo" />
		<result column="drAccSL" property="drAccSL" />
		<result column="drAccBranch" property="drAccBranch" />
		<result column="drAccCurrency" property="drAccCurrency" />
		<result column="specificAccBrCy" property="specificAccBrCy" />
		<!-- TP#190558; Saheer.Naduthodi; 20/07/2014 [END]-->
		<!-- TP#210840; Ravikant.Singh; 28/08/2014-->
        <result column="FLAT_AMOUNT" property="FLAT_AMOUNT"/>
        <!-- TP# 222676; deepu.mohandas; 18/09/2014 -->
        <result column="ALLOW_EDIT" property="ALLOW_EDIT"/>
        <result column="ALLOW_TO_EDIT_VAT_CODE" property="allowToEditVatCode"/>
        <result column="PAY_NET_INCENT_PRINC_STLMT_YN" property="TRSCHARGES_PAY_NET_INCENT_PRINC_STLMT_YN"/>
		<!-- SBI170098 ; Saheer.Naduthodi; 07/12/2017 [Begin]-->
		<result column="TEMPLATE_CODE" property="TEMPLATE_CODE"/>
		<result column="templateCodeDesc" property="templateCodeDesc"/>
		<!-- SBI170098 ; Saheer.Naduthodi; 07/12/2017 [End]-->
		<!--TP#934320; Rakesh ; 06/12/2019 [Begin] -->
		<result column="VAT_AMOUNT_CV" property="VAT_AMOUNT_CV"/>
		<result column="VAT_AMOUNT" property="VAT_AMOUNT"/>
		<!--TP#934320; Rakesh ; 06/12/2019 [End] -->
		<result column="ALLOW_BLOCK_ACCT_NO_BALANCE_YN" property="ALLOW_BLOCK_ACCT_NO_BALANCE_YN"/>
		<result column="ADJUST_FROM_VENDOR_DISCOUNT_YN" property="ADJUST_FROM_VENDOR_DISCOUNT_YN"/>
		<result column="ADJUST_VENDOR_DISCOUNT_AMOUNT" property="ADJUST_VENDOR_DISCOUNT_AMOUNT"/>
<!-- 		ITFCI150005 761688 DEEPU 60/04/2020 Start -->
		<result column="CREATE_INCIDENTAL_CHARGE_YN" property="CREATE_INCIDENTAL_CHARGE_YN"/>
		<result column="INCIDENTAL_CHARGE_COLLECT_IND" property="INCIDENTAL_CHARGE_COLLECT_IND"/>
		<result column="INCIDENTAL_CHARGE_TRS_NO" property="INCIDENTAL_CHARGE_TRS_NO"/>
<!-- 		ITFCI150005 761688 DEEPU 60/04/2020 end -->
		<result column="allowToEditChargeCracYN" property="allowToEditChargeCracYN"/>
		<result column="CALC_ON_YERLY_OUTSTND_PRINC_YN" property="calcOnYerlyOutstndPrincYN"/>
		
	</resultMap>

	<select id="getDealChargesByDeal" parameterType="trsDealChargesSC"
		resultMap="dealchargesMap">
		SELECT
		TRSDEALCHARGES.ALLOW_BLOCK_ACCT_NO_BALANCE_YN,
			TRSDEALCHARGES.SERIAL_NO SERIAL_NO,
				TRSDEALCHARGES.LINE_NO LINE_NO,
				TRSDEALCHARGES.CHARGES_CODE	CHARGES_CODE,
				( 	SELECT BRIEF_NAME_ENG FROM
					TRSCHARGES WHERE
					TRSCHARGES.COMP_CODE=#{compCode} and
					TRSCHARGES.CODE=TRSDEALCHARGES.CHARGES_CODE
				)lsBriefNameeng,
				TRSDEALCHARGES.CHARGES_AMOUNT CHARGES_AMOUNT,
				TRSDEALCHARGES.CR_ACC_BRANCH CR_ACC_BRANCH,
				TRSDEALCHARGES.CR_ACC_CURRENCY CR_ACC_CURRENCY,
				TRSDEALCHARGES.CR_ACC_GL CR_ACC_GL,
				TRSDEALCHARGES.CR_ACC_CIF_SUB_NO	CR_ACC_CIF_SUB_NO,
				TRSDEALCHARGES.CR_ACC_SL_NO CR_ACC_SL_NO,
				TRSDEALCHARGES.PROFIT_ON_CHARGES PROFIT_ON_CHARGES,
				TRSCHARGES.BRIEF_NAME_ENG TRSCHARGES_BRIEF_NAME_ENG,
				TRSDEALCHARGES.CHARGES_AMT_FC CHARGES_AMT_FC,
				TRSDEALCHARGES.CHARGES_AMT_CV CHARGES_AMT_CV,
				TRSDEALCHARGES.EXCH_RATE	EXCH_RATE,
				TRSDEALCHARGES.CHARGES_MULTDIV CHARGES_MULTDIV,
				TRSDEALCHARGES.CHARGE_TYPE CHARGE_TYPE,
				TRSDEALCHARGES.COLLECT_CHARGE_AT_DEAL_YN COLLECT_CHARGE_AT_DEAL_YN,
				TRSDEALCHARGES.COLLECT_CHARGES_ACCOUNT_TYPE	COLLECT_CHARGES_ACCOUNT_TYPE,
				TRSCHARGES.PERCENTAGE_OF_PROFIT_YN
				PERCENTAGE_OF_PROFIT_YN,
				TRSDEALCHARGES.CHARGES_PERCENTAGE			CHARGES_PERCENTAGE,
				TRSDEALCHARGES.AMOUNT_CALCULATION_BASIS		AMOUNT_CALCULATION_BASIS,
				TRSDEALCHARGES.CHARGES_CALCULATION_METHOD	CHARGES_CALCULATION_METHOD,
				TRSDEALCHARGES.PERIODICAL_NUMBER			PERIODICAL_NUMBER,
				TRSDEALCHARGES.PERIODICAL_PERIODICITY		PERIODICAL_PERIODICITY,
				TRSDEALCHARGES.PERIODICAL_BASIS				PERIODICAL_BASIS,
				TRSDEALCHARGES.CHARGE_AMT_PER_INST_YN		CHARGE_AMT_PER_INST_YN,
				TRSDEALCHARGES.VAT_CODE VAT_CODE,
				TRSDEALCHARGES.VAT_CHARGE_INSUR_PERCENT VAT_CHARGE_INSUR_PERCENT,
				TRSDEALCHARGES.VAT_CHARGE_INSUR_AMT VAT_CHARGE_INSUR_AMT,
				(	SELECT	BRIEF_NAME_ENG
					FROM 	TRSVAT
					WHERE 	TRSVAT.COMP_CODE =	TRSDEALCHARGES.COMP_CODE
					AND 	TRSVAT.COMP_CODE =	TRSDEALCHARGES.COMP_CODE
					AND 	TRSVAT.VAT_CODE  =	TRSDEALCHARGES.VAT_CODE
				)VAT_BRIEF_NAME_ENG ,
				TRSCHARGES.PERIODICITY						TRSCHARGES_PERIODICITY,
				TRSCHARGES.ALLOW_TO_EDIT_VAT_CODE 			ALLOW_TO_EDIT_VAT_CODE,
				TRSCHARGES.ALLOW_TO_EDIT_CHARGE_PER_YN		ALLOW_TO_EDIT_CHARGE_PER_YN,
				TRSCHARGES.ALLOW_TO_EDIT_CHARGES ALLOW_EDIT,
				TRSCHARGES.CREDIT_TO_SD_ACCOUNT_YN			CREDIT_TO_SD_ACCOUNT_YN,
				TRSDEALCHARGES.PAY_AT_DEAL_CLOSURE_YN		PAY_AT_DEAL_CLOSURE_YN,
				TRSDEALCHARGES.CALC_ON_CONTRACT_PRICE_YN	CALC_ON_CONTRACT_PRICE_YN,
				TRSDEALCHARGES.VAT_AMOUNT	VAT_AMOUNT,
				TRSDEALCHARGES.VAT_AMOUNT_CV	VAT_AMOUNT_CV,
				#{baseCyDecimalPoint} baseCyDecimalPoint,
				CURRENCIES_DEAL_CY.DECIMAL_POINTS dealCyDecimalPoint,
				CURRENCIES_CHARGE_CY.DECIMAL_POINTS chargeCyDecimalPoint,
				TRSCHARGES.ALLOW_TO_EDIT_CHARGE_CR_AC_YN allowToEditChargeCracYN,
				TRSCHARGES.CALC_ON_YERLY_OUTSTND_PRINC_YN  calcOnYerlyOutstndPrincYN,
				TRSCHARGES.PAY_NET_INCENT_PRINC_STLMT_YN 	PAY_NET_INCENT_PRINC_STLMT_YN,
 				<if test='calculatorYN.equals("N")'> 
				<!--TP#975910 ; Rakesh ; 12/04/2020 [begin] -->
 				TRSDEALCHARGES.ADJUST_FROM_VENDOR_DISCOUNT_YN,
				TRSDEALCHARGES.ADJUST_VENDOR_DISCOUNT_AMOUNT,
				<!--TP#975910 ; Rakesh ; 12/04/2020 [end] -->		
					<!-- SBI170098 ; Saheer.Naduthodi; 07/12/2017 [Begin]-->
					TRSDEALCHARGES.TEMPLATE_CODE TEMPLATE_CODE,
					(	SELECT BRIEF_NAME_ENG 
						FROM TRX_TEMPLATE 
						WHERE COMP_CODE	=	TRSDEALCHARGES.COMP_CODE
						AND BRANCH_CODE	=	TRSDEALCHARGES.BRANCH_CODE
						AND CODE		=	TRSDEALCHARGES.TEMPLATE_CODE
						AND APP_NAME	=	#{appName}
					) templateCodeDesc,
				<!-- SBI170098 ; Saheer.Naduthodi; 07/12/2017 [End]-->				
				</if> 
				TRSDEALCHARGES.CREATE_INCIDENTAL_CHARGE_YN,
				TRSDEALCHARGES.INCIDENTAL_CHARGE_COLLECT_IND,
				TRSDEALCHARGES.INCIDENTAL_CHARGE_TRS_NO
		FROM
		<choose>
			<when test='calculatorYN.equals("Y")'>
				TRSDEALCHARGES_CALCULATOR TRSDEALCHARGES,
			</when>
			<otherwise>
				TRSDEALCHARGES,
			</otherwise>
		</choose>
		TRSCHARGES,		TRSDEAL ,		CURRENCIES CURRENCIES_DEAL_CY,		CURRENCIES CURRENCIES_CHARGE_CY
		WHERE (TRSDEALCHARGES.COMP_CODE =		#{compCode})
		AND (TRSDEALCHARGES.BRANCH_CODE = #{branchCode})
		AND (TRSDEALCHARGES.SERIAL_NO = #{dealNo})
		AND (TRSDEAL.COMP_CODE =	#{compCode})
		AND (TRSDEAL.BRANCH_CODE = #{branchCode})
		AND	(TRSDEAL.SERIAL_NO = #{dealNo})
		AND (TRSDEALCHARGES.COMP_CODE =		TRSCHARGES.COMP_CODE)
		AND (TRSDEALCHARGES.CHARGES_CODE =		TRSCHARGES.CODE)
		AND TRSDEAL.COMP_CODE = CURRENCIES_DEAL_CY.COMP_CODE
		AND TRSDEAL.DEAL_CY = CURRENCIES_DEAL_CY.CURRENCY_CODE
		AND	TRSDEALCHARGES.COMP_CODE = CURRENCIES_CHARGE_CY.COMP_CODE
		AND	TRSDEALCHARGES.CR_ACC_CURRENCY = CURRENCIES_CHARGE_CY.CURRENCY_CODE

	</select>

	<delete id="deleteDealChargesByDeal" parameterType="com.path.dbmaps.vo.TRSDEALCHARGESVOKey">
		DELETE FROM
		TRSDEALCHARGES
		WHERE COMP_CODE = #{COMP_CODE}
		AND BRANCH_CODE =
		#{BRANCH_CODE}
		AND SERIAL_NO
		= #{SERIAL_NO}
	</delete>


	<select id="returnPFXCharges" parameterType="trsDealChargesSC"
		resultMap="dealchargesMap">
		SELECT
		TRSPFXCHARGES.COMP_CODE,
		TRSPFXCHARGES.BRANCH_CODE,
		TRSPFXCHARGES.SERIAL_NO,
		TRSPFXCHARGES.LINE_NO,
		TRSPFXCHARGES.CHARGES_CODE,
		(
		SELECT CASE WHEN #{langCode}='AR' THEN
		BRIEF_NAME_ARAB ELSE BRIEF_NAME_ENG END FROM
		TRSCHARGES WHERE
		TRSCHARGES.COMP_CODE=#{compCode} AND
		TRSCHARGES.CODE=TRSPFXCHARGES.CHARGES_CODE
		)lsBriefNameeng,
		TRSPFXCHARGES.CHARGES_AMOUNT,
		TRSPFXCHARGES.CR_ACC_BRANCH,
		TRSPFXCHARGES.CR_ACC_CURRENCY,
		TRSPFXCHARGES.CR_ACC_GL,
		TRSPFXCHARGES.CR_ACC_CIF_SUB_NO,
		TRSPFXCHARGES.CR_ACC_SL_NO,
		TRSPFXCHARGES.PROFIT_ON_CHARGES,
		TRSCHARGES.BRIEF_NAME_ENG,
		TRSDEAL_PROMISSORY_FX.STATUS,
		CHARGES_AMT_FC,
		CHARGES_AMT_CV,
		EXCH_RATE,
		CHARGES_MULTDIV,
		0 CF_CURRENCY,
		0 CF_DECIMAL_POINTS,
		'' CF_CRUD,
		'' DIRTY,
		TRSPFXCHARGES.CHARGE_TYPE,
		'' INCLUDE_CHG,
		TRSPFXCHARGES.COLLECT_CHARGE_AT_DEAL_YN,
		TRSPFXCHARGES.COLLECT_CHARGES_ACCOUNT_TYPE,
		0 IS_CALC,
		TRSCHARGES.PERCENTAGE_OF_PROFIT_YN ,
		TRSPFXCHARGES.CHARGES_PERCENTAGE ,
		'N' allow_edit,
		TRSPFXCHARGES.AMOUNT_CALCULATION_BASIS,
		TRSPFXCHARGES.CHARGES_CALCULATION_METHOD,
		TRSPFXCHARGES.PERIODICAL_NUMBER,
		TRSPFXCHARGES.PERIODICAL_PERIODICITY,
		TRSPFXCHARGES.PERIODICAL_BASIS ,
		TRSPFXCHARGES.CHARGE_AMT_PER_INST_YN,
		TRSPFXCHARGES.VAT_CODE,
		TRSPFXCHARGES.VAT_CHARGE_INSUR_PERCENT,
		TRSPFXCHARGES.VAT_CHARGE_INSUR_AMT,
		'' VAT_DESC,
		'' ALLOW_TO_EDIT_VAT,
		0
		CF_PROTECT_RESTRUCT_DEAL_CHG,
		TRSCHARGES.PERIODICITY,
		TRSCHARGES.ALLOW_TO_EDIT_CHARGE_PER_YN ,
		TRSCHARGES.CREDIT_TO_SD_ACCOUNT_YN,
		TRSPFXCHARGES.PAY_AT_DEAL_CLOSURE_YN ,
		TRSPFXCHARGES.PFX_TYPE ,
		TRSPFXCHARGES.PFX_EXTENSION_NO,
		TRSPFXCHARGES.COLLECT_CHARGES_FROM,
		TRSPFXCHARGES.COLLECT_CHARGES_EXTENSION_NO,
		TRSPFXCHARGES.COLLECT_CHARGES_EXT_STATUS,
		TRSPFXCHARGES.PFX_CANCEL_YN,
		TRSPFXCHARGES.PFX_CANCEL_NO,
		TRSPFXCHARGES.RVRS_CHARGE_CANCELLATION_YN,
		TRSCHARGES.PAY_NET_INCENT_PRINC_STLMT_YN PAY_NET_INCENT_PRINC_STLMT_YN
		FROM TRSPFXCHARGES,
		TRSCHARGES,
		TRSDEAL_PROMISSORY_FX
		WHERE
		(TRSPFXCHARGES.COMP_CODE = #{compCode})
		AND (TRSPFXCHARGES.BRANCH_CODE
		= #{branchCode})
		AND (TRSPFXCHARGES.SERIAL_NO = #{dealNo})
		AND
		(TRSDEAL_PROMISSORY_FX.COMP_CODE = #{compCode})
		AND
		(TRSDEAL_PROMISSORY_FX.BRANCH_CODE = #{branchCode})
		<choose> 
			<when test='pfxCancellationNo != null and pfxCancellationNo != emptyBigDecimalValue'>
				AND
		(TRSDEAL_PROMISSORY_FX.SERIAL_NO = #{pfxCancellationNo})
			</when>
		
		<otherwise >
   				AND
		(TRSDEAL_PROMISSORY_FX.SERIAL_NO = #{dealNo})
			</otherwise>
			</choose>
		
		AND
		(TRSDEAL_PROMISSORY_FX.PROMISSORY_FX_TYPE = #{promissoryFxType})
		AND
		(TRSPFXCHARGES.COMP_CODE = TRSCHARGES.COMP_CODE)
		AND
		(TRSPFXCHARGES.CHARGES_CODE = TRSCHARGES.CODE)
	 <![CDATA[
AND CASE WHEN TRSPFXCHARGES.COLLECT_CHARGES_EXT_STATUS IS NULL THEN 'A' ELSE TRSPFXCHARGES.COLLECT_CHARGES_EXT_STATUS END <> 'R'
]]>
<choose> 
			<when test='pfxCancellationNo != null and pfxCancellationNo != emptyBigDecimalValue'>
			<![CDATA[	AND	 PFX_CANCEL_NO      = #{pfxCancellationNo} 	 ]]>
			</when>
		</choose>
	</select>


	<delete id="deleteTRSPFXCHARGES" parameterType="com.path.dbmaps.vo.TRSPFXCHARGESVOKey">
		delete from
		TRSPFXCHARGES
		where BRANCH_CODE = #{BRANCH_CODE}
		and COMP_CODE =
		#{COMP_CODE}
		
		<choose> 
			<when test='LINE_NO != null and LINE_NO != emptyBigDecimalValue'>
			<![CDATA[	AND	 PFX_CANCEL_NO      = #{LINE_NO} 	 ]]>
			</when>
			<otherwise >
			and SERIAL_NO = #{SERIAL_NO}
			</otherwise>
		</choose>
  </delete>
  <!-- TP#190558; Saheer.Naduthodi; 20/07/2014 [START]-->
  <select id="returnProductClassCharges" parameterType="trsDealChargesSC"
		resultMap="dealchargesMap">
	SELECT 
       	TRSCHARGES.BRIEF_NAME_ENG lsBriefNameeng,
		TRSCHARGES.CR_ACC_BRANCH CR_ACC_BRANCH,
		TRSCHARGES.CR_ACC_GL CR_ACC_GL,
		TRSCHARGES.CR_ACC_CIF_SUB_NO CR_ACC_CIF_SUB_NO,
		TRSCHARGES.CR_ACC_SL_NO CR_ACC_SL_NO,
		TRSCHARGES.FLAT_AMOUNT,
		TRSCHARGES.MINIMUM_AMOUNT,
 		CASE WHEN PRODUCT_CLASS_LINK_CHARGES.CHARGE_PERCENTAGE = 0 OR PRODUCT_CLASS_LINK_CHARGES.CHARGE_PERCENTAGE IS NULL 
 			THEN TRSCHARGES.PERCENTAGE ELSE PRODUCT_CLASS_LINK_CHARGES.CHARGE_PERCENTAGE END CHARGES_PERCENTAGE ,
		TRSCHARGES.PERIODICITY ,
		TRSCHARGES.PERCENTAGE_OF_PROFIT_YN PERCENTAGE_OF_PROFIT_YN,
		PRODUCT_CLASS_LINK_CHARGES.CHARGE_CODE CHARGES_CODE,
		PRODUCT_CLASS_LINK_CHARGES.CHARGE_TYPE CHARGE_TYPE,
     	PRODUCT_CLASS_LINK_CHARGES.COLLECT_CHARGE_AT_DEAL_YN COLLECT_CHARGE_AT_DEAL_YN,
		PRODUCT_CLASS_LINK_CHARGES.COLLECT_CHARGES_ACCOUNT_TYPE,
		PRODUCT_CLASS_LINK_CHARGES.CHARGE_AMT_PER_INST_YN CHARGE_AMT_PER_INST_YN,
		TRSCHARGES.PERIODICITY TRSCHARGES_PERIODICITY,
		TRSCHARGES.ALLOW_TO_EDIT_CHARGE_PER_YN	,
		TRSCHARGES.CREDIT_TO_SD_ACCOUNT_YN CREDIT_TO_SD_ACCOUNT_YN,
		TRSCHARGES.CR_ACC_CURRENCY,
		TRSCHARGES.SPECIFIC_ACC_BR_CY specificAccBrCy,
	 	TRSCHARGES.MAXIMUM_AMOUNT,
		TRSCHARGES.DR_ACC_BRANCH drAccBranch,
		TRSCHARGES.DR_ACC_CURRENCY drAccCurrency,
		TRSCHARGES.DR_ACC_GL drAccGL,
		TRSCHARGES.DR_ACC_CIF_SUB_NO drAccCifSubNo,
		TRSCHARGES.DR_ACC_SL_NO drAccSL,
		TRSCHARGES.PAY_AT_DEAL_CLOSURE_YN PAY_AT_DEAL_CLOSURE_YN,
		PRODUCT_CLASS_LINK_CHARGES.VAT_CODE,
		PRODUCT_CLASS_LINK_CHARGES.ALLOW_EDIT,
		TRSCHARGES.PAY_NET_INCENT_PRINC_STLMT_YN PAY_NET_INCENT_PRINC_STLMT_YN,
		PRODUCT_CLASS_LINK_CHARGES.TEMPLATE_CODE TEMPLATE_CODE,
		PRODUCT_CLASS_LINK_CHARGES.ALLOW_BLOCK_ACCT_NO_BALANCE_YN 		
  		FROM PRODUCT_CLASS_LINK_CHARGES,   
         TRSCHARGES  
		WHERE ( PRODUCT_CLASS_LINK_CHARGES.COMP_CODE = TRSCHARGES.COMP_CODE ) and  
         ( PRODUCT_CLASS_LINK_CHARGES.CHARGE_CODE = TRSCHARGES.CODE ) and  
         ( PRODUCT_CLASS_LINK_CHARGES.COMP_CODE = #{compCode}) AND  
         ( PRODUCT_CLASS_LINK_CHARGES.CLASS_CODE = #{prodClass} )  
	</select>
  	<!-- TP#190558; Saheer.Naduthodi; 20/07/2014 [END]-->
	 <select id="returnMaxLineNbrPFX" parameterType="trsDealChargesSC" resultType="BigDecimal" >
	SELECT
		MAX(LINE_NO)
	FROM TRSPFXCHARGES
	WHERE COMP_CODE 		=	#{compCode}
	AND BRANCH_CODE		=	#{branchCode}
	AND SERIAL_NO			=	#{dealNo}
</select>
<select id="returnTrsClassNostroAccountDetails"  parameterType="com.path.vo.common.iis.dealcharges.IisDealChargesCO" resultType="Integer">
 SELECT 	COUNT(1)
			FROM  	TRSCLASS_NOSTRO_ACCOUNTS  
			WHERE 	COMP_CODE 		= #{compCode}
			AND	 	CLASS_CODE 		= #{productClass}
			AND	 	ACCOUNT_TYPE 	= 'D'
	</select>
	
<!-- TP#271602;Ravikant.Singh ;16/02/2015[start] -->
      <resultMap id="returnDealChargesFromFacilityMap" type="trsDealChargesCO" >
            <id column="SERIAL_NO" property="SERIAL_NO" />
            <id column="LINE_NO" property="LINE_NO" />
            <result column="CHARGES_CODE" property="CHARGES_CODE" />
            <result column="CHARGES_AMOUNT" property="CHARGES_AMOUNT" />
            <result column="CR_ACC_BRANCH" property="CR_ACC_BRANCH" />
            <result column="CR_ACC_CURRENCY" property="CR_ACC_CURRENCY" />
            <result column="CR_ACC_GL" property="CR_ACC_GL" />
            <result column="CR_ACC_CIF_SUB_NO" property="CR_ACC_CIF_SUB_NO" />
            <result column="CR_ACC_SL_NO" property="CR_ACC_SL_NO" />
            <result column="PROFIT_ON_CHARGES" property="PROFIT_ON_CHARGES" />
            <result column="COLLECT_CHARGE_AT_DEAL_YN" property="COLLECT_CHARGE_AT_DEAL_YN" />
            <result column="CHARGE_AMT_PER_INST_YN" property="CHARGE_AMT_PER_INST_YN" />
            <result column="VAT_CODE" property="VAT_CODE" />
            <result column="CREDIT_TO_SD_ACCOUNT_YN" property="TRSCHARGES_CREDIT_TO_SD_ACCOUNT_YN" />
            <result column="CHARGES_MULTDIV" property="CHARGES_MULTDIV" />
      </resultMap>
      <select id="returnDealChargesFromFacility" parameterType="trsDealChargesSC" resultMap="returnDealChargesFromFacilityMap">
      SELECT 
                  FMSAPPLCHARGES.COMP_CODE,
                 FMSAPPLCHARGES.BRANCH_CODE,
                 FMSAPPLCHARGES.SERIAL_NO,
                 FMSAPPLCHARGES.LINE_NO,
                 FMSAPPLCHARGES.PLAN_LINE_NO,
                 FMSAPPLCHARGES.APP_TYPE, 
                  FMSAPPLCHARGES.CHARGES_CODE,
                 FMSAPPLCHARGES.CHARGES_AMOUNT,
                 FMSAPPLCHARGES.CR_ACC_BRANCH,
                 FMSAPPLCHARGES.CR_ACC_CURRENCY,
                 FMSAPPLCHARGES.CR_ACC_GL,
                 FMSAPPLCHARGES.CR_ACC_CIF_SUB_NO,
                 FMSAPPLCHARGES.CR_ACC_SL_NO,
                 FMSAPPLCHARGES.PROFIT_ON_CHARGES,
                 FMSAPPLCHARGES.CHARGE_TYPE,
                  FMSAPPLCHARGES.COLLECT_CHARGE_AT_DEAL_YN,
                  FMSAPPLCHARGES.CREDIT_TO_SD_ACCOUNT_YN,
                  FMSAPPLCHARGES.VAT_CODE,
                  FMSAPPLCHARGES.CHARGES_MULTDIV
      FROM    FMSAPPLCHARGES,
                 FMSFACILITY,
                 FMSAPPL,
                 V_FMSAPPLIMITDET_IIS
      WHERE   FMSFACILITY.COMP_CODE                                     = #{compCode}
      AND  FMSFACILITY.BRANCH                                    = #{facilityBranch}
      AND        FMSFACILITY.CODE                                      = #{facilityNumber}
      AND        FMSAPPL.COMP_CODE                                           = FMSFACILITY.COMP_CODE         
      AND        FMSAPPL.BRANCH                                              = FMSFACILITY.BRANCH  
      AND   FMSAPPL.CODE                                                = FMSFACILITY.FROM_APPLICATION                          
      AND        FMSAPPLCHARGES.COMP_CODE                              = FMSAPPL.COMP_CODE
      AND   FMSAPPLCHARGES.BRANCH_CODE                            = FMSAPPL.BRANCH
      AND        FMSAPPLCHARGES.SERIAL_NO                              = FMSAPPL.CODE
      AND         FMSAPPLCHARGES.APP_TYPE                               = 'F'
      AND         FMSAPPLCHARGES.PLAN_LINE_NO                           = V_FMSAPPLIMITDET_IIS.LINE_NBR
      AND         V_FMSAPPLIMITDET_IIS.COMP_CODE                        = FMSAPPL.COMP_CODE
      AND         V_FMSAPPLIMITDET_IIS.BRANCH                           = FMSAPPL.BRANCH
      AND         V_FMSAPPLIMITDET_IIS.CODE                             = FMSAPPL.CODE
      AND         V_FMSAPPLIMITDET_IIS.LINE_NBR                   = CASE WHEN #{facilitySubLineNbr} + 0 = 0 THEN 1 ELSE #{facilitySubLineNbr} + 0 END
      AND         V_FMSAPPLIMITDET_IIS.GENERAL_FACILITY_TYPE      = 'P'
      </select>
            
      <select id="getFMSFacilityDetails" resultType="com.path.dbmaps.vo.FMSFACILITYVO"
            parameterType="trsDealChargesSC">
            SELECT CURRENCY,
            CURRENCY_RATE,
            CURRENCY_MULT_DIV,
            STATUS,
            FACILITY_TYPE,
            FACILITY_TYPE_CLASS,
            CASE WHEN REVOLVING_ONEOFF IS NULL THEN 'O' ELSE REVOLVING_ONEOFF END REVOLVING_ONEOFF,
            DATE_EFFECTIVE_FROM,
            DATE_EFFECTIVE_UNTIL,
            CASE WHEN DRWDWN_AMOUNT IS
            NULL THEN 0 ELSE DRWDWN_AMOUNT END
            DRWDWN_AMOUNT,
            UNUTILIZED_EXPIRY_DATE,
            NUMBER_OF_REPAYMENTS,
            FIRST_REPAYMENT_DATE,
            INTERVAL_REPAYMENTS,
            INTERVAL_REPAYMENTS_NBR,
            CIF,
            CASE WHEN
            EXCEED_FACILITY IS NULL THEN 'N' ELSE EXCEED_FACILITY END
            EXCEED_FACILITY,
            CASE WHEN FACILITY_VALUE IS NULL THEN 0 ELSE
            FACILITY_VALUE END
            FACILITY_VALUE,
            CASE WHEN FACILITY_MARGIN IS NULL
            THEN 0 ELSE FACILITY_MARGIN END
            FACILITY_MARGIN,
            LOAN_TYPE,
            ACC_BR, 
            ACC_CY, 
            ACC_GL, 
            ACC_CIF, 
            ACC_SL_NO,
            FIN_ACC_BR,
      FIN_ACC_CY, 
            FIN_ACC_GL, 
      FIN_ACC_SL,
            DOWN_PAYMENT,
            SPECIFIC_YIELD,
            FROM_APPLICATION,
            CURRENCY_UNIT
            FROM
            FMSFACILITY
            WHERE COMP_CODE = #{compCode}
            AND BRANCH =
            #{facilityBranch}
            AND
            CODE = #{facilityNumber}            
      </select>
            <select id="getSubLimitLineCount" resultType="trsDealChargesSC"
            parameterType="trsDealChargesSC">
            SELECT COUNT(1) subLimitLineCount, MIN(LINE_NBR)
            facilitySubLineNbr
            FROM FMSFACILITYDET
            WHERE COMP_CODE = #{compCode}
            AND
            BRANCH = #{facilityBranch}
            AND CODE = #{facilityNumber}
      </select>
            <!-- TP#271602;Ravikant.Singh ;16/02/2015[end] -->
	
</mapper>