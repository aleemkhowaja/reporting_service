<?xml version="1.0" encoding="UTF-8" standalone="no"?>
<!DOCTYPE mapper PUBLIC "-//ibatis.apache.org//DTD Mapper 3.0//EN"
        "http://ibatis.apache.org/dtd/ibatis-3-mapper.dtd">
<mapper namespace="coreCommonProcedureMapper">

	<update id="commitTrans">
		COMMIT
	</update>
	
	<update id ="dropSTAND_ORDER">
		<include refid="coreCommonProcedureMapper.dropStandOrder"/>
	</update>
	<update id ="dropECC_ARGUMENTS">
		<include refid="coreCommonProcedureMapper.dropEccArguments"/>
	</update>
		<update id ="dropCTS_CHARGES_UNIFIED">
		<include refid="coreCommonProcedureMapper.dropCtsChargesUnified"/>
	</update>
	 
	<update id ="dropTrxHashTables">
		<include refid="coreCommonProcedureMapper.dropStandOrder"/>
		<include refid="coreCommonProcedureMapper.dropTemplAmtTmp"/>
		<include refid="coreCommonProcedureMapper.dropTrsOnlineSalAmfUpdate"/>
		<include refid="coreCommonProcedureMapper.dropTrsSalBlockIbSalaryData"/>
		<include refid="coreCommonProcedureMapper.dropTrsBlockIbDealData"/>
		<include refid="coreCommonProcedureMapper.dropCTS_DUES_TEMP"/>
		<include refid="coreCommonProcedureMapper.dropDOF_POSTING_TMP"/>
		<include refid="coreCommonProcedureMapper.dropCtsTempAllCIF"/>
		<include refid="coreCommonProcedureMapper.dropEccArguments"/>
		<include refid="coreCommonProcedureMapper.dropCtsTrsTmp"/>
		<include refid="coreCommonProcedureMapper.dropUploadTmp"/>
		<include refid="coreCommonProcedureMapper.dropTmpExchrat"/>
		<include refid="coreCommonProcedureMapper.dropOneObligorLimit"/>
		<include refid="coreCommonProcedureMapper.dropOneObligorTransactions"/>
		<include refid="coreCommonProcedureMapper.dropExchRateOneObligor"/>
		<include refid="coreCommonProcedureMapper.dropCTSCIFObligor"/>
		<include refid="coreCommonProcedureMapper.dropTmpSecPrice"/>
		<include refid="coreCommonProcedureMapper.dropErrorTmp"/>
		<include refid="coreCommonProcedureMapper.dropChargesTmp"/>
		<include refid="coreCommonProcedureMapper.dropRosterTmpHashTable"/>
		<include refid="coreCommonProcedureMapper.dropCtsChargesUnified"/>
		<include refid="coreCommonProcedureMapper.dropAccHashTbls"/>
		<include refid="coreCommonProcedureMapper.dropAccHashTbls1"/>
		<include refid="coreCommonProcedureMapper.dropAccHashTbls2"/>
		<include refid="coreCommonProcedureMapper.dropAccHashTbls3"/>
		<include refid="coreCommonProcedureMapper.dropAccOffHashTbls1"/>
		<include refid="coreCommonProcedureMapper.dropAccHashOff"/>
		<include refid="coreCommonProcedureMapper.dropCTSTRSTemp"/>
		<include refid="coreCommonProcedureMapper.ctsManualJVTmpDrop"/>
		<include refid="coreCommonProcedureMapper.dropRunTimeProcArgTable"/>
		<include refid="coreCommonProcedureMapper.dropSqlACC_RESTRICTION_TEMP"/>
		<include refid="coreCommonProcedureMapper.dropALRT_FILL_DETAILS_TMP"/>
		<include refid="coreCommonProcedureMapper.dropCtsUsrRundateTmp"/>

	</update>
	
	<update id ="createSTAND_ORDER">
		<include refid="coreCommonProcedureMapper.standOrderCreation"/>
		<include refid="coreCommonProcedureMapper.beginTans"/>
	</update>
	
	<update id ="createECC_ARGUMENTS">
		<include refid="coreCommonProcedureMapper.eccArgumentsCreation"/>
		<include refid="coreCommonProcedureMapper.beginTans"/>
	</update>
	
	<update id ="createCTS_CHARGES_UNIFIED">
		<include refid="coreCommonProcedureMapper.ctsChargesUnifiedCreation"/>
		<include refid="coreCommonProcedureMapper.beginTans"/>
	</update>
	
	
	<update id ="createTrxHashTables">
		<include refid="coreCommonProcedureMapper.standOrderCreation"/>
		<include refid="coreCommonProcedureMapper.templAmtTmpCreation"/>
		<include refid="coreCommonProcedureMapper.trsOnlineSalAmfUpdateCreation"/>
		<include refid="coreCommonProcedureMapper.trsSalBlockIbSalaryData"/>
		<include refid="coreCommonProcedureMapper.trsBlockIbDealData"/>
		<include refid="coreCommonProcedureMapper.ctsTempAllCIFCreation"/>
		<include refid="coreCommonProcedureMapper.createCTS_DUES_TEMP"/>
		<include refid="coreCommonProcedureMapper.eccArgumentsCreation"/>
		<include refid="coreCommonProcedureMapper.createDOF_POSTING_TMP"/>
		<include refid="coreCommonProcedureMapper.createCtsTrsTmp"/>
		<include refid="coreCommonProcedureMapper.createUploadTmp"/>
		<include refid="coreCommonProcedureMapper.createTmpExchrat"/>
		<include refid="coreCommonProcedureMapper.createObligorLimitCreation"/>
		<include refid="coreCommonProcedureMapper.createObligorTransactionsCreation"/>
		<include refid="coreCommonProcedureMapper.createExchRateOneObligor"/>
		<include refid="coreCommonProcedureMapper.createCTSCIFObligor"/>
		<include refid="coreCommonProcedureMapper.createTmpSecPrice"/>
		<include refid="coreCommonProcedureMapper.createErrorTmp"/>
		<include refid="coreCommonProcedureMapper.createChargesTmp"/>
		<include refid="coreCommonProcedureMapper.createRosterTmpHashTable"/>
		<include refid="coreCommonProcedureMapper.ctsChargesUnifiedCreation"/>
		<include refid="coreCommonProcedureMapper.createAccHashTbls"/>
		<include refid="coreCommonProcedureMapper.createAccHashTbls1"/>
		<include refid="coreCommonProcedureMapper.createAccHashTbls2"/>
		<include refid="coreCommonProcedureMapper.createAccHashTbls3"/>
		<include refid="coreCommonProcedureMapper.createAccOffHashTbls"/>
		<include refid="coreCommonProcedureMapper.createAccHashOff"/>
		<include refid="coreCommonProcedureMapper.createCTSTRSTemp"/>
		<include refid="coreCommonProcedureMapper.createRunTimeProcArgTable"/>
		<include refid="coreCommonProcedureMapper.ctsManualJVTmpCreation"/>
		<include refid="coreCommonProcedureMapper.createSqlACC_RESTRICTION_TEMP"/>
		<include refid="coreCommonProcedureMapper.createALRT_FILL_DETAILS_TMP"/>
		<include refid="coreCommonProcedureMapper.createCtsUsrRundateTmp"/>
		<include refid="coreCommonProcedureMapper.beginTans"/> 

	</update>
	
	
	<update id ="createFOMHashTables">
		<include refid="coreCommonProcedureMapper.ctsTempAllCIFCreation"/>
		<include refid="coreCommonProcedureMapper.beginTans"/>
	</update>
	
	<update id ="dropFOMHashTables">
		<include refid="coreCommonProcedureMapper.dropCtsTempAllCIF"/>
	</update>

    <update id ="createHashDof">
		<include refid="coreCommonProcedureMapper.createDOF_POSTING_TMP"/>
		<include refid="coreCommonProcedureMapper.beginTans"/>
	</update>
	
	<update id ="dropHashDof">
		<include refid="coreCommonProcedureMapper.dropDOF_POSTING_TMP"/>
	</update>

	<sql id="ctsTempAllCIFCreation">
		CREATE TABLE #CTS_TEMP_ALL_CIF (
		COMP_CODE  NUMERIC(4,0),
		CIF_NO     NUMERIC(8,0),
		LINE_NO    NUMERIC(3,0)
		) 
	</sql>
	
	
	<sql id="templAmtTmpCreation">
		CREATE TABLE #TEMPL_AMT_TMP(
		AMOUNT_EXP   			VARCHAR(25)  	NULL,
		AMOUNT_FC   			NUMERIC(23,6)  	NULL,
		AMOUNT_CV   			NUMERIC(23,6)  	NULL
		)
	</sql>	

	<sql id="standOrderCreation">
		CREATE TABLE #STAND_ORDER(		
		COMP_CODE		NUMERIC(4)		NULL,	
		BRANCH_CODE		NUMERIC(4)		NULL,	
		TRS_NO			NUMERIC(12)		NULL,	
		TRS_AC_BR		NUMERIC(4)		NULL,	
		TRS_AC_CY		NUMERIC(3)		NULL,	
		TRS_AC_GL		NUMERIC(6)		NULL,	
		TRS_AC_CIF		NUMERIC(8)		NULL,	
		TRS_AC_SL		NUMERIC(3)		NULL,	
		AMOUNT			NUMERIC(20,3)	NULL,	
		TRS_CY			NUMERIC(3)		NULL,	
		CV_AMOUNT		NUMERIC(20,3)	NULL,	
		TO_TRS_AC_BR	NUMERIC(4)		NULL,	
		TO_TRS_AC_CY	NUMERIC(3)		NULL,	
		TO_TRS_AC_GL	NUMERIC(6)		NULL,	
		TO_TRS_AC_CIF	NUMERIC(8)		NULL,	
		TO_TRS_AC_SL	NUMERIC(3)		NULL,	
		TRS_AC_AMOUNT	NUMERIC(20,3)	NULL,	
		CASH_DEDUCT_IND	VARCHAR(1)		NULL,	
		TRX_PRIORITY	NUMERIC(2)		NULL,	
		CHARGE			NUMERIC(20,3)	NULL,	
		FC_CHARGE		NUMERIC(20,3)	NULL,	
		CR_DR_FOREX		VARCHAR(60)		NULL,	
		TRX_TYPE 		NUMERIC(3)		NULL,	
		TRS_DATE		DATETIME		NULL,	
		AC_SIGN			VARCHAR(1)		NULL,
		TRS_TYPE		VARCHAR(1)		NULL,
		CH_AC_BR        NUMERIC(4)      NULL,
	    CH_AC_CY        NUMERIC(3)      NULL,
	    CH_AC_GL        NUMERIC(6)      NULL,
	    CH_AC_CIF       NUMERIC(8)      NULL,
	    CH_AC_SL        NUMERIC(3)      NULL,
	    FORCE_OVERDRAW	VARCHAR(1)		NULL
	   )
	</sql>
	
	<sql id="eccArgumentsCreation">
		CREATE TABLE #ECC_ARGUMENTS 
		(  
			COMP_CODE_OUT numeric(4,0)  NULL,
			BRANCH_CODE_OUT numeric(4,0)  NULL,
			TRX_TYPE numeric(3,0)  NULL, 
			FORCE_POSTING numeric(1,0)  NULL, 
			DEPOSIT_REF VARCHAR(50)  NULL,
			TRX_NO_OUT numeric(12,0)  NULL,
			CALL_SETTLEMENT_YN VARCHAR(1) NULL
		)
	</sql>
	
	<sql id="trsOnlineSalAmfUpdateCreation">
		CREATE TABLE #TRS_ONLINE_SAL_AMF_UPDATE
		(	COMP_CODE			NUMERIC(4)		NOT NULL,
			BRANCH_CODE			NUMERIC(4)		NOT NULL,		
			CURRENCY_CODE		NUMERIC(3)		NOT NULL,
			GL_CODE				NUMERIC(6)		NOT NULL,
			CIF_SUB_NO			NUMERIC(8)		NOT NULL,
			SL_NO				NUMERIC(3)		NOT NULL,
			CV_AVAIL_BAL		NUMERIC(20,3)	NOT NULL,
			BLOCKED_CV			NUMERIC(20,3)	NOT NULL,
			BLOCKED_CV_TO_UPATE	NUMERIC(20,3)	NOT NULL,
			BLOCKED_FC_TO_UPATE	NUMERIC(20,3)	NOT NULL,
			BLOCKED_CV_DEBTOR	NUMERIC(20,3)   NULL,
	        BLOCKED_FC_DEBTOR	NUMERIC(20,3)	NULL,			
			CONSTRAINT PK_TRSONLINE_SAL_AMF_UPDATE PRIMARY KEY CLUSTERED ( COMP_CODE, BRANCH_CODE, CURRENCY_CODE , GL_CODE , CIF_SUB_NO , SL_NO )
		)
	</sql>
	
	
	<sql id="trsSalBlockIbSalaryData">
		CREATE TABLE #TRS_SAL_BLOCK_IB_SALARY_DATA
		(
		   COMP_CODE                NUMERIC(4,0)  NOT NULL,
		   BRANCH_CODE              NUMERIC(4,0)  NOT NULL,
		   TRS_NO                   NUMERIC(10,0) NOT NULL,
		   LINE_NO                  NUMERIC(4,0)  NOT NULL,   
		   AC_BR                    NUMERIC(4,0)  NULL,
		   AC_CY                    NUMERIC(3,0)  NULL,
		   AC_GL                    NUMERIC(6,0)  NULL,
		   AC_CIF                   NUMERIC(8,0)  NULL,
		   AC_SL                    NUMERIC(3,0)  NULL,   
		   AMOUNT_FC                NUMERIC(20,3) NULL,   
		   AMOUNT_CV                NUMERIC(20,3) NULL,      
		   VALUE_DATE               DATETIME     NULL,        
		   CONSTRAINT PK_TRS_SAL_BLOCK_IB_SAL_DATA PRIMARY KEY CLUSTERED ( COMP_CODE, BRANCH_CODE, TRS_NO, LINE_NO )
		)
	</sql>
	
	<sql id="trsBlockIbDealData">
		CREATE TABLE #TRS_BLOCK_IB_DEAL_DATA
		(
                COMP_CODE     NUMERIC(4)    NOT NULL,
                BRANCH_CODE   NUMERIC(4)    NOT NULL,
                PLAN_NBR      NUMERIC(12)    NOT NULL,
                PLAN_SEQ      NUMERIC(3)      NOT NULL,
                LINE_NBR      NUMERIC(4,0)  NOT NULL,
                INSTALLMENT_AMOUNT  NUMERIC(20,3) NULL,
                SETTLED_AMOUNT NUMERIC(20,3) NULL,
                VALUE_DATE    DATETIME NULL,
                DEAL_NBR      NUMERIC(12) NULL,      
                DEAL_CY       NUMERIC(3)  NULL,
                CIF_NO        NUMERIC(8) NULL,
                DECIMAL_POINTS  NUMERIC(8) NULL,
                MULT_DIV_IND    VARCHAR(1)  NULL,
                UNIT            NUMERIC(10)  NULL,    
                CONSIDER_SAL_BLOCK_YN  VARCHAR(1)  NULL,
                CONSTRAINT PK_TRS_BLOCK_IB_DEAL_DATA PRIMARY KEY CLUSTERED ( COMP_CODE, BRANCH_CODE, PLAN_NBR, PLAN_SEQ , LINE_NBR )
       )
	</sql>
	
	
	<sql id="beginTans">
		BEGIN TRANSACTION
	</sql>
	
	<sql id="dropStandOrder">
		IF OBJECT_ID('#STAND_ORDER') IS NOT NULL
		BEGIN
			DROP TABLE #STAND_ORDER
		END	
	</sql>
	<sql id="dropEccArguments">
		IF OBJECT_ID('#ECC_ARGUMENTS') IS NOT NULL
		BEGIN
			DROP TABLE #ECC_ARGUMENTS
		END
	</sql>
	
	<sql id="dropTemplAmtTmp">
		IF OBJECT_ID('#TEMPL_AMT_TMP') IS NOT NULL
		BEGIN
			DROP TABLE  #TEMPL_AMT_TMP
		END	
	</sql>

	
	<sql id="dropCTSTRSTemp">
		IF OBJECT_ID('#CTSTRS_TEMP') IS NOT NULL
		BEGIN
			DROP TABLE #CTSTRS_TEMP
		END	
	</sql>
	
	<sql id="dropTrsOnlineSalAmfUpdate">
		IF OBJECT_ID('#TRS_ONLINE_SAL_AMF_UPDATE') IS NOT NULL
		BEGIN
			DROP TABLE #TRS_ONLINE_SAL_AMF_UPDATE
		END	
	</sql>
	
	<sql id="dropTrsSalBlockIbSalaryData">
		IF OBJECT_ID('#TRS_SAL_BLOCK_IB_SALARY_DATA') IS NOT NULL
		BEGIN
			DROP TABLE #TRS_SAL_BLOCK_IB_SALARY_DATA
		END	
	</sql>
	
	<sql id="dropTrsBlockIbDealData">
		IF OBJECT_ID('#TRS_BLOCK_IB_DEAL_DATA') IS NOT NULL
		BEGIN
			DROP TABLE #TRS_BLOCK_IB_DEAL_DATA
		END	
	</sql>
	
	<sql id="dropCtsTempAllCIF">
		IF OBJECT_ID('#CTS_TEMP_ALL_CIF') IS NOT NULL
		BEGIN
			DROP TABLE #CTS_TEMP_ALL_CIF
		END	
	</sql>
	
	<sql id="dropCtsChargesUnified">
		IF OBJECT_ID('#CTS_CHARGES_UNIFIED') IS NOT NULL
		BEGIN
			DROP TABLE #CTS_CHARGES_UNIFIED
		END	
	</sql>
	
	<sql id="dropCtsUsrRundateTmp">
		IF OBJECT_ID('#CTS_USR_RUNDATE_TMP') IS NOT NULL
		BEGIN
			DROP TABLE #CTS_USR_RUNDATE_TMP
		END	
	</sql>
	
	<resultMap type="chequeBookSC" id="errorMsgChq">
		<result column="errorMessage" javaType="string" jdbcType="VARCHAR"
			property="errorMessage" />
	</resultMap>
	
	<select id="approveChequebook" parameterType="chequeBookSC" statementType="CALLABLE">
    { CALL P_RET_APPROVE_CHQBOOK(   #{compCode, mode=IN,jdbcType=NUMERIC},
								    #{branchCode, mode=IN,jdbcType=NUMERIC},
								    #{CODE, mode=IN,jdbcType=NUMERIC},
								    #{userName, mode=IN,jdbcType=VARCHAR},
								    #{lang, mode=IN,jdbcType=VARCHAR},
								    #{runningDate , mode=IN, jdbcType=TIMESTAMP},
								    #{fromNumber, mode=OUT,jdbcType=NUMERIC},
								   	#{toNumber , mode=OUT,jdbcType=NUMERIC},
								   	#{trsNo , mode=OUT,jdbcType=NUMERIC},
								    #{errorCode, mode=OUT,jdbcType=NUMERIC},
								    #{errorMessage, mode=OUT,jdbcType=LONGVARCHAR,typeHandler=com.path.lib.common.base.ibatis3.handlers.PathLongVarcharHandler}	)}
	</select>
	
 	
 	<select id="updatePassbookDOFHST" parameterType="passBookCO" statementType="CALLABLE">
	 { CALL P_UPDATE_PASSBOOK_DET_JAVA
	   	(#{loginCompCode,		mode=IN, jdbcType=NUMERIC},
	   	 #{loginBraCode,		mode=IN, jdbcType=NUMERIC},
		 #{passBookVO.ACC_BR,	mode=IN, jdbcType=NUMERIC},
		 #{baseCurrencyCode,	mode=IN, jdbcType=NUMERIC},
		 #{passBookVO.ACC_CY,	mode=IN, jdbcType=NUMERIC},
		 #{passBookVO.ACC_GL,	mode=IN, jdbcType=NUMERIC},
		 #{passBookVO.ACC_CIF,	mode=IN, jdbcType=NUMERIC},
		 #{passBookVO.ACC_SL,	mode=IN, jdbcType=NUMERIC},
		 #{runningDate,			mode=IN, jdbcType=DATE},
		 #{errCode,	 			mode=OUT, jdbcType=NUMERIC},
		 #{errMsg,	 			mode=OUT, jdbcType=VARCHAR})}
    </select>   
    	
  	<update id="ctsTempAllCardsCreation">
		create table  #CTSCARDS_MGT_FILTER0
		(
			COMP_CODE	numeric(33) null,
			BRANCH_CODE	numeric(33) null,
			APPLICATION_ID	numeric(36) null,
			REFERENCE	varchar(20) null,
			CARD_TYPE	numeric(33) null,
			CARD_HOLDER_NAME	varchar(30) null,
			EFFECTIVE_DATE	datetime null,
			EXPIRY_DATE	datetime null,
			PREPARATION_DATE datetime null,
			CARD_NO	varchar(20) null,
			APP_REF	numeric(36) null,
			DEST_BRANCH	numeric(33) null,
			CIF	numeric(36) null,
			STATUS	varchar(100) null,
			CIF_STATUS varchar(100) null,
			PRIM_SUPP varchar(100) null,
			CINET_CHECKED varchar(2) null,
			IS_RENEWED varchar(2) null
		)
	
		create table  #CTSCARDS_MGT_FILTER1
		(
			COMP_CODE	numeric(33) null,
			BRANCH_CODE	numeric(33) null,
			APPLICATION_ID	numeric(36) null,
			REFERENCE	varchar(20) null,
			CARD_TYPE	numeric(33) null,
			CARD_HOLDER_NAME	varchar(30) null,
			EFFECTIVE_DATE	datetime null,
			EXPIRY_DATE	datetime null,
			PREPARATION_DATE datetime null,
			CARD_NO	varchar(20) null,
			APP_REF	numeric(36) null,
			DEST_BRANCH	numeric(33) null,
			CIF	numeric(36) null,
			STATUS	varchar(100) null,
			CIF_STATUS varchar(100) null,
			PRIM_SUPP varchar(100) null,
			BRIEF_NAME_ENG	VARCHAR(50) null,
			ACC_BR	numeric(34) null,
			ACC_CY	numeric(33) null,
			ACC_GL	numeric(36) null,
			ACC_CIF	numeric(38) null,
			ACC_SL	numeric(33) null,
			ACC_ADD_REF	VARCHAR(35) null
		)
	
		create table  #CTSCARDS_MGT_FILTER2
		(
			COMP_CODE	numeric(33) null,
			BRANCH_CODE	numeric(33) null,
			APPLICATION_ID	numeric(36) null,
			REFERENCE	varchar(20) null,
			CARD_TYPE	numeric(33) null,
			CARD_HOLDER_NAME	varchar(30) null,
			EFFECTIVE_DATE	datetime null,
			EXPIRY_DATE	datetime null,
			PREPARATION_DATE datetime null,
			CARD_NO	varchar(20) null,
			APP_REF	numeric(36) null,
			DEST_BRANCH	numeric(33) null,
			CIF	numeric(36) null,
			STATUS	varchar(100) null,
			CIF_STATUS varchar(100) null,
			PRIM_SUPP varchar(100) null,
			BRIEF_NAME_ENG	VARCHAR(50) null,
			ACC_BR	numeric(34) null,
			ACC_CY	numeric(33) null,
			ACC_GL	numeric(36) null,
			ACC_CIF	numeric(38) null,
			ACC_SL	numeric(33) null,
			ACC_ADD_REF	VARCHAR(35) null
		)
		
		create table  #CTSCARDS_MGT_FILTER3
		(
			COMP_CODE	numeric(38) null,
		    BRANCH_CODE	numeric(38) null, 
		    APPLICATION_ID numeric(38) null,
			ACC_BR	numeric(34) null,
			ACC_CY	numeric(33) null,
			ACC_GL	numeric(36) null,
			ACC_CIF	numeric(38) null,
			ACC_SL	numeric(33) null,
			ACC_ADD_REF	VARCHAR(350) null
		)
		
		<include refid="coreCommonProcedureMapper.beginTans"/>
	</update>
		
	<update id ="ctsTempAlldropCards">
		IF OBJECT_ID('#CTSCARDS_MGT_FILTER0') IS NOT NULL
		BEGIN
			DROP TABLE #CTSCARDS_MGT_FILTER0
		END
		IF OBJECT_ID('#CTSCARDS_MGT_FILTER1') IS NOT NULL
		BEGIN
			DROP TABLE #CTSCARDS_MGT_FILTER1
		END
		IF OBJECT_ID('#CTSCARDS_MGT_FILTER2') IS NOT NULL
		BEGIN
			DROP TABLE #CTSCARDS_MGT_FILTER2
		END
		IF OBJECT_ID('#CTSCARDS_MGT_FILTER3') IS NOT NULL
		BEGIN
			DROP TABLE #CTSCARDS_MGT_FILTER3
		END
	</update>
	
 	<select id="selectCardsMgntTmp" parameterType="passBookCO" statementType="CALLABLE">
	 { CALL P_CTSCARDS_MGT_QUERY_TO_PROC
	   	(#{compCode,		mode=IN, jdbcType=NUMERIC},
	   	 #{branchCode,		mode=IN, jdbcType=NUMERIC},
		 #{iv_crud,			mode=IN, jdbcType=VARCHAR},
		 #{sysDate,			mode=IN, jdbcType=DATE},
		 #{errorCode,	 	mode=OUT, jdbcType=NUMERIC},
		 #{errorMessage,	mode=OUT, jdbcType=VARCHAR})}
    </select>  
    	
  	<select id="printPassbookDetails" parameterType="passBookCO" statementType="CALLABLE">
	 { CALL P_PRINT_PASSBOOK_DETAILS
	   	(#{loginCompCode,				mode=IN, jdbcType=NUMERIC},
	   	 #{passBookVO.BRANCH_CODE,		mode=IN, jdbcType=NUMERIC},
	   	 #{passBookVO.CODE,				mode=IN, jdbcType=NUMERIC},
	   	 #{userName,					mode=IN, jdbcType=VARCHAR},	   	 
		 #{consolidate,	 				mode=OUT, jdbcType=NUMERIC},
		 #{passBookVO.LAST_LINE_NUMBER,	mode=OUT, jdbcType=NUMERIC},
		 #{maxlinebypage,	 			mode=OUT, jdbcType=NUMERIC},
		 #{maxpage,	 					mode=OUT, jdbcType=NUMERIC},
		 #{errCode,	 					mode=OUT, jdbcType=NUMERIC},
		 #{errMsg,	 					mode=OUT, jdbcType=VARCHAR})}
    </select>

	<select id="chqbookBatchApprovePrcs" parameterType="chequeBookSC" statementType="CALLABLE">
    { CALL P_RET_CHQBOOK_BATCH_APPR_PRCS(   #{compCode, mode=IN,jdbcType=NUMERIC},
										    #{processId, mode=IN,jdbcType=NUMERIC},
										    #{userName, mode=IN,jdbcType=VARCHAR},
										    #{operation, mode=IN,jdbcType=VARCHAR},
										    #{progRef, mode=IN,jdbcType=VARCHAR},
										    #{lang, mode=IN,jdbcType=VARCHAR},
										    #{runningDate, mode=IN,jdbcType=TIMESTAMP},
										    #{errorCode, mode=OUT,jdbcType=NUMERIC},
										    #{errorMessage, mode=OUT,jdbcType=LONGVARCHAR,typeHandler=com.path.lib.common.base.ibatis3.handlers.PathLongVarcharHandler}	)}
	</select>

	<resultMap type="trxMgntSC" id="errorMsg">
		<result column="errorMessage" javaType="string" jdbcType="VARCHAR"
			property="errorMessage" />
	</resultMap>
	<select id="checkTransData" parameterType="trxMgntSC" statementType="CALLABLE">		
		{ CALL P_RET_CHECK_TRANS_DATA(
			#{compCode ,mode=IN ,jdbcType=NUMERIC},
			#{branchCode ,mode=IN,jdbcType=NUMERIC },
			#{trxType ,mode=IN ,jdbcType=NUMERIC},
			#{inTrsno ,mode=IN,jdbcType=NUMERIC },
			#{trsAcBr ,mode=IN ,jdbcType=NUMERIC},
			#{trsAcCy,mode=IN ,jdbcType=NUMERIC},
			#{trsAcGl ,mode=IN ,jdbcType=NUMERIC},
			#{trsAcCif,mode=IN,jdbcType=NUMERIC  },
			#{trsAcSl,mode=IN,jdbcType=NUMERIC},
			#{toTrsAcBr ,mode=IN ,jdbcType=NUMERIC},
			#{toTrsAcCy,mode=IN ,jdbcType=NUMERIC },
			#{toTrsAcGl	,mode=IN ,jdbcType=NUMERIC},
			#{toTrsAcCif,mode=IN ,jdbcType=NUMERIC },
			#{toTrsAcSl ,mode=IN ,jdbcType=NUMERIC},
			#{trsCy	,mode=IN ,jdbcType=NUMERIC},
			#{trxAmount ,mode=IN ,jdbcType=NUMERIC},
			#{accAmount ,mode=IN ,jdbcType=NUMERIC},
			#{cvAmount ,mode=IN,jdbcType=NUMERIC },
			#{ivCrud,mode=IN ,jdbcType=VARCHAR },
			#{action,mode=IN  ,jdbcType=VARCHAR},
			#{trsfrMethod ,mode=IN ,jdbcType=VARCHAR},
			#{trsDate ,mode=IN , jdbcType=DATE},
			#{valueDate	,mode=IN , jdbcType=DATE},
			#{systemDate ,mode=IN, jdbcType=DATE },
			#{chqDate ,mode=IN,jdbcType=DATE },
			#{chqNum  ,mode=IN,jdbcType=NUMERIC },
			#{fromRemit  ,mode=IN ,jdbcType=NUMERIC},
			#{toRemit ,mode=IN ,jdbcType=NUMERIC},
			#{tellerCode ,mode=IN ,jdbcType=NUMERIC},
			#{bankCif ,mode=IN,jdbcType=NUMERIC },
			#{ibBatch ,mode=IN,jdbcType=VARCHAR },
			#{batchNo ,mode=IN,jdbcType=NUMERIC },
			#{serialNo ,mode=IN,jdbcType=NUMERIC },
			#{overDrawnVoid ,mode=OUT,jdbcType=VARCHAR },
			#{errType,mode=OUT,jdbcType=VARCHAR  },
			#{errorCode ,mode=OUT ,jdbcType=NUMERIC},
			#{errorMessage	,mode=OUT ,jdbcType=LONGVARCHAR,typeHandler=com.path.lib.common.base.ibatis3.handlers.PathLongVarcharHandler} )}
	</select>
	
	<select id="processCtstrs" parameterType="trxMgntSC" statementType="CALLABLE">
		{ CALL P_RET_PROCESS_CTSTRS(
		#{compCode ,mode=IN ,jdbcType=NUMERIC},
		#{branchCode ,mode=IN,jdbcType=NUMERIC },		
		#{batchBrCode ,mode=IN,jdbcType=NUMERIC },
		#{batchNo ,mode=IN,jdbcType=NUMERIC },
		#{serialNo ,mode=IN,jdbcType=NUMERIC },		
		#{trxType ,mode=IN ,jdbcType=NUMERIC},
		#{inTrsno ,mode=IN,jdbcType=NUMERIC },
		#{trsAcBr ,mode=IN ,jdbcType=NUMERIC},
		#{trsAcCy,mode=IN ,jdbcType=NUMERIC},
		#{trsAcGl ,mode=IN ,jdbcType=NUMERIC},
		#{trsAcCif,mode=IN,jdbcType=NUMERIC  },
		#{trsAcSl,mode=IN,jdbcType=NUMERIC},
		#{toTrsAcBr ,mode=IN ,jdbcType=NUMERIC},
		#{toTrsAcCy,mode=IN ,jdbcType=NUMERIC },
		#{toTrsAcGl	,mode=IN ,jdbcType=NUMERIC},
		#{toTrsAcCif,mode=IN ,jdbcType=NUMERIC },
		#{toTrsAcSl ,mode=IN ,jdbcType=NUMERIC},
		#{trsCy	,mode=IN ,jdbcType=NUMERIC},
		#{trxAmount ,mode=IN ,jdbcType=NUMERIC},
		#{accAmount ,mode=IN ,jdbcType=NUMERIC},
		#{cvAmount ,mode=IN,jdbcType=NUMERIC },
		#{ivCrud,mode=IN ,jdbcType=VARCHAR },
		#{action,mode=IN  ,jdbcType=VARCHAR},
		#{trsfrMethod ,mode=IN ,jdbcType=VARCHAR},
		#{trsDate ,mode=IN , jdbcType=DATE},
		#{valueDate	,mode=IN , jdbcType=DATE},
		#{systemDate ,mode=IN, jdbcType=TIMESTAMP },
		#{chqDate ,mode=IN,jdbcType=DATE },
		#{chqNum  ,mode=IN,jdbcType=NUMERIC },
		#{fromRemit  ,mode=IN ,jdbcType=NUMERIC},
		#{toRemit ,mode=IN ,jdbcType=NUMERIC},
		#{tellerCode ,mode=IN ,jdbcType=NUMERIC},
		#{bankCif ,mode=IN,jdbcType=NUMERIC },
		#{ibDeduct ,mode=IN,jdbcType=VARCHAR },
		#{ibBatch ,mode=IN,jdbcType=VARCHAR },
		#{outTrsno ,mode=OUT ,jdbcType=NUMERIC},
		#{errType,mode=OUT,jdbcType=VARCHAR  },
		#{errorCode ,mode=OUT ,jdbcType=NUMERIC},
		#{errorMessage	,mode=OUT ,jdbcType=LONGVARCHAR,typeHandler=com.path.lib.common.base.ibatis3.handlers.PathLongVarcharHandler} )}
	</select>
	
	<select id="reverseCtstrs" parameterType="trxMgntSC"
		statementType="CALLABLE">
		{ CALL P_RET_REVERSE_CTSTRS(
		#{compCode ,mode=IN ,jdbcType=NUMERIC},
		#{branchCode ,mode=IN,jdbcType=NUMERIC },
		#{trsNo ,mode=IN,jdbcType=NUMERIC },
		#{ivCrud,mode=IN ,jdbcType=VARCHAR },
		#{systemDate ,mode=IN, jdbcType=TIMESTAMP },
		#{tellerCode ,mode=IN ,jdbcType=NUMERIC},
		#{reason,mode=IN ,jdbcType=VARCHAR },
		#{errType,mode=OUT,jdbcType=VARCHAR },
		#{errorCode ,mode=OUT ,jdbcType=NUMERIC},
		#{errorMessage ,mode=OUT ,jdbcType=VARCHAR} )}
 	</select>
 	
	<select id="callIISProcedureCalculation" parameterType="trxMgntSC"
		statementType="CALLABLE">
	   {  CALL P_IIS_CALL_SAL_BLOCK_PROC (
	                                       #{compCode ,mode=IN ,jdbcType=NUMERIC},
	                                       #{branchCode ,mode=IN,jdbcType=NUMERIC },
	                                       #{trsNo ,mode=IN,jdbcType=NUMERIC },
	                                       #{trxType ,mode=IN ,jdbcType=NUMERIC},
	                                       #{jvType ,mode=IN ,jdbcType=NUMERIC},
	                                       #{systemDate ,mode=IN, jdbcType=TIMESTAMP },
	                                       #{callType ,mode=IN ,jdbcType=NUMERIC},
	                                       #{errorCode ,mode=OUT ,jdbcType=NUMERIC},
	                                       #{errorMessage ,mode=OUT ,jdbcType=VARCHAR} )}
	</select>
	
	<select id="createHash"  statementType="CALLABLE">
		{ CALL P_RET_CREATE_HASH()}
 	</select>	
	<select id="updateCifNames" parameterType="nCifMaintenanceSC" statementType="CALLABLE">
    { CALL P_UPDATE_CIF_NAMES( #{cifVO.COMP_CODE, mode=IN,jdbcType=NUMERIC},
                               #{cifVO.BRANCH_CODE, mode=IN,jdbcType=NUMERIC},
			                   #{cifVO.CIF_NO, mode=IN,jdbcType=NUMERIC},
			                   #{cifVO.SHORT_NAME_ENG, mode=IN,jdbcType=VARCHAR},
			                   #{cifVO.LONG_NAME_ENG, mode=IN,jdbcType=VARCHAR},
			                   #{cifVO.SHORT_NAME_ARAB, mode=IN,jdbcType=VARCHAR},
			                   #{cifVO.LONG_NAME_ARAB, mode=IN,jdbcType=VARCHAR},     
			                   #{cifVO.FIRST_NAME_ENG, mode=IN,jdbcType=VARCHAR},
			                   #{cifVO.SEC_NAME_ENG, mode=IN,jdbcType=VARCHAR},
			                   #{cifVO.THIRD_NAME_ENG, mode=IN,jdbcType=VARCHAR},
			                   #{cifVO.LAST_NAME_ENG, mode=IN,jdbcType=VARCHAR},                  
			                   #{cifVO.FIRST_NAME_AR, mode=IN,jdbcType=VARCHAR},
			                   #{cifVO.SEC_NAME_AR, mode=IN,jdbcType=VARCHAR},
			                   #{cifVO.THIRD_NAME_AR, mode=IN,jdbcType=VARCHAR},
			                   #{cifVO.LAST_NAME_AR, mode=IN,jdbcType=VARCHAR},
			                   #{cif_EXTENDEDVO.FULL_NAME_ENG, mode=IN,jdbcType=VARCHAR},
			                   #{cif_EXTENDEDVO.FULL_NAME_ARAB, mode=IN,jdbcType=VARCHAR},
			                   #{errorCode, mode=OUT,jdbcType=NUMERIC},
			                   #{errorMessage, mode=OUT,jdbcType=VARCHAR}  )}
	</select>
	
	<select id="viewAccPosition" 		parameterType="accountPositionCO" statementType="CALLABLE">
    { CALL P_RET_VIEW_ACC_POSITION( #{loginCompCode, 	mode=IN,jdbcType=NUMERIC},
	                               	#{loginBraCode,		mode=IN,jdbcType=NUMERIC},
				                   	#{amfVO.CUR_AC_BR, 	mode=IN,jdbcType=NUMERIC},
				                   	#{amfVO.CUR_AC_CY, 	mode=IN,jdbcType=NUMERIC},
				                   	#{amfVO.CUR_AC_GL, 	mode=IN,jdbcType=NUMERIC},
				                   	#{amfVO.CUR_AC_CIF, mode=IN,jdbcType=NUMERIC},
				                   	#{amfVO.CUR_AC_SL, 	mode=IN,jdbcType=NUMERIC},     
				                   	#{amfVO.GMI_FLAG, 	mode=IN,jdbcType=VARCHAR},
				                   	#{TRX_TYPE, 		mode=IN,jdbcType=NUMERIC},
				                   	#{progRef,			mode=IN,jdbcType=VARCHAR},
				                   	#{currentAppName, 	mode=IN,jdbcType=VARCHAR},                  
				                   	#{userName, 		mode=IN,jdbcType=VARCHAR},
				                   	#{tellerId, 		mode=IN,jdbcType=NUMERIC},
				                   	#{returnVal, 		mode=OUT,jdbcType=NUMERIC},
				                  	#{errType, 			mode=OUT,jdbcType=VARCHAR},
				                   	#{errorCode,		mode=OUT,jdbcType=NUMERIC},
				                   	#{errorMsg, 		mode=OUT,jdbcType=VARCHAR}  )}
	</select>
	
	<select id="returnAvlBalBR" 		parameterType="accountPositionCO" statementType="CALLABLE">
    { CALL P_RET_GET_AVLBAL_BR( #{loginCompCode, 		 			mode=IN,jdbcType=NUMERIC},
                               	#{baseCurrencyCode,					mode=IN,jdbcType=NUMERIC},
			                   	#{amfVO.CUR_AC_BR, 		 			mode=IN,jdbcType=NUMERIC},
			                   	#{amfVO.CUR_AC_CY, 		 			mode=IN,jdbcType=NUMERIC},
			                   	#{amfVO.CUR_AC_GL, 		 			mode=IN,jdbcType=NUMERIC},
			                   	#{amfVO.CUR_AC_CIF, 	 			mode=IN,jdbcType=NUMERIC},
			                   	#{amfVO.CUR_AC_SL, 		 			mode=IN,jdbcType=NUMERIC},     
			                   	#{ctsTrxTypeVO.BLOCK_ACTIVE_WITH,	mode=IN,jdbcType=VARCHAR},
			                   	#{availBalance, 			 		mode=OUT,jdbcType=NUMERIC}  )}
	</select>
	
	<select id="returnCoveringBalance" 	parameterType="accountPositionCO" statementType="CALLABLE">
    { CALL P_RET_GET_COVERING_BAL(  #{loginCompCode, 		 		mode=IN,jdbcType=NUMERIC},
                               		#{loginBraCode, 		 		mode=IN,jdbcType=NUMERIC},
                               		#{loginUserId, 		 			mode=IN,jdbcType=VARCHAR},
                               		#{baseCurrencyCode, 		 	mode=IN,jdbcType=NUMERIC},
                               		#{runningDate , 				mode=IN, jdbcType=DATE},
                               		#{amfVO.CUR_AC_BR, 		 		mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.CUR_AC_CY, 		 		mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.CUR_AC_GL, 		 		mode=IN,jdbcType=NUMERIC}, 
			                   		#{amfVO.CUR_AC_CIF, 	 		mode=IN,jdbcType=NUMERIC}, 
			                   		#{amfVO.CUR_AC_SL, 		 		mode=IN,jdbcType=NUMERIC},
			                   		#{language, 					mode=IN,jdbcType=VARCHAR}, 
			                   		#{coveringBalance, 		 		mode=OUT,jdbcType=NUMERIC},
			                   		<if test="isSybase != 1">
			                   		#{hofSO, 		 				mode=OUT,jdbcType=VARCHAR},
			                   		#{allowOverDrawn, 		 		mode=OUT,jdbcType=VARCHAR},
				                   	</if>
				                   	#{errorCode,					mode=OUT,jdbcType=NUMERIC},
				                   	#{errorMsg, 					mode=OUT,jdbcType=VARCHAR} )}  
	</select>
	
	<select id="specialConditions" parameterType="accountCO" statementType="CALLABLE">
    { CALL P_SPECIAL_CONDITIONS_DET( #{amfVO.COMP_CODE, 		 		mode=IN,jdbcType=NUMERIC},
                               		#{amfVO.BRANCH_CODE, 		 		mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.CURRENCY_CODE, 		 		mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.GL_CODE, 		 			mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.CIF_SUB_NO, 	 			mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.SL_NO, 		 				mode=IN,jdbcType=NUMERIC},   
			                   		#{cifVO.CIF_NO, 	 				mode=IN,jdbcType=NUMERIC},  
			                   		#{cifAcc,							mode=IN,jdbcType=VARCHAR},
			                   		#{loginBraCode, 		 			mode=IN,jdbcType=NUMERIC},
                               		#{loginUserId, 		 				mode=IN,jdbcType=VARCHAR},		
			                   		#{FORBID_TRX,						mode=OUT,jdbcType=VARCHAR},
			                   		#{FORBID_PRODUCT,					mode=OUT,jdbcType=VARCHAR},
			                   		#{reasonEng,						mode=OUT,jdbcType=VARCHAR},
			                   		#{reasonAr,							mode=OUT,jdbcType=VARCHAR},
				                   	#{errorCode,						mode=OUT,jdbcType=NUMERIC},
				                   	#{errorMsg, 						mode=OUT,jdbcType=VARCHAR} )}  
				
	</select>
	
	
	<select id="validateIBAN" parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL P_RET_VALIDATE_IBAN( 	
		#{compCode ,mode=IN ,jdbcType=NUMERIC},
		#{iban ,mode=IN,jdbcType=VARCHAR },
		#{country ,mode=IN,jdbcType=NUMERIC },
		#{currency ,mode=IN,jdbcType=NUMERIC },
		#{cif ,mode=IN,jdbcType=NUMERIC },
		#{valid,mode=OUT,jdbcType=NUMERIC },
		#{errorCode ,mode=OUT ,jdbcType=NUMERIC},
		#{errorMessage ,mode=OUT ,jdbcType=VARCHAR} )}
				
	</select>
	
	<select id="getExChRate" parameterType="transferCashSC" statementType="CALLABLE">
    { CALL P_RET_EXCHRATE_SB( 	
		#{compCode ,mode=IN ,jdbcType=NUMERIC},
		#{currencyCode ,mode=IN,jdbcType=NUMERIC },
		#{baseCurrencyCode ,mode=IN,jdbcType=NUMERIC },
		#{a_sb ,mode=IN,jdbcType=VARCHAR },
		#{alBranchCode,mode=IN,jdbcType=NUMERIC },
		#{alCif ,mode=IN ,jdbcType=NUMERIC},
		#{runningDate ,mode=IN,jdbcType=DATE },
		#{odecRate ,mode=OUT ,jdbcType=NUMERIC} )}
				
	</select>
	
	<select id="getExChRateNew" parameterType="transferCashSC" statementType="CALLABLE">
    { CALL P_RET_EXCHRATE_SB_NEW( 	
		#{compCode ,mode=IN ,jdbcType=NUMERIC},
		#{currencyCode ,mode=IN,jdbcType=NUMERIC },
		#{baseCurrencyCode ,mode=IN,jdbcType=NUMERIC },
		#{a_sb ,mode=IN,jdbcType=VARCHAR },
		#{runningDate ,mode=IN,jdbcType=DATE },
		#{alBranchCode,mode=IN,jdbcType=NUMERIC },
		#{alCif ,mode=IN ,jdbcType=NUMERIC},
		#{odecRate ,mode=OUT ,jdbcType=NUMERIC} )}

	</select>
	
	<select id="checkUserLimits" parameterType="transferCashSC" statementType="CALLABLE">
    { CALL P_RET_CHECK_USER_LIMITS( 	
		#{compCode ,mode=IN ,jdbcType=NUMERIC},
		#{branchCode ,mode=IN ,jdbcType=NUMERIC},
		#{trxType ,mode=IN ,jdbcType=NUMERIC},
		#{frCy ,mode=IN ,jdbcType=NUMERIC},
		#{frGl ,mode=IN ,jdbcType=NUMERIC},
		#{frCif ,mode=IN,jdbcType=NUMERIC },
		#{toCy ,mode=IN ,jdbcType=NUMERIC},
		#{toGl ,mode=IN ,jdbcType=NUMERIC},
		#{tellerCode ,mode=IN,jdbcType=NUMERIC },
		#{trxAmount ,mode=IN,jdbcType=NUMERIC },
		#{cvAmount ,mode=IN,jdbcType=NUMERIC },
		#{runningDate ,mode=IN,jdbcType=DATE },
		#{ivCrud ,mode=IN,jdbcType=VARCHAR },
		#{withinLimit ,mode=OUT,jdbcType=VARCHAR },
   <!-- #{withinLocalapproveLimit ,mode=OUT,jdbcType=VARCHAR },-->	<!-- commented temporarily till end of prcs merge-to be added later for bb modif s111 -->
		#{errorType,mode=OUT,jdbcType=VARCHAR },
		#{errorCode ,mode=OUT ,jdbcType=NUMERIC},
		#{errorMessage ,mode=OUT ,jdbcType=VARCHAR} )}

	</select>
		
	<select id="calculateSoDates" parameterType="trxMgntSoDetSC" statementType="CALLABLE">
	 { CALL P_RET_CALC_SO_DATES(
	 	#{periodicity  ,mode=IN ,jdbcType=VARCHAR},
	 	#{periodicityType  ,mode=IN ,jdbcType=VARCHAR},
	 	#{period ,mode=IN,jdbcType=NUMERIC },
	 	#{date ,mode=IN,jdbcType=DATE },
	 	#{soPeriodDay,mode=IN ,jdbcType=NUMERIC},
		#{soPeriodMonth ,mode=IN ,jdbcType=NUMERIC},
		#{soPeriodInterval ,mode=IN ,jdbcType=NUMERIC},
		#{startDate ,mode=OUT ,jdbcType=DATE},
		#{endingDate ,mode=OUT,jdbcType=DATE } )}
	</select>

	<select id="moveFromTrsAlertToTrs" parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL P_RET_ALERT_MCE_CTSTRS(	#{compCode, 			mode=IN, jdbcType=NUMERIC},
									#{branchCode,			mode=IN, jdbcType=NUMERIC},
									#{trsType, 				mode=IN, jdbcType=VARCHAR},
									#{trsAcBr,				mode=IN, jdbcType=NUMERIC},
									#{trsAcCy,				mode=IN, jdbcType=NUMERIC},
									#{trsAcGl,				mode=IN, jdbcType=NUMERIC},
									#{trsAcCif,				mode=IN, jdbcType=NUMERIC},
									#{trsAcSl,				mode=IN, jdbcType=NUMERIC},
									#{trxType,				mode=IN, jdbcType=NUMERIC},
									#{cbInd, 				mode=IN, jdbcType=VARCHAR},
									#{status,				mode=IN, jdbcType=VARCHAR},
                					#{userId, 				mode=IN, jdbcType=VARCHAR},
									#{trsDate,				mode=IN, jdbcType=DATE},
									#{alertStatus,			mode=IN, jdbcType=VARCHAR},
									#{errorCode,			mode=OUT,jdbcType=NUMERIC}
									#{errorMessage, 		mode=OUT,jdbcType=VARCHAR})}  
	</select>
	
	<select id="checkAmntRestriction" parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL P_RET_CHK_AMT_RESTRICTION_JAVA(#{compCode, 			mode=IN, jdbcType=NUMERIC},
										  #{branchCode,			mode=IN, jdbcType=NUMERIC},
										  #{trxType,			mode=IN, jdbcType=NUMERIC},
										  #{trsAcBr,			mode=IN, jdbcType=NUMERIC},
										  #{trsAcCy,			mode=IN, jdbcType=NUMERIC},
										  #{trsAcGl,			mode=IN, jdbcType=NUMERIC},
										  #{trsAcCif,			mode=IN, jdbcType=NUMERIC},
										  #{trsAcSl,			mode=IN, jdbcType=NUMERIC},
										  #{toTrsAcBr,			mode=IN, jdbcType=NUMERIC},
										  #{toTrsAcCy,			mode=IN, jdbcType=NUMERIC},
										  #{toTrsAcGl,			mode=IN, jdbcType=NUMERIC},
										  #{toTrsAcCif,			mode=IN, jdbcType=NUMERIC},
										  #{toTrsAcSl,			mode=IN, jdbcType=NUMERIC},
										  #{tellerCode,			mode=IN, jdbcType=NUMERIC},
										  #{trsDate,			mode=IN, jdbcType=DATE},
										  #{valueDate,			mode=IN, jdbcType=DATE},
										  #{trxAmount,			mode=IN, jdbcType=NUMERIC},
										  #{accAmount,			mode=IN, jdbcType=NUMERIC},
										  #{totalFCcharge,		mode=IN, jdbcType=NUMERIC},
										  #{totalCVcharge,		mode=IN, jdbcType=NUMERIC},
										  #{totalDuesFCcharge,	mode=IN, jdbcType=NUMERIC},
										  #{totalDuesCVcharge,	mode=IN, jdbcType=NUMERIC},	 
										  #{deduct, 			mode=IN, jdbcType=VARCHAR},
										  #{alertMode, 			mode=IN, jdbcType=VARCHAR},
										  #{systemDate,			mode=IN, jdbcType=DATE},
				                   		  #{linkToTrsNoBr,		mode=IN, jdbcType=NUMERIC},
				                   		  #{ctrlAcCy,			mode=IN, jdbcType=NUMERIC},
				                   		  #{ctrlAcGl,			mode=IN, jdbcType=NUMERIC},
				                   		  #{ctrlAcCif,			mode=IN, jdbcType=NUMERIC},
				                   		  #{ctrlAcSl,			mode=IN, jdbcType=NUMERIC},
				                   		  #{chAcBr,			    mode=IN, jdbcType=NUMERIC},
				                   		  #{chAcCy,			    mode=IN, jdbcType=NUMERIC},
				                   		  #{chAcGl,			    mode=IN, jdbcType=NUMERIC},
				                   		  #{chAcCif,			mode=IN, jdbcType=NUMERIC},
				                   		  #{chAcSl,			    mode=IN, jdbcType=NUMERIC},
				                   		  #{ivCrud,			    mode=IN, jdbcType=VARCHAR},
				                   		  #{trsNo,			    mode=IN, jdbcType=NUMERIC},
				                   		  #{addAmt3,			mode=IN, jdbcType=NUMERIC},
				                   		  #{addAmt4,			mode=IN, jdbcType=NUMERIC},
				                   		  #{addAmt1,			mode=INOUT, jdbcType=NUMERIC},
				                   		  #{addAmt2,			mode=INOUT, jdbcType=NUMERIC},
				                   		  #{os_s_string,		mode=INOUT, jdbcType=VARCHAR},
				                   		  #{overDrawnAmountFr,	mode=INOUT, jdbcType=NUMERIC},
				                   		  #{overDrawnAmountTo,	mode=INOUT, jdbcType=NUMERIC},
				                   		  #{overDrawnVoid, 		mode=OUT,jdbcType=VARCHAR},
				                   		  #{errorMessage, 		mode=OUT,jdbcType=VARCHAR},
				                   		  #{errType, 			mode=OUT,jdbcType=VARCHAR},
				                   		  #{errorCode,			mode=OUT,jdbcType=NUMERIC} )}  
	</select>
	
	<select id="getTVADetails" parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL P_RET_GET_TVA_DETAILS(#{compCode, 		mode=IN, jdbcType=NUMERIC},
    							#{branchCode,		mode=IN, jdbcType=NUMERIC},
    							#{trsNo,			mode=IN, jdbcType=NUMERIC},
    							#{code,				mode=IN, jdbcType=NUMERIC},
    							#{trsAcBr,			mode=IN, jdbcType=NUMERIC},
    							#{trsAcCy,			mode=IN, jdbcType=NUMERIC},
    							#{chAcBr,			mode=IN, jdbcType=NUMERIC},
    							#{chAcCy,			mode=IN, jdbcType=NUMERIC},
    							#{chAcGl,			mode=IN, jdbcType=NUMERIC},
    							#{chAcCif,			mode=IN, jdbcType=NUMERIC},
    							#{chAcSl,			mode=IN, jdbcType=NUMERIC},
    							#{exchRate,			mode=IN, jdbcType=NUMERIC},
    							#{totalCVcharge,	mode=IN, jdbcType=NUMERIC},
    							#{totalFCcharge,	mode=IN, jdbcType=NUMERIC},
    							#{currency,			mode=IN, jdbcType=NUMERIC},
    							#{trxType,			mode=IN, jdbcType=NUMERIC},
    							#{userId,			mode=IN, jdbcType=VARCHAR},
    							#{systemDate,		mode=IN, jdbcType=DATE},
    							#{type,				mode=IN, jdbcType=VARCHAR},
    							#{deductBr,			mode=IN, jdbcType=NUMERIC},    							
    							#{chargeCode,		mode=IN, jdbcType=NUMERIC},<!-- added by maria for BMO180067 -->    							    							
    							#{vatCVAmount, 		mode=OUT,jdbcType=NUMERIC},
    							#{vatFCAmount, 		mode=OUT,jdbcType=NUMERIC},
    							#{trsAcGl, 			mode=OUT,jdbcType=NUMERIC},
    							#{trsAcCif, 		mode=OUT,jdbcType=NUMERIC},
    							#{trsAcSl, 			mode=OUT,jdbcType=NUMERIC},
    							#{chargeCVAmount,   mode=OUT,jdbcType=NUMERIC},<!-- added by maria for BMO180067 -->
    							#{chargeFCAmount, 	mode=OUT,jdbcType=NUMERIC},<!-- added by maria for BMO180067 -->    							
    							#{errorCode, 		mode=OUT,jdbcType=NUMERIC},
    							#{errorMessage, 	mode=OUT,jdbcType=VARCHAR} )}
    </select>
    
    
    
    <select id="getExchrateFlag" parameterType="trxMgntSC" statementType="CALLABLE">
    	{ CALL 
    	<choose>
    		<when test="isSybase == 1" >
           		P_RET_EXCHRATE_FLAG		
	        </when>
	        <otherwise >
	           	P_RET_EXCHRATE_FLAG_NEW	
	       	</otherwise>
	    </choose>  	
	       	(#{trsAcCy, 		mode=IN, jdbcType=NUMERIC},
	       	#{trsCy, 			mode=IN, jdbcType=NUMERIC},
	       	#{trsType, 			mode=IN, jdbcType=VARCHAR},
	       	#{crDrForex, 		mode=IN, jdbcType=VARCHAR},
	       	#{baseCurrencyCode, mode=IN, jdbcType=NUMERIC},
	       	#{type, 			mode=IN, jdbcType=VARCHAR},
	       	#{trxType, 			mode=IN, jdbcType=NUMERIC},
	       	#{compCode, 		mode=IN, jdbcType=NUMERIC},
	       	#{flag, 			mode=OUT, jdbcType=VARCHAR} )} 
    </select>
    
    
	<select id="returnRateForSyb" parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL P_RET_GET_RATE(  #{compCode, 					mode=IN, jdbcType=NUMERIC},
							#{branchCode,					mode=IN, jdbcType=NUMERIC},
							#{trsCy,						mode=IN, jdbcType=NUMERIC},
							#{baseCurrencyCode,		 		mode=IN, jdbcType=NUMERIC},
							#{trsAcBr,						mode=IN, jdbcType=NUMERIC},
							#{trsAcCy,						mode=IN, jdbcType=NUMERIC},
							#{trsAcGl,						mode=IN, jdbcType=NUMERIC},
							#{trsAcCif,						mode=IN, jdbcType=NUMERIC},
							#{trsAcSl,						mode=IN, jdbcType=NUMERIC},
							#{trsDate,						mode=IN, jdbcType=DATE},
							#{valueDate,					mode=IN, jdbcType=DATE},
							#{trxType,						mode=IN, jdbcType=NUMERIC},
				            #{exchRate,						mode=OUT,jdbcType=NUMERIC},
				            #{multiDivInd, 					mode=OUT,jdbcType=VARCHAR} )}
		                   	
	</select>

	<select id="returnRateForOracle" parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL P_RET_GET_RATE(  #{compCode, 					mode=IN, jdbcType=NUMERIC},
							#{trsCy,						mode=IN, jdbcType=NUMERIC},
							#{baseCurrencyCode,		 		mode=IN, jdbcType=NUMERIC},
							#{trsAcCy,						mode=IN, jdbcType=NUMERIC},
							#{runningDate,					mode=IN, jdbcType=DATE},
							#{trxType,						mode=IN, jdbcType=NUMERIC},
							#{branchCode,					mode=IN, jdbcType=NUMERIC},
							#{trsAcCif,						mode=IN, jdbcType=NUMERIC},
				            #{exchRate,						mode=OUT,jdbcType=NUMERIC},
				            #{multiDivInd, 					mode=OUT,jdbcType=VARCHAR} )}
		                   	
	</select>
	
	<select id="returnRateNormal" parameterType="trxMgntSC" statementType="CALLABLE">
	  { CALL P_RET_GET_RATE_NORMAL( #{compCode, 					mode=IN, jdbcType=NUMERIC},
									#{branchCode,					mode=IN, jdbcType=NUMERIC},
									#{trsAcCy,						mode=IN, jdbcType=NUMERIC},
									#{baseCurrencyCode,		 		mode=IN, jdbcType=NUMERIC},
									#{trsCy,						mode=IN, jdbcType=NUMERIC},
									#{trsDate,						mode=IN, jdbcType=TIMESTAMP},
									#{crDrForex,					mode=IN, jdbcType=VARCHAR},
									#{trsType,						mode=IN, jdbcType=VARCHAR},
									#{trxType,						mode=IN, jdbcType=NUMERIC},
									#{cash,							mode=IN, jdbcType=VARCHAR},
									#{acFromCyUnits,				mode=IN, jdbcType=NUMERIC},
									#{acFromCyMultiDiv,				mode=IN, jdbcType=VARCHAR},
									#{acToCyMultiDiv,				mode=IN, jdbcType=VARCHAR},
									#{acToCyUnits,					mode=IN, jdbcType=NUMERIC},
									#{cif,							mode=IN, jdbcType=NUMERIC},
									#{trsAcGl,						mode=IN, jdbcType=NUMERIC},
									#{screenSrc, 					mode=IN, jdbcType=VARCHAR},
									#{rateFlag, 					mode=IN, jdbcType=VARCHAR},
							        #{exchRate,						mode=OUT,jdbcType=NUMERIC},
							        #{multiDivInd, 					mode=OUT,jdbcType=VARCHAR},
							        #{errorCode, 					mode=OUT, jdbcType=NUMERIC},
									#{errorMessage, 		 		mode=OUT, jdbcType=VARCHAR} )}
		                   	
	</select>
	
	
	<select id="getCrossRateCover" parameterType="trxMgntSC" statementType="CALLABLE">
    	{ CALL  P_RET_GET_CROSS_RATE_COVER(
    						#{compCode, 					mode=IN, jdbcType=NUMERIC},
    	<choose>
    		<when test="isSybase == 1" >
           		#{branchCode,					mode=IN, jdbcType=NUMERIC},
           		#{trxType ,						mode=IN ,jdbcType=NUMERIC},
           		#{trsAcCy,						mode=IN ,jdbcType=NUMERIC},
				#{trsCy	,						mode=IN ,jdbcType=NUMERIC},
				#{currency ,					mode=IN,jdbcType=NUMERIC },
				#{toTrsAcCy,					mode=IN ,jdbcType=NUMERIC },
				#{branchCode, 					mode=IN,jdbcType=NUMERIC},
				#{cyCode, 						mode=IN,jdbcType=NUMERIC},
				#{trsAcGl, 						mode=IN,jdbcType=NUMERIC},
				#{trsAcCif,						mode=IN, jdbcType=NUMERIC},
				#{trsAcSl,						mode=IN, jdbcType=NUMERIC},
				#{trsType, 						mode=IN, jdbcType=VARCHAR},
				#{crDrForex, 					mode=IN, jdbcType=VARCHAR},
				#{systemDate,					mode=IN, jdbcType=DATE},
				#{exchRate,						mode=OUT, jdbcType=NUMERIC})
	        </when>
	        <otherwise>
	        	#{trsAcCy,						mode=IN ,jdbcType=NUMERIC},
	        	#{currency ,					mode=IN	,jdbcType=NUMERIC },
	        	#{toTrsAcCy,					mode=IN ,jdbcType=NUMERIC },
	        	#{trsType, 						mode=IN, jdbcType=VARCHAR},
				#{trxType ,						mode=IN ,jdbcType=NUMERIC},
				#{crDrForex, 					mode=IN, jdbcType=VARCHAR},
				#{systemDate,					mode=IN, jdbcType=DATE},
				#{branchCode,					mode=IN, jdbcType=NUMERIC},
				#{trsAcCif,						mode=IN, jdbcType=NUMERIC},
				#{exchRate,						mode=OUT, jdbcType=NUMERIC})
	       	</otherwise>
	    </choose>  					   
    </select>
    



	
	
	<select id="getToDoDet" parameterType="alertsSC" statementType="CALLABLE" >
    { CALL P_TODO_GET_USER_JOB_COUNTER(#{userId, mode=IN,jdbcType=VARCHAR},
								       #{userAction, mode=IN,jdbcType=VARCHAR},
								       #{jobAction, mode=IN,jdbcType=VARCHAR},
								       <if test="isSybase == 1">
								       #{tellerId, mode=IN,jdbcType=VARCHAR},
								       </if>
								       #{todoCode, mode=OUT,jdbcType=NUMERIC},
								   	   #{todoLine , mode=OUT,jdbcType=NUMERIC},
								   	   #{jobId , mode=OUT,jdbcType=NUMERIC},
								       #{errorCode, mode=OUT,jdbcType=NUMERIC},
								       #{errorMessage, mode=OUT,jdbcType=VARCHAR},
								       #{isNewUser, mode=OUT,jdbcType=VARCHAR}	)}					    

	</select>
	
	<select id="returnTranslateMICR" parameterType="trxMgntSC" statementType="CALLABLE" >
    { CALL P_RET_TRANSLATE_MICR(#{micrIN, mode=IN,jdbcType=VARCHAR},
						        #{micrOUT, mode=OUT,jdbcType=VARCHAR},
						        #{errorCode, mode=OUT,jdbcType=NUMERIC},
						        #{errorMessage, mode=OUT,jdbcType=VARCHAR}	)}					    

	</select>
	
	<select id="verifyMICRKey" parameterType="trxMgntSC" statementType="CALLABLE" >
    { CALL P_VERIFY_MICR_KEY(#{compCode, mode=IN, jdbcType=NUMERIC},
    						 #{chqNum, mode=IN, jdbcType=NUMERIC},
   							 #{bankBranch, mode=IN,jdbcType=VARCHAR},
					         #{selectedAcc, mode=IN,jdbcType=VARCHAR},
					         #{branchRef, mode=IN,jdbcType=VARCHAR},
					         #{key, mode=IN,jdbcType=VARCHAR},
					         #{algorithm, mode=IN,jdbcType=VARCHAR},
					         #{micrIN, mode=IN,jdbcType=VARCHAR},
						     #{errorCode, mode=OUT,jdbcType=NUMERIC},
						     #{errorMessage, mode=OUT,jdbcType=VARCHAR}	)}					    

	</select>
	
	<select id="getCvAmount" parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL P_RET_CALC_CVAMOUNT( #{compCode, 					mode=IN, jdbcType=NUMERIC},
    							#{branchCode,					mode=IN, jdbcType=NUMERIC},
    							#{trxType,						mode=IN, jdbcType=NUMERIC},
    							#{trsAcCy,						mode=IN, jdbcType=NUMERIC},
    							#{systemDate,					mode=IN, jdbcType=DATE},
    							#{fcAmount,						mode=IN, jdbcType=NUMERIC},
    							#{frCif,						mode=IN, jdbcType=NUMERIC},
    							#{frCy,							mode=IN, jdbcType=NUMERIC},
								#{trsCy,						mode=IN, jdbcType=NUMERIC},
								#{typeFrTo, 					mode=IN, jdbcType=VARCHAR},
								#{cvAmount, 					mode=OUT, jdbcType=NUMERIC},
								#{errorCode, 					mode=OUT, jdbcType=NUMERIC},
								#{errorMessage, 		 		mode=OUT, jdbcType=VARCHAR})}
	</select>   
	
	<select id="returnAmountByRateForTellerExch" parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL P_RET_GET_AMT_TELLER_EXCH( #{compCode, 					mode=IN, jdbcType=NUMERIC},
									#{branchCode,					mode=IN, jdbcType=NUMERIC},
									#{trsAcCy,						mode=IN, jdbcType=NUMERIC},
									#{baseCurrencyCode,		 		mode=IN, jdbcType=NUMERIC},
									#{trsCy,						mode=IN, jdbcType=NUMERIC},
									#{trsDate,						mode=IN, jdbcType=DATE},
									#{crDrForex,					mode=IN, jdbcType=VARCHAR},
									#{trsType,						mode=IN, jdbcType=VARCHAR},
									#{trxType,						mode=IN, jdbcType=NUMERIC},
									#{cash,							mode=IN, jdbcType=VARCHAR},
									#{acFromCyUnits,				mode=IN, jdbcType=NUMERIC},
									#{acFromCyMultiDiv,				mode=IN, jdbcType=VARCHAR},
									#{acToCyMultiDiv,				mode=IN, jdbcType=VARCHAR},
									#{acToCyUnits,					mode=IN, jdbcType=NUMERIC},
									#{cif,							mode=IN, jdbcType=NUMERIC},
									#{trsAcGl,						mode=IN, jdbcType=NUMERIC},
									#{typeFrTo, 					mode=IN, jdbcType=VARCHAR},
									#{fcAmount, 					mode=IN, jdbcType=NUMERIC},
									#{decimalPoints, 				mode=IN, jdbcType=NUMERIC},
									#{screenSrc, 					mode=IN, jdbcType=VARCHAR},
							        #{cvAmount, 					mode=OUT, jdbcType=NUMERIC},
									#{errorCode, 					mode=OUT, jdbcType=NUMERIC},
									#{errorMessage, 		 		mode=OUT, jdbcType=VARCHAR} )}
	</select>   
	
	<select id="getChargesDetails" parameterType="trxMgntChargesSC" statementType="CALLABLE">
	{ CALL P_RET_GET_CHARGES_DETAILS(
								#{compCode, 				mode=IN, jdbcType=NUMERIC},
								#{branchCode,				mode=IN, jdbcType=NUMERIC},
								#{chargeCode,				mode=IN, jdbcType=NUMERIC},
								#{chargeCy,					mode=IN, jdbcType=NUMERIC},
								#{chargesBooking,			mode=IN, jdbcType=VARCHAR},
								#{branchBooking,			mode=IN, jdbcType=NUMERIC},
								#{exchangeRate,				mode=IN, jdbcType=NUMERIC},
								#{trxAmount,				mode=IN, jdbcType=NUMERIC},
								#{trxType,					mode=IN, jdbcType=NUMERIC},
								#{type,						mode=IN, jdbcType=VARCHAR},
								#{date,						mode=IN, jdbcType=DATE},
								#{trsCy,					mode=IN, jdbcType=NUMERIC},
								#{cvAmount,					mode=OUT, jdbcType=NUMERIC},
								#{fcAmount,					mode=OUT, jdbcType=NUMERIC},
								#{glCode,					mode=OUT, jdbcType=NUMERIC},
								#{cifCode,					mode=OUT, jdbcType=NUMERIC},
								#{slNo,						mode=OUT, jdbcType=NUMERIC},
								#{exceed,					mode=OUT, jdbcType=VARCHAR},
								#{exceedAmt,				mode=OUT, jdbcType=NUMERIC},
								#{minAmt,					mode=OUT, jdbcType=NUMERIC},
								#{maxAmt,					mode=OUT, jdbcType=NUMERIC},
								#{chargePercentage,			mode=OUT, jdbcType=NUMERIC},
								#{exchangeRate,				mode=OUT, jdbcType=NUMERIC},
								#{error,					mode=OUT, jdbcType=NUMERIC},
								#{errorMessage,				mode=OUT, jdbcType=VARCHAR})}								
	</select>
	
	<select id="checkUserMinMaxBal" parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL P_RET_CHECK_USER_MINMAX_BAL( #{compCode, 			mode=IN, jdbcType=NUMERIC},
    							#{branchCode,					mode=IN, jdbcType=NUMERIC},
    							#{trxType,						mode=IN, jdbcType=NUMERIC},
    							#{trsCy,						mode=IN, jdbcType=NUMERIC},
    							#{tellerCode,					mode=IN, jdbcType=NUMERIC},
    							#{trsfrMethod,                  mode=IN, jdbcType=VARCHAR},
    							#{trxAmount,					mode=IN, jdbcType=NUMERIC},
								#{cvAmount,						mode=IN, jdbcType=NUMERIC},
    							#{minMaxBal,					mode=OUT, jdbcType=VARCHAR},
								#{errorMessage, 				mode=OUT, jdbcType=VARCHAR},
								#{errType, 						mode=OUT, jdbcType=VARCHAR},
								#{errorCode, 		 			mode=OUT, jdbcType=NUMERIC}) }
	</select>
	
	<select id="checkBranchCashLimit" parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL P_RET_CALCULATE_CASH_LIMIT( #{compCode, 			mode=IN, jdbcType=NUMERIC},
    							#{branchCode,					mode=IN, jdbcType=NUMERIC},
    							#{trsCy,						mode=IN, jdbcType=NUMERIC},
    							#{trxAmount,					mode=IN, jdbcType=NUMERIC},
    							#{charges,						mode=IN, jdbcType=NUMERIC},
    							#{tellerCode,					mode=IN, jdbcType=NUMERIC}, 
    							#{trsfrMethod,                  mode=IN, jdbcType=VARCHAR}, 							
    							#{trxType,						mode=IN, jdbcType=NUMERIC},
    							#{fromProduct,                  mode=IN, jdbcType=VARCHAR},
    							
    							#{branchCashLimit,				mode=OUT, jdbcType=NUMERIC},
    							#{utilizedBalance,				mode=OUT, jdbcType=NUMERIC},
    							#{remainingBalance,				mode=OUT, jdbcType=NUMERIC},
    							#{exceededBalance,				mode=OUT, jdbcType=NUMERIC},
    							#{exceededPercentage,			mode=OUT, jdbcType=NUMERIC},
    							
   								#{exceededLimit, 				mode=OUT, jdbcType=VARCHAR},
    							#{responseOutput, 				mode=OUT, jdbcType=VARCHAR},
    							
								#{errorMessage, 				mode=OUT, jdbcType=VARCHAR},
								#{errType, 						mode=OUT, jdbcType=VARCHAR},
								#{errorCode, 		 			mode=OUT, jdbcType=NUMERIC}) }
	</select>
	
	<!--Elie Achkar	-->
	<select id="checkHouseChequeData" parameterType="trxMgntSC" statementType="CALLABLE">
	{ CALL P_RET_CHECK_HOUSE_CHEQUE_DATA(
								#{compCode, 				mode=IN, jdbcType=NUMERIC},
								#{branchCode,				mode=IN, jdbcType=NUMERIC},
								#{chqNum,					mode=IN, jdbcType=NUMERIC},
								#{trxType,					mode=IN, jdbcType=NUMERIC},
								#{trsNo,					mode=IN, jdbcType=NUMERIC},
								#{trsfrMethod,				mode=IN, jdbcType=VARCHAR},
								#{trsAcBr,					mode=IN, jdbcType=NUMERIC},
							    #{trsAcCy,					mode=IN, jdbcType=NUMERIC},
							    #{trsAcGl,					mode=IN, jdbcType=NUMERIC},
							    #{trsAcCif,					mode=IN, jdbcType=NUMERIC},
							    #{trsAcSl,					mode=IN, jdbcType=NUMERIC},
							    #{toTrsAcBr,				mode=IN, jdbcType=NUMERIC},
							    #{toTrsAcCy,				mode=IN, jdbcType=NUMERIC},
							    #{toTrsAcGl,				mode=IN, jdbcType=NUMERIC},
							    #{toTrsAcCif,				mode=IN, jdbcType=NUMERIC},
							    #{toTrsAcSl,				mode=IN, jdbcType=NUMERIC},
							    #{trsCy,					mode=IN, jdbcType=NUMERIC},
							    #{amount,					mode=IN, jdbcType=NUMERIC},
							    #{chqDate,					mode=IN, jdbcType=DATE},
							    #{errorCode,				mode=OUT, jdbcType=NUMERIC},
								#{errorMessage,				mode=OUT, jdbcType=VARCHAR})}
	</select>
	
	<select id="populateCif" parameterType="PopulateCifSC" statementType="CALLABLE">
    {CALL <choose><when test="isSybase == 1" >PKG_P_POPULATE_CIF</when>
				<otherwise>PKG_CIF_POPULATION.P_POPULATE_CIF</otherwise>
	    </choose> 
			 ( #{fromCompany, mode=IN,jdbcType=NUMERIC},
			   #{toCompany, mode=IN,jdbcType=NUMERIC},
			   #{fromCif, mode=IN,jdbcType=NUMERIC},
			   #{toCif, mode=IN,jdbcType=NUMERIC},
			   #{compCode, mode=IN,jdbcType=NUMERIC},
			   #{branchCode, mode=IN,jdbcType=NUMERIC},
			   #{popRange, mode=IN,jdbcType=NUMERIC},
			   #{ignoreOverriding, mode=IN,jdbcType=NUMERIC},
			   #{change, mode=IN,jdbcType=NUMERIC},
                #{briefName, mode=IN,jdbcType=VARCHAR}, 
                #{userId, mode=IN,jdbcType=VARCHAR},
                #{appName, mode=IN,jdbcType=VARCHAR},
                #{suspendBy, mode=IN,jdbcType=VARCHAR},
                #{suspendDate, mode=IN,jdbcType=TIMESTAMP}                 
			 )}
	</select>
	
	<select id="getBFBalance" 		parameterType="accountCommonCO" statementType="CALLABLE">
    { CALL P_GET_BF_BALANCE		( #{compCode, 	 	mode=IN,jdbcType=NUMERIC},
	                              #{branchCode,	 	mode=IN,jdbcType=NUMERIC},
				                  #{fromDate, 	 	mode=IN,jdbcType=DATE},
								  #{toDate, 		mode=IN,jdbcType=DATE}, 
				                  #{userId, 		mode=IN,jdbcType=VARCHAR},
				                  #{byTradeDtValueDt, mode=IN,jdbcType=VARCHAR},
				                  #{fromCy, 		mode=IN,jdbcType=NUMERIC},
				                  #{fromGl, 		mode=IN,jdbcType=NUMERIC},
				                  #{fromCif, 	 	mode=IN,jdbcType=NUMERIC},
				                  #{fromSl, 		mode=IN,jdbcType=NUMERIC}, 
				                  #{toCy, 		 	mode=IN,jdbcType=NUMERIC},
				                  #{toGl,		 	mode=IN,jdbcType=NUMERIC},
				                  #{toCif, 	 		mode=IN,jdbcType=NUMERIC},
				                  #{toSl,	 		mode=IN,jdbcType=NUMERIC},   
				                  #{add5, 			mode=IN,jdbcType=VARCHAR},
				                  #{includeReserve, mode=IN,jdbcType=VARCHAR}  )}
	</select>
	
	<update id="dropAccHashTables">
		<include refid="coreCommonProcedureMapper.dropAccHashTbls1"/>
		<include refid="coreCommonProcedureMapper.dropAccHashTbls2"/>
		<include refid="coreCommonProcedureMapper.dropAccHashTbls3"/>
		<include refid="coreCommonProcedureMapper.dropAccOffHashTbls1"/>
		<include refid="coreCommonProcedureMapper.dropAccHashTbls"/>
		<include refid="coreCommonProcedureMapper.dropAccHashOff"/>
	</update>
	
	<update id="createAccHashTables">
		<include refid="coreCommonProcedureMapper.createAccHashTbls1"/>
		<include refid="coreCommonProcedureMapper.createAccHashTbls2"/>
		<include refid="coreCommonProcedureMapper.createAccHashTbls3"/>
		<include refid="coreCommonProcedureMapper.createAccOffHashTbls"/>
		<include refid="coreCommonProcedureMapper.createAccHashTbls"/>
		<include refid="coreCommonProcedureMapper.createAccHashOff"/>
		<include refid="coreCommonProcedureMapper.beginTans"/>
		
	</update>
	
	<sql id="dropAccHashTbls1">
		IF OBJECT_ID('#ACC_BAL_TMP1') IS NOT NULL
		BEGIN
			DROP TABLE #ACC_BAL_TMP1
		END	
	</sql>
	<sql id="dropAccHashTbls2">
		IF OBJECT_ID('#CTS_ACCOUNTS_TEMP') IS NOT NULL
		BEGIN
			DROP TABLE #CTS_ACCOUNTS_TEMP
		END	
	</sql>
    <sql id="dropAccHashTbls3">
		IF OBJECT_ID('#CTS_ACCOUNTS_EXCH_TEMP') IS NOT NULL
		BEGIN
			DROP TABLE #CTS_ACCOUNTS_EXCH_TEMP
		END	
	</sql>
	<sql id="dropAccOffHashTbls1">
		IF OBJECT_ID('#ACC_OFF_BATCH') IS NOT NULL
		BEGIN
			DROP TABLE #ACC_OFF_BATCH
		END	
	</sql>
	<sql id="dropAccHashTbls">
		IF OBJECT_ID('#ACC_BAL_TMP') IS NOT NULL
		BEGIN
			DROP TABLE #ACC_BAL_TMP
		END	
	</sql>
	<sql id="dropAccHashOff">
		IF OBJECT_ID('#ACC_OFFLINE_STMT') IS NOT NULL
		BEGIN
			DROP TABLE #ACC_OFFLINE_STMT
		END	
	</sql>
	
	<sql id="createAccHashTbls1">
		create table #ACC_BAL_TMP1(
			   COMP_CODE   			numeric(4,0)  	null,
			   BRANCH_CODE   		numeric(4,0)  	null,
			   CURRENCY_CODE   		numeric(3,0)  	null,
			   GL_CODE   			numeric(6,0)  	null,
			   CIF_SUB_NO   		numeric(8,0)  	null,
			   SL_NO   				numeric(3,0)  	null,
			   FC_AMOUNT   			numeric(18,3)  	null,
			   CV_AMOUNT   			numeric(18,3)  	null,
			   TRANS_DATE   		datetime  		null,
			   VALUE_DATE   		datetime  		null,
			   USER_ID   			varchar(8)  	null,
			   SWAP_IND   			numeric(2,0)  	null,
			   GL_CATEGORY   		varchar(1)  	null,
			   GL_TYPE   			varchar(1)  	null,
			   PRINT_CTRL   		varchar(1)  	null,
			   LONG_DESC_ENG   		varchar(100)  	null,
			   DR_AC   				numeric(6,0)  	null,
			   CR_AC   				numeric(6,0)  	null,
			   BRIEF_NAME_ENG   	varchar(60)  	null,
			   DIV   				numeric(3,0)  	null,
			   DEPT   				numeric(3,0)  	null,
			   PORTF_INCOME_PERCENT numeric(10,3)  	null,
			   PORTFOLIO_CIF   		numeric(8,0)  	null,
			   PORTFOLIO_SEQ   		numeric(3,0)  	null,
			   PORTFOLIO_NAME   	varchar(50)  	null,
			   ADD_STRING1   		varchar(250)  	null,
			   ADD_STRING2   		varchar(250)  	null,
			   ADD_STRING3   		varchar(250)  	null,
			   ADD_STRING4   		varchar(250)  	null,
			   ADD_STRING5   		varchar(250)  	null,
			   ADD_NUMBER1   		numeric(20,3)  	null,
			   ADD_NUMBER2   		numeric(20,3)  	null,
			   ADD_NUMBER3   		numeric(20,3)  	null,
			   ADD_NUMBER4   		numeric(20,3)  	null,
			   ADD_NUMBER5   		numeric(20,3)  	null,
			   TMPLT_LINE_NBR   	numeric(6,0)  	null,
			   RESIDENT   			varchar(1)  	null,
			   ACC_SIGN   			varchar(1)  	null,
			   SECTOR_CODE   		numeric(4,0)  	null,
			   SUB_SECTOR_CODE   	numeric(4,0)  	null,
			   NATIONALITY   		numeric(3,0)  	null,
			   CIF_TYPE   			numeric(4,0)  	null,
			   CIF_COUNTRY   		numeric(3,0)  	null,
			   YTD_CYB   			numeric(20,4)  	null,
			   YTD_LYB   			numeric(20,4)  	null,
			   CY_CMB   			numeric(20,4)  	null,
			   LY_CMB   			numeric(20,4)  	null,
			   BS_CONTRA   			varchar(1)  	null,
			   ADD_STRING6   		varchar(250)  	null,
			   ADD_STRING7   		varchar(250)  	null,
			   ADD_STRING8   		varchar(250)  	null,
			   ADD_STRING9   		varchar(250)  	null,
			   ADD_STRING10  	 	varchar(250)  	null,
			   ADD_STRING11   		varchar(250)  	null,
			   CONTINENT_CODE   	numeric(3,0)  	null,
			   DEAL_SERIAL_NO   	numeric(12,0)  	null,
			   DEAL_SECTOR   		numeric(4,0)  	null,
			   DEAL_SUB_SECTOR   	numeric(4,0)  	null,
			   POINTS_ACCRUAL   	numeric(18,13)  null,
			   GMI_FLAG   			varchar(1)  	null,
			   GL_TERM   			varchar(1)  	null,
			   MATURITY_DTE   		datetime		null,
			   JV_TYPE   			numeric(3,0)  	null,
			   CTS_TRS_NO   		numeric(12,0)  	null,
			   CTS_TRS_TYPE   		varchar(2)  	null,
			   CTS_TRS_BR   		numeric(4,0)  	null,
			   PARENT_GL   			numeric(6,0)  	null,
			   ADD_NUMBER7   		numeric(20,3)  	null,
			   ADD_NUMBER8   		numeric(20,3)  	null,
			   ADD_NUMBER9   		numeric(20,3)  	null,
			   ADD_NUMBER10   		numeric(20,3)  	null,
			   ADD_NUMBER6   		numeric(20,3)  	null,
			   ADD_DATE1			DATETIME		NULL,
			   ADD_DATE2			DATETIME		NULL,
			   OP_NO				NUMERIC(9)		NULL,
			   UPD_FLAG				VARCHAR(1)      NULL,
			   DUES_AMOUNT			NUMERIC(23,6)  	NULL,
			   DUES_DISPLAY_BY		varchar(1)  	NULL,
			   DEPOSIT_AMT_FC   	numeric(18,3)  	null,
			   DEPOSIT_AMT_CV   	numeric(18,3)  	null,
			   WITHDRAWAL_AMT_FC   	numeric(18,3)  	null,
			   WITHDRAWAL_AMT_CV   	numeric(18,3)  	null
			)
		alter table #ACC_BAL_TMP1 lock datarows
		create nonclustered index ACC_BAL_TMP1_IDX1 on #ACC_BAL_TMP1( COMP_CODE ASC,BRANCH_CODE ASC,CURRENCY_CODE ASC,GL_CODE ASC,CIF_SUB_NO ASC,SL_NO ASC,USER_ID ASC,VALUE_DATE ASC)
		create nonclustered index IDX_BTR_ACCBALTMP1_1 on #ACC_BAL_TMP1( COMP_CODE ASC,TMPLT_LINE_NBR ASC,CURRENCY_CODE ASC,GL_CODE ASC,CIF_SUB_NO ASC)
	</sql>
	
	<sql id="createAccHashTbls2">
	
	CREATE TABLE #CTS_ACCOUNTS_TEMP
				     (
						COMP_CODE             NUMERIC(4,0)  NOT NULL,
						BRANCH_CODE           NUMERIC(4,0)  NOT NULL,
						ACC_BR                NUMERIC(4,0)  NOT NULL,
						CURRENCY_CODE         NUMERIC(3,0)  NOT NULL,
						GL_CODE               NUMERIC(6,0)  NOT NULL,
						CIF_SUB_NO            NUMERIC(8,0)  NOT NULL,
						SL_NO                 NUMERIC(3,0)  NOT NULL,
						CV_AMOUNT             NUMERIC(20,3)  NULL,
						FC_AMOUNT             NUMERIC(20,3)  NULL,
						USER_ID   			  varchar(8)  	null,
					 )
	</sql>
	
	<sql id="createAccHashTbls3">
	
		CREATE TABLE #CTS_ACCOUNTS_EXCH_TEMP
				     (
						COMP_CODE             NUMERIC(4,0)   NULL,
						BRANCH_CODE           NUMERIC(4,0)   NULL,
						TRS_CY                NUMERIC(3,0)   NULL,
					    EXCH_RATE             NUMERIC(20,12) NULL,
						CIF_SUB_NO            NUMERIC(8,0)   NULL,
						USER_ID   			  varchar(8)  	null,
					 )
	</sql>
	
	<sql id="createAccOffHashTbls">
	CREATE TABLE #ACC_OFF_BATCH
   (COMP_CODE NUMERIC(4,0), 
	BRANCH_CODE NUMERIC(4,0), 
	USER_ID VARCHAR(8), 
	SEGMENTS NUMERIC(4,0), 
	BATCH NUMERIC(4,0), 
	RANGE NUMERIC(4,0), 
	 CONSTRAINT PK_ACC_OFF_BATCH PRIMARY KEY (COMP_CODE, BRANCH_CODE, USER_ID, SEGMENTS))	
	</sql>
	
	<sql id="createAccHashTbls">
	create table #ACC_BAL_TMP(
			   COMP_CODE   		numeric(4,0)  	null,
			   BRANCH_CODE   	numeric(4,0)  	null,
			   CURRENCY_CODE   	numeric(3,0)  	null,
			   GL_CODE   		numeric(6,0)  	null,
			   CIF_SUB_NO   	numeric(8,0)  	null,
			   SL_NO   			numeric(3,0)  	null,
			   FC_AMOUNT   		numeric(18,3)  	null,
			   CV_AMOUNT   		numeric(18,3)  	null,
			   TRANS_DATE   	datetime  		null,
			   VALUE_DATE   	datetime  		null,
			   USER_ID   		varchar(8)  	null,
			   SWAP_IND   		numeric(2,0)  	null,
			   GL_CATEGORY   	varchar(1)  	null,
			   GL_TYPE   		varchar(1)  	null,
			   PRINT_CTRL   	varchar(1)  	null,
			   LONG_DESC_ENG   	varchar(100)  	null,
			   MATURITY_DTE   	datetime  		null,
			   YEAR   			numeric(4,0)  	null,
			   MONTH   			numeric(2,0)  	null,
			   GMI_FLAG  	 	varchar(1)  	null,
			   GL_TERM 	 		varchar(1)  	null,
			   DR_AC   			numeric(6,0)  	null,
			   CR_AC   			numeric(6,0)  	null,
			   UPD_FLAG   		varchar(1)  	null,
			   BRIEF_NAME_ENG   varchar(60)  	null,
			   DIV   			numeric(3,0)  	null,
			   DEPT   			numeric(3,0)  	null,
			   PORTF_INCOME_PERCENT   numeric(10,3)  null,
			   PORTFOLIO_CIF   	numeric(8,0)  	null,
			   PORTFOLIO_SEQ   	numeric(3,0)  	null,
			   PORTFOLIO_NAME   varchar(50)  	null,
			   ADD_STRING1   	varchar(250)  	null,
			   ADD_STRING2   	varchar(250)  	null,
			   ADD_STRING3   	varchar(250)  	null,
			   ADD_STRING4   	varchar(250)  	null,
			   ADD_STRING5  	varchar(250)  	null,
			   INTER_COMP   	varchar(1)  	null,
			   INTER_COMP_TOT1  numeric(32,3)  	null,
			   INTER_COMP_TOT2  numeric(32,3)  	null,
			   ADD_NUMBER1   	numeric(20,3)  	null,
			   ADD_NUMBER2   	numeric(20,3)  	null,
			   ADD_NUMBER3   	numeric(20,3)  	null,
			   ADD_NUMBER4   	numeric(20,3)  	null,
			   ADD_NUMBER5   	numeric(20,3)  	null,
			   RESIDENT   		varchar(1)  	null,
			   ACC_SIGN   		varchar(1)  	null,
			   YTD_CYB   		numeric(20,4)  	null,
			   YTD_LYB   		numeric(20,4)  	null,
			   CY_CMB   		numeric(20,4)  	null,
			   LY_CMB   		numeric(20,4)  	null,
			   TMPLT_LINE_NBR   numeric(6,0)  	null,
			   SECTOR_CODE   	numeric(4,0)  	null,
			   SUB_SECTOR_CODE  numeric(4,0)  	null,
			   NATIONALITY   	numeric(3,0)  	null,
			   CIF_TYPE   		numeric(4,0)  	null,
			   CIF_COUNTRY   	numeric(3,0)  	null,
			   BS_CONTRA   		varchar(1)  	null,
			   ADD_STRING6   	varchar(250)  	null,
			   ADD_STRING7   	varchar(250)  	null,
			   ADD_STRING8   	varchar(250)  	null,
			   ADD_STRING9   	varchar(250)  	null,
			   ADD_STRING10   	varchar(250)  	null,
			   ADD_STRING11   	varchar(250)  	null,
			   LEGAL_STATUS   	numeric(3,0)  	null,
			   DEAL_SECTOR   	numeric(4,0)  	null,
			   DEAL_SUB_SECTOR  numeric(4,0)  	null,
			   POINTS_ACCRUAL   numeric(18,13)  null,
			   JV_TYPE   		numeric(3,0)  	null,
			   CTS_TRS_NO   	numeric(12,0)  	null,
			   CTS_TRS_TYPE   	varchar(2)  	null,
			   CTS_TRS_BR   	numeric(4,0)  	null,
			   PERCENTAGE   	numeric(29,9)  	null,
			   PARENT_GL   		numeric(6,0)  	null,
			   ADD_NUMBER6   	numeric(20,3)  	null,
			   ADD_NUMBER7   	numeric(20,3)  	null,
			   ADD_NUMBER8   	numeric(20,3)  	null,
			   ADD_NUMBER9   	numeric(20,3)  	null,
			   ADD_NUMBER10   	numeric(20,3)  	null,
			   ADD_DATE1		DATETIME		NULL,
			   ADD_DATE2		DATETIME		NULL,
			   OP_NO			NUMERIC(9)		NULL,
               EXCH_RATE        NUMERIC(20,6)   NULL,
               CTS_CB_IND       varchar(2)      NULL,
               STATEMENT_TYPE	VARCHAR(1)		NULL
			)
		alter table #ACC_BAL_TMP lock datarows
		create nonclustered index ACC_BAL_TMP_IDX1 on #ACC_BAL_TMP( COMP_CODE ASC,BRANCH_CODE ASC,CURRENCY_CODE ASC,GL_CODE ASC,CIF_SUB_NO ASC,SL_NO ASC,USER_ID ASC,VALUE_DATE ASC)
		create nonclustered index IDX_BTR_ACCBALTMP on #ACC_BAL_TMP( COMP_CODE ASC,TMPLT_LINE_NBR ASC,GL_CODE ASC)
		create nonclustered index IDX_BTR_ACCBALTMP1 on #ACC_BAL_TMP( COMP_CODE ASC,TMPLT_LINE_NBR ASC,CURRENCY_CODE ASC,GL_CODE ASC,RESIDENT ASC)
		create nonclustered index IDX_BTR_ACCBALTMP2 on #ACC_BAL_TMP( COMP_CODE ASC,TMPLT_LINE_NBR ASC,CURRENCY_CODE ASC,GL_CODE ASC,SECTOR_CODE ASC,SUB_SECTOR_CODE ASC)
		create nonclustered index IDX_BTR_ACCBALTMP3 on #ACC_BAL_TMP( COMP_CODE ASC,TMPLT_LINE_NBR ASC,CURRENCY_CODE ASC,GL_CODE ASC,NATIONALITY ASC)
	</sql>
	<sql id="createAccHashOff">
	create table #ACC_OFFLINE_STMT (COMP_CODE numeric(4,0) not null, 
								BRANCH_CODE numeric(4,0) not null, 
								CURRENCY_CODE numeric(3,0) not null, 
								GL_CODE numeric(6,0) not null, 
								CIF_SUB_NO numeric(8,0) not null, 
								SL_NO numeric(3,0) not null, 
								USER_ID varchar(8) not null, 
								GMI_FLAG varchar(1) null, 
								STATUS varchar(1) null, 
								ACC_PERIOD varchar(1) null, 
								FROM_DATE datetime null, 
								TO_DATE datetime null, 
								ACC_PERIOD_SEQ numeric(1,0) null, 
								OPTION_TYPE varchar(1) null, 
								PREVIOUS_DATE datetime null, 
								OPENING_DATE datetime null, 
								YEAR numeric(4,0) null, 
								MONTH numeric(2,0) null, 
								TELLER_ACC varchar(1) null, 
								REQUEST_DATE datetime null, 
								AVAIL_PREV_DATE datetime null, 
								AVAIL_OPTION_TYPE varchar(1) null, 
								AVAIL_OPENING_DATE datetime null, 
								AVAIL_MONTH numeric(2,0) null, 
								AVAIL_YEAR numeric(4,0) null, 
								ACC_STATUS varchar(50) null, 
								CDATE1 datetime null, 
								CDATE2 datetime null, 
								CDATE3 datetime null, 
								CAMT1 numeric(20,3) null, 
								CAMT2 numeric(20,3) null, 
								CAMT3 numeric(20,3) null, 
								AVAIL_BAL numeric(20,3) null, 
								BLOCKED_AMT numeric(20,3) null, 
								INVST_BR numeric(4,0) null, 
								INVST_CY numeric(3,0) null, 
								INVST_GL numeric(6,0) null, 
								INVST_CIF numeric(8,0) null, 
								INVST_SL numeric(3,0) null, 
								AUTO_SWEEP varchar(1) null, 
								INVST_AVAIL_BAL numeric(20,3) null, 
								ACC_SALARY varchar(1) null, 
								AUTO_RENEW varchar(1) null, 
								YTD_BAL numeric(18,3) null, 
								ADDITIONAL_REFERENCE varchar(35) null, 
								CV_INVST_AVAIL_BAL numeric(20,3) null, 
								CV_AVAIL_BAL numeric(20,3) null, 
								CATEGORY varchar(1) null, 
								POST_PT_ENTRIES varchar(1) null, 
								MATURITY_DATE datetime null, 
								START_DATE datetime null, 
								OBC_AMT numeric(20,3) null, 
								FLOAT_AMOUNT numeric(20,3) null, 
								INVST_YTD_BAL numeric(20,3) null,
								AC_SIGN		VARCHAR(1) NULL,
								LANGUAGE	VARCHAR(1) NULL,
								PROCESSED	VARCHAR(1) NULL,
								ERROR_LOG 	VARCHAR(255) 	NULL)
	</sql>
		<select id="getBalanceAcc" 		parameterType="accountCommonCO" statementType="CALLABLE">
    { CALL P_GET_BF_BALANCE3	( #{compCode, 	 	  mode=IN,jdbcType=NUMERIC},
	                              #{branchCode,	 	  mode=IN,jdbcType=NUMERIC},
				                  #{baseCurrencyCode, mode=IN,jdbcType=NUMERIC},
				                  #{fromDate, 	 	  mode=IN,jdbcType=DATE},
				                  #{toDate, mode=IN,jdbcType=DATE}, 	
								  #{balanceType, 	  mode=IN,jdbcType=VARCHAR},
								  #{as_Vt, 		  mode=IN,jdbcType=VARCHAR},
								  #{fromCy, 		  mode=IN,jdbcType=NUMERIC},
				                  #{fromGl, 		  mode=IN,jdbcType=NUMERIC},
				                  #{fromCif, 	 	  mode=IN,jdbcType=NUMERIC},
				                  #{fromSl, 		  mode=IN,jdbcType=NUMERIC}, 
				                  #{toCy, 		 	  mode=IN,jdbcType=NUMERIC},
				                  #{toGl,		 	  mode=IN,jdbcType=NUMERIC},
				                  #{toCif, 	 		  mode=IN,jdbcType=NUMERIC},
				                  #{toSl,	 		  mode=IN,jdbcType=NUMERIC},   
				                  #{add5, 			  mode=IN,jdbcType=VARCHAR},
				                   <if test="isSybase == 1">
				                  #{appType,		  mode=IN,jdbcType=VARCHAR},
				                  </if>
				                  #{threshold,	 	  mode=IN,jdbcType=NUMERIC},
				                  #{adt_opened, 	  mode=IN,jdbcType=DATE},
				                  #{option, 		  mode=IN,jdbcType=VARCHAR},
				                  #{auto_sweep, 	  mode=IN,jdbcType=VARCHAR},
				                  #{clearing, 		  mode=IN,jdbcType=VARCHAR},
				                  #{includeReval, 	  mode=IN,jdbcType=VARCHAR},
				                  #{includeReverse,   mode=IN,jdbcType=VARCHAR},
				                  #{stmtType, 		  mode=IN,jdbcType=VARCHAR},
				                  #{endWeekDay, 	  mode=IN,jdbcType=VARCHAR},
				                  #{language, 		  mode=IN,jdbcType=VARCHAR},
				                  #{consMCETrs, 	  mode=IN,jdbcType=VARCHAR},
				                  #{consMCECharges,   mode=IN,jdbcType=VARCHAR},
				                  #{errorCode,		  mode=OUT, jdbcType=NUMERIC},
								  #{errorMessage,	  mode=OUT, jdbcType=VARCHAR}
				                  
				                   )}
	</select>
	
	
	<select id="getAccBalance" 		parameterType="accountCommonCO" statementType="CALLABLE">
    { CALL P_RET_ACCOUNT_BALANCE  ( #{compCode, 	 	  mode=IN,jdbcType=NUMERIC},
	                              #{branchCode,	 	  mode=IN,jdbcType=NUMERIC},
				                  #{add5, 			  mode=IN,jdbcType=VARCHAR},
				                  #{fromCif, 	 	  mode=IN,jdbcType=NUMERIC},
				                  #{fromDate, 	 	  mode=IN,jdbcType=DATE},
				                   #{as_Vt, 		  mode=IN,jdbcType=VARCHAR},
								  #{adt_opened, 	  mode=IN,jdbcType=DATE},
				                  #{errorCode,		  mode=OUT, jdbcType=NUMERIC},
								  #{errorMessage,	  mode=OUT, jdbcType=VARCHAR}
				                  
				                   )}
	</select>
	
	<select id="getAccExchrate" 		parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL  P_RET_ACCOUNT_RATE  ( #{compCode, 	 	  mode=IN,jdbcType=NUMERIC},
	                              #{branchCode,	 	  mode=IN,jdbcType=NUMERIC},
				                  #{userId,           mode=IN,jdbcType=VARCHAR},
				                  #{cif,			  mode=IN, jdbcType=NUMERIC},
				                  #{trsAcCy,		  mode=IN,jdbcType=NUMERIC},
								  #{trsDate, 	 	  mode=IN,jdbcType=DATE},
				                  #{errorCode,		  mode=OUT, jdbcType=NUMERIC},
								  #{errorMessage,	  mode=OUT, jdbcType=VARCHAR}
				                  
				                   )}
	</select>
	
	
<!--	P_RET_CLOSING_TIME-->
	<select id="returnClosingTime" parameterType="trxMgntSC" statementType="CALLABLE"   >
	{ CALL P_RET_CLOSING_TIME	( #{compCode, 	 	mode=IN,jdbcType=NUMERIC},
	                              #{branchCode,	 	mode=IN,jdbcType=NUMERIC},
				                  #{trsDate, 	 	mode=IN,jdbcType=DATE},
				                  #{trxType,	 	mode=IN,jdbcType=NUMERIC},
				                  #{dayNum,			mode=IN,jdbcType=NUMERIC},
				                  #{trsTime, 		mode=OUT,jdbcType=TIME},
				                  #{closeTime,		mode=OUT,jdbcType=TIME},
				                  #{allowProceed,	mode=OUT,jdbcType=VARCHAR},
				                  #{errorCode,		mode=OUT,jdbcType=NUMERIC},
								  #{errorMessage,	mode=OUT,jdbcType=VARCHAR})}
	</select>
		
  
	
	<!--uf_get_value_date-->
	<select id="returnRetVDate" parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL P_RET_VDATE_JAVA(   #{compCode					,mode=IN,jdbcType=NUMERIC},
								    #{branchCode			,mode=IN,jdbcType=NUMERIC},
         	 						#{trsDate				,mode=INOUT,jdbcType=DATE},
          							#{trxType				,mode=IN,jdbcType=NUMERIC},
          							#{trsCy					,mode=IN,jdbcType=NUMERIC},
          							#{trsAcBr				,mode=IN,jdbcType=NUMERIC},
          							#{trsAcCy				,mode=IN,jdbcType=NUMERIC},
          							#{trsAcGl				,mode=IN,jdbcType=NUMERIC},
          							#{trsAcCif				,mode=IN,jdbcType=NUMERIC},
          							#{trsAcSl				,mode=IN,jdbcType=NUMERIC},
          							#{bankCif				,mode=IN,jdbcType=NUMERIC},
          							#{chqRelated			,mode=IN,jdbcType=VARCHAR},
          							#{vDateType				,mode=IN,jdbcType=VARCHAR},
          							#{type					,mode=IN,jdbcType=VARCHAR},
									#{hCVDateBasedOnCy		,mode=IN,jdbcType=VARCHAR},
									#{hCVDateDaysNo			,mode=IN,jdbcType=NUMERIC},
									#{cCVDateBasedOn		,mode=IN,jdbcType=VARCHAR},
									#{cCVDateDaysOn			,mode=IN,jdbcType=NUMERIC},
									#{chqClear				,mode=IN,jdbcType=NUMERIC},
									#{checkClosingTime		,mode=IN,jdbcType=VARCHAR},
									#{holFlag				,mode=IN,jdbcType=VARCHAR},
									#{sendSwift				,mode=IN,jdbcType=VARCHAR},
									#{chqDate				,mode=IN,jdbcType=DATE},
									#{typeOrigin			,mode=IN,jdbcType=VARCHAR},
									#{replaceChqDate		,mode=IN,jdbcType=VARCHAR},
									#{maintainHijri			,mode=IN,jdbcType=NUMERIC},
									#{hofDays				,mode=IN,jdbcType=NUMERIC},
									#{holClearFlag			,mode=IN,jdbcType=VARCHAR},
									#{holClearBrCode		,mode=IN,jdbcType=NUMERIC},
									#{ignoreHolidaysForTrsDate ,mode=IN,jdbcType=VARCHAR},
									#{toTrsAcCif			,mode=IN,jdbcType=NUMERIC},
									#{trsfrMethod			,mode=IN,jdbcType=VARCHAR},
									#{tellerCode			,mode=IN,jdbcType=NUMERIC},
									#{trsDateHijri			,mode=OUT,jdbcType=DATE},
									#{valueDateHijri		,mode=OUT,jdbcType=DATE},
									#{valueDate				,mode=OUT,jdbcType=DATE},
									#{releaseDate			,mode=OUT,jdbcType=DATE},
									#{errorCode				,mode=OUT,jdbcType=NUMERIC},
									#{errorMessage			,mode=OUT,jdbcType=VARCHAR}
                               		)}  
	</select>
	
	<!--uf_validate_remittance-->
	<!--uf_validate_tc_remittance -->
	<select id="validateRemittance" 	parameterType="trxMgntSC" statementType="CALLABLE">
    	{ CALL P_RET_VALIDATE_REMITTANCE(#{compCode,		mode=IN,jdbcType=NUMERIC},
									#{branchCode,		    mode=IN,jdbcType=NUMERIC},
									#{userId,               mode=IN,jdbcType=VARCHAR},
									#{trxType,              mode=IN,jdbcType=NUMERIC},
									#{oldFromRemit,    		mode=IN,jdbcType=NUMERIC},
									#{oldToRemit,    		mode=IN,jdbcType=NUMERIC},
									#{isTC,                	mode=IN,jdbcType=NUMERIC},
									#{tcLineNumber,         mode=IN,jdbcType=NUMERIC},
									#{ivCrud,               mode=IN,jdbcType=VARCHAR},
									#{remittanceChanged,   	mode=IN,jdbcType=VARCHAR},
									#{trsNo,               	mode=IN,jdbcType=NUMERIC},
									#{linkToTrsNoBr,		mode=IN,jdbcType=NUMERIC},
									#{linkToTrsNo,    		mode=IN,jdbcType=NUMERIC},
									#{instructions1,        mode=IN,jdbcType=VARCHAR},
									#{status,               mode=IN,jdbcType=VARCHAR},
									#{remitCy,            	mode=IN,jdbcType=VARCHAR},
									#{fromRemit,    		mode=IN,jdbcType=NUMERIC},
									#{toRemit,    			mode=IN,jdbcType=NUMERIC},
									#{tellerCode,          	mode=IN,jdbcType=NUMERIC},
									#{trsCy,          		mode=IN,jdbcType=NUMERIC},
									#{remittanceType,       mode=IN,jdbcType=NUMERIC},
									#{remittanceChanged,   	mode=OUT,jdbcType=VARCHAR},
									#{errType,             	mode=OUT,jdbcType=VARCHAR},
									#{errorCode,            mode=OUT,jdbcType=NUMERIC},
									#{errorMessage,         mode=OUT,jdbcType=VARCHAR}
									)}  
	</select>
		
	<!-- uf_update_remitt_inventory-->
	<select id="updateRemittance" 	parameterType="trxMgntSC" statementType="CALLABLE">
    	{CALL P_RET_UPDATE_REMITT_INVENTORY(#{compCode,    mode=IN,jdbcType=NUMERIC},
											#{branchCode,        	mode=IN,jdbcType=NUMERIC},
											#{trxType,            	mode=IN,jdbcType=NUMERIC},
											#{systemDate,       	mode=IN,jdbcType=DATE},
											#{oldFromRemit,  		mode=IN,jdbcType=NUMERIC},
											#{oldToRemit,  			mode=IN,jdbcType=NUMERIC},
											#{isTC,              	mode=IN,jdbcType=NUMERIC},
											#{tcLineNumber,         mode=IN,jdbcType=NUMERIC},
											#{ivCrud,               mode=IN ,jdbcType=VARCHAR},
											#{remittanceChanged, 	mode=IN ,jdbcType=VARCHAR},
											#{screenSrc,          	mode=IN ,jdbcType=VARCHAR},
											#{trsNo,             	mode=IN,jdbcType=NUMERIC},
											#{errType,           	mode=OUT ,jdbcType=VARCHAR},
											#{errorCode,           	mode=OUT,jdbcType=NUMERIC},
											#{errorMessage,         mode=OUT ,jdbcType=VARCHAR}
											)}  
    </select>

   	<select id="updateChequeStatus" parameterType="trxMgntSC" statementType="CALLABLE">
   	{CALL P_RET_UPDATE_CHEQUE_STATUS(#{compCode  	,   mode=IN,  	jdbcType=NUMERIC},
									#{branchCode 	,   mode=IN, 	jdbcType=NUMERIC},
									#{trsNo			,   mode=IN,	jdbcType=NUMERIC},
									#{chqNum    	,   mode=IN,   	jdbcType=NUMERIC},
									#{status 		,   mode=IN,  	jdbcType=VARCHAR},
									#{trxType   	,   mode=IN,   	jdbcType=VARCHAR},
									#{trsfrMethod	,   mode=IN, 	jdbcType=VARCHAR},
									#{trsAcBr    	,   mode=IN,    jdbcType=NUMERIC},
									#{trsAcCy  		,   mode=IN,    jdbcType=NUMERIC},
									#{trsAcGl   	,   mode=IN,    jdbcType=NUMERIC},
									#{trsAcCif  	,   mode=IN,    jdbcType=NUMERIC},
									#{trsAcSl   	,   mode=IN,    jdbcType=NUMERIC},
									#{toTrsAcBr 	,	mode=IN ,	jdbcType=NUMERIC},
									#{toTrsAcCy		,	mode=IN ,	jdbcType=NUMERIC },
									#{toTrsAcGl		,	mode=IN ,	jdbcType=NUMERIC},
									#{toTrsAcCif	,	mode=IN ,	jdbcType=NUMERIC },
									#{toTrsAcSl 	,	mode=IN ,	jdbcType=NUMERIC},	
									#{systemDate	,   mode=IN,	jdbcType=DATE},
									#{userId		,	mode=IN, 	jdbcType=VARCHAR},
									#{ivCrud		,	mode=IN, 	jdbcType=VARCHAR},
									#{errorCode		,   mode=OUT,	jdbcType=NUMERIC},
									#{errorMessage	,   mode=OUT ,	jdbcType=VARCHAR})
								  	}
   	</select>
    <select id="fillTmpCtstrsUpload" 	parameterType="ctstrsUploadSC" statementType="CALLABLE">
    { CALL P_RET_BATCH_FILL_CTSUPLOAD_TMP(#{userId, 			mode=IN,jdbcType=VARCHAR},
		                               		#{compCode, 	 	mode=IN,jdbcType=NUMERIC},
		                               		#{branchCode,	 	mode=IN,jdbcType=NUMERIC},
		                               		#{batchNo,	 	    mode=IN,jdbcType=NUMERIC}, 
		                               		#{fileType,	 	    mode=IN,jdbcType=NUMERIC}, 
		                               		#{isMultiTrsfrSglRow, mode=IN,jdbcType=VARCHAR},
		                               		#{multiTrx          , mode=IN,jdbcType=VARCHAR},
		                               		#{systemDate,          mode=IN,  jdbcType=DATE },
		                               		#{baseCurrencyCode,		mode=IN,jdbcType=NUMERIC},
		                               		#{tmpTableUserName, 	mode=IN,jdbcType=VARCHAR},
		                               		#{inwardSwift, 	        mode=IN,jdbcType=VARCHAR},
		                               		#{crudMode, 	        mode=IN,jdbcType=VARCHAR},
		                               		#{isAlertMode, 	       mode=IN,  jdbcType=VARCHAR},	
		                               		#{allowRetrieveAllBranches, mode=IN,  jdbcType=VARCHAR},
		                               		#{recordBranch,	 	    mode=IN,jdbcType=NUMERIC},
		                               		#{printExceptionsReport,	mode=OUT, jdbcType=VARCHAR},	                               		
		                               		#{errorCode,	mode=OUT, jdbcType=NUMERIC},
		                               		#{errorMessage,	mode=OUT, jdbcType=VARCHAR}
		                               		)}  
    </select>
	
	<select id="CallProcBatchLaunchProcess" 	parameterType="ctstrsUploadSC" statementType="CALLABLE">
			    { CALL P_RET_BATCH_LAUNCH_PROCESS(#{userId, 		   mode=IN,  jdbcType=VARCHAR},
			                               		#{compCode, 	 	   mode=IN,  jdbcType=NUMERIC},
			                               		#{branchCode,	 	   mode=IN,  jdbcType=NUMERIC},
			                               		#{batchNo,	 	       mode=IN,  jdbcType=NUMERIC},
			                               		#{isMultiTrsfrSglRow,  mode=IN,  jdbcType=VARCHAR},
			                               		#{multiTrx,            mode=IN,  jdbcType=VARCHAR},
			                               		#{fileType,	 	       mode=IN,  jdbcType=NUMERIC},
			                               		#{systemDate,          mode=IN,  jdbcType=TIMESTAMP },
			                               		#{isBranchManager,	   mode=IN,  jdbcType=VARCHAR},
			                               		#{baseCurrencyCode,	   mode=IN,  jdbcType=NUMERIC},
			                               		#{tmpTableUserName,    mode=IN,  jdbcType=VARCHAR},
			                               		#{isAlertMode, 	       mode=IN,  jdbcType=VARCHAR},			                               		
			                               		#{alertToDoCode, 	   mode=IN,  jdbcType=NUMERIC},
			                               		#{alertToDoLine, 	   mode=IN,  jdbcType=NUMERIC},
			                               		#{alertStatus, 	       mode=IN,  jdbcType=VARCHAR},
			                               		#{inwardSwift, 	       mode=IN,jdbcType=VARCHAR},			                               		
			                               		#{deductChargeFrom,    mode=IN,jdbcType=VARCHAR},
			                               	    #{threadId, 	       mode=IN,  jdbcType=NUMERIC},
			                               		#{errorCode,	       mode=OUT, jdbcType=NUMERIC},
			                               		#{errorMessage,	       mode=OUT, jdbcType=VARCHAR}                              		
			                               		)}  
	</select>
	<select id="CallProcBatchDeleteRecords" 	parameterType="ctstrsUploadSC" statementType="CALLABLE">
			    { CALL P_RET_BATCH_DELETE_RECORDS(#{userId, 		   mode=IN,  jdbcType=VARCHAR},
			                               		#{compCode, 	 	   mode=IN,  jdbcType=NUMERIC},
			                               		#{branchCode,	 	   mode=IN,  jdbcType=NUMERIC},
			                               		#{batchNo,	 	       mode=IN,  jdbcType=NUMERIC},
			                               		#{errorCode,	       mode=OUT, jdbcType=NUMERIC},
			                               		#{errorMessage,	       mode=OUT, jdbcType=VARCHAR}                              		
			                               		)}  
	</select>

	<select id="callProcVisaLaunchProcess" 	parameterType="trxMgntSC" statementType="CALLABLE">
		{ CALL P_RET_PROCESS_VISA(	#{compCode,			mode=IN, 	jdbcType=NUMERIC},
									#{branchCode,		mode=IN, 	jdbcType=NUMERIC},
									#{userId,			mode=IN, 	jdbcType=VARCHAR},
									#{fromForceMatch,	mode=IN, 	jdbcType=VARCHAR},
									#{is_tc_92,			mode=IN, 	jdbcType=VARCHAR},
									#{batchNo,			mode=IN, 	jdbcType=NUMERIC},
									#{runningDate,	 	mode=IN, 	jdbcType=DATE},
									#{errType,			mode=OUT,	jdbcType=VARCHAR},	                               		
									#{errorCode,	 	mode=OUT, 	jdbcType=NUMERIC},
									#{errorMessage,	  	mode=OUT, 	jdbcType=VARCHAR}                              		
		)}  
	</select>
	
	 <select id="callProcCardsCheckData" 	parameterType="cardsManagementSC" statementType="CALLABLE">
			   { CALL P_RET_CHECK_DATA_CTSCARDS(#{compCode, 	 	   mode=IN, jdbcType=NUMERIC},
			                               		#{branchCode,	 	   mode=IN, jdbcType=NUMERIC},
			                               		#{applicationId,	   mode=IN, jdbcType=NUMERIC},
			                               		#{errorCode,		   mode=OUT,jdbcType=NUMERIC},
			                               		#{errorMessage,	       mode=OUT,jdbcType=VARCHAR} )}  
	</select>
	
	 <select id="addCardsHistory" 	parameterType="cardsManagementSC" statementType="CALLABLE">
			   { CALL P_INSERT_CARDS_HST(   #{compCode, 	 	   mode=IN, jdbcType=NUMERIC},
		                               		#{branchCode,	 	   mode=IN, jdbcType=NUMERIC},
		                               		#{applicationId,	   mode=IN, jdbcType=NUMERIC},
		                               		#{errorCode,		   mode=OUT,jdbcType=NUMERIC},
		                               		#{errorMessage,	       mode=OUT,jdbcType=VARCHAR} )}  
	</select>
	
	 <select id="returnCardNo" 	parameterType="cardsManagementSC" statementType="CALLABLE">
			   { CALL P_RET_GET_CARD_NO(#{compCode, 	mode=IN, jdbcType=NUMERIC},
										#{cardType,		mode=IN, jdbcType=NUMERIC},
		                               	#{card_no,	    mode=OUT,jdbcType=VARCHAR},
	                               		#{errorCode,	mode=OUT,jdbcType=NUMERIC},
	                               		#{errorMessage,	mode=OUT,jdbcType=VARCHAR} )}  
	</select>
   
   
   
 
   
    <select id="returnAccountAdditionalReference" 	parameterType="accountCO" statementType="CALLABLE">
        { CALL P_API_GET_ADD_REF  ( #{amfVO.COMP_CODE, 		 		mode=IN,jdbcType=NUMERIC},
                               		#{amfVO.BRANCH_CODE, 		 		mode=IN,jdbcType=NUMERIC},
                               		#{amfVO.ENTERED_BY, 		 		mode=IN,jdbcType=VARCHAR},
			                   		#{amfVO.CURRENCY_CODE, 		 		mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.GL_CODE, 		 			mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.CIF_SUB_NO, 	 			mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.SL_NO, 		 				mode=IN,jdbcType=NUMERIC},   
			                   		#{amfVO.DIV, 		 				mode=IN,jdbcType=NUMERIC}, 
			                   		#{amfVO.DEPT, 		 				mode=IN,jdbcType=NUMERIC}, 
			                   		#{amfVO.UNIT_CODE, 		 				mode=IN,jdbcType=NUMERIC}, 
			                   		#{glVO.GL_TYPE, 		 				mode=IN,jdbcType=VARCHAR}, 
			                   		#{amfVO.ADDITIONAL_REFERENCE,		mode=OUT,jdbcType=VARCHAR},
				                   	#{errorCode,						mode=OUT,jdbcType=NUMERIC},
				                   	#{errorMsg, 						mode=OUT,jdbcType=VARCHAR} )}  
				                   	
   </select>
   
  <!--    <select id="createAccount" 	parameterType="accountCO" statementType="CALLABLE">
        { CALL P_CREATE_ACCOUNT( 	#{amfVO.DATE_OPND, 		 		mode=IN,jdbcType=DATE},
        							#{amfVO.COMP_CODE, 		 		mode=IN,jdbcType=NUMERIC},
                               		#{amfVO.BRANCH_CODE, 		 	mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.CURRENCY_CODE, 		 	mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.GL_CODE, 		 		mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.CIF_SUB_NO, 	 		mode=IN,jdbcType=NUMERIC},
                               		#{amfVO.ENTERED_BY, 		 	mode=IN,jdbcType=VARCHAR},
                               		#{amfVO.RENEW, 		 			mode=IN,jdbcType=VARCHAR},
                               		#{amfVO.TRF_BR, 		 		mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.TRF_CY, 		 		mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.TRF_GL, 	 			mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.TRF_CIF, 		 		mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.TRF_SL, 		 		mode=IN,jdbcType=NUMERIC},
			                   		#{TRF_ADD_REF,					mode=IN,jdbcType=VARCHAR},
			                   		#{amfVO.PFT_POST_TO, 			mode=IN,jdbcType=VARCHAR},
                               		#{amfVO.PFT_BR, 		 		mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.PFT_CY, 		 		mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.PFT_GL, 	 			mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.PFT_CIF, 		 		mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.PFT_SL, 		 		mode=IN,jdbcType=NUMERIC},
			                   		#{PFT_ADD_REF, 		 			mode=IN,jdbcType=VARCHAR},
			                   		#{amfVO.MATURITY_GL, 		 	mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.EXT_TRF, 		 		mode=IN,jdbcType=VARCHAR},
                               		#{amfVO.OFF_BR, 		 		mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.OFF_CY, 		 		mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.OFF_GL, 	 			mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.OFF_CIF, 		 		mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.OFF_SL, 		 		mode=IN,jdbcType=NUMERIC},
			                   		#{OFF_ADD_REF, 		 			mode=IN,jdbcType=VARCHAR},
			                   		#{amfVO.OPEN_DEP_AMOUNT, 		mode=IN,jdbcType=NUMERIC},
                               		#{amfVO.CUR_AC_BR, 		 		mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.CUR_AC_CY, 		 		mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.CUR_AC_GL, 	 			mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.CUR_AC_CIF, 		 	mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.CUR_AC_SL, 		 		mode=IN,jdbcType=NUMERIC},
			                   		#{CUR_ADD_REF, 		 			mode=IN,jdbcType=VARCHAR},
			                   		#{amfVO.REMARKS, 		 		mode=IN,jdbcType=VARCHAR},
			                   		#{amfVO.DIV, 		 			mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.DEPT, 		 			mode=IN,jdbcType=NUMERIC},
			                   		#{amfVO.STATUS, 		 		mode=IN,jdbcType=VARCHAR},
			                   		#{amfVO.ADDITIONAL_REFERENCE,	mode=OUT,jdbcType=VARCHAR},
			                   		#{pointRate, 		 			mode=OUT,jdbcType=NUMERIC},
			                   		#{amfVO.MATURITY_DTE, 		 	mode=OUT,jdbcType=DATE},
			                   		#{newBS, 		 				mode=OUT,jdbcType=NUMERIC},
			                   		#{amfVO.BRIEF_NAME_ENG,			mode=OUT,jdbcType=VARCHAR},
				                   	#{errorCode,					mode=OUT,jdbcType=NUMERIC},
				                   	#{errorMsg, 					mode=OUT,jdbcType=VARCHAR} )}  
   </select> -->
   
   <select id="createAccount" 	parameterType="accountCO" statementType="CALLABLE">
        { CALL P_COMMON_CREATE_ACCOUNT( 	
		        							#{amfVO.COMP_CODE, 		 		mode=IN,jdbcType=NUMERIC},
		        							#{amfVO.ENTERED_BY, 		 	mode=IN,jdbcType=VARCHAR},
		        							#{amfVO.DATE_OPND, 		 		mode=IN,jdbcType=DATE},
		        							#{language, 					mode=IN,jdbcType=VARCHAR}, 
		                               		#{amfVO.BRANCH_CODE, 		 	mode=IN,jdbcType=NUMERIC},
					                   		#{amfVO.CURRENCY_CODE, 		 	mode=IN,jdbcType=NUMERIC},
					                   		#{amfVO.GL_CODE, 		 		mode=IN,jdbcType=NUMERIC},
					                   		#{amfVO.CIF_SUB_NO, 	 		mode=IN,jdbcType=NUMERIC},
					                   	  	#{amfVO.TRF_BR, 		 		mode=IN,jdbcType=NUMERIC},
			                   				#{amfVO.TRF_CY, 		 		mode=IN,jdbcType=NUMERIC},
			                   				#{amfVO.TRF_GL, 	 			mode=IN,jdbcType=NUMERIC},
			                   				#{amfVO.TRF_CIF, 		 		mode=IN,jdbcType=NUMERIC},
			                   				#{amfVO.TRF_SL, 		 		mode=IN,jdbcType=NUMERIC},
					                   		#{amfVO.STATUS, 		 		mode=IN,jdbcType=VARCHAR},
					                   		#{amfVO.DIV, 		 			mode=IN,jdbcType=NUMERIC},
					                   		#{amfVO.DEPT, 		 			mode=IN,jdbcType=NUMERIC},
					                   	    #{amfVO.REMARKS, 		 		mode=IN,jdbcType=VARCHAR},
		                               		#{amfVO.RENEW, 		 			mode=IN,jdbcType=VARCHAR},
		                               		#{TRF_ADD_REF,					mode=IN,jdbcType=VARCHAR},
		                               		#{amfVO.PFT_POST_TO, 			mode=IN,jdbcType=VARCHAR},
		                               		#{PFT_ADD_REF, 		 			mode=IN,jdbcType=VARCHAR},
		                               		#{amfVO.MATURITY_GL, 		 	mode=IN,jdbcType=NUMERIC},	
		                               		#{amfVO.EXT_TRF, 		 		mode=IN,jdbcType=VARCHAR},	
		                               		#{OFF_ADD_REF, 		 			mode=IN,jdbcType=VARCHAR},                               		
		                               		#{transferAm,					mode=IN,jdbcType=NUMERIC},	
		                               		#{debitAddRef,					mode=IN,jdbcType=VARCHAR},
		                               		#{outSLNo,                      mode=OUT,jdbcType=NUMERIC},
					                   		#{amfVO.ADDITIONAL_REFERENCE,	mode=OUT,jdbcType=VARCHAR},
					                   		#{amfVO.BRIEF_NAME_ENG,			mode=OUT,jdbcType=VARCHAR},
					                   		#{pointRate, 		 			mode=OUT,jdbcType=NUMERIC},
					                   		#{amfVO.MATURITY_DTE, 		 	mode=OUT,jdbcType=DATE},
						                   	#{errorCode,					mode=OUT,jdbcType=NUMERIC},
						                   	#{errorMsg, 					mode=OUT,jdbcType=VARCHAR} )}  
   </select>  
   
	
	<select id="fillCifSoundex" 	parameterType="blackListSC" statementType="CALLABLE">
	{ CALL P_CIF_SOUNDEX_AML( #{compCode, 			mode=IN, jdbcType=NUMERIC},
					    #{cif,				 	mode=IN, jdbcType=NUMERIC},
					    #{cifFirstNameEng,	 	mode=INOUT, jdbcType=VARCHAR},
					    #{cifSecNameEng,		mode=INOUT, jdbcType=VARCHAR},
					    #{cifThirdNameEng,	 	mode=INOUT, jdbcType=VARCHAR},
					    #{cifLastNameEng,		mode=INOUT, jdbcType=VARCHAR},
						#{longNameEng,	 		mode=INOUT, jdbcType=VARCHAR},
					    #{cifFirstNameAr,		mode=INOUT, jdbcType=VARCHAR},
					    #{cifSecNameAr,		 	mode=INOUT, jdbcType=VARCHAR},
					    #{cifThirdNameAr,		mode=INOUT, jdbcType=VARCHAR},
					    #{cifLastNameAr,		mode=INOUT, jdbcType=VARCHAR},
					    #{longNameAr,		 	mode=INOUT, jdbcType=VARCHAR},
					    #{ivCrud,			 	mode=IN, jdbcType=VARCHAR},
					    #{errorCode,			mode=OUT, jdbcType=NUMERIC},
                        #{errorMessage,	    	mode=OUT, jdbcType=VARCHAR}   
					    )}
	</select>
	
	<select id="fillSoundex" parameterType="mosBlackListSC" statementType="CALLABLE">
	{ CALL P_FILL_SOUNDEX(
						#{firstNameEng,	 		mode=IN, jdbcType=VARCHAR},
					    #{secNameEng,			mode=IN, jdbcType=VARCHAR},
					    #{thirdNameEng,	 		mode=IN, jdbcType=VARCHAR},
					    #{lastNameEng,			mode=IN, jdbcType=VARCHAR},
						#{longNameEng,	 		mode=IN, jdbcType=VARCHAR},
					    #{firstNameAr,			mode=IN, jdbcType=VARCHAR},
					    #{secNameAr,		 	mode=IN, jdbcType=VARCHAR},
					    #{thirdNameAr,			mode=IN, jdbcType=VARCHAR},
					    #{lastNameAr,			mode=IN, jdbcType=VARCHAR},
					    #{longNameArab,		 	mode=IN, jdbcType=VARCHAR},
					    
					    #{soundex1,			 	mode=OUT, jdbcType=VARCHAR},
					    #{soundex2,			 	mode=OUT, jdbcType=VARCHAR},
					    #{soundex3,			 	mode=OUT, jdbcType=VARCHAR},
					    #{soundex4,			 	mode=OUT, jdbcType=VARCHAR},
					    #{soundexAr1,		 	mode=OUT, jdbcType=VARCHAR},
					    #{soundexAr2,		 	mode=OUT, jdbcType=VARCHAR},
					    #{soundexAr3,		 	mode=OUT, jdbcType=VARCHAR},
					    #{soundexAr4,		 	mode=OUT, jdbcType=VARCHAR},
					    
					    #{errorCode,			mode=OUT, jdbcType=NUMERIC},
                        #{errorMessage,	    	mode=OUT, jdbcType=VARCHAR}   
					    )}
	</select>
	
	
	<select id="returnCardsRefWithExpDate" 	parameterType="cardsManagementSC" statementType="CALLABLE">
	  { CALL P_RET_CARDS (  #{compCode, 			mode=IN, jdbcType=NUMERIC},
							#{branchCode,			mode=IN, jdbcType=NUMERIC},
							#{applicationId,		mode=IN, jdbcType=NUMERIC},
						    #{applicationRef,	 	mode=IN, jdbcType=VARCHAR},
						    #{cardStatus,	 		mode=IN, jdbcType=VARCHAR},
						    #{cardReason,	 		mode=IN, jdbcType=VARCHAR},
							#{cardType,				mode=IN, jdbcType=NUMERIC},
							#{cif,					mode=IN, jdbcType=NUMERIC},
						    #{cifStatus,	 		mode=IN, jdbcType=VARCHAR},
						    #{cifReason,	 		mode=IN, jdbcType=VARCHAR},
							#{createdDate,			mode=IN, jdbcType=DATE},
							#{effDate,				mode=IN, jdbcType=DATE},
							#{userId,				mode=IN, jdbcType=VARCHAR},
							#{acc_br,				mode=IN, jdbcType=NUMERIC},
							#{acc_cy,				mode=IN, jdbcType=NUMERIC},
							#{acc_gl,				mode=IN, jdbcType=NUMERIC},
							#{acc_cif,				mode=IN, jdbcType=NUMERIC},
							#{acc_sl,				mode=IN, jdbcType=NUMERIC},
						    #{accStatus,	 		mode=IN, jdbcType=VARCHAR},
						    #{accReason,	 		mode=IN, jdbcType=VARCHAR},
						    #{actionType,	 		mode=IN, jdbcType=VARCHAR},
						    #{reference,	 		mode=IN, jdbcType=VARCHAR},
						    #{expiDate,	 			mode=IN, jdbcType=VARCHAR},
						    #{errorCode,			mode=OUT, jdbcType=NUMERIC},
	                        #{errorMessage,	    	mode=OUT, jdbcType=VARCHAR},
							#{newEffDate,			mode=IN, jdbcType=DATE},
							#{newExpiDate,			mode=IN, jdbcType=DATE},
							#{newPreDate,			mode=IN, jdbcType=DATE}  
						    )}
	</select>



<select id="soChangestatusCharge" 	parameterType="trxMgntSC" statementType="CALLABLE">
	{ CALL P_RET_SO_CHANGE_STATUS_CHARGE(#{soType  			,mode=IN, 	jdbcType=VARCHAR},
										#{compCode			,mode=IN, 	jdbcType=NUMERIC},
										#{branchCode		,mode=IN, 	jdbcType=NUMERIC},
										#{userId			,mode=IN, 	jdbcType=VARCHAR},
										#{operation			,mode=IN, 	jdbcType=VARCHAR},
										#{trxType			,mode=IN, 	jdbcType=NUMERIC},
										#{trsNo				,mode=IN, 	jdbcType=NUMERIC},
										#{trsAcCif			,mode=IN, 	jdbcType=NUMERIC},
										#{trsAcCy			,mode=IN, 	jdbcType=NUMERIC},
										#{trsAcBr			,mode=IN, 	jdbcType=NUMERIC},
										#{baseCurrencyCode	,mode=IN, 	jdbcType=NUMERIC},
										#{decimalPoints		,mode=IN, 	jdbcType=NUMERIC},
										#{errorCode 		,mode=OUT,	jdbcType=NUMERIC},
										#{errorMessage		,mode=OUT,	jdbcType=VARCHAR} )}
	</select>

	<select id="insertDof" 	parameterType="trxMgntSC" statementType="CALLABLE">
	{ CALL P_N_TRX_INSERTDOF   (#{compCode			,mode=IN, 	jdbcType=NUMERIC},
								#{branchCode		,mode=IN, 	jdbcType=NUMERIC},
								#{trsNo				,mode=IN, 	jdbcType=NUMERIC},
								#{terminalID		,mode=IN, 	jdbcType=VARCHAR},
								#{userId			,mode=IN, 	jdbcType=VARCHAR},
								#{systemDate 		,mode=IN, 	jdbcType=DATE 	},
								#{soType  			,mode=IN, 	jdbcType=VARCHAR},
								#{initLine			,mode=IN, 	jdbcType=NUMERIC},
								#{dofTrxType		,mode=IN, 	jdbcType=VARCHAR},
								#{branchesIn		,mode=IN, 	jdbcType=VARCHAR},
								#{manualJV			,mode=IN, 	jdbcType=VARCHAR},
								#{opNo				,mode=OUT, 	jdbcType=NUMERIC},
								#{reference			,mode=OUT,	jdbcType=VARCHAR},
								#{branchesOut		,mode=OUT,	jdbcType=VARCHAR},
								#{errorCode 		,mode=OUT,	jdbcType=NUMERIC},
								#{errorMessage		,mode=OUT,	jdbcType=VARCHAR} )}
	</select>
	<select id="reverseDof" 	parameterType="trxMgntSC" statementType="CALLABLE">
	{ CALL P_N_TRX_REVERSEDOF   (#{compCode			,mode=IN, 	jdbcType=NUMERIC},
								#{branchCode		,mode=IN, 	jdbcType=NUMERIC},
								#{trsNo				,mode=IN, 	jdbcType=NUMERIC},
								#{systemDate 		,mode=IN, 	jdbcType=DATE 	},
								#{terminalID		,mode=IN, 	jdbcType=VARCHAR},
								#{reverseCharges	,mode=IN, 	jdbcType=VARCHAR},
								#{ivCrud			,mode=IN,	jdbcType=VARCHAR},
								#{dofTrxType		,mode=IN, 	jdbcType=VARCHAR},
								#{branchesIn		,mode=IN, 	jdbcType=VARCHAR},
								#{initLine			,mode=IN, 	jdbcType=NUMERIC},
								#{opNo				,mode=OUT, 	jdbcType=NUMERIC},
								#{reference			,mode=OUT,	jdbcType=VARCHAR},
								#{branchesOut		,mode=OUT,	jdbcType=VARCHAR},
								#{errorCode 		,mode=OUT,	jdbcType=NUMERIC},
								#{errorMessage		,mode=OUT,	jdbcType=VARCHAR} )}
	</select>
	
	<select id="retailEntries" 	parameterType="trxMgntSC" statementType="CALLABLE">
	{ CALL P_RET_ENTRIES 	(#{compCode			,mode=IN, 	jdbcType=NUMERIC},
							#{branchCode		,mode=IN, 	jdbcType=NUMERIC},
							#{trsNo				,mode=IN, 	jdbcType=NUMERIC},
							#{entriesLevel		,mode=IN, 	jdbcType=VARCHAR},
							#{trxType			,mode=IN, 	jdbcType=NUMERIC},
							#{systemDate 		,mode=IN, 	jdbcType=DATE 	},
							#{userId			,mode=IN, 	jdbcType=VARCHAR},
							#{screenSrc			,mode=IN, 	jdbcType=VARCHAR},
							#{onOffBs			,mode=IN, 	jdbcType=VARCHAR},
							#{chargesEntries	,mode=IN, 	jdbcType=VARCHAR},
							#{ivCrud            ,mode=IN,   jdbcType=VARCHAR },
							#{errorCode 		,mode=OUT,	jdbcType=NUMERIC},
							#{errType			,mode=OUT,	jdbcType=VARCHAR},
							#{errorMessage		,mode=OUT,	jdbcType=VARCHAR} )}
	</select>
	
	<update id ="dropSoundex">
		IF NULLIF(object_id('#SDX'), 0) IS NOT NULL DROP TABLE #SDX
	</update>
	
	<update id ="createSoundex">
	CREATE TABLE #SDX(SDX_COUNT NUMERIC(2) NOT NULL,SDX_NAME VARCHAR(15) NULL,SDX_NAME_AR VARCHAR(15) NULL)
	
	BEGIN TRANSACTION
	</update>
	
	<select id="updateFillCifBlacklistMos" parameterType="blackListSC" statementType="CALLABLE">
    { CALL P_FILL_CIF_BLACKLIST_MOS_AML( #{compCode, 			mode=IN, jdbcType=NUMERIC},
					    			 #{code,			 	mode=IN, jdbcType=NUMERIC},
					    			 #{tableName,		 	mode=IN, jdbcType=VARCHAR},
					    			 #{userId,	    		mode=IN, jdbcType=VARCHAR},
					    			#{errorCode,			mode=OUT, jdbcType=NUMERIC},
                        			#{errorMessage,	    	mode=OUT, jdbcType=VARCHAR})                        			
                        			}
    </select>
    
    <select id="closeAccount" parameterType="accountSC" statementType="CALLABLE">
    { CALL P_CLOSE_ACCOUNT_JAVA( #{compCode,		 	mode=IN, jdbcType=NUMERIC},
				    			 #{loginBranchCode,		mode=IN, jdbcType=NUMERIC},
				    			 #{baseCurrencyCode,	mode=IN, jdbcType=NUMERIC},
				    			 #{branchCode,			mode=IN, jdbcType=NUMERIC},
				    			 #{currencyCode,	 	mode=IN, jdbcType=NUMERIC},
				    			 #{glCode,			 	mode=IN, jdbcType=NUMERIC},
				    			 #{cifCode,	 			mode=IN, jdbcType=NUMERIC},
				    			 #{slNbr,			 	mode=IN, jdbcType=NUMERIC},
				    			 #{curAcBr,				mode=IN, jdbcType=NUMERIC},
								 #{curAcCy,				mode=IN, jdbcType=NUMERIC},
								 #{curAcGl,				mode=IN, jdbcType=NUMERIC},
								 #{curAcCif,			mode=IN, jdbcType=NUMERIC},
								 #{curAcSl,				mode=IN, jdbcType=NUMERIC},
								 #{invstBr,				mode=IN, jdbcType=NUMERIC},
								 #{invstCy,				mode=IN, jdbcType=NUMERIC},
								 #{invstGl,				mode=IN, jdbcType=NUMERIC},
								 #{invstCif,			mode=IN, jdbcType=NUMERIC},
								 #{invstSl,				mode=IN, jdbcType=NUMERIC},
								 #{cardBr,				mode=IN, jdbcType=NUMERIC},
								 #{cardCy,				mode=IN, jdbcType=NUMERIC},
								 #{cardGl,				mode=IN, jdbcType=NUMERIC},
								 #{cardCif,				mode=IN, jdbcType=NUMERIC},
								 #{cardSl,				mode=IN, jdbcType=NUMERIC},
								 #{addRef,				mode=IN, jdbcType=VARCHAR},
				    			 #{runningDate,	 		mode=IN, jdbcType=DATE},
				    			 #{userId,			 	mode=IN, jdbcType=VARCHAR},
				    			 #{status,	 			mode=IN, jdbcType=VARCHAR},
				    			 #{crud,	 			mode=IN, jdbcType=VARCHAR},
				    			 #{fixAccount,			mode=IN, jdbcType=NUMERIC},
				    			 #{proceedFlag,			mode=IN, jdbcType=NUMERIC},
				    			 #{TYPE,				mode=IN, jdbcType=VARCHAR},
				    			 #{trxType,				mode=IN, jdbcType=NUMERIC},
				    			 #{amount,				mode=IN, jdbcType=NUMERIC},
				    			 #{screenRef,			mode=IN, jdbcType=VARCHAR},
				    			 #{closeBy,				mode=IN, jdbcType=VARCHAR},
				    			 #{closeDate,			mode=IN, jdbcType=DATE},
				    			 #{AMFStatus,			mode=IN, jdbcType=VARCHAR},
				    			 #{balance,				mode=OUT, jdbcType=NUMERIC},
				    			 #{errorCode,			mode=OUT, jdbcType=NUMERIC},
                       			 #{errorMessage,    	mode=OUT, jdbcType=VARCHAR},
                       			 #{errorType,    		mode=OUT, jdbcType=VARCHAR},
                       			 #{branch,				mode=OUT, jdbcType=NUMERIC},
                       			 #{applicationId,		mode=OUT, jdbcType=NUMERIC})
                        		}
    </select>
        			
	<select id="authorizeCloseAccount" parameterType="accountSC" statementType="CALLABLE">
    { CALL P_AUTHORISE_CLOSE_ACC_JAVA( #{compCode,	mode=IN, jdbcType=NUMERIC},
	    						 #{loginBranchCode, 	mode=IN, jdbcType=NUMERIC},
	    						 #{branchCode,			mode=IN, jdbcType=NUMERIC},
	    						 #{baseCurrencyCode,	mode=IN, jdbcType=NUMERIC},
	    						 #{currencyCode,		mode=IN, jdbcType=NUMERIC},
	    						 #{glCode,				mode=IN, jdbcType=NUMERIC},
	    						 #{cifCode,				mode=IN, jdbcType=NUMERIC},
	    						 #{slNbr,				mode=IN, jdbcType=NUMERIC},
	    						 #{curAcBr,				mode=IN, jdbcType=NUMERIC},
	    						 #{curAcCy,				mode=IN, jdbcType=NUMERIC},
	    						 #{curAcGl,				mode=IN, jdbcType=NUMERIC},
	    						 #{curAcCif,			mode=IN, jdbcType=NUMERIC},
	    						 #{curAcSl,				mode=IN, jdbcType=NUMERIC},
	    						 #{invstBr,				mode=IN, jdbcType=NUMERIC},
							     #{invstCy,				mode=IN, jdbcType=NUMERIC},
							     #{invstGl,				mode=IN, jdbcType=NUMERIC},
							     #{invstCif,			mode=IN, jdbcType=NUMERIC},
							     #{invstSl,				mode=IN, jdbcType=NUMERIC},
							     #{status,				mode=IN, jdbcType=VARCHAR},
							     #{amount,				mode=IN, jdbcType=NUMERIC},
							     #{trxType,				mode=IN, jdbcType=NUMERIC},
							     #{runningDate,			mode=IN, jdbcType=TIMESTAMP},
							     #{userId,				mode=IN, jdbcType=VARCHAR}, 
							     #{alertUserID,			mode=IN, jdbcType=VARCHAR},
							     #{fixAccount,			mode=IN, jdbcType=NUMERIC},
							     #{closeAccBreak,		mode=IN, jdbcType=VARCHAR},
							     #{fullBreakDeposit,	mode=IN, jdbcType=VARCHAR},
							     #{approve,				mode=IN, jdbcType=VARCHAR},
							     #{closeBy,				mode=IN, jdbcType=VARCHAR},	
								 #{closeDate,			mode=IN, jdbcType=DATE},
								 #{screenRef,			mode=IN, jdbcType=VARCHAR},
						         #{revDrawdown,			mode=IN, jdbcType=VARCHAR}, 
							     #{errorCode,			mode=OUT, jdbcType=NUMERIC},
                       			 #{errorMessage,    	mode=OUT, jdbcType=VARCHAR},
                       			 #{errorType,    		mode=OUT, jdbcType=VARCHAR})
                        			}
    </select>
    
    <select id="checkUnclaimed" parameterType="accountSC" statementType="CALLABLE">
    { CALL P_CHECK_UNCLAIMED_JAVA  ( #{compCode,			mode=IN, jdbcType=NUMERIC},
					    			 #{branchCode,			mode=IN, jdbcType=NUMERIC},
					    			 #{currencyCode,		mode=IN, jdbcType=NUMERIC},
					    			 #{glCode,				mode=IN, jdbcType=NUMERIC},
					    			 #{cifCode,			 	mode=IN, jdbcType=NUMERIC},
					    			 #{slNbr,	 			mode=IN, jdbcType=NUMERIC},
					    			 #{avoidCheckUnclaimed,	mode=IN, jdbcType=NUMERIC},
					    			 #{processCode,	 		mode=IN, jdbcType=NUMERIC},
					    			 #{year,				mode=OUT, jdbcType=VARCHAR},
					    			 #{errorCode,	 		mode=OUT, jdbcType=NUMERIC},
                        			 #{warningMessages, 	mode=OUT, jdbcType=VARCHAR})
                        			}
    </select>
    
    <select id="CallProcCheckCollguarantor" 	parameterType="accountSC" statementType="CALLABLE">
    { CALL P_CHECK_COLL_GUARANTOR_JAVA(  #{compCode,			mode=IN, jdbcType=NUMERIC},
						    			 #{branchCode,			mode=IN, jdbcType=NUMERIC},
						    			 #{currencyCode,		mode=IN, jdbcType=NUMERIC},
						    			 #{glCode,				mode=IN, jdbcType=NUMERIC},
						    			 #{cifCode,			 	mode=IN, jdbcType=NUMERIC},
						    			 #{slNbr,	 			mode=IN, jdbcType=NUMERIC},
		                               	 #{errorCode,	 		mode=OUT, jdbcType=NUMERIC}
		                              )}  
    </select>
 
    <select id="callAlertCtsTrs" parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL P_RET_ALERT_CTSTRS( 
    						#{compCode,mode=IN,jdbcType=NUMERIC},
					    	#{branchCode,mode=IN,jdbcType=NUMERIC},
					    	#{trsType,mode=IN,jdbcType=VARCHAR},
					    	#{cbInd,mode=IN,jdbcType=VARCHAR},
					    	#{trsNo,mode=IN,jdbcType=NUMERIC},
					    	#{status,mode=IN,jdbcType=VARCHAR},
					    	#{userId,mode=IN,jdbcType=VARCHAR},
					    	#{runningDate,mode=IN,jdbcType=DATE},
					    	#{amfAlertStatus,mode=IN,jdbcType=VARCHAR},
					    	#{errorCode,mode=OUT,jdbcType=NUMERIC},
                        	#{errorMessage,mode=OUT,jdbcType=VARCHAR})
                        	}
  	</select>
 
    <select id="callAlertSmsSubscription" parameterType="transferCashSC" statementType="CALLABLE">
    { CALL P_RET_ALERT_SMS_SUBSCRIPTION( 
    						#{compCode,mode=IN,jdbcType=NUMERIC},
					    	#{branchCode,mode=IN,jdbcType=NUMERIC},
					    	#{smsCode,mode=IN,jdbcType=NUMERIC},
					    	#{smsAlertStatus,mode=IN,jdbcType=VARCHAR},
					    	#{errorCode,mode=OUT,jdbcType=NUMERIC},
                        	#{errorMessage,mode=OUT,jdbcType=VARCHAR})
                        	}
  	</select> 
    <select id="callAlertCtsCard" parameterType="cardsManagementSC" statementType="CALLABLE">
    { CALL P_RET_ALERT_CARD( 
    						#{compCode,			mode=IN, jdbcType=NUMERIC},
					    	#{branchCode,		mode=IN, jdbcType=NUMERIC},
					    	#{applicationId,	mode=IN, jdbcType=NUMERIC},
					    	#{cardStatus,		mode=IN, jdbcType=VARCHAR},
					    	#{errorCode,		mode=OUT,jdbcType=NUMERIC},
                        	#{errorMessage,		mode=OUT,jdbcType=VARCHAR})
                        	}
  	</select>
  	
    <select id="releaseHof" parameterType="trxMgntSC" statementType="CALLABLE">
	 { CALL P_RET_RELEASE_HOF
	     (#{compCode,			mode=IN, jdbcType=NUMERIC},
		 #{branchCode,			mode=IN, jdbcType=NUMERIC},
		 #{baseCurrencyCode,	mode=IN, jdbcType=NUMERIC},
		 #{trsNo,				mode=IN, jdbcType=NUMERIC},
		 #{runningDate,			mode=IN, jdbcType=DATE},
		 #{userId,	 			mode=IN, jdbcType=VARCHAR},
		 #{trsType,				mode=IN, jdbcType=VARCHAR},
		 #{errorCode,	 		mode=OUT, jdbcType=NUMERIC},
		 #{warningMessages, 	mode=OUT, jdbcType=VARCHAR})}
    </select>
    
    <select id="releaseHofWithCharges" parameterType="trxMgntSC" statementType="CALLABLE">
	 { CALL P_RET_RELEASE_HOF_WITH_CHARGE
	   	(#{compCode,			mode=IN, jdbcType=NUMERIC},
		 #{branchCode,			mode=IN, jdbcType=NUMERIC},
		 #{baseCurrencyCode,	mode=IN, jdbcType=NUMERIC},
		 #{trsNo,				mode=IN, jdbcType=NUMERIC},
		 #{runningDate,			mode=IN, jdbcType=DATE},
		 #{userId,	 			mode=IN, jdbcType=VARCHAR},
		 #{trsType,				mode=IN, jdbcType=VARCHAR},
		 #{chargeSchema,		mode=IN, jdbcType=NUMERIC},
		 #{addString,	 		mode=IN, jdbcType=VARCHAR},
		 #{addNum,				mode=IN, jdbcType=NUMERIC},
		 #{addDate,				mode=IN, jdbcType=DATE},
		 #{errType,				mode=OUT,jdbcType=VARCHAR  },
		 #{errorCode,	 		mode=OUT,jdbcType=NUMERIC},
		 #{errorMessage,		mode=OUT,jdbcType=VARCHAR} )}
    </select>
    
    <select id="callAlertCif" parameterType="cifSC" statementType="CALLABLE">
      { CALL P_RET_ALERT_CIF( #{compCode, 			mode=IN, jdbcType=NUMERIC},
					    	  #{cif_no,				mode=IN, jdbcType=NUMERIC},
					    	  #{cifAlertStatus,		mode=IN, jdbcType=VARCHAR},
					    	  #{errorCode,			mode=OUT, jdbcType=NUMERIC},
                        	  #{errorMessage,	    mode=OUT, jdbcType=VARCHAR})
                        	}
    </select>
  
    <select id="callAlertAmf" parameterType="accountSC" statementType="CALLABLE">
      { CALL P_RET_ALERT_AMF( #{compCode,		 	mode=IN, jdbcType=NUMERIC},
				    		#{branchCode,			mode=IN, jdbcType=NUMERIC},
				    		#{currencyCode,	 	mode=IN, jdbcType=NUMERIC},
				    		#{glCode,			 	mode=IN, jdbcType=NUMERIC},
				    		#{cifCode,	 			mode=IN, jdbcType=NUMERIC},
				    		#{slNbr,			 	mode=IN, jdbcType=NUMERIC},
				    		#{userId,			 	mode=IN, jdbcType=VARCHAR},
				    		#{runningDate,	 		mode=IN, jdbcType=DATE},
				    		#{status,	 			mode=IN, jdbcType=VARCHAR},
				    		#{errorCode,			mode=OUT, jdbcType=NUMERIC},
                       		#{warningMessages,    	mode=OUT, jdbcType=VARCHAR})
                        	}
    </select>
  
    <select id="authorizeClearingVoiding" parameterType="trxMgntSC" statementType="CALLABLE">
      { CALL P_RET_AUTHORIZE_CLEARING( #{compCode, mode=IN, jdbcType=NUMERIC},
							    	   #{branchCode, mode=IN, jdbcType=NUMERIC},
							    	   #{userId, mode=IN, jdbcType=VARCHAR},
							    	   #{runningDate, mode=IN, jdbcType=DATE},
							    	   #{batchNo, mode=IN, jdbcType=NUMERIC},
							    	   #{outTrsno, mode=IN, jdbcType=NUMERIC},
							    	   #{errorCode, mode=OUT, jdbcType=NUMERIC},
							    	   #{errType, mode=OUT, jdbcType=VARCHAR},
							    	   #{errorMessage, mode=OUT, jdbcType=VARCHAR})
			                        	}
    </select>
    
    <select id="addJvRet" parameterType="trxMgntSC" statementType="CALLABLE">
    	{ CALL P_RET_INSERT_MANUAL_JV_ENTRIES( #{compCode, mode=IN, jdbcType=NUMERIC},
				    		#{branchCode, mode=IN, jdbcType=NUMERIC},
				    		#{trsNo, mode=IN, jdbcType=NUMERIC},
				    		#{systemDate, mode=IN, jdbcType=TIMESTAMP},
				    		#{userId, mode=IN, jdbcType=VARCHAR},
				    		#{progRef, mode=IN, jdbcType=VARCHAR},
				    		#{opNo, mode=OUT, jdbcType=NUMERIC},
				    		#{jvNo, mode=OUT, jdbcType=NUMERIC},
				    		#{errorCode, mode=OUT, jdbcType=NUMERIC},
				    		#{errorMessage, mode=OUT, jdbcType=VARCHAR})
                        	}
  </select>
      <select id="createHoldOfFunds" parameterType="trxMgntSC" statementType="CALLABLE">		
		{ CALL P_RET_PROCESS_HOF(
			#{compCode ,mode=IN ,jdbcType=NUMERIC},
			#{branchCode ,mode=IN,jdbcType=NUMERIC },
			#{trxType ,mode=IN ,jdbcType=NUMERIC},
			#{hofReason ,mode=IN ,jdbcType=VARCHAR},
			#{trsType, 	mode=IN, jdbcType=VARCHAR},
			#{userId, 	mode=IN, jdbcType=VARCHAR},
			#{trsDate ,mode=IN , jdbcType=DATE},
			#{trsAcBr ,mode=IN ,jdbcType=NUMERIC},
			#{trsAcCy,mode=IN ,jdbcType=NUMERIC},
			#{trsAcGl ,mode=IN ,jdbcType=NUMERIC},
			#{trsAcCif,mode=IN,jdbcType=NUMERIC  },
			#{trsAcSl,mode=IN,jdbcType=NUMERIC},
			#{accAmount ,mode=IN ,jdbcType=NUMERIC},
			#{trxAmount ,mode=IN ,jdbcType=NUMERIC},			
			#{cvAmount ,mode=IN,jdbcType=NUMERIC },
		    #{trsCy	,mode=IN ,jdbcType=NUMERIC},
		    #{releaseDays	,mode=IN ,jdbcType=NUMERIC},
		    #{linkToTrsNo	,mode=IN ,jdbcType=NUMERIC},
			#{cbInd	,mode=IN ,jdbcType=VARCHAR},						
			#{outTrsno ,mode=OUT ,jdbcType=NUMERIC},
			#{errorCode ,mode=OUT ,jdbcType=NUMERIC},
			#{errorMessage	,mode=OUT ,jdbcType=VARCHAR} )}
	</select>
    
    <select id="checkSpecialConditions" parameterType="trxMgntSC" statementType="CALLABLE">
	 { CALL P_RET_CHECK_SPECIAL_CONDITION
	   	(#{compCode,			mode=IN, jdbcType=NUMERIC},
		 #{branchCode,			mode=IN, jdbcType=NUMERIC},
		 #{trsType,	 			mode=IN, jdbcType=VARCHAR},
		 #{crDrForex,	 		mode=IN, jdbcType=VARCHAR},
		 #{multiTrx,	 		mode=IN, jdbcType=VARCHAR},
		 #{tellerCode,			mode=IN, jdbcType=NUMERIC},
		 #{trsAcBr,				mode=IN, jdbcType=NUMERIC},
		 #{trsAcCy,				mode=IN, jdbcType=NUMERIC},
		 #{trsAcGl,				mode=IN, jdbcType=NUMERIC},
		 #{trsAcCif,			mode=IN, jdbcType=NUMERIC},
		 #{trsAcSl,				mode=IN, jdbcType=NUMERIC},
		 #{toTrsAcBr,			mode=IN, jdbcType=NUMERIC},
		 #{toTrsAcCy,			mode=IN, jdbcType=NUMERIC},
		 #{toTrsAcGl,			mode=IN, jdbcType=NUMERIC},
		 #{toTrsAcCif,			mode=IN, jdbcType=NUMERIC},
		 #{toTrsAcSl,			mode=IN, jdbcType=NUMERIC},
		 #{isSO,	 			mode=IN, jdbcType=VARCHAR},
		 #{ibBatch,				mode=IN, jdbcType=VARCHAR},
		 #{errType,				mode=OUT,jdbcType=VARCHAR},
		 #{errorCode,	 		mode=OUT,jdbcType=NUMERIC},
		 #{errorMessage,		mode=OUT,jdbcType=VARCHAR})}
    </select>
    
     <select id="checkBlackList" parameterType="blackListSC" statementType="CALLABLE">
	 { CALL P_CHECK_BLACKLIST
	   	(#{compCode,			mode=IN, jdbcType=NUMERIC},
		 #{cif,	 				mode=IN, jdbcType=NUMERIC},
		 #{langCode,			mode=IN, jdbcType=VARCHAR},
		 #{trxType,				mode=IN, jdbcType=NUMERIC},
		 #{country,				mode=OUT,jdbcType=NUMERIC},
		 #{errorType,			mode=OUT,jdbcType=VARCHAR},
		 #{errorCode,	 		mode=OUT,jdbcType=NUMERIC},
		 #{errorMessage,		mode=OUT,jdbcType=VARCHAR},
		 #{errorTxt,			mode=OUT,jdbcType=VARCHAR})}
    </select>
    
    
    

   
    
     <select id="CallProcRecalcForRelatedGl" 	parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL 
	    P_PCS_WRAP_RECALC_RELATED_GL  

    ( 	#{compCode, 		 		    mode=IN,jdbcType=NUMERIC},
     																#{trsAcBr, 		 		mode=IN,jdbcType=NUMERIC},
								                               		#{trsAcCy, 		 		mode=IN,jdbcType=NUMERIC},
								                               		#{trsAcGl, 		 			mode=IN,jdbcType=NUMERIC},
								                               		#{trsAcCif, 	 			mode=IN,jdbcType=NUMERIC},
								                               		#{trsAcSl, 		 				mode=IN,jdbcType=NUMERIC}, 
								                               		#{relatedGl, 	                    mode=IN,jdbcType=NUMERIC}, 
								                               		#{baseCurrencyCode, 	                mode=IN,jdbcType=NUMERIC}, 
								                               		#{decimalPoints, 	            mode=IN,jdbcType=NUMERIC}, 
								                               		#{systemDate,                       mode=IN, 	jdbcType=DATE},
																	#{PROFIT_GROUP,mode=IN,jdbcType=NUMERIC},  
								                               									                               		
								                               		#{DISTRIBUTED_PROFIT_CV, 	mode=OUT,jdbcType=NUMERIC},
											                   		#{DISTRIBUTED_PROFIT_FC, 	mode=OUT,jdbcType=NUMERIC},
											                   		#{NON_DISTRIBUTED_PROFIT_CV, 	mode=OUT,jdbcType=NUMERIC},
											                   		#{NON_DISTRIBUTED_PROFIT_FC, 	mode=OUT,jdbcType=NUMERIC},
											                   		
											                   		#{THIS_MONTH_PROFIT_CV, 	mode=OUT,jdbcType=NUMERIC},
											                   		#{THIS_MONTH_PROFIT_FC, 	mode=OUT,jdbcType=NUMERIC},
											                   		#{DISTRIBUTED_PROFIT_RECALC_CV, 	mode=OUT,jdbcType=NUMERIC},
											                   		#{DISTRIBUTED_PROFIT_RECALC_FC, 	mode=OUT,jdbcType=NUMERIC},
											                   		#{NON_DISTR_PROFIT_RECALC_CV, 	mode=OUT,jdbcType=NUMERIC},
											                   		#{NON_DISTR_PROFIT_RECALC_FC, 	mode=OUT,jdbcType=NUMERIC},
											                   		
											                   		  
											                   		#{THIS_MONTH_PROFIT_RECALC_CV, 	mode=OUT,jdbcType=NUMERIC},
											                   		#{THIS_MONTH_PROFIT_RECALC_FC, 	mode=OUT,jdbcType=NUMERIC},
											                   		#{CURRENT_PROFIT_CV, 	mode=OUT,jdbcType=NUMERIC},
											                   		#{CURRENT_PROFIT_FC, 	mode=OUT,jdbcType=NUMERIC},
											                   		#{TAX_CV, 	mode=OUT,jdbcType=NUMERIC},
											                   		#{TAX_FC, 	mode=OUT,jdbcType=NUMERIC},  
											                   		
											                   		#{CHARGES_CV, 	mode=OUT,jdbcType=NUMERIC},  
											                   		#{CHARGES_FC, 	mode=OUT,jdbcType=NUMERIC},  
											                   		#{PENALTY_CV, 	mode=OUT,jdbcType=NUMERIC},  
											                   		#{PENALTY_FC, 	mode=OUT,jdbcType=NUMERIC},  
											                   		
											                   		#{zakatCV,	 		    mode=OUT,jdbcType=NUMERIC},
											                   		#{zakatFC,	 		    mode=OUT,jdbcType=NUMERIC},
											                   		#{zakatChgCV,	 		mode=OUT,jdbcType=NUMERIC},
											                   		#{zakatChgFC,	 		mode=OUT,jdbcType=NUMERIC},
											                   		
											                   		#{OLD_PROFIT_RATE , 	mode=OUT,jdbcType=NUMERIC},  
											                   		
											                   		#{errorCode,	 		mode=OUT,jdbcType=NUMERIC},
		                                                            #{errorMessage,		mode=OUT,jdbcType=VARCHAR}
		                                                            
		                                                            )} 
				                   	
   </select>
    

	<select id="CallProcPcsPftForRelatedGl" 	parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL 
    
		P_PCS_WRAP_PROFIT_RELATED_GL 
     ( #{compCode, 		 		    mode=IN,jdbcType=NUMERIC},
     																#{trsAcBr, 		 		mode=IN,jdbcType=NUMERIC},
								                               		#{trsAcCy, 		 		mode=IN,jdbcType=NUMERIC},
								                               		#{trsAcGl, 		 			mode=IN,jdbcType=NUMERIC},
								                               		#{trsAcCif, 	 			mode=IN,jdbcType=NUMERIC},
								                               		#{trsAcSl, 		 				mode=IN,jdbcType=NUMERIC}, 
								                               		#{relatedGl, 	                    mode=IN,jdbcType=NUMERIC}, 
								                               		#{baseCurrencyCode, 	                mode=IN,jdbcType=NUMERIC}, 
								                               		#{decimalPoints, 	            mode=IN,jdbcType=NUMERIC}, 
								                               		#{systemDate,                       mode=IN, 	jdbcType=DATE},
																	#{PROFIT_GROUP,mode=IN,jdbcType=NUMERIC},  
								                               		#{fullBreakDeposit, 	            mode=IN,jdbcType=VARCHAR},
								                               		#{excludePcsDistribution , 	        mode=IN,jdbcType=VARCHAR},
								                               									                               		
								                               		#{DISTRIBUTED_PROFIT_CV, 	mode=OUT,jdbcType=NUMERIC},
											                   		#{DISTRIBUTED_PROFIT_FC, 	mode=OUT,jdbcType=NUMERIC},
											                   		#{NON_DISTRIBUTED_PROFIT_CV, 	mode=OUT,jdbcType=NUMERIC},
											                   		#{NON_DISTRIBUTED_PROFIT_FC, 	mode=OUT,jdbcType=NUMERIC},
											                   		
											                   		#{THIS_MONTH_PROFIT_CV, 	mode=OUT,jdbcType=NUMERIC},
											                   		#{THIS_MONTH_PROFIT_FC, 	mode=OUT,jdbcType=NUMERIC},
											                   		#{DISTRIBUTED_PROFIT_RECALC_CV, 	mode=OUT,jdbcType=NUMERIC},
											                   		#{DISTRIBUTED_PROFIT_RECALC_FC, 	mode=OUT,jdbcType=NUMERIC},
											                   		#{NON_DISTR_PROFIT_RECALC_CV, 	mode=OUT,jdbcType=NUMERIC},
											                   		#{NON_DISTR_PROFIT_RECALC_FC, 	mode=OUT,jdbcType=NUMERIC},
											                   		
											                   		  
											                   		#{THIS_MONTH_PROFIT_RECALC_CV, 	mode=OUT,jdbcType=NUMERIC},
											                   		#{THIS_MONTH_PROFIT_RECALC_FC, 	mode=OUT,jdbcType=NUMERIC},
											                   		#{CURRENT_PROFIT_CV, 	mode=OUT,jdbcType=NUMERIC},
											                   		#{CURRENT_PROFIT_FC, 	mode=OUT,jdbcType=NUMERIC},
											                   		#{TAX_CV, 	mode=OUT,jdbcType=NUMERIC},
											                   		#{TAX_FC, 	mode=OUT,jdbcType=NUMERIC},  
											                   		
											                   		#{CHARGES_CV, 	mode=OUT,jdbcType=NUMERIC},  
											                   		#{CHARGES_FC, 	mode=OUT,jdbcType=NUMERIC},  
											                   		#{PENALTY_CV, 	mode=OUT,jdbcType=NUMERIC},  
											                   		#{PENALTY_FC, 	mode=OUT,jdbcType=NUMERIC},  
											                   		
											                   		#{zakatCV,	 		    mode=OUT,jdbcType=NUMERIC},
											                   		#{zakatFC,	 		    mode=OUT,jdbcType=NUMERIC},
											                   		#{zakatChgCV,	 		mode=OUT,jdbcType=NUMERIC},
											                   		#{zakatChgFC,	 		mode=OUT,jdbcType=NUMERIC},
											                   		
											                   		#{OLD_PROFIT_RATE , 	mode=OUT,jdbcType=NUMERIC},  
											                   		
											                   		#{errorCode,	 		mode=OUT,jdbcType=NUMERIC},
		                                                            #{errorMessage,		mode=OUT,jdbcType=VARCHAR}
		                                                            
		                                                            )} 
				                   	
	</select>
          
	<select id="CallProcPcsProfitDetail" 	parameterType="trxMgntSC" statementType="CALLABLE">
    {
    	CALL P_PCS_WRAP_PCS_BREAK_OF_DEP
    	(
    		#{compCode, 		 		     	mode=IN,jdbcType=NUMERIC},
			#{trsAcBr, 		 		      		mode=IN,jdbcType=NUMERIC},
			#{trsAcCy, 		 		      		mode=IN,jdbcType=NUMERIC},
			#{trsAcGl, 		 			  		mode=IN,jdbcType=NUMERIC},
			#{trsAcCif, 	 			    	mode=IN,jdbcType=NUMERIC},
			#{trsAcSl, 		 					mode=IN,jdbcType=NUMERIC}, 
			#{baseCurrencyCode, 	    		mode=IN,jdbcType=NUMERIC}, 
			#{decimalPoints, 	         		mode=IN,jdbcType=NUMERIC}, 
			#{systemDate,                    	mode=IN,jdbcType=DATE},
			#{excludePcsDistribution, 	    	mode=IN,jdbcType=VARCHAR},
			#{relatedGLNew, 	            	mode=IN,jdbcType=NUMERIC}, 
	 		#{trsNo,	 	               		mode=IN,jdbcType=NUMERIC}, 
	 		#{bodAmount,	 	               	mode=IN,jdbcType=NUMERIC},
	 		#{trxType,	 	               		mode=IN,jdbcType=NUMERIC},	 		
			#{adecAdvFC, 	               		mode=OUT,jdbcType=NUMERIC}, 
			#{adecAdvCv, 	                 	mode=OUT,jdbcType=NUMERIC}, 
			#{PENALTY_CV, 	                	mode=OUT,jdbcType=NUMERIC},  
			#{PENALTY_FC, 	                	mode=OUT,jdbcType=NUMERIC},  
			#{TAX_CV, 	                    	mode=OUT,jdbcType=NUMERIC},
			#{TAX_FC, 	                    	mode=OUT,jdbcType=NUMERIC},  
			#{CHARGES_CV, 	                	mode=OUT,jdbcType=NUMERIC},  
			#{CHARGES_FC, 	                	mode=OUT,jdbcType=NUMERIC},  
			#{NON_DISTRIBUTED_PROFIT_CV, 		mode=OUT,jdbcType=NUMERIC},
			#{NON_DISTRIBUTED_PROFIT_FC, 		mode=OUT,jdbcType=NUMERIC},
			#{NON_DISTR_PROFIT_RECALC_CV, 		mode=OUT,jdbcType=NUMERIC},
			#{NON_DISTR_PROFIT_RECALC_FC, 		mode=OUT,jdbcType=NUMERIC},
			#{DISTRIBUTED_PROFIT_RECALC_CV,		mode=OUT,jdbcType=NUMERIC},
			#{DISTRIBUTED_PROFIT_RECALC_FC,		mode=OUT,jdbcType=NUMERIC},
			#{DISTRIBUTED_PROFIT_CV, 	    	mode=OUT,jdbcType=NUMERIC},
			#{DISTRIBUTED_PROFIT_FC, 	    	mode=OUT,jdbcType=NUMERIC},
			#{adecAccrualCv, 	           		mode=OUT,jdbcType=NUMERIC}, 
			#{adecAccrualFc, 	            	mode=OUT,jdbcType=NUMERIC},
			#{THIS_MONTH_PROFIT_CV, 			mode=INOUT,jdbcType=NUMERIC},
			#{THIS_MONTH_PROFIT_FC, 			mode=INOUT,jdbcType=NUMERIC}, 
			#{THIS_MONTH_PROFIT_RECALC_CV, 		mode=OUT,jdbcType=NUMERIC},
			#{THIS_MONTH_PROFIT_RECALC_FC, 		mode=OUT,jdbcType=NUMERIC},
			#{CURRENT_PROFIT_CV, 	        	mode=OUT,jdbcType=NUMERIC},
			#{CURRENT_PROFIT_FC, 	        	mode=OUT,jdbcType=NUMERIC},
			#{zakatCV,	 		           		mode=OUT,jdbcType=NUMERIC},
			#{zakatFC,	 		             	mode=OUT,jdbcType=NUMERIC},
			#{zakatChgCV,	 		         	mode=OUT,jdbcType=NUMERIC},
			#{zakatChgFC,	 		         	mode=OUT,jdbcType=NUMERIC},
			#{PROFIT_GROUP,                		mode=OUT,jdbcType=NUMERIC},  
			#{relatedGl, 	         			mode=OUT,jdbcType=NUMERIC}, 
			#{OLD_PROFIT_RATE , 	     		mode=OUT,jdbcType=NUMERIC},
			#{modaribRateAmtCV, 	        	mode=OUT,jdbcType=NUMERIC},
	   		#{modaribRateAmtFC, 	        	mode=OUT,jdbcType=NUMERIC},
	   		#{riskProvAmtCV, 	        		mode=OUT,jdbcType=NUMERIC},
	   		#{riskProvAmtFC, 	        		mode=OUT,jdbcType=NUMERIC},
	   		#{otherProvAmtCV, 	        		mode=OUT,jdbcType=NUMERIC},
	   		#{otherProvAmtFC, 	        		mode=OUT,jdbcType=NUMERIC},
	   		#{lossCV,			 	        	mode=OUT,jdbcType=NUMERIC},
	   		#{lossFC,			 	        	mode=OUT,jdbcType=NUMERIC},
	   		#{injProvAmtCV, 	        		mode=OUT,jdbcType=NUMERIC},
	   		#{injProvAmtFC, 	        		mode=OUT,jdbcType=NUMERIC},
	   		#{injRiskProvAmtCV, 	       		mode=OUT,jdbcType=NUMERIC},
	   		#{injRiskProvAmtFC, 	       		mode=OUT,jdbcType=NUMERIC},
	   		#{roundedAmtCV, 	       			mode=OUT,jdbcType=NUMERIC},
	   		#{roundedAmtFC, 	       			mode=OUT,jdbcType=NUMERIC},
			#{errorCode,	 		        	mode=OUT,jdbcType=NUMERIC},
			#{errorMessage,		       			mode=OUT,jdbcType=VARCHAR}
		)
	} 
				                   	
	</select>
	
	<select id="callPCSRecoverProfit" 	parameterType="trxMgntSC" statementType="CALLABLE">
    	{ CALL 
    
		<choose>
			<when test="isSybase == 1" >
	       		P_PCS_RECOVER_PROFIT  
	     	</when>
	     	<otherwise >
	        	PKG_PCS_BREAK_OF_DEPOSIT.P_PCS_RECOVER_PROFIT
	    	</otherwise>
 		</choose>  
  
    
    	(
    						#{compCode, 		 		   		mode=IN,jdbcType=NUMERIC},
							#{trsAcBr, 		 		        	mode=IN,jdbcType=NUMERIC},
                         	#{trsAcCy, 		 		         	mode=IN,jdbcType=NUMERIC},
                         	#{trsAcGl, 		 			     	mode=IN,jdbcType=NUMERIC},
                         	#{trsAcCif, 	 			    	mode=IN,jdbcType=NUMERIC},
                         	#{trsAcSl, 		 				 	mode=IN,jdbcType=NUMERIC}, 
                         	#{baseCurrencyCode, 	        	mode=IN,jdbcType=NUMERIC}, 
                         	#{decimalPoints, 	             	mode=IN,jdbcType=NUMERIC}, 
                         	#{systemDate,                   	mode=IN,jdbcType=DATE},
                         	#{excludePcsDistribution , 	  		mode=IN,jdbcType=VARCHAR},
							#{relatedGLNew, 	          		mode=IN,jdbcType=NUMERIC}, 
							#{trsNo, 	          				mode=IN,jdbcType=NUMERIC},
                         	#{PENALTY_CV, 	                	mode=OUT,jdbcType=NUMERIC}, 
                			#{PENALTY_FC, 	                	mode=OUT,jdbcType=NUMERIC},  
                			#{TAX_CV, 	                    	mode=OUT,jdbcType=NUMERIC},
                			#{TAX_FC, 	                    	mode=OUT,jdbcType=NUMERIC},  
                			#{CHARGES_CV, 	                	mode=OUT,jdbcType=NUMERIC},  
                			#{CHARGES_FC, 	               		mode=OUT,jdbcType=NUMERIC}, 
                			#{NON_DISTR_PROFIT_RECALC_CV, 		mode=OUT,jdbcType=NUMERIC},
	                		#{NON_DISTR_PROFIT_RECALC_FC, 		mode=OUT,jdbcType=NUMERIC},
	                		#{DISTRIBUTED_PROFIT_RECALC_CV,		mode=OUT,jdbcType=NUMERIC},
	                		#{DISTRIBUTED_PROFIT_RECALC_FC,		mode=OUT,jdbcType=NUMERIC},
	                		#{DISTRIBUTED_PROFIT_CV, 	    	mode=INOUT,jdbcType=NUMERIC},
	                		#{DISTRIBUTED_PROFIT_FC, 	    	mode=INOUT,jdbcType=NUMERIC},
	                	    #{adecAccrualCv, 	             	mode=OUT,jdbcType=NUMERIC},
                         	#{adecAccrualFc, 	         		mode=OUT,jdbcType=NUMERIC},
	                		#{CURRENT_PROFIT_CV, 	        	mode=OUT,jdbcType=NUMERIC},
	                		#{CURRENT_PROFIT_FC, 	        	mode=OUT,jdbcType=NUMERIC},
	                		#{zakatCV,	 		                mode=OUT,jdbcType=NUMERIC},
	                		#{zakatFC,	 		                mode=OUT,jdbcType=NUMERIC},
	                		#{zakatChgCV,	 		            mode=OUT,jdbcType=NUMERIC},
	                		#{zakatChgFC,	 		            mode=OUT,jdbcType=NUMERIC},
	                		#{relatedGl, 	                 	mode=OUT,jdbcType=NUMERIC}, 
	                		#{OLD_PROFIT_RATE , 	        	mode=OUT,jdbcType=NUMERIC},  
	                		#{errorCode,	 		         	mode=OUT,jdbcType=NUMERIC},
	                        #{errorMessage,		              	mode=OUT,jdbcType=VARCHAR}
                                                
		)}
  	                   	
	</select>
	
	
	
	<select id="callPCSUpdateBODTrx" 	parameterType="trxMgntSC" statementType="CALLABLE">
    	{ CALL 
    
		<choose>
			<when test="isSybase == 1" >
	       		P_PCS_UPDATE_BOD_TRX  
	     	</when>
	     	<otherwise >
	        	PKG_PCS_BREAK_OF_DEPOSIT.P_PCS_UPDATE_BOD_TRX
	    	</otherwise>
 		</choose>  
  
    
    	(
    						#{compCode, 		 		   		mode=IN,jdbcType=NUMERIC},
							#{trsAcBr, 		 		        	mode=IN,jdbcType=NUMERIC},
                         	#{trsAcCy, 		 		         	mode=IN,jdbcType=NUMERIC},
                         	#{trsAcGl, 		 			     	mode=IN,jdbcType=NUMERIC},
                         	#{trsAcCif, 	 			    	mode=IN,jdbcType=NUMERIC},
                         	#{trsAcSl, 		 				 	mode=IN,jdbcType=NUMERIC}, 
                         	#{trsNo, 	          				mode=IN,jdbcType=NUMERIC}, 
                         	#{trsDate,							mode=IN,jdbcType=DATE}, 
	                		#{errorCode,	 		         	mode=OUT,jdbcType=NUMERIC},
	                        #{errorMessage,		              	mode=OUT,jdbcType=VARCHAR}
                                                
		)}
 	                   	
	</select>

   
     <select id="CallProcRetGetPenaltyDetail" 	parameterType="trxMgntSC" statementType="CALLABLE">
	    { CALL P_RET_GET_PENALTY_DETAIL  
	    	( 
	    		   #{compCode, 		 		mode=IN,jdbcType=NUMERIC},
				   #{branchCode, 		 	mode=IN,jdbcType=NUMERIC},
				   #{trsAcBr, 		        mode=IN,jdbcType=NUMERIC},
			       #{trsAcCy, 		 	    mode=IN,jdbcType=NUMERIC},
			       #{trsAcGl, 		 		mode=IN,jdbcType=NUMERIC},
			       #{trsAcCif, 	 			mode=IN,jdbcType=NUMERIC},
			       #{trsAcSl, 		 		mode=IN,jdbcType=NUMERIC}, 
			       #{systemDate,            mode=IN,jdbcType=DATE},
			       #{userId, 	            mode=IN,jdbcType=VARCHAR},
			       #{rateChanged,			mode=IN,jdbcType=VARCHAR},
			       #{trsNo, 		 		mode=IN,jdbcType=NUMERIC}, 
			       #{postchgComm,			mode=IN,jdbcType=VARCHAR},
			       #{trxType,			    mode=IN,jdbcType=NUMERIC},			       
			       #{adecBal, 		 	    mode=OUT,jdbcType=NUMERIC}, 
			       #{adecProfit, 		 	mode=OUT,jdbcType=NUMERIC},
			       #{adecProfitCV, 		 	mode=OUT,jdbcType=NUMERIC}, 
			       #{adecOrigProfit, 		mode=OUT,jdbcType=NUMERIC}, 
			       #{adecOrigProfitCV, 		mode=OUT,jdbcType=NUMERIC},
			       #{adecNetProfit, 		mode=OUT,jdbcType=NUMERIC}, 
			       #{adecNetProfitCV, 		mode=OUT,jdbcType=NUMERIC},
			       #{adecCrProfit, 			mode=OUT,jdbcType=NUMERIC}, 
			       #{adecCrProfitCV, 		mode=OUT,jdbcType=NUMERIC},
			       #{adecDrProfit, 			mode=OUT,jdbcType=NUMERIC}, 
			       #{adecDrProfitCV, 		mode=OUT,jdbcType=NUMERIC},			       
			       #{adecPenalty, 		 	mode=OUT,jdbcType=NUMERIC}, 
			       #{adecPenaltyCV, 		mode=OUT,jdbcType=NUMERIC},
			       #{PRFT_BR, 	    		mode=OUT,jdbcType=NUMERIC},
			       #{PRFT_CY, 	    		mode=OUT,jdbcType=NUMERIC},  
				   #{PRFT_GL, 	    		mode=OUT,jdbcType=NUMERIC},  
				   #{PRFT_CIF,     			mode=OUT,jdbcType=NUMERIC},
				   #{PRFT_SL, 	    		mode=OUT,jdbcType=NUMERIC},
				   #{PENALTY_GL, 			mode=OUT,jdbcType=NUMERIC},  
                   #{PENALTY_CIF, 			mode=OUT,jdbcType=NUMERIC}, 
                   #{PENALTY_SL, 			mode=OUT,jdbcType=NUMERIC},    
                   #{profitReverseFc, 	    mode=OUT,jdbcType=NUMERIC},  
                   #{profitReverseCv, 	    mode=OUT,jdbcType=NUMERIC},  
                   #{tcrFcAmount, 	    	mode=OUT,jdbcType=NUMERIC},
                   #{tcrCvAmount, 	    	mode=OUT,jdbcType=NUMERIC},
                   #{vatFCAmount, 	    	mode=OUT,jdbcType=NUMERIC},
                   #{vatCVAmount, 	    	mode=OUT,jdbcType=NUMERIC},
                   #{tax, 					mode=OUT,jdbcType=NUMERIC},
                   #{taxPtCv,				mode=OUT,jdbcType=NUMERIC},
                   #{commissionFC, 			mode=OUT,jdbcType=NUMERIC},
                   #{commissionCV, 			mode=OUT,jdbcType=NUMERIC},
                   #{chargeFC, 				mode=OUT,jdbcType=NUMERIC},
                   #{chargeCV, 				mode=OUT,jdbcType=NUMERIC},
                   #{isAppliedPenalty, 	    mode=OUT,jdbcType=VARCHAR},
                   #{ADEC_RATE,				mode=INOUT,jdbcType=NUMERIC},
                   #{ADEC_ORIG_RATE,		mode=OUT,jdbcType=NUMERIC},
                   #{fromDate,				mode=OUT,jdbcType=DATE},
                   #{toDate,				mode=OUT,jdbcType=DATE},
                   #{openingBal,			mode=OUT,jdbcType=NUMERIC},
                   #{trxAmount,				mode=OUT,jdbcType=NUMERIC},
                   #{numDays,				mode=OUT,jdbcType=NUMERIC},
                   #{returnedZakatFC,		mode=OUT,jdbcType=NUMERIC},
                   #{returnedZakatCV,		mode=OUT,jdbcType=NUMERIC},
                   #{errorCode,	 		    mode=OUT,jdbcType=NUMERIC},
             	   #{errorMessage,		    mode=OUT,jdbcType=VARCHAR}
		                                                            
		                                 )} 
				                   	
     
				                   	
	</select>
    
    
    <select id="CallProcGetPcsCharges" 	parameterType="trxMgntSC" statementType="CALLABLE">
    	{ CALL 
			P_PCS_WRAP_GET_CHARGES  
    
		(
			#{compCode, 		 		            mode=IN,jdbcType=NUMERIC},
			#{trsAcCy, 		 		                mode=IN,jdbcType=NUMERIC},
			#{trsAcGl, 		 			            mode=IN,jdbcType=NUMERIC},
			#{baseCurrencyCode, 	                mode=IN,jdbcType=NUMERIC}, 
			#{decimalPoints, 	                    mode=IN,jdbcType=NUMERIC}, 								                               		
			#{ADEC_PROFIT_CV, 	                    mode=IN,jdbcType=NUMERIC}, 
			#{ADEC_PROFIT_FC, 	                    mode=IN,jdbcType=NUMERIC}, 
			#{AL_PROFIT_GROUP, 	                    mode=IN,jdbcType=NUMERIC}, 
			#{AS_APPLY_PCS_CHARGES,		            mode=IN,jdbcType=VARCHAR},
			#{AL_UNIT, 	                            mode=IN,jdbcType=NUMERIC}, 
			#{AC_MULTDIV,		                    mode=IN,jdbcType=VARCHAR},
			#{AL_CY_DECIMALS, 	                    mode=IN,jdbcType=NUMERIC}, 
			#{ADEC_RATE, 	                        mode=IN,jdbcType=NUMERIC},
			#{AS_CHARGE_CURRENCY, 	                mode=IN,jdbcType=VARCHAR}, 				                   		
			#{CHARGES_CV, 	                        mode=OUT,jdbcType=NUMERIC},  
			#{CHARGES_FC, 	                        mode=OUT,jdbcType=NUMERIC},  
			#{errorCode,	 		                mode=OUT,jdbcType=NUMERIC},
			#{errorMessage,		                    mode=OUT,jdbcType=VARCHAR}
			                                
		)} 
				                   	
	</select>
   
    <select id="CallProcGetPcsTaxes" 	parameterType="trxMgntSC" statementType="CALLABLE">
    
    	{ CALL 
    	
	        P_PCS_WRAP_GET_TAXES 
		(
			#{compCode, 		 		            mode=IN,jdbcType=NUMERIC},
			#{trsAcBr, 		 		                mode=IN,jdbcType=NUMERIC},
			#{trsAcCy, 		 		                mode=IN,jdbcType=NUMERIC},
			#{trsAcGl, 		 			            mode=IN,jdbcType=NUMERIC},
			#{trsAcCif, 	 			            mode=IN,jdbcType=NUMERIC},
			#{trsAcSl, 	 			            	mode=IN,jdbcType=NUMERIC},
			#{baseCurrencyCode, 	                mode=IN,jdbcType=NUMERIC}, 
			#{decimalPoints, 	                    mode=IN,jdbcType=NUMERIC}, 								                               		
			#{ADEC_PROFIT_CV, 	                    mode=IN,jdbcType=NUMERIC}, 
			#{ADEC_PROFIT_FC, 	                    mode=IN,jdbcType=NUMERIC},						                               		
			#{ADEC_RATE, 	                        mode=IN,jdbcType=NUMERIC},
			#{AL_UNIT, 	                            mode=IN,jdbcType=NUMERIC}, 
			#{AC_MULTDIV,		                    mode=IN,jdbcType=VARCHAR},
			#{AL_CY_DECIMALS, 	                    mode=IN,jdbcType=NUMERIC}, 
			#{TAX_CV, 	                            mode=OUT,jdbcType=NUMERIC},
			#{TAX_FC, 	                            mode=OUT,jdbcType=NUMERIC},  
			#{errorCode,	 		                mode=OUT,jdbcType=NUMERIC},
			#{errorMessage,		                    mode=OUT,jdbcType=VARCHAR}
			
			)} 
				                   	
	</select>
   

	<!-- Elias Aoun -->
	<select id="updateAutoBatch" parameterType="com.path.vo.core.trxmgnt.batch.TrxMgntBatchSC" statementType="CALLABLE" >
    { CALL P_RET_GET_AUTO_BATCH(#{compCode, 		mode=IN,jdbcType=NUMERIC},
    							#{branchCode, 		mode=IN,jdbcType=NUMERIC},
								#{trsNo, 			mode=IN,jdbcType=NUMERIC},
								#{automaticBatch, 	mode=IN,jdbcType=VARCHAR},
								#{clickOk, 			mode=IN,jdbcType=NUMERIC},		
								#{s_batch_type, 	mode=IN,jdbcType=VARCHAR},	
								#{batchNo, 			mode=IN,jdbcType=NUMERIC},
								#{createdBy, 		mode=IN,jdbcType=VARCHAR},
								#{batchNo, 			mode=OUT,jdbcType=NUMERIC},
								#{lineNo, 			mode=OUT,jdbcType=NUMERIC},
								#{errorCode, 		mode=OUT,jdbcType=NUMERIC},
								#{errorMsg, 		mode=OUT,jdbcType=VARCHAR}
	    						) }
	</select>





	<select id="checkRemittanceStock" parameterType="trxMgntSC" statementType="CALLABLE">
	{ CALL P_RET_CHECK_REMITTANCE_STOCK(#{compCode,        		mode=IN, jdbcType=NUMERIC},
								 		#{branchCode,      		mode=IN, jdbcType=NUMERIC},
								 		#{trxType,           	mode=IN, jdbcType=NUMERIC},
								 		#{ivCrud,              	mode=IN, jdbcType=VARCHAR},
								 		#{remittanceChanged, 	mode=IN, jdbcType=VARCHAR},
								 		#{trsNo,            	mode=IN, jdbcType=NUMERIC},
								 		#{saveCount,        	mode=IN, jdbcType=NUMERIC},
								 		#{errType,          	mode=OUT,jdbcType=VARCHAR},
								 		#{errorCode,           	mode=OUT,jdbcType=NUMERIC},
								 		#{errorMessage,       	mode=OUT,jdbcType=VARCHAR})}
		 
		 

	</select>

	<select id="pRetAlertSPCONDS" parameterType="specialConditionsSC" statementType="CALLABLE">
	{ CALL P_RET_ALERT_SPCOND(#{compCode,        		mode=IN, jdbcType=NUMERIC},
							  #{branchCode,      		mode=IN, jdbcType=NUMERIC},
							  #{lineNo,           		mode=IN, jdbcType=NUMERIC},
							  #{alertStatus,            mode=IN, jdbcType=VARCHAR},
							  #{errorCode,           	mode=OUT,jdbcType=NUMERIC},
							  #{errorMessage,       	mode=OUT,jdbcType=VARCHAR}
							 )
	}
	</select>

	<select id="callDuesAlertProcedure" parameterType="duesManagementSC" statementType="CALLABLE">
	{ CALL P_RET_ALERT_DUES  (#{compCode,        		mode=IN, jdbcType=NUMERIC},
							  #{branchCode,      		mode=IN, jdbcType=NUMERIC},
							  #{debitAccBr,      		mode=IN, jdbcType=NUMERIC},
							  #{debitAccCy,      		mode=IN, jdbcType=NUMERIC},
							  #{debitAccGL,      		mode=IN, jdbcType=NUMERIC},
							  #{debitAccCIF,      		mode=IN, jdbcType=NUMERIC},
							  #{debitAccSL,      		mode=IN, jdbcType=NUMERIC},
							  #{dueCode,        		mode=IN, jdbcType=NUMERIC},
							  #{alertStatus,            mode=IN, jdbcType=VARCHAR},
							  #{errorCode,           	mode=OUT,jdbcType=NUMERIC},
							  #{errorMessage,       	mode=OUT,jdbcType=VARCHAR}
							  )
	}
	</select>

	<select id="callReverseTrxForDuesProcedure" parameterType="duesManagementSC" statementType="CALLABLE" >
	{ CALL P_RET_REVERSE_TRX_DUE
							 (#{compCode,        		mode=IN, jdbcType=NUMERIC},
							  #{branchCode,      		mode=IN, jdbcType=NUMERIC},
							  #{userId,				    mode=IN, jdbcType=VARCHAR},
							  #{runningDate,			mode=IN, jdbcType=DATE},
							  #{invoker,				mode=IN, jdbcType=VARCHAR},
							  #{dueCode,      			mode=IN, jdbcType=NUMERIC},
							  #{JVNumber,				mode=IN, jdbcType=NUMERIC},
							  
							  #{debitAccBr,      		mode=IN, jdbcType=NUMERIC},
							  #{debitAccCy,      		mode=IN, jdbcType=NUMERIC},
							  #{debitAccGL,      		mode=IN, jdbcType=NUMERIC},
							  #{debitAccCIF,      		mode=IN, jdbcType=NUMERIC},
							  #{debitAccSL,      		mode=IN, jdbcType=NUMERIC},
						 
							  #{errorCode,           	mode=OUT, jdbcType=NUMERIC},
							  #{errorMessage,       	mode=OUT, jdbcType=VARCHAR}
							  )
	}
	</select>

	<select id="callCheckDuesAccountProcedure" parameterType="duesManagementSC" statementType="CALLABLE">
	{ CALL P_RET_CHECK_DUES_ACC
							 (#{compCode,        		mode=IN, jdbcType=NUMERIC},
							  #{branchCode,      		mode=IN, jdbcType=NUMERIC},
							  #{userId,				    mode=IN, jdbcType=VARCHAR},
							  #{runningDate,			mode=IN, jdbcType=TIMESTAMP},
							  #{preferredLanguage,		mode=IN, jdbcType=VARCHAR},
							  #{invoker,				mode=IN, jdbcType=VARCHAR},	
							  						  
							  #{printExceptionTrace,   	mode=OUT, jdbcType=VARCHAR},
							  #{lineCount,				mode=OUT, jdbcType=NUMERIC},							  
							  #{errorCode,           	mode=OUT, jdbcType=NUMERIC},
							  #{errorMessage,       	mode=OUT, jdbcType=VARCHAR}
							 )
	}
	</select>
 
    <sql id="dropCTS_DUES_TEMP">
		IF OBJECT_ID('#CTS_DUES_TEMP') IS NOT NULL
		BEGIN
		    DROP TABLE #CTS_DUES_TEMP
		END	
	</sql>
	
	 <sql id="dropDOF_POSTING_TMP">
		IF OBJECT_ID('#DOF_POSTING_TMP') IS NOT NULL
		BEGIN
		    DROP TABLE #DOF_POSTING_TMP
		END	
	</sql>
	
	 <sql id="dropCtsTrsTmp">
		IF OBJECT_ID('#CTSTRS_TMP') IS NOT NULL
		BEGIN
		    DROP TABLE #CTSTRS_TMP
		END	
	</sql>
	
	<sql id="dropUploadTmp">
		IF OBJECT_ID('#UPLOAD_TMP') IS NOT NULL
		BEGIN
		    DROP TABLE #UPLOAD_TMP
		END	
	</sql>
	
	<sql id="dropChargesTmp">
		IF OBJECT_ID('#CHARGES_TMP') IS NOT NULL
		BEGIN
		    DROP TABLE #CHARGES_TMP
		END	
	</sql>
	
	<sql id="dropHUNTING_TMP">
		IF OBJECT_ID('#HUNTING_TMP') IS NOT NULL
		BEGIN
		    DROP TABLE #HUNTING_TMP
		END
	</sql>
	
	<sql id="dropHOF_TMP">
		IF OBJECT_ID('#HOF_TMP') IS NOT NULL
		BEGIN
		    DROP TABLE #HOF_TMP
		END
	</sql>
	
	
	<sql id="createCTS_DUES_TEMP">
		CREATE TABLE #CTS_DUES_TEMP
				     (
						COMP_CODE             NUMERIC(4,0)  NOT NULL,
						BRANCH_CODE           NUMERIC(4,0)  NOT NULL,
						DR_AC_BR              NUMERIC(4,0)  NOT NULL,
						DR_AC_CY              NUMERIC(3,0)  NOT NULL,
						DR_AC_GL              NUMERIC(6,0)  NOT NULL,
						DR_AC_CIF             NUMERIC(8,0)  NOT NULL,
						DR_AC_SL              NUMERIC(3,0)  NOT NULL,
						DUE_CODE              NUMERIC(12,0)  NOT NULL,
						APP_NAME              VARCHAR(8)  NOT NULL,
						DUE_TYPE              VARCHAR(1)  NULL,
						PAYMENT_MODE          VARCHAR(1)  NULL,
						TRS_TYPE              VARCHAR(1)  NULL,
						CB_IND                VARCHAR(1)  NULL,
						TRS_NO                NUMERIC(12,0)  NULL,
						CR_AC_BR              NUMERIC(4,0)  NULL,
						CR_AC_CY              NUMERIC(3,0)  NULL,
						CR_AC_GL              NUMERIC(6,0)  NULL,
						CR_AC_CIF             NUMERIC(8,0)  NULL,
						CR_AC_SL              NUMERIC(3,0)  NULL,
						ORIGINAL_AMT          NUMERIC(20,3)  NULL,
						ORIGINAL_AMT_CV       NUMERIC(20,3)  NULL,
						REMAINING_AMOUNT      NUMERIC(20,3)  NULL,
						SETTLED_AMOUNT        NUMERIC(20,3)  NULL,
						EXCHANGE_RATE         NUMERIC(20,12)  NULL,
						STATUS                VARCHAR(3)  NULL,
						DESCRIPTION_ENG       VARCHAR(100)  NULL,
						DESCRIPTION_ARAB      VARCHAR(100)  NULL,
						EXPIRY_DATE           DATETIME  NULL,
						SUSPEND_REASON_CODE   NUMERIC(4,0)  NULL,
						SUB_OPERATION         VARCHAR(4)  NULL,
						CV_AMOUNT             NUMERIC(20,3)  NULL,
						FC_AMOUNT             NUMERIC(20,3)  NULL,
						DELETED_BY            VARCHAR(8)  NULL,
						DATE_DELETED          DATETIME  NULL,
						CREATED_BY            VARCHAR(8)  NULL,
						DATE_CREATED          DATETIME  NULL,
						REVERSED_BY           VARCHAR(8)  NULL,
						DATE_REVERSED         DATETIME  NULL,
						TO_BE_REVERSED_BY     VARCHAR(8)  NULL,
						DATE_TO_BE_REVERSED   DATETIME  NULL,
						AUTH_BY               	VARCHAR(8)  	NULL,
						DATE_AUTH             	DATETIME  		NULL,
						LINE_NUM			  	NUMERIC(12) 	IDENTITY, 
						AMF_DR_STATUS         	VARCHAR(1)  	NULL,   --ADDED TO THE HASHED TABLE OTHER THAN CTS_DUES
						CR_VAT_AC_BR          	NUMERIC(4) 		NULL,
						CR_VAT_AC_CIF         	NUMERIC(8) 		NULL,
						CR_VAT_AC_CY          	NUMERIC(3) 		NULL,
						CR_VAT_AC_GL          	NUMERIC(6) 		NULL,
						CR_VAT_AC_SL          	NUMERIC(3) 		NULL,
						ORIGINAL_VAT_AMT_CV   	NUMERIC(20,3) 	NULL,
						ORIGINAL_VAT_AMT_FC   	NUMERIC(20,3) 	NULL,
						SETTLED_CHARGE_AMOUNT 	NUMERIC(20,3) 	NULL,
						SETTLED_VAT_AMOUNT    	NUMERIC(20,3) 	NULL,
						CHARGE_CODE				NUMERIC(4)		NULL,
						TVA_CV_AMOUNT			NUMERIC(20,3) 	NULL,
						TVA_FC_AMOUNT			NUMERIC(20,3) 	NULL,
						CHARGE_FC_AMOUNT		NUMERIC(20,3) 	NULL,
						CHARGE_CV_AMOUNT		NUMERIC(20,3) 	NULL,
						VAT_CODE				NUMERIC(4)		NULL
					 )
	</sql>
	
		<sql id="createDOF_POSTING_TMP">
		CREATE TABLE #DOF_POSTING_TMP(                        
			COMP_CODE             NUMERIC(4) not null,
			  BRANCH_CODE           NUMERIC(4) not null,
			  CURRENCY_CODE         NUMERIC(3) null,
			  GL_CODE               NUMERIC(6) null,
			  CIF_SUB_NO            NUMERIC(8) null,
			  SL_NO                 NUMERIC(3) null,
			  OP_NO                 NUMERIC(9) not null,
			  LINE_NO               NUMERIC(6) not null,
			  POST_DATE             DATETIME null,
			  JV_TYPE               NUMERIC(3) null,
			  JV_REF                VARCHAR(10) null,
			  TRANS_DATE            DATETIME null,
			  VALUE_DATE            DATETIME null,
			  FC_AMOUNT             NUMERIC(20,3) null,
			  EXCH_RATE             NUMERIC(20,6) null,
			  CUR_UNIT              NUMERIC(10) null,
			  CV_AMOUNT             NUMERIC(20,3) null,
			  DESCRIPTION           VARCHAR(100) null,
			  TIME_CREATED          VARCHAR(8) null,
			  TERMINAL_ID           VARCHAR(50) null,
			  CREATED_BY            VARCHAR(8) null,
			  OP_STATUS             VARCHAR(1) null,
			  MODIFIED_BY           VARCHAR(8) null,
			  DATE_MODIFIED         DATETIME null,
			  TIME_MODIFIED         VARCHAR(8) null,
			  OP_ORIGIN             VARCHAR(1) null,
			  BC_FLAG               VARCHAR(1) null,
			  REVERSAL_DATE         DATETIME null,
			  REVERSAL_FLAG         VARCHAR(1) null,
			  CHQ_SRL               NUMERIC(8) null,
			  VALUE_FLAG            VARCHAR(1) null,
			  EOY_FLAG              VARCHAR(1) null,
			  CTS_TRS_NO            NUMERIC(12) null,
			  CTS_CB_IND            VARCHAR(1) null,
			  CTS_TRS_TYPE          VARCHAR(2) null,
			  RIPS_FLAG             VARCHAR(1) null,
			  LINK_TRXTYPE          VARCHAR(1) null,
			  LINK_TRXNO            NUMERIC(12) null,
			  LINK_TRXSUB           NUMERIC(6) null,
			  RIPS_POSTING          VARCHAR(1) null,
			  RIPS_VDATE_POSTING    VARCHAR(1) null,
			  RECONCILE_IND         VARCHAR(1) null,
			  RECONCILED_DT         DATETIME null,
			  RECONCILED_BY         VARCHAR(8) null,
			  REASON                VARCHAR(25) null,
			  ORIGIN_COMPCD         NUMERIC(4) null,
			  REVAL_RATE            NUMERIC(20,6) null,
			  REVAL_UNIT            NUMERIC(10) null,
			  SS_POSTING            NUMERIC(1) null,
			  ADDITIONAL_REFERENCE  VARCHAR(50) null,
			  ADD_DATE1             DATETIME null,
			  ADD_DATE2             DATETIME null,
			  ADD_DATE3             DATETIME null,
			  ADD_DATE4             DATETIME null,
			  ADD_DATE5             DATETIME null,
			  ADD_NUMBER1           NUMERIC(20,3) null,
			  ADD_NUMBER2           NUMERIC(20,3) null,
			  ADD_NUMBER3           NUMERIC(20,3) null,
			  ADD_NUMBER4           NUMERIC(20,3) null,
			  ADD_NUMBER5           NUMERIC(20,3) null,
			  ADD_STRING1           VARCHAR(20) null,
			  ADD_STRING2           VARCHAR(20) null,
			  ADD_STRING3           VARCHAR(20) null,
			  ADD_STRING4           VARCHAR(20) null,
			  ADD_STRING5           VARCHAR(20) null,
			  TR_CODE               NUMERIC(4) null,
			  PASSBOOK_NUMBER       NUMERIC(10) null,
			  PASSBOOK_LINE         NUMERIC(4) null,
			  CHEQUEBOOK_NUMBER     NUMERIC(4) null,
			  PASSBOOK_PROCESSED    VARCHAR(1) null,
			  DIV_CODE              NUMERIC(3) null,
			  DEPT_CODE             NUMERIC(3) null,
			  SUB_NO                NUMERIC(8) null,
			  ORIGIN_BR_I           NUMERIC(4) null,
			  ORIGIN_BR_U           NUMERIC(4) null,
			  ORIGIN_BR_D           NUMERIC(4) null,
			  CTS_TRS_BR            NUMERIC(4) null,
			  CTS_TRX_TYPE          NUMERIC(4) null,
			  DESCRIPTION_ARAB      VARCHAR(80) null,
			  JV_TYPE_NUMBER        NUMERIC(9) null,
			  JVT_BR                NUMERIC(4) null,
			  JVT_NO                NUMERIC(9) null,
			  DESCRIPTION1          VARCHAR(80) null,
			  DESCRIPTION2          VARCHAR(80) null,
			  DESCRIPTION1_ARAB     VARCHAR(80) null,
			  DESCRIPTION2_ARAB     VARCHAR(80) null,
			  CTS_TRS_STS           VARCHAR(1) null,
			  POSTED_BY             VARCHAR(8) null,
			  CTS_TRS_OLDOP         NUMERIC(9) null,
			  UNIT_CODE             NUMERIC(3) null,
			  REASON_CH_EX_RATE     VARCHAR(100) null,
			  REJECT_REASON_JV      VARCHAR(100) null,
			  DATE_POSTED           DATETIME null,
			  TAX_CODE              NUMERIC(4) null,
			  TAX_PERCT             NUMERIC(5,2) null,
			  VERIFIED_BY           VARCHAR(8) null,
			  DATE_VERIFIED         DATETIME null,
			  TIME_VERIFIED         VARCHAR(8) null,
			  AUTHORIZED_BY         VARCHAR(8) null,
			  DATE_AUTHORIZED       DATETIME null,
			  TIME_AUTHORIZED       VARCHAR(8) null,
			  REJECTED_BY           VARCHAR(8) null,
			  DATE_REJECTED         DATETIME null,
			  TIME_REJECTED         VARCHAR(8) null,
			  DELETED_BY            VARCHAR(8) null,
			  DATE_DELETED          DATETIME null,
			  TIME_DELETED          VARCHAR(8) null,
			  BACK_VALUE_TRX_POSTED VARCHAR(1) null,
			  DATE_UPDATED          DATETIME null,
			  BATCH_NO              NUMERIC(9) null,
			  AFFECT_POSITION       VARCHAR(1) null,
			  APPLY_POSITION_YN     VARCHAR(1) null
				
				) 
	</sql>
	
	<sql id="createUploadTmp">
	   CREATE  TABLE #UPLOAD_TMP 
					(
					COMPANY 			NUMERIC(4) NULL ,
					BRANCH 				NUMERIC(4) NULL ,
					BATCH_NO 			NUMERIC(6) NULL ,
					LINE_NUM			NUMERIC(6) NULL ,
					UPLOAD_STATUS		VARCHAR(4) 	NULL ,
					PROCEED_FLAG		VARCHAR(4)	NULL ,
					PROCESSED_STATUS 	VARCHAR(4) NULL ,
					STATUS				VARCHAR(4) NULL ,
					TRS_AC_BR			NUMERIC(4) NULL ,
					TRS_AC_CY 			NUMERIC(3) NULL ,
					TRS_AC_GL 			NUMERIC(6) NULL ,
					TRS_AC_CIF	 		NUMERIC(8) NULL ,
					TRS_AC_SL 			NUMERIC(3) NULL ,
					TO_TRS_AC_BR 		NUMERIC(4) NULL ,
					TO_TRS_AC_CY 		NUMERIC(3) NULL ,
					TO_TRS_AC_GL 		NUMERIC(6) NULL ,
					TO_TRS_AC_CIF 		NUMERIC(8) NULL ,
					TO_TRS_AC_SL 		NUMERIC(3) NULL ,
					ORIGINAL_AC_BR 		NUMERIC(4) NULL ,
					ORIGINAL_AC_CY 		NUMERIC(3) NULL ,
					ORIGINAL_AC_GL 		NUMERIC(6) NULL ,
					ORIGINAL_AC_CIF	 	NUMERIC(8) NULL ,
					ORIGINAL_AC_SL 		NUMERIC(3) NULL ,
					TRS_AMOUNT 			NUMERIC(23 ,3) NULL ,
					TRS_AC_AMOUNT  		NUMERIC(23 ,3) NULL ,
					CV_AMOUNT  			NUMERIC(23 ,3) NULL ,
					TRS_BALANCE  		NUMERIC(23 ,3) NULL ,
					TRS_CV_BALANCE  	NUMERIC(23 ,3) NULL ,
					TRS_BLOCK_CV  		NUMERIC(23 ,3) NULL ,
					TRS_BLOCK_FC  		NUMERIC(23 ,3) NULL ,
					TRS_CY 				NUMERIC(3) NULL ,
					TRS_SIGN 			VARCHAR(4) NULL ,
					MICR_CODE 			VARCHAR(50) NULL ,
					ENABLE_FLAG 		VARCHAR(4) NULL ,
					CHQ_ACC_NUM 		VARCHAR(50) NULL ,
					CHECKING_NUMBER 	VARCHAR(20) NULL ,
					CLIENT_NUMBER 		VARCHAR(20) NULL ,
					ADDITIONAL_NUMBER 	VARCHAR(40) NULL ,
					INVOICE_NUMBER 		VARCHAR(50) NULL ,
					CARDHOLDER_NO 		VARCHAR(50) NULL ,
					ACC_ADD_REF 		NUMERIC(12) NULL ,
					HASH_TOTAL	 		NUMERIC(12) NULL ,	
					DESCRIPTION  		VARCHAR(100) NULL ,
					DESCRIPTION_1 		VARCHAR(100) NULL ,
					POST_DATE 			DATETIME NULL ,
					CARD_NO 			VARCHAR(600) NULL ,
					BR_CODE 			VARCHAR(100) NULL ,
					DEDUCT_CHRG_FROM 	VARCHAR(100) NULL ,
					CY_MULTI_DIV 		VARCHAR(100) NULL ,
					TO_AMF_ADD_REF 		VARCHAR(100) NULL ,
					CIF_TO_DESC 		VARCHAR(100) NULL ,
					REASON_DESC 		VARCHAR(100) NULL ,
					CLT_NAME 			VARCHAR(100) NULL ,
					EXCHANGE_RATE  		NUMERIC(23 ,3) NULL ,
					NARRATIVE  			VARCHAR(100) NULL ,
					AVAI_BALANCE 		NUMERIC(23,3) NULL ,
					PAST_DUE_AMOUNT 	NUMERIC(23 ,3) NULL ,
					BANK_CIF 			NUMERIC(8) NULL ,
					AMF_ADD_REF 		VARCHAR(100) NULL ,
					CIF_FROM_DESC 		VARCHAR(100) NULL ,
					CHQ_DATE 			DATETIME NULL ,
					CHQ_NO  			NUMERIC(10,0)  NULL ,
					ERROR_CODE 			NUMERIC(6) NULL ,
					ERROR_DESC 			VARCHAR(100) NULL ,
					TRX_TYPE 			NUMERIC(6) NULL ,
					TRS_NO				NUMERIC(12) NULL ,
					AMENDED  			VARCHAR(10) NULL ,
					CIF_FROM_BANK 		VARCHAR(100) NULL ,
					CIF_TO_BANK 		VARCHAR(100) NULL ,
					APPLY_HOF			VARCHAR(10) NULL ,
					SIGN_GROUP_ID 		VARCHAR(50) NULL ,
					TO_BE_PROCESSED		NUMERIC(4) NULL ,
					PAYLAY_BATCHNO	 	NUMERIC(4) NULL ,
					LINE_TRX			NUMERIC(12) NULL ,
					REC_TYPE          	VARCHAR(50) NULL ,
					TRS_STATUS         	VARCHAR(50) NULL ,
					EXCH_PROTECT       	VARCHAR(50) NULL ,
					REVERSED_TRS_NO	 	NUMERIC(12) NULL ,
					LINK_TO_LINE       	NUMERIC(12) NULL ,
					LINK_TO_TRS        	NUMERIC(12) NULL,
					REASON_CODE         NUMERIC(30) NULL
					)
	
	</sql>
	
	<sql id="createChargesTmp">
	   CREATE  TABLE #CHARGES_TMP 
					(
					COMP_CODE NUMERIC(4,0)  NULL, 
		BRANCH_CODE NUMERIC(4,0)  NULL, 
		TRS_NO NUMERIC(12,0) NULL, 
		CHARGE_CODE NUMERIC(4,0)  NULL, 
		ACC_BR NUMERIC(4,0) NULL, 
		ACC_CY NUMERIC(4,0) NULL, 
		ACC_GL NUMERIC(6,0) NULL, 
		ACC_CIF NUMERIC(8,0) NULL, 
		ACC_SL NUMERIC(3,0) NULL,  
		AMOUNT NUMERIC(20,6) NULL, 
		AMOUNT_NEW NUMERIC(20,6) NULL, 
		AMOUNT_FC_NEW NUMERIC(20,6) NULL, 
		CHARGE_PERC NUMERIC(7,3) NULL, 
		PASS_SEPARATELY VARCHAR(1) DEFAULT '0' NULL, 
		APPLY_TVA VARCHAR(1) DEFAULT '0' NULL, 
		VAT_CODE NUMERIC(4,0) NULL, 
		SCHEMA_CODE NUMERIC(4,0) NULL, 
		DR_ACC_CIF NUMERIC(8,0) DEFAULT 0 NULL, 
		DR_ACC_GL NUMERIC(6,0) DEFAULT 0 NULL, 
		DR_ACC_SL NUMERIC(3,0) DEFAULT 0 NULL,  
		DR_CRITERIA VARCHAR(1) DEFAULT '1' NULL, 
		DEDUCT_FROM_ACC_BR NUMERIC(4,0) NULL, 
		DEDUCT_FROM_ACC_CIF NUMERIC(8,0) NULL, 
		DEDUCT_FROM_ACC_CY NUMERIC(3,0) NULL, 
		DEDUCT_FROM_ACC_GL NUMERIC(6,0) NULL, 
		DEDUCT_FROM_ACC_SL NUMERIC(3,0) NULL,
		LINE_NO NUMERIC(6)  NULL , 
		DUES_COLLECTION_TYPE VARCHAR(1) NULL,
		DUES_MODE_PAY VARCHAR(1) NULL,
		PARTIAL_CHARGE_CV NUMERIC (23,6) NULL,
		PARTIAL_CHARGE_FC NUMERIC (23,6) NULL,
		ACTION_TYPE VARCHAR(3) NULL,
		USER_ID  VARCHAR(8) NULL
					)
	
	</sql>
	
	<sql id="createCtsTrsTmp">
	   create table #CTSTRS_TMP(
					   COMP_CODE   numeric(4,0)  not null,
					   BRANCH_CODE   numeric(4,0)  not null,   
					   TO_TRS_AC_CIF   numeric(8,0)  null,
					   TO_TRS_AC_BR numeric(4) null,
					   TO_TRS_AC_SL numeric(3) null,
					   TO_TRS_AC_GL numeric(6) null,
					   TO_TRS_AC_CY numeric(3) null,
					   AMOUNT numeric(20,3) null, 
					   TRS_AC_CIF   numeric(8,0)  null,
					   STATUS   char(1)  not null,
					   CREATED_DATE   datetime  null,
					   VALUE_DATE   datetime  null,
					   TRS_DATE   datetime  null,
					   TRX_TYPE   numeric(3,0)  null,
					   TRS_TYPE   char(1)  not null,
					   CB_IND   char(1)  not null, 
					   TRS_NO   numeric(12,0)  not null,
					   CHQ_SETTL_FLAG   varchar(1)  null,
					   REMITTANCE_TO_NUM NUMERIC(10)  NULL,
					   REMITTANCE_FR_NUM NUMERIC(10)  NULL,
					   CHQ_NUM NUMERIC(10) NULL , 
					   TRS_CY NUMERIC(3) NULL,
					   REMITT_CY VARCHAR(1) NULL,
					   LINKTOOTHER_TRXNO NUMERIC(12) NULL,
				       <!-- Hussein elhaj-added to 14.1 -BB16007 -->
				       <!--added by nancy 20/04/2017 Hold Amounts Cases-BB16007-505630 -->
				      CARD_NO VARCHAR(600) NULL
					   )
	
	</sql>
	
	<sql id="createHUNTING_TMP">
		CREATE TABLE #HUNTING_TMP 
		(
			DEBIT_CARD			VARCHAR(50) NULL ,
			HUNT_TRS_AC_BR 		NUMERIC(4) NULL ,
			HUNT_TRS_AC_CY 		NUMERIC(3) NULL ,
			HUNT_TRS_AC_GL 		NUMERIC(6) NULL ,
			HUNT_TRS_AC_CIF 	NUMERIC(8) NULL ,
			HUNT_TRS_AC_SL 		NUMERIC(3) NULL ,
			HUNT_TRS_AC_ADD_REF VARCHAR(35) NULL ,
			HUNT_BRIEF_NAME_ENG VARCHAR(20) NULL ,
			BALANCE				NUMERIC(20,3) NULL,
			PRIORITY			NUMERIC(1)  NULL
		)
	</sql>
	
	<sql id="createHOF_TMP">
		CREATE  TABLE #HOF_TMP 
		(
			COMPANY 					   NUMERIC(4) NULL ,
			BRANCH 						   NUMERIC(4) NULL ,
			TRS_AC_BR                      NUMERIC(4) NULL ,
			TRS_AC_CY 			           NUMERIC(3) NULL ,
			TRS_AC_GL 			           NUMERIC(6) NULL ,
			TRS_AC_CIF	 		           NUMERIC(8) NULL ,
			TRS_AC_SL 			           NUMERIC(3) NULL ,
			TRS_STATUS					   VARCHAR(50)NULL ,
			CREATED_BY					   VARCHAR(8), 
			TRS_CY						   NUMERIC(3) NULL ,
			AMOUNT						   NUMERIC(23 ,3) NULL,
			VOID_REASON					   VARCHAR(60) NULL, 
			LINKTOOTHER_TRXNO			   NUMERIC(12)NULL ,
			RECEIPT_NO					   NUMERIC(12)NULL ,
			TRX_TYPE					   NUMERIC(6)NULL ,
			TRS_NO					       NUMERIC(12)NULL , 
			LINE_NO					       NUMERIC(12) NULL ,
			ADD_REF              		   VARCHAR(100)NULL , 
			TRX_DESC					   VARCHAR(50)NULL , 
			TRS_CY_DESC			           VARCHAR(50)NULL ,
			VOID						   VARCHAR(60)NULL ,
			CARD_NO					       VARCHAR(600)NULL ,
			DUE_AMOUNT			           NUMERIC(23 ,3) NULL,
			COLLECTED_AMOUNT			   NUMERIC(23 ,3) NULL,
			UNCOLLECTED_AMOUNT			   NUMERIC(23 ,3) NULL,
			MAIN_TRS_CY					   NUMERIC(3) NULL 
		)
	</sql>
	
	<sql id="createCtsDynBankCorrTmp">
		CREATE TABLE #CTS_DYN_BANK_CORR_TMP
		 (COMP_CODE NUMERIC(4,0)  NOT NULL, 
		  USER_ID VARCHAR(8)  NOT NULL, 
		  CIF_NO   numeric(8,0) NOT null,
		  BANK_PRIORITY   numeric(3,0)  null ,
		  INTER_BIC VARCHAR(12)  NULL)
	</sql>
	
	<sql id="createCtsDynIntermediateBankTmp">
		CREATE TABLE #CTS_DYN_INTERMEDIATE_BANK_TMP
		 (COMP_CODE NUMERIC(4,0)  NOT NULL, 
		 USER_ID VARCHAR(8)  NOT NULL, 
		 CODE VARCHAR(8)  NOT NULL, 
		 CURRENCY_ISO_CODE VARCHAR(3)  NULL, 
		 BENEF_BIC VARCHAR(12)  NULL, 
		 INTER_BIC VARCHAR(12)  NULL, 
		 CORRESPONDENT_TYPE VARCHAR(20)  NULL, 
		 CY_BIC NUMERIC(3,0)  NULL, 
		 ISO_BIC_INTERM VARCHAR(3)  NULL, 
		 INTERM_CIF_TYPE NUMERIC(4,0)  NULL, 
		 PRIORITY NUMERIC(2,0)  NULL,  
		 CONSTRAINT PK_DYN_INTERMEDIATE_BANK_TMP PRIMARY KEY (COMP_CODE,USER_ID,CODE))
	</sql>
	
	<update id="dropCTS_DUES_TEMP">
		<include refid="dropCTS_DUES_TEMP"/>
	</update>
	
	<update id="createCTS_DUES_TEMP">
		<include refid="createCTS_DUES_TEMP"/>
		<include refid="coreCommonProcedureMapper.beginTans"/>
	</update>
	
	<update id="dropDOF_POSTING_TMP">
		<include refid="dropDOF_POSTING_TMP"/>
	</update>
	
	<update id="createDOF_POSTING_TMP">
		<include refid="createDOF_POSTING_TMP"/>
		<include refid="coreCommonProcedureMapper.beginTans"/>
	</update>
	
	<update id="dropHUNTING_TMP">
		<include refid="dropHUNTING_TMP"/>
	</update>
	
	<update id="createHUNTING_TMP">
		<include refid="createHUNTING_TMP"/>
		<include refid="coreCommonProcedureMapper.beginTans"/>
	</update>
	
	<update id="dropHOF_TMP">
		<include refid="dropHOF_TMP"/>
	</update>
	
	<update id="createHOF_TMP">
		<include refid="createHOF_TMP"/>
		<include refid="coreCommonProcedureMapper.beginTans"/>
	</update>
	
<update id ="dropAuthorizeClearingTmpTables">
	<include refid="coreCommonProcedureMapper.dropAuthorizeClearingTmpTable"/>
	<include refid="coreCommonProcedureMapper.dropStandOrder"/>
	<include refid="coreCommonProcedureMapper.dropTemplAmtTmp"/>
    <include refid="coreCommonProcedureMapper.dropDOF_POSTING_TMP"/>
	<include refid="coreCommonProcedureMapper.dropTrsOnlineSalAmfUpdate"/>
	<include refid="coreCommonProcedureMapper.dropCtsChargesUnified"/>
</update>
<update id ="createAuthorizeClearingTmpTables">
	<include refid="coreCommonProcedureMapper.authorizeClearingTmp_creation"/>
	<include refid="coreCommonProcedureMapper.standOrderCreation"/>
	<include refid="coreCommonProcedureMapper.templAmtTmpCreation"/>
	<include refid="coreCommonProcedureMapper.createDOF_POSTING_TMP"/>
	<include refid="coreCommonProcedureMapper.trsOnlineSalAmfUpdateCreation"/>
	<include refid="coreCommonProcedureMapper.ctsChargesUnifiedCreation"/>
	<include refid="coreCommonProcedureMapper.beginTans"/>
</update>

<sql id ="dropAuthorizeClearingTmpTable">
	IF OBJECT_ID('#AUTHORIZE_CLEARING_TMP') IS NOT NULL
	BEGIN
		DROP TABLE #AUTHORIZE_CLEARING_TMP
	END
</sql>

<sql id="authorizeClearingTmp_creation" >
	 CREATE TABLE #AUTHORIZE_CLEARING_TMP(		
				  COMP_CODE       NUMERIC(4) not null,
				  BRANCH_CODE     NUMERIC(4) not null,
				  TRS_TYPE        VARCHAR(1) not null,
				  CB_IND          VARCHAR(1) not null,
				  TRS_NO          NUMERIC(12) not null,
				  STATUS          VARCHAR(1) not null,
				  TRS_DATE        DATETIME NULL,
				  VALUE_DATE      DATETIME NULL,
				  DATE_REQUESTED  DATETIME NULL,
				  RELEASE_DATE    DATETIME NULL,
				  TRS_AC_BR       NUMERIC(4) NULL,
				  TRS_AC_CY       NUMERIC(3) NULL,
				  TRS_AC_GL       NUMERIC(6) NULL,
				  TRS_AC_CIF      NUMERIC(8) NULL,
				  TRS_AC_SL       NUMERIC(3) NULL,
				  AMOUNT          NUMERIC(20,3) NULL,
				  TRS_CY          NUMERIC(3) NULL,
				  BANK_CIF        NUMERIC(8) NULL,
				  CHARGE          NUMERIC(20,3) NULL,
				  CASH_DEDUCT_IND VARCHAR(1) NULL,
				  TRS_AC_AMOUNT   NUMERIC(20,3) NULL,
				  CLEAR_STATUS    VARCHAR(1) NULL, 
				  CLEARED_BY      VARCHAR(8) NULL,
				  DATE_CLEARED    DATETIME NULL,
				  CLEAR_AUTH_BY   VARCHAR(8) NULL,
				  DATE_CLEAR_AUTH DATETIME NULL,
				  VOID_REASON     VARCHAR(60) NULL,
				  CV_AMOUNT       NUMERIC(20,3) NULL,
				  TO_TRS_AC_BR    NUMERIC(4) NULL,
				  TO_TRS_AC_CY    NUMERIC(3) NULL,
				  TO_TRS_AC_GL    NUMERIC(6) NULL,
				  TO_TRS_AC_CIF   NUMERIC(8) NULL,
				  TO_TRS_AC_SL    NUMERIC(3) NULL,
				  TRX_TYPE        NUMERIC(3) NULL,
				  TELLER_CODE     NUMERIC(6) NULL,
				  CHQ_NUM         NUMERIC(10) NULL,
				  DOC_LANG        VARCHAR(1) NULL,
				  OLD_STATUS      VARCHAR(1) NULL,
				  CREATED_DATE    DATETIME NULL,
				  TRX_AUTHORIZED NUMERIC(1) NULL,
				  LOGIN_BRANCH_CODE NUMERIC(4) NULL
				  ) 
</sql>

	<select id="getCrossRate" parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL P_RET_GET_CROSS_RATE( #{compCode, 			mode=IN, jdbcType=NUMERIC},
    							 #{toCy,				mode=IN, jdbcType=NUMERIC},
    							 #{baseCurrencyCode,	mode=IN, jdbcType=NUMERIC},
    							 #{frCy, 				mode=IN, jdbcType=NUMERIC},
    							 #{trsType,				mode=IN, jdbcType=VARCHAR},
    							 #{trxType,				mode=IN, jdbcType=NUMERIC},
    							 #{crDrForex,			mode=IN, jdbcType=VARCHAR},
    							 #{runningDate,			mode=IN, jdbcType=DATE},
    							 #{branchCode,			mode=IN, jdbcType=NUMERIC},
    							 #{cif,					mode=IN, jdbcType=NUMERIC},
    							 #{cash, 				mode=IN, jdbcType=VARCHAR},
    							 #{staff, 				mode=IN, jdbcType=VARCHAR},
    							 #{acFromCyUnits,		mode=IN, jdbcType=NUMERIC},
    							 #{acFromCyMultiDiv, 	mode=IN, jdbcType=VARCHAR},
    							 #{acToCyMultiDiv, 		mode=IN, jdbcType=VARCHAR},
    							 #{acToCyUnits,			mode=IN, jdbcType=NUMERIC},
    							 #{screenSrc, 			mode=IN, jdbcType=VARCHAR},
    							 #{rateFlag, 			mode=IN, jdbcType=VARCHAR},
    							 #{exchRate, 			mode=OUT, jdbcType=NUMERIC},
    							 #{multiDivInd, 		mode=OUT, jdbcType=VARCHAR},
    							 #{errorCode, 			mode=OUT, jdbcType=NUMERIC},
								 #{errorMessage, 		mode=OUT, jdbcType=VARCHAR})}
	</select>
	
	<select id="checkIisInvestmentDeal" parameterType="com.path.vo.core.trxmgnt.settlement.TrxMgntSettlementSC" statementType="CALLABLE">
	{ CALL P_IIS_API_GET_INVESTMENT_DEAL(#{compCode,        mode=IN, jdbcType=NUMERIC},
	 									 #{cifNo,      		mode=IN, jdbcType=NUMERIC},
	 									 #{addRef,      	mode=IN, jdbcType=VARCHAR},
									  	 #{branchCode,      mode=IN, jdbcType=NUMERIC},
									  	 #{dealNo,      	mode=IN, jdbcType=NUMERIC},
									  	 #{customDealNo,    mode=IN, jdbcType=VARCHAR},
									  	 #{channel,      	mode=IN, jdbcType=VARCHAR},
									     #{processDate,     mode=IN, jdbcType=DATE},
									     #{vehicle,         mode=IN, jdbcType=VARCHAR}, <!-- added by michelakiki for BMMBI100904 --> 
									     #{errorCode,       mode=OUT,jdbcType=NUMERIC},
									     #{errorMessage,    mode=OUT,jdbcType=VARCHAR}
									     <if test="isSybase != 1">
									       ,
									       #{sysRefCursor, mode=OUT, jdbcType=CURSOR, javaType=java.sql.ResultSet, resultMap=trxMgntSettlementMapper.dealDetailsListMap}
									     </if>  
									     )  }
	</select>
	
	<select id="returnCardEnquiry" parameterType="cardsManagementCO" statementType="CALLABLE">
	{ CALL 	P_RET_CARD_ENQUIRY_EXT  (#{cardsMgtVO.COMP_CODE,        	mode=IN, jdbcType=NUMERIC},
									 #{cardsMgtVO.CARD_NO,      		mode=IN, jdbcType=VARCHAR},
									 #{cardAccountVO.ACC_BR,      		mode=IN, jdbcType=NUMERIC},
									 #{cardAccountVO.ACC_CY,      		mode=IN, jdbcType=NUMERIC},
									 #{cardAccountVO.ACC_GL,      		mode=IN, jdbcType=NUMERIC},
									 #{cardAccountVO.ACC_CIF,      		mode=IN, jdbcType=NUMERIC},
									 #{cardAccountVO.ACC_SL,      		mode=IN, jdbcType=NUMERIC},
									 #{cardAccountVO.ACC_ADD_REF,   	mode=IN, jdbcType=VARCHAR},
								  	 #{limitType,      					mode=IN, jdbcType=VARCHAR},
								  	 #{returnAcc,      					mode=IN, jdbcType=NUMERIC},
								  	 #{returnActiveCard,    			mode=IN, jdbcType=NUMERIC},
								     #{runningDate,    					mode=IN, jdbcType=DATE},
								     #{cardsMgtVO.BRANCH_CODE,      	mode=OUT,jdbcType=NUMERIC},
								     #{cardsMgtVO.APPLICATION_ID,   	mode=OUT,jdbcType=NUMERIC},
								     #{cardsMgtVO.CARD_HOLDER_NAME, 	mode=OUT,jdbcType=VARCHAR},
								     #{cardsMgtVO.STATUS, 				mode=OUT,jdbcType=VARCHAR},
								     #{cardsMgtVO.EXPIRY_DATE, 			mode=OUT,jdbcType=DATE},
								     #{ctsCardsVO.RELEASE_HOF_DAYS, 	mode=OUT,jdbcType=NUMERIC},
								     #{ctsCardsVO.CARD_TYPE,        	mode=OUT,jdbcType=VARCHAR},
								     #{prepaid,       					mode=OUT,jdbcType=VARCHAR},
								     #{ctsCardsVO.LIMIT_CHECKING_BY,	mode=OUT,jdbcType=VARCHAR},
								     #{ctsCardsVO.TOTAL_LIMIT,			mode=OUT,jdbcType=NUMERIC},
								     #{cardsMgtVO.LIMIT_BASED_ON,		mode=OUT,jdbcType=VARCHAR},
								     #{cardsMgtVO.LIMIT_CHECK_PERIOD,	mode=OUT,jdbcType=VARCHAR},
								     #{atmSpentCv,       				mode=OUT,jdbcType=NUMERIC},
								     #{atmSpentFc,       				mode=OUT,jdbcType=NUMERIC},
								     #{cardsMgtVO.POS_LIMIT_AMOUNT,		mode=OUT,jdbcType=NUMERIC},
								     #{cardsMgtVO.POS_LIMIT_BASED_ON,	mode=OUT,jdbcType=VARCHAR},
								     #{cardsMgtVO.POS_LIMIT_CHECK_PERIOD,mode=OUT,jdbcType=VARCHAR},
								     #{posSpentCv,       				mode=OUT,jdbcType=NUMERIC},
								     #{posSpentFc,       				mode=OUT,jdbcType=NUMERIC},
								     #{records_nb,       				mode=OUT,jdbcType=NUMERIC},
								     #{errorCode,       				mode=OUT,jdbcType=NUMERIC},
								     #{errorMessage,    				mode=OUT,jdbcType=VARCHAR})}
	</select>
	
	
	<update id ="dropTempTableForInvestmentDeal">
		IF OBJECT_ID('#temp_table') IS NOT NULL
		BEGIN
			DROP TABLE #temp_table
		END
	</update>
	
	<update id ="createTempTableForInvestmentDeal">
		CREATE TABLE #temp_table(
			ol_branch_code NUMERIC(4) NOT NULL,
			ol_deal_no NUMERIC(12) NOT NULL,
			os_custome_deal_no VARCHAR(30) NULL,
			od_value_date DATETIME NULL,
			od_maturity_date DATETIME NULL,
			ol_deal_cy NUMERIC(3) NULL,
			odec_principal_amount NUMERIC(20,3) NULL, 
			odec_profit_amount NUMERIC(20,3) NULL,
			odec_maturity_amount NUMERIC(20,3) NULL,
			odec_outstanding_amount NUMERIC(20,3) NULL, 
			ol_product_class NUMERIC(4) NULL,
			os_product_class_description VARCHAR(40) NULL,
			os_acc_additional_ref VARCHAR(35) NULL,
			odec_outstanding_amount_cv NUMERIC(20,3) NULL, 
			odec_pastdue_amount NUMERIC(20,3) NULL, 
			os_deal_status VARCHAR(1) NULL,
			odt_last_pay_date DATETIME NULL,
			odt_first_pay_date DATETIME NULL,
			ol_no_of_payment NUMERIC(3) NULL,
			odec_inst_amount NUMERIC(20,3) NULL, 
			odt_past_due_date DATETIME NULL,
			odec_owings NUMERIC(20,3) NULL, 
			odec_lpc NUMERIC(20,3) NULL, 
			odec_sd_in_arrear NUMERIC(20,3) NULL, 
			odec_total_amount NUMERIC(20,3) NULL,
			os_active_simulation VARCHAR(1) NULL,
			odec_last_pay_amount NUMERIC(20,3) NULL,
			os_cif_name	  VARCHAR(40) NULL,
			ol_error_code NUMERIC(6) NULL, 
			os_error_desc VARCHAR(250) NULL)
	</update>
	
	<select id="returnMinAmountRecv" parameterType="com.path.vo.core.trxmgnt.settlement.TrxMgntSettlementSC" statementType="CALLABLE">
	{ CALL P_API_CRM_GET_MIN_AMT_RECV(#{compCode,        mode=IN, jdbcType=NUMERIC},
 									 #{dealBr,      	mode=IN, jdbcType=NUMERIC},
 									 #{dealNo,      	mode=IN, jdbcType=NUMERIC},
								     #{minAmount,       mode=OUT,jdbcType=NUMERIC},
								     #{errorCode,       mode=OUT,jdbcType=NUMERIC},
								     #{errorMessage,    mode=OUT,jdbcType=VARCHAR}  )  }
	</select>
	
	 
     
     
	<select id="calculateCharges" 	parameterType="entityChargesSC" statementType="CALLABLE">
	{ CALL P_RET_GET_CHARGES_UNIFIED (#{compCode		,mode=IN,   jdbcType=NUMERIC},
									  #{branchCode		,mode=IN,   jdbcType=NUMERIC},
									  #{userId			,mode=IN,   jdbcType=VARCHAR},
									  #{totalCvAmount	,mode=OUT, 	jdbcType=NUMERIC},
									  #{totalFcAmount	,mode=OUT, 	jdbcType=NUMERIC},
									  #{totalCvDues		,mode=OUT, 	jdbcType=NUMERIC},
									  #{totalFcDues		,mode=OUT, 	jdbcType=NUMERIC},
									  #{errorCode 		,mode=OUT,	jdbcType=NUMERIC},
									  #{errorMessage	,mode=OUT,  jdbcType=LONGVARCHAR,typeHandler=com.path.lib.common.base.ibatis3.handlers.PathLongVarcharHandler} )}
	</select>


	<select id="storeInAmfAlert" parameterType="accountSC" statementType="CALLABLE">
	{ CALL P_RET_ALERT_AMF( #{loginCompCode, mode=IN, jdbcType=NUMERIC},
							#{branchCode, mode=IN, jdbcType=NUMERIC},
							#{currencyCode, mode=IN, jdbcType=NUMERIC},
							#{glCode, mode=IN, jdbcType=NUMERIC},
							#{cifCode, mode=IN, jdbcType=NUMERIC},
							#{slNbr, mode=IN, jdbcType=NUMERIC},
							#{userId, mode=IN, jdbcType=VARCHAR},
							#{runningDate, mode=IN, jdbcType=DATE},
							#{AMFStatus, mode=IN, jdbcType=VARCHAR},
							#{errorCode, mode=OUT, jdbcType=NUMERIC},
							#{errorMessage, mode=OUT, jdbcType=VARCHAR})
					}
	</select>



	<!-- NABIL FEGHALI - IIAB110182 - IIAB100424 - Conditional Automation -->
	<select id="forbidMatchedCIF" parameterType="com.path.vo.core.conditionalautomation.ConditionalAutomationCO" statementType="CALLABLE">
	{ CALL P_RET_FORBID_MATCHED_CIF(#{loginCompCode,        mode=IN, 	jdbcType=NUMERIC},
 									 #{loginBraCode,      	mode=IN, 	jdbcType=NUMERIC},
 									 #{cifNO,      			mode=IN, 	jdbcType=NUMERIC},
								     #{startDate,       	mode=IN,	jdbcType=TIMESTAMP},
								     #{endDate,       		mode=IN,	jdbcType=TIMESTAMP},
								     #{forbidTrx,       	mode=IN,	jdbcType=VARCHAR},
								     #{reasonCode,       	mode=IN,	jdbcType=NUMERIC},
								     #{administration,      mode=IN,	jdbcType=NUMERIC},
								     #{recordSource,       	mode=IN,	jdbcType=VARCHAR},
								     #{reference,       	mode=IN,	jdbcType=VARCHAR},
								     #{condAutCode,       	mode=IN,	jdbcType=NUMERIC},
								     #{errorCode,       	mode=OUT,	jdbcType=NUMERIC},
								     #{errorMessage,    	mode=OUT,	jdbcType=VARCHAR}  )  }
	</select>
	<!-- NABIL FEGHALI - PATH120107 - FATCA PHASE I -->
	<select id="createDeleteMemo" parameterType="com.path.vo.common.memo.MemoDtlCO" statementType="CALLABLE">
	{ CALL P_RET_CREATE_DELETE_MEMO(#{loginCompCode,        			mode=IN, 	jdbcType=NUMERIC},
 									 #{loginBraCode,      				mode=IN, 	jdbcType=NUMERIC},
 									 #{checkArg,      					mode=IN, 	jdbcType=VARCHAR},
								     #{ctsMemoDetVO.CIF_NO,       		mode=IN,	jdbcType=NUMERIC},
								     #{runningDate,       				mode=IN,	jdbcType=DATE},
								     #{userName,       					mode=IN,	jdbcType=VARCHAR},
								     #{ctsMemoDetVO.COMMON_DESC_ENG,	mode=IN,	jdbcType=VARCHAR},
								     #{ctsMemoDetVO.COMMON_DESC_ARAB,	mode=IN,	jdbcType=VARCHAR},
								     #{ctsMemoDetVO.MEMO_CODE,    		mode=IN,	jdbcType=NUMERIC},
								     #{errorCode,       				mode=OUT,	jdbcType=NUMERIC},
								     #{errorMessage,    				mode=OUT,	jdbcType=VARCHAR} )}
	</select>
	
	
	<select id="reverseBatch" parameterType="ctstrsUploadSC" statementType="CALLABLE">
	{ CALL P_RET_BATCH_REVERSE_PROCESS(#{compCode,            mode=IN, jdbcType=NUMERIC},
 									   #{branchCode,          mode=IN, jdbcType=NUMERIC},
 									   #{userId,       	      mode=IN, jdbcType=VARCHAR},
								       #{tellerCode,          mode=IN, jdbcType=NUMERIC},
								       #{batchNo,             mode=IN, jdbcType=NUMERIC},
								       #{reverseCreate,       mode=IN, jdbcType=VARCHAR},
								       #{defaultTrxType,      mode=IN, jdbcType=NUMERIC},
								       #{selectedTrxType,     mode=IN, jdbcType=NUMERIC},
								       #{systemDate,          mode=IN, jdbcType=TIMESTAMP},
								       #{checkClosedTrxDate,  mode=IN, jdbcType=VARCHAR},
								       #{openExceptionReport, mode=OUT, jdbcType=VARCHAR},
								       #{errorCode,       	  mode=OUT, jdbcType=NUMERIC},
								       #{errorType,           mode=OUT, jdbcType=VARCHAR},
								       #{errorMessage,        mode=OUT, jdbcType=VARCHAR}  )  }
	</select>

	
	<select id="checkPendingDues" parameterType="accountSC" statementType="CALLABLE">
	{ CALL P_CHECK_PENDING_DUES(#{compCode,        		mode=IN, 	jdbcType=NUMERIC},
							   #{branchCode,      		mode=IN, 	jdbcType=NUMERIC},
						       #{baseCurrencyCode,      mode=IN, 	jdbcType=NUMERIC},
							   #{userId,       	  		mode=IN, 	jdbcType=VARCHAR},
						       #{runningDate,         	mode=IN, 	jdbcType=DATE},
						       #{brCode,    			mode=IN, 	jdbcType=NUMERIC},
						       #{currencyCode,  		mode=IN, 	jdbcType=NUMERIC},
						       #{glCode, 				mode=IN, 	jdbcType=NUMERIC},
						       #{cifCode,      			mode=IN, 	jdbcType=NUMERIC},
						       #{slNbr, 				mode=IN, 	jdbcType=NUMERIC},
						       #{flag,       			mode=IN, 	jdbcType=VARCHAR},
						       #{errorCode,       		mode=OUT, 	jdbcType=NUMERIC},
						       #{errorType,    			mode=OUT, 	jdbcType=VARCHAR}  )}
	</select>
	
	
	
	<select id="returnDuesAmountAcc" parameterType="duesManagementSC" statementType="CALLABLE">
	{ CALL P_DUES_AMOUNT_ACC(#{compCode,        		mode=IN, 	jdbcType=NUMERIC},
							   #{branchCode,      		mode=IN, 	jdbcType=NUMERIC},
						       #{baseCurrencyCode,      mode=IN, 	jdbcType=NUMERIC},
						       #{runningDate,         	mode=IN, 	jdbcType=DATE},
						       #{debitAccBr,    		mode=IN, 	jdbcType=NUMERIC},
						       #{debitAccCy,  			mode=IN, 	jdbcType=NUMERIC},
						       #{debitAccGL, 			mode=IN, 	jdbcType=NUMERIC},
						       #{debitAccCIF,      		mode=IN, 	jdbcType=NUMERIC},
						       #{debitAccSL, 			mode=IN, 	jdbcType=NUMERIC},
						       #{dueStatus,       		mode=IN, 	jdbcType=NUMERIC},
						       #{action,       			mode=IN, 	jdbcType=VARCHAR},
						       #{tellerCode,       		mode=IN, 	jdbcType=NUMERIC},
						       #{dueCode,       		mode=OUT, 	jdbcType=NUMERIC},
						       #{errorCode,       		mode=OUT, 	jdbcType=NUMERIC},
						       #{errorMessage,    		mode=OUT, 	jdbcType=VARCHAR}  )}
	</select>
	
    <select id="returnCheckAmountAccBalance" parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL P_RET_CHECK_AMOUNT(  #{compCode, 					mode=IN,  jdbcType=NUMERIC},
								#{branchCode,					mode=IN,  jdbcType=NUMERIC},
								#{trsNo ,						mode=IN,  jdbcType=NUMERIC },
								#{tellerCode ,					mode=IN,  jdbcType=NUMERIC},
								#{valueDate,					mode=IN,  jdbcType=DATE},
								#{ivCrud,						mode=IN,  jdbcType=VARCHAR },
								#{baseCurrencyCode,		 		mode=IN,  jdbcType=NUMERIC},
								#{reason,						mode=IN,  jdbcType=VARCHAR },
								#{runningDate ,					mode=IN,  jdbcType=TIMESTAMP },
								#{overDrawnAmountFr,			mode=OUT, jdbcType=NUMERIC},
								#{errType,						mode=OUT, jdbcType=VARCHAR },
								#{errorCode ,					mode=OUT, jdbcType=NUMERIC},
								#{errorMessage ,				mode=OUT, jdbcType=VARCHAR} )}
		                   	
	</select>
	
	  <select id="returnProductCharges" parameterType="trxMgntChargesSC" statementType="CALLABLE">
    { CALL P_RET_GET_PRODUCT_CHARGES(	#{compCode, 				mode=IN, jdbcType=NUMERIC},
										#{branchCode,				mode=IN, jdbcType=NUMERIC},
										#{productName,				mode=IN, jdbcType=VARCHAR},
										#{entityCode,				mode=IN, jdbcType=NUMERIC},
										#{trsAcBr,					mode=IN, jdbcType=NUMERIC},
										#{trsAcCy,					mode=IN, jdbcType=NUMERIC},
										#{trsAcGl,					mode=IN, jdbcType=NUMERIC},
										#{trsAcCif,					mode=IN, jdbcType=NUMERIC},
										#{trsAcSl,					mode=IN, jdbcType=NUMERIC},
										#{chqIssueType,				mode=IN, jdbcType=VARCHAR},
										#{leaves,					mode=IN, jdbcType=NUMERIC},
										#{entityTypeCode,			mode=IN, jdbcType=NUMERIC},
										#{chequeType,				mode=IN, jdbcType=NUMERIC},
										#{cashAccount,				mode=IN, jdbcType=VARCHAR},
										#{actionType,				mode=IN, jdbcType=VARCHAR},
										#{requestDate,				mode=IN, jdbcType=DATE},
										#{userId,					mode=IN, jdbcType=VARCHAR},
										#{schema,					mode=OUT, jdbcType=NUMERIC},
										#{trxType,					mode=OUT, jdbcType=NUMERIC},
										#{destroyCharges,			mode=OUT, jdbcType=NUMERIC},
										#{cancelSchema,				mode=OUT, jdbcType=NUMERIC},
										#{submitSchema,				mode=OUT, jdbcType=NUMERIC},
										#{type,   					mode=OUT, jdbcType=VARCHAR},
										#{oldSchema,		  		mode=OUT, jdbcType=NUMERIC},
										#{oldDestroyCharges,	  	mode=OUT, jdbcType=NUMERIC},
										#{oldCancelSchema,	  		mode=OUT, jdbcType=NUMERIC},
										#{oldSubmitSchema,	  		mode=OUT, jdbcType=NUMERIC},
										#{error,					mode=OUT, jdbcType=NUMERIC},
										#{errorMessage,				mode=OUT, jdbcType=VARCHAR})}
		                   	
	</select>
	
	<!-- jihane TP82894 - IIAB080110 - Dues Available Balance; -->
	 <select id="insertCtsDues" parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL P_RET_INSERT_CTS_DUES(   #{compCode,            		    mode=IN,  jdbcType=NUMERIC},
									#{branchCode, 					mode=IN,  jdbcType=NUMERIC},
									#{userId,     					mode=IN,  jdbcType=VARCHAR },
									#{systemDate, 					mode=IN,  jdbcType=DATE},
									#{appName,    					mode=IN,  jdbcType=VARCHAR },
									#{duesCollectionType,			mode=IN,  jdbcType=VARCHAR },
									#{duesPaymentMethod, 			mode=IN,  jdbcType=VARCHAR },
									#{trsAcBr,   					mode=IN,  jdbcType=NUMERIC},
									#{trsAcCy,   					mode=IN,  jdbcType=NUMERIC},
									#{trsAcGl,   					mode=IN,  jdbcType=NUMERIC},
									#{trsAcCif,  					mode=IN,  jdbcType=NUMERIC},
									#{trsAcSl,   					mode=IN,  jdbcType=NUMERIC},
									#{toTrsAcBr,    				mode=IN,  jdbcType=NUMERIC},
									#{toTrsAcCy,    				mode=IN,  jdbcType=NUMERIC},
									#{toTrsAcGl,    				mode=IN,  jdbcType=NUMERIC},
									#{toTrsAcCif,   				mode=IN,  jdbcType=NUMERIC},
									#{toTrsAcSl,    				mode=IN,  jdbcType=NUMERIC},
									#{branchCode,   				mode=IN,  jdbcType=NUMERIC},
									#{trsNo,               			mode=IN,  jdbcType=NUMERIC},
									#{totalDuesFCcharge,   			mode=IN,  jdbcType=NUMERIC},
									#{totalCVcharge,       			mode=IN,  jdbcType=NUMERIC},
									#{duesRemainingCharge, 			mode=IN,  jdbcType=NUMERIC},  
									#{chargeSchema,        			mode=IN,  jdbcType=NUMERIC},
									#{duesSubOperation,    			mode=IN,  jdbcType=VARCHAR },
									#{trsType,     					mode=IN,  jdbcType=VARCHAR },
									#{cbInd,       					mode=IN,  jdbcType=VARCHAR },
									#{exchRate,    					mode=IN,  jdbcType=NUMERIC},
									#{chargeBriefNameEng,  			mode=IN,  jdbcType=VARCHAR },
									#{chargeBriefNameArab, 			mode=IN,  jdbcType=VARCHAR },
									#{batchNo,             			mode=IN,  jdbcType=NUMERIC},
									#{serialNo,       				mode=IN,  jdbcType=NUMERIC},
									#{duesInd,        				mode=IN,  jdbcType=VARCHAR },
									#{entityType,     				mode=IN,  jdbcType=VARCHAR },
									#{entityCode,     				mode=IN,  jdbcType=NUMERIC},
									#{vatCVAmount,					mode=IN,  jdbcType=NUMERIC},
									#{vatFCAmount,					mode=IN,  jdbcType=NUMERIC},
									#{chAcBr,    					mode=IN,  jdbcType=NUMERIC},
									#{chAcCy,     					mode=IN,  jdbcType=NUMERIC},
									#{chAcGl,     					mode=IN,  jdbcType=NUMERIC},
									#{chAcCif,     					mode=IN,  jdbcType=NUMERIC},
									#{chAcSl,     					mode=IN,  jdbcType=NUMERIC},
									#{vatCode,     					mode=IN,  jdbcType=NUMERIC},
									#{lineNo,     					mode=INOUT,  jdbcType=NUMERIC},
									#{errorCode,      				mode=OUT, jdbcType=NUMERIC},
									#{errorMessage,                 mode=OUT, jdbcType=VARCHAR}  )}
		                   	
	</select>
	
	 <select id="launchBatchSaveAs" 	parameterType="ctstrsUploadSC" statementType="CALLABLE">
			    { CALL P_RET_BATCH_DUPLICATE_PROCESS(#{userId, 		   mode=IN,  jdbcType=VARCHAR},
			                               		#{compCode, 	 	   mode=IN,  jdbcType=NUMERIC},
			                               		#{branchCode,	 	   mode=IN,  jdbcType=NUMERIC},
			                               		#{batchNo,	 	       mode=IN,  jdbcType=NUMERIC},
			                               		#{fileType,	 	       mode=IN,  jdbcType=NUMERIC},
			                               		#{systemDate,          mode=IN,  jdbcType=DATE },
			                               		#{errorCode,	       mode=OUT, jdbcType=NUMERIC},
			                               		#{errorMessage,	       mode=OUT, jdbcType=VARCHAR}                              		
			                               		)}  
	</select>



<sql id="dropBATCH_VALIDATION_TMP">
		IF OBJECT_ID('#BATCH_VALIDATION_TMP') IS NOT NULL
		BEGIN
			DROP TABLE #BATCH_VALIDATION_TMP
		END
</sql>
<sql id="createBATCH_VALIDATION_TMP">
		CREATE TABLE #BATCH_VALIDATION_TMP 
		(
			                        USER_ID VARCHAR(15)  	NULL,
									COMP_FROM_FILE NUMERIC(4)    NULL,
									BRANCH_FROM_FILE NUMERIC(4)    NULL,
									ADDITIONAL_REFERENCE VARCHAR(50)  	NULL,
									DETAIL_STATUS  VARCHAR(1)  	NULL,
									DR_AC_BR NUMERIC(4)    NULL,
									DR_AC_CIF NUMERIC(8)    NULL,
									DR_AC_CY NUMERIC(3)    NULL,
									DR_AC_GL NUMERIC(6)    NULL,
									DR_AC_SL NUMERIC(3)    NULL,
									FROM_ADD_REF VARCHAR(40)  	NULL,
									CR_AC_BR NUMERIC(4)    NULL,
									CR_AC_CIF NUMERIC(8)    NULL,
									CR_AC_CY NUMERIC(3)    NULL,
									CR_AC_GL NUMERIC(6)    NULL,
									CR_AC_SL NUMERIC(3)    NULL,
									TO_ADD_REF VARCHAR(40)  	NULL,
									DEALER_NNE NUMERIC(7)    NULL,
									AMOUNT NUMERIC(20,3)    NULL,
									CHQ_NO NUMERIC(20)    NULL,
									CARD_NO VARCHAR(20)  	NULL,
									ADDITIONAL_NUMBER VARCHAR(40)  	NULL,
									BR_CODE NUMERIC(4)  	NULL,
									TRS_SIGN VARCHAR(1)  	NULL,
									ACCEPTOR_TERM_ID VARCHAR(16)  	NULL,
									AUTH_CODE VARCHAR(10)  	NULL,
									CHQ_FLAG VARCHAR(1)  	NULL,
									CHARGE_AMOUNT_1 NUMERIC(20,3)    NULL,
									ACC_CHARGE_AMOUNT_1 NUMERIC(20,3)    NULL,
									CHQ_TYPE VARCHAR(5)  	NULL,
									TRS_CY NUMERIC(3)    NULL,
									BANK_CIF NUMERIC(8)    NULL,
									INTERNAL_ORDER_NO NUMERIC(12)    NULL,
									INITIAL_AMOUNT NUMERIC(20,3)    NULL,
									DETAIL_PROCESS_STATUS VARCHAR(1)  	NULL,
									SERIAL_NO NUMERIC(12,0)    NULL,
									BRANCH_CODE NUMERIC(4)    NULL,
									TRS_AC_AMOUNT NUMERIC(20,3)    NULL,
									CR_DR_FOREX VARCHAR(1)  	NULL,
									CHQ_NO_STR VARCHAR(20)  	NULL,
									IS_AMENDED VARCHAR(1)  	NULL,                     
									COUNT_DUPLIACTE_OPERATION NUMERIC(6)    NULL,
									COUNT_COMPANY_VALID NUMERIC(6)    NULL,
									COUNT_BRANCH_VALID NUMERIC(6)    NULL,
									COUNT_ATM_VALID NUMERIC(6)    NULL,
									COUNT_ATM_VALID_TIME NUMERIC(6)    NULL,
									COUNT_ATM_VALID_DATE NUMERIC(6)    NULL,
									DEBIT_ACCOUNT_STATUS VARCHAR(1)  	NULL,
									CREDIT_ACCOUNT_STATUS  VARCHAR(1)  	NULL,
									CREDIT_ACCOUNT_CATEGORY VARCHAR(1)  	NULL,
									DEBIT_ACCOUNT_CATEGORY VARCHAR(1)  	NULL,
									KYC_COMPLETED_CREDIT_CIF VARCHAR(1)  	NULL,
									KYC_COMPLETED_DEBIT_CIF VARCHAR(1)  	NULL,
									DEBIT_CIF_STATUS VARCHAR(1)  	NULL,
									CREDIT_CIF_STATUS VARCHAR(1)  	NULL,
									COUNT_UNRECEIVED_IMAGE_CHECK NUMERIC(6)    NULL,                     
									COUNT_CHECK_WITHDRAWAL_AUTH NUMERIC(6)    NULL,
									COUNT_CHECK_CONTESTED_AMOUNT NUMERIC(6)    NULL,
									COUNT_CHECK_CONTESTED_DATE NUMERIC(6)    NULL,
									WITHDRAWAL_STATUS VARCHAR(1)  	NULL,
									MULTI_TRANSFER_FORCIFBANK NUMERIC(6)    NULL,
									CHQ_NO_WITHOUT_CY_LOST NUMERIC(20)    NULL,
									VALIDATION_TRX_TYPE_CTSTRS NUMERIC(3)    NULL,
									VALID_TRX_TYPE_CHQ_VALID VARCHAR(1)  	NULL,
									VALID_TRX_TYPE_PROC_DRAWN VARCHAR(1)  	NULL,
									CHQ_NO_WITHOUT_CY  NUMERIC(20)    NULL,
									CHQ_CTSCONTROL VARCHAR(1)  	NULL,
									TRX_TYPE NUMERIC(3)    NULL ,
									CHQ_DATE DATETIME    NULL
		)
	</sql>

<sql id="dropBATCH_VALIDATED_SERIALS">
		IF OBJECT_ID('#BATCH_VALIDATED_SERIALS') IS NOT NULL
		BEGIN
			DROP TABLE #BATCH_VALIDATED_SERIALS
		END
</sql>


<sql id="createBATCH_VALIDATED_SERIALS">
		CREATE TABLE #BATCH_VALIDATED_SERIALS 
		(
			      COMP_CODE NUMERIC(4)    NULL,
                  BRANCH_CODE NUMERIC(4)    NULL,
                  BATCH_NO NUMERIC(6)    NULL,
                  SERIAL_NO NUMERIC(12,0)    NULL,
                  USER_ID VARCHAR(15)    NULL,
                  NEW_STATUS VARCHAR(1)    NULL,
                  ACTION_TYPE VARCHAR(1)    NULL,
                  ACTION_CODE NUMERIC(3)    NULL,
                  TRX_TYPE NUMERIC(3)    NULL,
                  CREATE_NEW VARCHAR(1)    NULL,
                  IS_PROTECTED VARCHAR(1)    NULL,
                  USE_SUSP_ACC VARCHAR(1)    NULL,
                  NUM_OF_DAYS NUMERIC(3)    NULL
		)
	</sql>
	
	<sql id="dropBATCH_SERIALS_VALID">
		IF OBJECT_ID('#BATCH_SERIALS_VALID_TMP') IS NOT NULL
		BEGIN
			DROP TABLE #BATCH_SERIALS_VALID_TMP
		END
</sql>
<sql id="createBATCH_SERIALS_VALID">
	CREATE TABLE #BATCH_SERIALS_VALID_TMP(
									USER_ID VARCHAR(8)  	NULL,
									COMP_CODE NUMERIC(4)    NULL,
									BRANCH_CODE NUMERIC(4)    NULL,
									SERIAL_NO NUMERIC(12,0)    NULL,
									BATCH_NO NUMERIC(6)    NULL 
									    )
	</sql>
	
<sql id="dropBATCH_SERIALS_PRC">
		IF OBJECT_ID('#BATCH_SERIALS_PRC_TMP') IS NOT NULL
		BEGIN
			DROP TABLE #BATCH_SERIALS_PRC_TMP
		END
</sql>
<sql id="createBATCH_SERIALS_PRC">
	CREATE TABLE #BATCH_SERIALS_PRC_TMP(
									USER_ID VARCHAR(8)  	NULL,
									COMP_CODE NUMERIC(4)    NULL,
									BRANCH_CODE NUMERIC(4)    NULL,
									SERIAL_NO NUMERIC(12,0)    NULL,
									BATCH_NO NUMERIC(6)    NULL 
									    )
	</sql>


<update id ="createBatchProcessHashTables">
		<include refid="coreCommonProcedureMapper.createHOF_TMP"/>
		<include refid="coreCommonProcedureMapper.createHUNTING_TMP"/>	
		<include refid="createCTS_DUES_TEMP"/>
		<include refid="coreCommonProcedureMapper.createBATCH_VALIDATION_TMP"/>
		<include refid="coreCommonProcedureMapper.createBATCH_VALIDATED_SERIALS"/>
		<include refid="coreCommonProcedureMapper.createBATCH_SERIALS_VALID"/>	
		<include refid="coreCommonProcedureMapper.createBATCH_SERIALS_PRC"/>	
		<include refid="coreCommonProcedureMapper.beginTans"/>		
</update>
		
		
<update id ="dropBatchProcessHashTables">
		<include refid="coreCommonProcedureMapper.dropHOF_TMP"/>
		<include refid="coreCommonProcedureMapper.dropHUNTING_TMP"/>
		<include refid="dropCTS_DUES_TEMP"/>
		<include refid="coreCommonProcedureMapper.dropBATCH_VALIDATION_TMP"/>
		<include refid="coreCommonProcedureMapper.dropBATCH_VALIDATED_SERIALS"/>
		<include refid="coreCommonProcedureMapper.dropBATCH_SERIALS_VALID"/>
		<include refid="coreCommonProcedureMapper.dropBATCH_SERIALS_PRC"/>
</update>

<update id ="createBatchValidHashTables">
		<include refid="coreCommonProcedureMapper.createBATCH_VALIDATION_TMP"/>
		<include refid="coreCommonProcedureMapper.ctsChargesUnifiedCreation"/>
		<include refid="coreCommonProcedureMapper.createBATCH_VALIDATED_SERIALS"/>
		<include refid="coreCommonProcedureMapper.createBATCH_SERIALS_VALID"/>
		<include refid="coreCommonProcedureMapper.createBATCH_SERIALS_PRC"/>		
		<include refid="coreCommonProcedureMapper.beginTans"/>		
</update>
	
<update id ="dropBatchValidHashTables">
		<include refid="coreCommonProcedureMapper.dropBATCH_VALIDATION_TMP"/>
		<include refid="coreCommonProcedureMapper.dropBATCH_VALIDATED_SERIALS"/>
		<include refid="coreCommonProcedureMapper.dropBATCH_SERIALS_VALID"/>
		<include refid="coreCommonProcedureMapper.dropBATCH_SERIALS_PRC"/>
		<include refid="coreCommonProcedureMapper.dropCtsChargesUnified"/>
</update>
	
	<select id="returnCheckAllowedGls" parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL P_RET_CHECK_ALLOWED_GLS(  #{compCode, 				mode=IN,  jdbcType=NUMERIC},
                                 #{branchCode, 				    mode=IN,  jdbcType=NUMERIC},
								#{trxType,						mode=IN,  jdbcType=NUMERIC},
								#{trsAcGl,						mode=IN,  jdbcType=NUMERIC},
								#{sign,							mode=IN,  jdbcType=VARCHAR},
								#{errType,						mode=OUT, jdbcType=VARCHAR},
								#{errorCode ,					mode=OUT, jdbcType=NUMERIC},
								#{errorMessage ,				mode=OUT, jdbcType=VARCHAR} )}
		                   	
	</select>
	
	<select id="returnCheckAllowedCIFs" parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL P_RET_CHECK_ALLOWED_CIF_TYPES(  #{compCode, 			mode=IN,  jdbcType=NUMERIC},
                                 #{branchCode, 				    mode=IN,  jdbcType=NUMERIC},
								#{trxType,						mode=IN,  jdbcType=NUMERIC},
								#{trsAcCif,						mode=IN,  jdbcType=NUMERIC},
								#{errType,						mode=OUT, jdbcType=VARCHAR},
								#{errorCode ,					mode=OUT, jdbcType=NUMERIC},
								#{errorMessage ,				mode=OUT, jdbcType=VARCHAR} )}
		                   	
	</select>
	
	<select id="returnBicCode" parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL P_RET_GET_BIC_CODE(  #{compCode, 					mode=IN,  jdbcType=NUMERIC},
								#{branchCode,					mode=IN,  jdbcType=NUMERIC},
								#{bankCif,						mode=IN,  jdbcType=NUMERIC},
								#{bankBicCode,					mode=IN,  jdbcType=VARCHAR},
								#{bicCode,						mode=OUT, jdbcType=VARCHAR},								
								#{errType,						mode=OUT, jdbcType=VARCHAR},
								#{errorCode,					mode=OUT, jdbcType=NUMERIC},
								#{errorMessage,					mode=OUT, jdbcType=VARCHAR} )}
		                   	
	</select>
	
	<select id="validateProviderRef" parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL P_RET_VALIDATE_PROVIDER_REF(  #{compCode, 			mode=IN,  jdbcType=NUMERIC},
								#{branchCode,					mode=IN,  jdbcType=NUMERIC},
								#{trsNo,						mode=IN,  jdbcType=NUMERIC},
								#{trxType,						mode=IN,  jdbcType=NUMERIC},
								#{soReference,					mode=IN,  jdbcType=VARCHAR},
								#{bankCif,						mode=IN,  jdbcType=NUMERIC},
								#{trsCy,						mode=IN,  jdbcType=NUMERIC},
								#{typeCode,						mode=OUT, jdbcType=NUMERIC},								
								#{errType,						mode=OUT, jdbcType=VARCHAR},
								#{errorCode,					mode=OUT, jdbcType=NUMERIC},
								#{errorMessage,					mode=OUT, jdbcType=VARCHAR} )}
		                   	
	</select>
	
	<select id="returnRequestCharges" parameterType="trxMgntChargesSC" statementType="CALLABLE">
    { CALL P_RET_REQUEST_CHARGES(	#{compCode, 				mode=IN, jdbcType=NUMERIC},
									#{branchCode,				mode=IN, jdbcType=NUMERIC},
									#{entityTypeCode,			mode=IN, jdbcType=NUMERIC},
									#{requestCy,				mode=IN, jdbcType=NUMERIC},
									#{deductAcBr,				mode=IN, jdbcType=NUMERIC},
									#{deductAcCy,				mode=IN, jdbcType=NUMERIC},
									#{deductAcGl,				mode=IN, jdbcType=NUMERIC},
									#{deductAcCif,				mode=IN, jdbcType=NUMERIC},
									#{deductAcSl,				mode=IN, jdbcType=NUMERIC},
									#{userId,					mode=IN, jdbcType=VARCHAR},
									#{entityCode,				mode=IN, jdbcType=NUMERIC},
									#{autoApprove,				mode=IN, jdbcType=VARCHAR},
									#{requestDate,				mode=IN, jdbcType=DATE},
									#{payType,					mode=IN, jdbcType=VARCHAR},
									#{amount,					mode=IN, jdbcType=NUMERIC},
									#{totalAmount,				mode=OUT, jdbcType=NUMERIC},
									#{error,					mode=OUT, jdbcType=NUMERIC},
									#{errorMessage,				mode=OUT, jdbcType=VARCHAR})}
	</select>
	
	<select id="returnAmountByRate" parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL P_RET_GET_AMOUNT_RATE(	
                                 #{compCode, 				mode=IN, jdbcType=NUMERIC},
                                 #{branchCode, 				mode=IN, jdbcType=NUMERIC},
                                 #{trsAcCy, 				mode=IN, jdbcType=NUMERIC},
                                 #{trsCy, 					mode=IN, jdbcType=NUMERIC},
                                 #{systemDate, 				mode=IN, jdbcType=DATE},
                                 #{crDrForex, 				mode=IN, jdbcType=VARCHAR},
                                 #{trsType, 				mode=IN, jdbcType=VARCHAR},
                                 #{trxType, 				mode=IN, jdbcType=NUMERIC},
                                 #{cash, 					mode=IN, jdbcType=NUMERIC},
                                 #{acFromCyUnits, 			mode=IN, jdbcType=NUMERIC},
                                 #{acFromCyMultiDiv, 		mode=IN, jdbcType=VARCHAR},
                                 #{acToCyMultiDiv, 			mode=IN, jdbcType=VARCHAR},
                                 #{acToCyUnits, 			mode=IN, jdbcType=NUMERIC},
                                 #{trsAcCif, 				mode=IN, jdbcType=NUMERIC},
                                 #{trsAcGl, 				mode=IN, jdbcType=NUMERIC},
                                 #{screenSrc, 				mode=IN, jdbcType=VARCHAR},
                                 #{trxAmount, 				mode=INOUT, jdbcType=NUMERIC},
                                 #{accAmount, 				mode=INOUT, jdbcType=NUMERIC},
                                 #{cvAmount, 				mode=INOUT, jdbcType=NUMERIC},
                                 #{exchRate, 				mode=OUT, jdbcType=NUMERIC},
                                 #{multiDivInd, 			mode=OUT, jdbcType=VARCHAR},
                                 #{errorCode, 				mode=OUT, jdbcType=NUMERIC},
                                 #{errorMessage, 			mode=OUT, jdbcType=VARCHAR} )}
	</select>
	
	<select id="generateIbisCounter" 	parameterType="ibisCounterVO" statementType="CALLABLE">
			    { CALL P_N_TRX_GET_OPNO ( 	#{COMP_CODE, 	 	   mode=IN,  jdbcType=NUMERIC},
			                             	#{BRANCH_CODE,	 	   mode=IN,  jdbcType=NUMERIC},
			                             	#{TRX_TYPE,	 	   	   mode=IN,  jdbcType=VARCHAR},
			                             	#{LAST_NO,	 	       mode=OUT,  jdbcType=NUMERIC},
			                             	#{DESCRIPTION,	       mode=OUT, jdbcType=VARCHAR}                              		
			                             )} 
	</select>


	<select id="callSoundexProcess" parameterType="blackListIntSourceSC" statementType="CALLABLE" >
	    { CALL P_UPLOAD_BLACKLIST_AML(  #{as_source, mode=IN,jdbcType=VARCHAR},
	    							#{compCode, mode=IN,jdbcType=NUMERIC},
	    							#{OS_ERROR_CODE, mode=OUT,jdbcType=NUMERIC},
	    							#{OS_ERROR_TEXT, mode=OUT,jdbcType=VARCHAR})
	    							}
	</select>
	
	<select id="callProcRetGetPenaltyDetailGen" 	parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL P_RET_GET_PENALTY_DETAIL_GEN(	
                                 #{compCode, 				mode=IN, jdbcType=NUMERIC},
                                 #{branchCode, 				mode=IN, jdbcType=NUMERIC},
                                 #{trsAcBr, 				mode=IN, jdbcType=NUMERIC},
                                 #{trsAcCy, 				mode=IN, jdbcType=NUMERIC},
                                 #{trsAcGl, 				mode=IN, jdbcType=NUMERIC},
                                 #{trsAcCif, 				mode=IN, jdbcType=NUMERIC},
                                 #{trsAcSl, 				mode=IN, jdbcType=NUMERIC},
                                 #{systemDate, 				mode=IN, jdbcType=DATE},
                                 #{type, 					mode=IN, jdbcType=VARCHAR},
                                 #{adecBal, 				mode=OUT, jdbcType=NUMERIC},
                                 #{adecProfit, 				mode=OUT, jdbcType=NUMERIC},
                                 #{adecPenalty, 			mode=OUT, jdbcType=NUMERIC},
                                 #{adecNetProfit, 			mode=OUT, jdbcType=NUMERIC},
                                 #{asOverPenalty, 			mode=OUT, jdbcType=VARCHAR},
                                 #{PRFT_BR, 				mode=OUT, jdbcType=NUMERIC},
                                 #{PRFT_CY, 				mode=OUT, jdbcType=NUMERIC},
                                 #{PRFT_GL, 				mode=OUT, jdbcType=NUMERIC},
                                 #{PRFT_CIF, 				mode=OUT, jdbcType=NUMERIC},
                                 #{PRFT_SL, 				mode=OUT, jdbcType=NUMERIC},
                                 #{PENALTY_GL, 				mode=INOUT, jdbcType=NUMERIC},
                                 #{PENALTY_CIF, 			mode=OUT, jdbcType=NUMERIC},
                                 #{PENALTY_SL, 				mode=OUT, jdbcType=NUMERIC},
                                 #{ACCR_GL, 				mode=OUT, jdbcType=NUMERIC},
                                 #{ACCR_CIF, 				mode=OUT, jdbcType=NUMERIC},
                                 #{ACCR_SL, 				mode=OUT, jdbcType=NUMERIC},
                                 #{tax, 					mode=OUT, jdbcType=NUMERIC},
                                 #{taxPtCv,					mode=OUT, jdbcType=NUMERIC},
                                 #{commissionFC, 			mode=OUT, jdbcType=NUMERIC},
                                 #{chargeFC, 				mode=OUT, jdbcType=NUMERIC},
                                 #{errorCode, 				mode=OUT, jdbcType=NUMERIC},
                                 #{errorMessage, 			mode=OUT, jdbcType=VARCHAR} )}
	</select>	
	
	
		<!-- PKG_TEMPLATE_TFA used to CSM request  -->
	<select id="pkgTemplateTfa" parameterType="com.path.vo.common.requests.csm.CtsRequestSC" statementType="CALLABLE"   >
	{ CALL 
	<choose><when test="isSybase == 1"> PKG_TEMPLATE_TFA </when>
      			<otherwise> PKG_TFA_AUTO_TFSACCOUNT.P_TEMPLATE_TFA </otherwise>
      		 </choose>	
		( #{compCode, 	 	      mode=IN,jdbcType=NUMERIC},
	                              #{branchCode,	 	       mode=IN,jdbcType=NUMERIC},
				                  #{trxType, 	 	       mode=IN,jdbcType=NUMERIC},
				                  #{lcType,		 	       mode=IN,jdbcType=VARCHAR},
				                  #{trxNbr,			       mode=IN,jdbcType=NUMERIC},
				                  #{status, 		       mode=IN,jdbcType=VARCHAR},
				                  #{userId, 	    	   mode=IN,jdbcType=VARCHAR},
				                  #{runningDate, 	       mode=IN,jdbcType=DATE},
				                  #{appName, 	           mode=IN,jdbcType=VARCHAR},
				                  #{reinstateDocType, 	   mode=IN,jdbcType=VARCHAR},
				                  #{reinstateLinkedTrx,     mode=IN,jdbcType=VARCHAR},
				                  #{linkedTrxNbr,     		mode=IN,jdbcType=NUMERIC},
				                  #{globalConfirmation,     mode=IN,jdbcType=VARCHAR},
				                  #{errorType,		        mode=OUT,jdbcType=VARCHAR},
				                  #{errorCode,		        mode=OUT,jdbcType=NUMERIC},
								  #{errorMessage,	        mode=OUT,jdbcType=VARCHAR})}
	</select>
	
    <select id="callRetAccReactivation" parameterType="accountSC" statementType="CALLABLE">
    { CALL P_RET_ACC_REACTIVATION(  #{flag,					mode=IN,  jdbcType=VARCHAR },
    							#{compCode,					mode=IN,  jdbcType=NUMERIC},
								#{brCode,					mode=IN,  jdbcType=NUMERIC},
								#{currencyCode,				mode=IN,  jdbcType=NUMERIC },
								#{glCode,					mode=IN,  jdbcType=NUMERIC},
								#{cifCode,					mode=IN,  jdbcType=NUMERIC},
								#{slNbr,					mode=IN,  jdbcType=NUMERIC },
								#{runningDate,				mode=IN,  jdbcType=TIMESTAMP },
								#{userId,					mode=IN,  jdbcType=VARCHAR },
								#{flag2,					mode=IN,  jdbcType=VARCHAR },
								#{flag3,					mode=IN,  jdbcType=VARCHAR },
								#{errorCode,				mode=OUT, jdbcType=NUMERIC},
								#{errorMessage,				mode=OUT, jdbcType=VARCHAR} )}
		                   	
	</select>
	
	<select id="checkIISsalaryBlock" parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL P_RET_SALARY_IIS_BLOCK  (#{compCode, 		 mode=IN, jdbcType=NUMERIC},
									  #{branchCode,		 mode=IN, jdbcType=NUMERIC},
									  #{trxType ,mode=IN ,jdbcType=NUMERIC},
									  #{trsNo,			 mode=IN, jdbcType=NUMERIC},
									  #{runningDate,				mode=IN,  jdbcType=TIMESTAMP },
									  #{iisExists,	     mode=OUT, jdbcType=NUMERIC},
			                   		  #{errorCode,		 mode=OUT,jdbcType=NUMERIC},
			                   		  #{errorMessage, 	 mode=OUT,jdbcType=VARCHAR} )}  
	</select>
	
	<select id="lockUnlockSafeAccounts" parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL P_RET_LOCK_UNLOCK_SAFE_ACC   (#{compCode, 		 mode=IN, jdbcType=NUMERIC},
									 #{branchCode,		 mode=IN, jdbcType=NUMERIC},
									 #{trsNo,			 mode=IN, jdbcType=NUMERIC},
									 #{tellerCode,		 mode=IN, jdbcType=NUMERIC},
									 #{lockUnlockAccountsFlag,	mode=IN, jdbcType=VARCHAR},
									 #{ivCrud,			 mode=IN, jdbcType=VARCHAR},
									 #{trsAcBr,			 mode=IN, jdbcType=NUMERIC},
									 #{trsAcCy,			 mode=IN, jdbcType=NUMERIC},
									 #{trsAcGl,			 mode=IN, jdbcType=NUMERIC},
									 #{trsAcCif,		 mode=IN, jdbcType=NUMERIC},
									 #{trsAcSl,			 mode=IN, jdbcType=NUMERIC},
									 #{fromAccGmiFlag,	 mode=IN, jdbcType=VARCHAR},
									 #{fromAccSign,		 mode=IN, jdbcType=VARCHAR},
									 #{toTrsAcBr,		 mode=IN, jdbcType=NUMERIC},
									 #{toTrsAcCy,		 mode=IN, jdbcType=NUMERIC},
									 #{toTrsAcGl,		 mode=IN, jdbcType=NUMERIC},
									 #{toTrsAcCif,		 mode=IN, jdbcType=NUMERIC},
									 #{toTrsAcSl,		 mode=IN, jdbcType=NUMERIC},
									 #{toAccGmiFlag,	 mode=IN, jdbcType=VARCHAR},
									 #{toAccSign,		 mode=IN, jdbcType=VARCHAR},
									 #{overDrawnVoid,	 mode=IN, jdbcType=VARCHAR},
									 #{type,			 mode=IN, jdbcType=VARCHAR},
									 #{crDrForex,		 mode=IN, jdbcType=VARCHAR},
									 #{multiTrx,		 mode=IN, jdbcType=VARCHAR},
									 #{chqRelated,		 mode=IN, jdbcType=VARCHAR},
									 #{checkDataSys2,	 mode=IN, jdbcType=VARCHAR},
									 #{overrideUsrLevel, mode=IN, jdbcType=NUMERIC},
									 #{userLevel,		 mode=IN, jdbcType=NUMERIC},
									 #{safeApp,			 mode=IN, jdbcType=NUMERIC},
									 #{fromJava,		 mode=IN, jdbcType=VARCHAR},
									 #{amount,		     mode=IN, jdbcType=NUMERIC},
									 #{lockId,			 mode=INOUT, jdbcType=NUMERIC},
									 #{accForLockExists, mode=OUT, jdbcType=VARCHAR},
									 #{totalAccount, 	 mode=OUT, jdbcType=VARCHAR},
			                   		 #{errType, 		 mode=OUT,jdbcType=VARCHAR},
			                   		 #{errorCode,		 mode=OUT,jdbcType=NUMERIC},
			                   		 #{errorMessage, 	 mode=OUT,jdbcType=VARCHAR} )}  
	</select>
	
	<select id="checkOverDraft" parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL P_RET_CHECK_OVERDRAFT   (#{compCode, 		 mode=IN, jdbcType=NUMERIC},
									 #{branchCode,		 mode=IN, jdbcType=NUMERIC},
									 #{runningDate,		 mode=IN, jdbcType=DATE},
									 #{trsAcBr,		     mode=IN, jdbcType=NUMERIC},
									 #{trsAcCy,			 mode=IN, jdbcType=NUMERIC},
									 #{trsAcGl,			 mode=IN, jdbcType=NUMERIC},
									 #{trsAcCif,		 mode=IN, jdbcType=NUMERIC},
									 #{trsAcSl,			 mode=IN, jdbcType=NUMERIC},
									 #{type,			 mode=IN, jdbcType=VARCHAR},
									 #{crDrForex,		 mode=IN, jdbcType=VARCHAR},
									 #{chqRelated,		 mode=IN, jdbcType=VARCHAR},
									 #{multiTrx,	     mode=IN, jdbcType=VARCHAR},
									 #{fromAccSign,		 mode=IN, jdbcType=VARCHAR},
									 #{profitDeclGracePeriodNo,	  mode=IN, jdbcType=NUMERIC},
									 #{profitDeclGracePeriodFreq, mode=IN, jdbcType=VARCHAR},
									 #{odType,		     	  mode=IN, jdbcType=VARCHAR},
									 #{mousharakaIjra,		  mode=IN, jdbcType=VARCHAR},
									 #{ijraEndingPeriodicity, mode=IN, jdbcType=DATE},
									 #{limitExpDate,	      mode=IN, jdbcType=DATE},
									 #{colName,    			  mode=IN, jdbcType=VARCHAR},
									 #{globalConfirmation,    mode=IN, jdbcType=VARCHAR},
									 #{alertCifWatchList,     mode=OUT, jdbcType=VARCHAR},
									 #{alertIisOverdueInst,   mode=OUT, jdbcType=VARCHAR},
									 #{alertDidntDeclProfit,  mode=OUT, jdbcType=VARCHAR},
			                   		 #{errType, 		      mode=OUT, jdbcType=VARCHAR},
			                   		 #{errorCode,		      mode=OUT, jdbcType=NUMERIC},
			                   		 #{errorMessage, 	      mode=OUT, jdbcType=VARCHAR} )}  
	</select>

	<select id="processWithholding" parameterType="withholdingSC" statementType="CALLABLE">
    { CALL P_RET_WRAP_PROCESS_WITHHOLD(
									#{compCode, 		 	mode=IN, jdbcType=NUMERIC},
									#{branchCode,		 	mode=IN, jdbcType=NUMERIC},
									#{userId,			 	mode=IN, jdbcType=VARCHAR},
									#{taxRegulationID,		mode=IN, jdbcType=NUMERIC},
									#{processID,			mode=IN, jdbcType=NUMERIC},
									#{action,			 	mode=IN, jdbcType=VARCHAR},
									#{fromCif,	    		mode=IN, jdbcType=NUMERIC},  
									#{toCif,				mode=IN, jdbcType=NUMERIC},
									#{reference,			mode=IN, jdbcType=VARCHAR},
									#{runningDate,			mode=IN, jdbcType=TIMESTAMP},														
									#{errorCode,		 	mode=OUT,jdbcType=NUMERIC},
									#{errorMessage, 	 	mode=OUT,jdbcType=VARCHAR} )}  
	</select>
	
	
	<select id="checkUserLimtReq" parameterType="com.path.vo.common.requests.csm.CtsRequestSC" statementType="CALLABLE">
    { CALL P_RET_CHECK_USER_LIMITS_REQ( 	
		#{compCode ,mode=IN ,jdbcType=NUMERIC},
		#{branchCode ,mode=IN ,jdbcType=NUMERIC},
		#{userId ,mode=IN,jdbcType=VARCHAR },
		#{cifNo ,mode=IN,jdbcType=NUMERIC },
		#{requestType ,mode=IN,jdbcType=NUMERIC },
		#{balanceLimitRequest ,mode=OUT,jdbcType=NUMERIC },
		#{crud ,mode=OUT,jdbcType=VARCHAR },
		#{code ,mode=OUT,jdbcType=NUMERIC },
		#{trsType ,mode=OUT,jdbcType=VARCHAR },
		#{errorCode ,mode=OUT ,jdbcType=NUMERIC},
		#{errorType,mode=OUT,jdbcType=VARCHAR },	
		#{errorMessage ,mode=OUT ,jdbcType=VARCHAR} )}
	</select>
	
	<update id="dropCtsTrsTempFiltered" >
	   IF OBJECT_ID('#CTSTRS_TEMP_FILTERED') IS NOT NULL
		BEGIN
			DROP TABLE #CTSTRS_TEMP_FILTERED
		END
	</update>
	
	<update id="createCtsTrsTempFiltered" >
		CREATE TABLE #CTSTRS_TEMP_FILTERED(
			COMP_CODE   NUMERIC(4)  NOT NULL,
			BRANCH_CODE   NUMERIC(4)  NOT NULL,   
			TRS_TYPE   CHAR(1)  NOT NULL,
			CB_IND CHAR(1)  NOT NULL,
			TRS_NO NUMERIC(12) NOT NULL,
			STATUS  CHAR(1)  NOT NULL,
			VERIFY_STATUS VARCHAR(1) NULL,
			TRS_DATE DATETIME  NULL,
			VALUE_DATE DATETIME  NULL,
			RELEASE_DATE DATETIME  NULL,
			TRS_AC_BR NUMERIC(4,0) NULL,
			TRS_AC_CY NUMERIC(3) NULL,
			TRS_AC_GL NUMERIC(6) NULL,
			TRS_AC_CIF NUMERIC(8) NULL,
			TRS_AC_SL NUMERIC(3) NULL,
			AMOUNT NUMERIC(20,3) NULL,
			TRS_CY NUMERIC(3) NULL,
			CHQ_NUM NUMERIC(10) NULL,
			REMITTANCE_FR_NUM NUMERIC(10) NULL,
			REMITTANCE_TO_NUM NUMERIC(10) NULL,
			TRX_TYPE NUMERIC(3) NULL,
			CLEAR_AUTH_BY VARCHAR(8) NULL,
			DATE_CLEARED DATETIME  NULL,
			DATE_CLEAR_AUTH DATETIME  NULL,
			RECEIPT_NO NUMERIC(12) NULL, 
			REMITT_CY VARCHAR(1)  NULL,
			INSTRUCTIONS1 VARCHAR(40)  NULL,
			INSTRUCTIONS2 VARCHAR(40)  NULL,
			INSTRUCTIONS3 VARCHAR(40)  NULL,
			INSTRUCTIONS4 VARCHAR(40)  NULL,
			CV_AMOUNT NUMERIC(20,3)	NULL,
			CREATED_BY VARCHAR(8)  NULL,
			MODIFIED_BY VARCHAR(8)  NULL,
			TO_TRS_AC_GL NUMERIC(6) NULL,
			BANK_CIF_NAME VARCHAR(40) NULL,
			SO_REFERENCE VARCHAR(50) NULL,
			BENEF_ACC  VARCHAR(40)	NULL,
			TO_ACC_ADD_REF VARCHAR(35)	NULL,
			BANK_CIF  NUMERIC(8) 		NULL,
			ACC_ADDITIONAL_REFERENCE VARCHAR(35) NULL,
			DATE_UPDATED DATETIME NULL,
			ATM_REFERENCE   VARCHAR(50)  null,
			TO_TRS_AC_BR  NUMERIC(4,0)  NULL,
			TO_TRS_AC_CY  NUMERIC(3,0)  NULL,
			TO_TRS_AC_CIF  NUMERIC(8,0)  NULL,
			TO_TRS_AC_SL    NUMERIC(3,0)  NULL,
			DESTIN_COUNTRY  NUMERIC(3,0)  NULL,
			CORR_BANK       NUMERIC(8,0)  NULL,
			BENEF_BANK_BIC_CODE  VARCHAR(12)  NULL,
			BENEF_BANK    NUMERIC(8,0)  NULL)
	    
	    BEGIN TRANSACTION
	
	</update>

	
	<select id="defaultIntermBankBicCode" parameterType="trxMgntSC" statementType="CALLABLE">
    {CALL P_RET_DEFAULT_INTER_BIC(
        #{compCode ,mode=IN ,jdbcType=NUMERIC},
		#{branchCode ,mode=IN,jdbcType=NUMERIC },		
		#{userId ,mode=IN,jdbcType=VARCHAR },
		#{bankCif ,mode=IN,jdbcType=NUMERIC },
		#{benefBICCode ,mode=IN,jdbcType=VARCHAR},		
		#{trsCy ,mode=IN ,jdbcType=NUMERIC},
		#{intermBICCode ,mode=OUT,jdbcType=VARCHAR},	
    	#{errorCode ,mode=OUT ,jdbcType=NUMERIC},
		#{errorMessage	,mode=OUT ,jdbcType=VARCHAR}
    )
    }
	</select>
	
		
	<select id="copyAuthorizeSignatures" parameterType="cifSC" statementType="CALLABLE">
	    {CALL P_RET_COPY_AUTHORIZED_SIGN(
	        #{compCode ,mode=IN ,jdbcType=NUMERIC},
			#{branchCode ,mode=IN,jdbcType=NUMERIC },		
			#{cifCode ,mode=IN ,jdbcType=NUMERIC},
			#{cif_no ,mode=IN ,jdbcType=NUMERIC},
	    	#{errorCode ,mode=OUT ,jdbcType=NUMERIC},
			#{errorMessage	,mode=OUT ,jdbcType=VARCHAR}
	    )
	    }
	</select>
	
	<update id ="dropNonFinancialInfoTables">
		<include refid="coreCommonProcedureMapper.dropCtsDynBankCorrTmp" />
		<include refid="coreCommonProcedureMapper.dropCtsDynIntermediateBankTmp"/>
	</update>
	<update id ="createNonFinancialInfoTables">
		<include refid="coreCommonProcedureMapper.createCtsDynBankCorrTmp"/>
		<include refid="coreCommonProcedureMapper.createCtsDynIntermediateBankTmp"/>
		<include refid="coreCommonProcedureMapper.beginTans"/>
	</update>
	
	<update id ="createCtsTemp">
		<include refid="coreCommonProcedureMapper.ctsTempCreation"/>
		<include refid="coreCommonProcedureMapper.beginTans"/>
	</update>
	
	<update id ="dropCtsTemp">
		<include refid="coreCommonProcedureMapper.dropCtsTempHashTable"/>
	</update>
	
	<sql id="dropCtsTempHashTable">
		IF OBJECT_ID('#CTS_TEMP') IS NOT NULL
		BEGIN
			DROP TABLE #CTS_TEMP
		END
	</sql>
	
	
	<sql id="ctsTempCreation">
		CREATE TABLE #CTS_TEMP
		(
			COMP_CODE 				NUMERIC(4) NULL,
			BRANCH_CODE 			NUMERIC(4) NULL,
			CIF_NO 					NUMERIC(8) NULL,
			ENG_COMENT 				VARCHAR(300) NULL,
			ARAB_COMENT 			VARCHAR(300) NULL,
			COMMON_DESC_ENG 		VARCHAR(150) NULL,
			COMMON_DESC_ARAB		VARCHAR(150) NULL,
			MEMO_CODE 				NUMERIC(4) NULL,
			STATUS 					VARCHAR(1) NULL,
			FROM_DATE 				DATETIME NULL,
			DATE_TO 				DATETIME NULL,
			LAST_REVIEW_NO 			NUMERIC(3) NULL,
			DATE_CREATED 			DATETIME NULL,
			CREATED_BY 				VARCHAR(8) NULL, 
			DATE_APPROVED 			DATETIME NULL,
			APPROVED_BY 			VARCHAR(8) NULL,
			COND_AUTOMATION_CODE 	NUMERIC(4) NULL ,
			LINE_NUM  				NUMERIC(12) IDENTITY
		)
	</sql>
	
	<select id="callProcRetProcessAutoAllocation" parameterType="trxMgntSC" statementType="CALLABLE">
    {
    	CALL P_RET_PROCESS_AUTO_ALLOCATION(	
                                 #{compCode, 				mode=IN, jdbcType=NUMERIC},
                                 #{branchCode, 				mode=IN, jdbcType=NUMERIC},
                                 #{entityType, 				mode=IN, jdbcType=VARCHAR},
                                 #{cif, 					mode=IN, jdbcType=NUMERIC},
                                 #{typeCode,				mode=IN, jdbcType=NUMERIC},
                                 #{docType, 				mode=IN, jdbcType=VARCHAR},
                                 #{cvAmount, 				mode=IN, jdbcType=NUMERIC},
                                 #{entityCode, 				mode=IN, jdbcType=NUMERIC},
                                 #{trsNo, 					mode=IN, jdbcType=NUMERIC},
                                 #{userId, 					mode=IN, jdbcType=VARCHAR},
                                 #{runningDate,	 			mode=IN, jdbcType=DATE},
                                 #{ivCrud,					mode=IN, jdbcType=VARCHAR},
                                 #{avaAllocationCode,		mode=INOUT, jdbcType=NUMERIC},
                                 #{errorCode, 				mode=OUT, jdbcType=NUMERIC},
                                 #{errorMessage, 			mode=OUT, jdbcType=VARCHAR} )}
	</select>

	<select id="fillTablesITR" parameterType="cifSC" statementType="CALLABLE" >
	    { CALL P_RET_FILL_ITR_TBL(   
   			#{compCode, mode=IN,jdbcType=NUMERIC},
		    #{branchCode, mode=IN,jdbcType=NUMERIC},
		    #{cifCode, mode=IN,jdbcType=NUMERIC},
		    #{userId, mode=IN,jdbcType=VARCHAR},
		    #{errorCode, mode=OUT,jdbcType=NUMERIC},
		    #{errorType, mode=OUT,jdbcType=VARCHAR},
		    #{errorMessage, mode=OUT,jdbcType=VARCHAR}
		)}
	</select>

	<select id="callCifUpdate" parameterType="cifSC" statementType="CALLABLE">
      { CALL P_RET_PROCESS_TEMP_CIF( 
      						  #{compCode, 			mode=INOUT, jdbcType=NUMERIC},
					    	  #{cif_no,				mode=IN, jdbcType=NUMERIC},
					    	  #{cifAlertStatus,		mode=IN, jdbcType=VARCHAR},
					    	  #{errorType,			mode=OUT, jdbcType=VARCHAR},
					    	  #{errorCode,			mode=OUT, jdbcType=NUMERIC},
                        	  #{errorMessage,	    mode=OUT, jdbcType=VARCHAR})
                        	}
    </select>
    
    <select id="insertCTSTRSDET" parameterType="trxMgntSC" statementType="CALLABLE">
    	{ CALL 
    	<choose>
    		<when test="isSybase == 1" >
           		P_RET_INSERT_CTSTRSDET		
	        </when>
	        <otherwise >
	           	P_RET_INSERT_CTSTRSDET_NEW	
	       	</otherwise>
	    </choose>  	
	       	(	#{compCode, 				mode=IN, jdbcType=NUMERIC},
				#{branchCode, 				mode=IN, jdbcType=NUMERIC},
				#{trsNo,			 		mode=IN, jdbcType=NUMERIC},
				#{lineNo,			 		mode=IN, jdbcType=NUMERIC},
	       		#{trsAcBr,			 		mode=IN, jdbcType=NUMERIC},
				#{trsAcCy,					mode=IN, jdbcType=NUMERIC},
				#{trsAcGl,			 		mode=IN, jdbcType=NUMERIC},
				#{trsAcCif,		 			mode=IN, jdbcType=NUMERIC},
				#{trsAcSl,			 		mode=IN, jdbcType=NUMERIC},
				#{sign, 					mode=IN, jdbcType=VARCHAR},
				#{fcAmount, 				mode=IN, jdbcType=NUMERIC},
				#{exchRate, 				mode=IN, jdbcType=NUMERIC},
				#{cvAmount, 				mode=IN, jdbcType=NUMERIC},
				#{action,					mode=IN, jdbcType=VARCHAR},
				#{flag,						mode=IN, jdbcType=VARCHAR},
				#{trsDate,	 				mode=IN, jdbcType=DATE},
				#{valueDate,	 			mode=IN, jdbcType=DATE},
				#{errorCode, 				mode=OUT, jdbcType=NUMERIC},
				#{errorMessage, 			mode=OUT, jdbcType=VARCHAR}
	       	 )} 
    </select>
    
    
    <select id="callAtmInsertCeftsTrf"	parameterType="trxMgntSC"	statementType="CALLABLE">
    { CALL  P_ATM_INSERT_CEFTS_TRF( #{compCode, 	 	 	mode=IN,jdbcType=NUMERIC},
	                              	#{branchCode,	 		mode=IN,jdbcType=NUMERIC},
	                              	#{mode,					mode=IN,jdbcType=VARCHAR},
	                              	#{trsNo,	 	  		mode=IN,jdbcType=NUMERIC},
	                              	#{trsType,				mode=IN,jdbcType=VARCHAR},
	                              	#{cbInd,				mode=IN,jdbcType=VARCHAR},
	                              	#{trsAmount,			mode=IN,jdbcType=NUMERIC},
	                              	#{isoCurrencyCode,		mode=IN,jdbcType=VARCHAR},
	                              	#{accAddRef,			mode=IN,jdbcType=VARCHAR},
	                              	#{toAccAddRef,			mode=IN,jdbcType=VARCHAR},
	                              	#{trxIID,				mode=IN,jdbcType=NUMERIC},					
	                              	#{trxOutIn,				mode=IN,jdbcType=VARCHAR},
	                              	#{ceftsTrxType,			mode=IN,jdbcType=VARCHAR},
				                  	#{CeftsPrcCode,			mode=IN,jdbcType=VARCHAR},
				                  	#{trxDate,				mode=IN,jdbcType=VARCHAR},
				                  	#{trxTime,				mode=IN,jdbcType=VARCHAR},
				                  	#{benefName,			mode=IN,jdbcType=VARCHAR},
				                  	#{benefAcc,				mode=IN,jdbcType=VARCHAR},				                  	
				                  	#{benefBank,			mode=IN,jdbcType=NUMERIC},
				                  	#{benefBankName,		mode=IN,jdbcType=VARCHAR},
				                  	#{benefBankBr,			mode=IN,jdbcType=VARCHAR},
				                  	#{ceftsStatus,			mode=IN,jdbcType=VARCHAR},
				                  	#{sessionID,    		mode=IN, jdbcType=NUMERIC},
				                  	#{trxReference,			mode=IN,jdbcType=VARCHAR},
				                  	#{responseCode,			mode=IN,jdbcType=VARCHAR},
				                  	#{de11StanSeq,    		mode=IN, jdbcType=NUMERIC},
				                  	#{de37RetRefNbSeq,		mode=IN,jdbcType=VARCHAR},
				                  	#{interfaceCode,    	mode=IN, jdbcType=NUMERIC},
				                  	#{process_code,    		mode=IN, jdbcType=NUMERIC},
				                  	#{trxAuthCode,			mode=IN,jdbcType=VARCHAR},
				                  	#{transDatetime,		mode=IN,jdbcType=VARCHAR},
				                  	#{acquInstId,			mode=IN,jdbcType=VARCHAR},	
				                  	#{requestId,    		mode=OUT, jdbcType=NUMERIC},	
				                  	#{errorCode,	  		mode=OUT, jdbcType=NUMERIC},		   
								  	#{errorMessage,	  		mode=OUT, jdbcType=VARCHAR}
								  	
				                  
				                   )}
	</select> 
	

    <select id="checkAccCreation" parameterType="accountSC" statementType="CALLABLE">
      { CALL  P_RET_CHECK_ACC_CREATION(
      						  #{compCode, 			mode=IN, jdbcType=NUMERIC},
					    	  #{branchCode,			mode=IN, jdbcType=NUMERIC},
					    	  #{userId,	 			mode=IN, jdbcType=VARCHAR},
					    	  #{brCode,				mode=IN, jdbcType=NUMERIC},
					    	  #{currencyCode,		mode=IN, jdbcType=NUMERIC},
					    	  #{glCode,				mode=IN, jdbcType=NUMERIC},
					    	  #{cifCode,			mode=IN, jdbcType=NUMERIC},
					    	  #{slNbr,				mode=IN, jdbcType=NUMERIC},						    	  
					    	  #{errorCode,			mode=OUT, jdbcType=NUMERIC},
                        	  #{errorMessage,	    mode=OUT, jdbcType=VARCHAR})
                        	}
                   	
                        	
    </select>
    
    <select id="getPCSFactionsProfit" parameterType="trxMgntSC" statementType="CALLABLE">
      { CALL  P_PCS_GET_FRACTIONS_PROFIT(
      						  #{compCode, 			    mode=IN, jdbcType=NUMERIC},
      						  #{trsAcBr,	 			mode=IN, jdbcType=NUMERIC},
					    	  #{currency,				mode=IN, jdbcType=NUMERIC},
					    	  #{trsAcGl,				mode=IN, jdbcType=NUMERIC},
					    	  #{trsAcCif,		        mode=IN, jdbcType=NUMERIC},
					    	  #{trsAcSl,				mode=IN, jdbcType=NUMERIC},
					    	  #{dateClosed,				mode=IN, jdbcType=DATE},			    	  
					    	  #{partial_PFT_FC,			mode=OUT, jdbcType=NUMERIC},
					    	  #{partial_PFT_CV,			mode=OUT, jdbcType=NUMERIC},						    	  
					    	  #{errorCode,			    mode=OUT, jdbcType=NUMERIC},
                        	  #{errorMessage,	        mode=OUT, jdbcType=VARCHAR})
      }                        	
    </select>
    
	<select id="returnCardEnquiryExt" parameterType="cardsManagementCO" statementType="CALLABLE">
	{ CALL 	P_CARD_ENQUIRY_EXT  (#{cardsMgtVO.COMP_CODE,        	mode=IN, jdbcType=NUMERIC},
									 #{cardsMgtVO.CARD_NO,      		mode=IN, jdbcType=VARCHAR},
									 #{cardAccountVO.ACC_BR,      		mode=IN, jdbcType=NUMERIC},
									 #{cardAccountVO.ACC_CY,      		mode=IN, jdbcType=NUMERIC},
									 #{cardAccountVO.ACC_GL,      		mode=IN, jdbcType=NUMERIC},
									 #{cardAccountVO.ACC_CIF,      		mode=IN, jdbcType=NUMERIC},
									 #{cardAccountVO.ACC_SL,      		mode=IN, jdbcType=NUMERIC},
									 #{cardAccountVO.ACC_ADD_REF,   	mode=IN, jdbcType=VARCHAR},
								  	 #{limitType,      					mode=IN, jdbcType=VARCHAR},
								  	 #{returnAcc,      					mode=IN, jdbcType=NUMERIC},
								  	 #{returnActiveCard,    			mode=IN, jdbcType=NUMERIC},
								     #{runningDate,    					mode=IN, jdbcType=DATE},
								   <if test="isOracle == 1">
								     #{lstAllCardsMgtRec, mode=OUT, jdbcType=CURSOR, javaType=java.sql.ResultSet, resultMap=lstAllCardsMgtRecMap},
								   </if> 
								     #{cardsMgtVO.BRANCH_CODE,      	mode=OUT,jdbcType=NUMERIC},
								     #{cardsMgtVO.APPLICATION_ID,   	mode=OUT,jdbcType=NUMERIC},
								     #{cardsMgtVO.CARD_HOLDER_NAME, 	mode=OUT,jdbcType=VARCHAR},
								     #{cardsMgtVO.STATUS, 				mode=OUT,jdbcType=VARCHAR},
								     #{cardsMgtVO.EXPIRY_DATE, 			mode=OUT,jdbcType=DATE},
								     #{ctsCardsVO.RELEASE_HOF_DAYS, 	mode=OUT,jdbcType=NUMERIC},
								     #{ctsCardsVO.CARD_TYPE,        	mode=OUT,jdbcType=VARCHAR},
								     #{prepaid,       					mode=OUT,jdbcType=VARCHAR},
								     #{ctsCardsVO.LIMIT_CHECKING_BY,	mode=OUT,jdbcType=VARCHAR},
								     #{ctsCardsVO.TOTAL_LIMIT,			mode=OUT,jdbcType=NUMERIC},
								     #{cardsMgtVO.LIMIT_BASED_ON,		mode=OUT,jdbcType=VARCHAR},
								     #{cardsMgtVO.LIMIT_CHECK_PERIOD,	mode=OUT,jdbcType=VARCHAR},
								     #{atmSpentCv,       				mode=OUT,jdbcType=NUMERIC},
								     #{atmSpentFc,       				mode=OUT,jdbcType=NUMERIC},
								     #{cardsMgtVO.POS_LIMIT_AMOUNT,		mode=OUT,jdbcType=NUMERIC},
								     #{cardsMgtVO.POS_LIMIT_BASED_ON,	mode=OUT,jdbcType=VARCHAR},
								     #{cardsMgtVO.POS_LIMIT_CHECK_PERIOD,mode=OUT,jdbcType=VARCHAR},
								     #{posSpentCv,       				mode=OUT,jdbcType=NUMERIC},
								     #{posSpentFc,       				mode=OUT,jdbcType=NUMERIC},
								     #{records_nb,       				mode=OUT,jdbcType=NUMERIC},
								     #{errorCode,       				mode=OUT,jdbcType=NUMERIC},
								     #{errorMessage,    				mode=OUT,jdbcType=VARCHAR})}
	</select>

	<resultMap id="lstAllCardsMgtRecMap" type="java.util.LinkedHashMap"></resultMap>
	
	<select id="returnAmfBalanceFCNew" parameterType="accountSC" statementType="CALLABLE">
	{ CALL 	P_RET_GET_AMF_BALANCE_FC_NEW  (
										#{compCode			,		mode=IN, 	jdbcType=NUMERIC},
										#{branchCode		,		mode=IN, 	jdbcType=NUMERIC},
										#{currencyCode		,     	mode=IN, 	jdbcType=NUMERIC},
										#{glCode			,      	mode=IN, 	jdbcType=NUMERIC},
										#{cifCode			,      	mode=IN, 	jdbcType=NUMERIC},
										#{slNbr				,    	mode=IN, 	jdbcType=NUMERIC},
										#{baseCurrencyCode	, 		mode=IN, 	jdbcType=NUMERIC},
										#{balance			,   	mode=OUT, 	jdbcType=NUMERIC},
										#{errorCode			,     	mode=OUT, 	jdbcType=NUMERIC}
						)}
	</select>
	
	<select id="returnAmfBalanceFC" parameterType="accountSC" statementType="CALLABLE">
	{ CALL 	P_RET_GET_AMF_BALANCE_FC  (
										#{compCode			,		mode=IN, 	jdbcType=NUMERIC},
										#{branchCode		,		mode=IN, 	jdbcType=NUMERIC},
										#{currencyCode		,     	mode=IN, 	jdbcType=NUMERIC},
										#{glCode			,      	mode=IN, 	jdbcType=NUMERIC},
										#{cifCode			,      	mode=IN, 	jdbcType=NUMERIC},
										#{slNbr				,    	mode=IN, 	jdbcType=NUMERIC},
										#{baseCurrencyCode	, 		mode=IN, 	jdbcType=NUMERIC},
										#{trxType			, 		mode=IN, 	jdbcType=NUMERIC},
										#{balance			,   	mode=OUT, 	jdbcType=NUMERIC},
										#{errorCode			,     	mode=OUT, 	jdbcType=NUMERIC}
						)}
	</select>
	
	<select id="callRetProcessAccountCharges" parameterType="accountChargesSC" statementType="CALLABLE">
    { CALL P_RET_PROCESS_ACCOUNT_CHARGES(#{compCode, 			mode=IN, jdbcType=NUMERIC},
										  #{branchCode,			mode=IN, jdbcType=NUMERIC},
										  #{action,				mode=IN, jdbcType=VARCHAR},
										  #{charge,				mode=IN, jdbcType=VARCHAR},
										  #{accBr,				mode=IN, jdbcType=NUMERIC},
										  #{accCy,				mode=IN, jdbcType=NUMERIC},
										  #{accGl,				mode=IN, jdbcType=NUMERIC},
										  #{accCif,				mode=IN, jdbcType=NUMERIC},
										  #{accSl,				mode=IN, jdbcType=NUMERIC},
										  #{ivCrud,				mode=IN, jdbcType=VARCHAR},
										  #{userId,				mode=IN, jdbcType=VARCHAR},
										  #{runningDate,		mode=IN, jdbcType=TIMESTAMP},
										  #{preferredLanguage,	mode=IN, jdbcType=VARCHAR},
				                   		  #{errorMessage, 		mode=OUT,jdbcType=VARCHAR},
				                   		  #{errType, 			mode=OUT,jdbcType=VARCHAR},
				                   		  #{errorCode,			mode=OUT,jdbcType=NUMERIC} )}
	</select>
	
	<sql id="dropRosterTmpHashTable">
		IF OBJECT_ID('#CTS_ROSTER_TMP') IS NOT NULL
		BEGIN
			DROP TABLE #CTS_ROSTER_TMP
		END	
	</sql>
	
	<sql id="createRosterTmpHashTable">
		CREATE TABLE #CTS_ROSTER_TMP
			(COMP_CODE    NUMERIC(4,0) NOT NULL,
			CODE         NUMERIC(4,0) NOT NULL ,
			SEQ 		 NUMERIC(3,0) NOT NULL ,
			FROM_AMT	 NUMERIC(23,3) NULL,
			TO_AMT		 NUMERIC(23,3) NULL,
			PERCENTAGE 	 NUMERIC(10,5) NULL,
			MAX_AMT 	 NUMERIC(20,6) NULL,
			MIN_AMT 	 NUMERIC(20,6) NULL,
			EXCEEDS	     VARCHAR(1) NULL,
			CONSTRAINT PK_CTS_ROSTER_TMP PRIMARY KEY (COMP_CODE,CODE,SEQ))
	</sql>

	<select id="runTrialSegmentationProcess" parameterType="com.path.vo.core.segmentation.CustSegmentationSC" statementType="CALLABLE">
    	{ CALL P_RET_SEGMENTATION_PROCESS(
    									#{compCode,		 		mode=IN, jdbcType=NUMERIC},
    									#{branchCode,			mode=IN, jdbcType=NUMERIC},
    									#{userId,			 	mode=IN, jdbcType=VARCHAR},
    									#{segment_code,			mode=IN, jdbcType=NUMERIC},
    									#{cifNo,				mode=IN, jdbcType=NUMERIC},
    									#{runningDate,			mode=IN, jdbcType=DATE},
    									#{currAppName,			mode=IN, jdbcType=VARCHAR},
    									#{language,				mode=IN, jdbcType=VARCHAR},
										#{isClassified,			mode=OUT,jdbcType=NUMERIC},
    									#{errorCode,		 	mode=OUT,jdbcType=NUMERIC},
    									#{errorMessage, 		mode=OUT,jdbcType=VARCHAR}
    							)}
    	
    </select>
    
    <!--Raed Saad - [#558287 ABARSI160021] -->
	<update id="dropProcessWithholdingTables">
		<include refid="coreCommonProcedureMapper.ctsManualJVTmpDrop" />
	</update>

	<sql id="ctsManualJVTmpDrop">
		IF OBJECT_ID('#CTS_MANUAL_JV_TMP') IS NOT NULL
		BEGIN
		DROP TABLE #CTS_MANUAL_JV_TMP
		END
	</sql>

	<update id="createProcessWithholdingTables">
		<include refid="coreCommonProcedureMapper.ctsManualJVTmpCreation" />
		<include refid="coreCommonProcedureMapper.beginTans" />
	</update>



	<sql id="ctsManualJVTmpCreation">
		CREATE TABLE #CTS_MANUAL_JV_TMP
		( COMP_CODE NUMERIC(4,0) NULL,
		BRANCH_CODE NUMERIC(4,0) NULL,
		CURRENCY_CODE NUMERIC(3,0) NULL,
		GL_CODE NUMERIC(6,0) NULL,
		CIF_SUB_NO NUMERIC(8,0) NULL,
		SL_NO NUMERIC(3,0) NULL,
		LINE_NO NUMERIC(6,0) NULL,
		FC_AMOUNT NUMERIC(18,3) NULL,
		EXCHANGE_RATE NUMERIC(20,6) NULL,
		CV_AMOUNT NUMERIC(18,3) NULL,
		TRANS_DATE DATETIME NULL,
		VALUE_DATE DATETIME NULL,
		REQUESTED_DATE DATETIME NULL,
		USER_ID VARCHAR(8) NULL,
		DESCRIPTION VARCHAR(100) NULL,
		DESCRIPTION_A VARCHAR(80) NULL,
		DESCRIPTION1 VARCHAR(80) NULL,
		DESCRIPTION1_A VARCHAR(80) NULL,
		DESCRIPTION2 VARCHAR(80) NULL,
		DESCRIPTION2_A VARCHAR(80) NULL,
		BS_CONTRA VARCHAR(1) NULL,
		JV_TYPE NUMERIC(4,0) NULL,
		JV_REF VARCHAR(10) NULL,
		SCREEN_REFERENCE VARCHAR(50) NULL )
	</sql>


	<select id="releaseHofByCif" parameterType="trxMgntSC" statementType="CALLABLE">
	{
		CALL P_RET_WRAP_REL_WITHHOLD_HOF(
									#{compCode, 		mode=IN, 	jdbcType=NUMERIC},
									#{branchCode, 		mode=IN, 	jdbcType=NUMERIC},
									#{runningDate, 		mode=IN, 	jdbcType=DATE},
									#{userId,			mode=IN, 	jdbcType=VARCHAR},
									#{taxRegulationID, 	mode=IN, 	jdbcType=NUMERIC},
									#{fromCif, 			mode=IN, 	jdbcType=NUMERIC},
									#{toCif, 			mode=IN, 	jdbcType=NUMERIC},
									#{reference,		mode=IN, 	jdbcType=VARCHAR},
									#{runningDate,		mode=IN, 	jdbcType=TIMESTAMP},
									#{errorCode,		mode=OUT, 	jdbcType=NUMERIC},
									#{errorMessage,		mode=OUT, 	jdbcType=VARCHAR})
	}
	</select>

	<!--END Raed Saad - [#558287 ABARSI160021] -->
	
	<select id="returnActiveWithAmountAcc" parameterType="duesManagementSC" statementType="CALLABLE">
	{
		CALL P_RET_GET_ACTIVE_WITHD(
									#{compCode, 		mode=IN,	jdbcType=NUMERIC},
									#{debitAccBr, 		mode=IN, 	jdbcType=NUMERIC},
									#{debitAccCy, 		mode=IN, 	jdbcType=NUMERIC},
									#{debitAccGL, 		mode=IN, 	jdbcType=NUMERIC},
									#{debitAccCIF, 		mode=IN, 	jdbcType=NUMERIC},
									#{debitAccSL, 		mode=IN, 	jdbcType=NUMERIC},
									#{baseCurrencyCode, mode=IN, 	jdbcType=NUMERIC},
									#{trxBranch, 		mode=IN, 	jdbcType=NUMERIC},
									#{trsNo, 			mode=IN, 	jdbcType=NUMERIC},
									#{activeWidrawalAmount, mode=OUT, jdbcType=NUMERIC})
	}
	</select>
	
	
	<select id="returnPostdatedChequeBalances" parameterType="duesManagementSC" statementType="CALLABLE">
	{ CALL P_RET_CALC_POSTDATED_CHQ_BAL(
									#{compCode, 		mode=IN, 	jdbcType=NUMERIC},
									#{debitAccBr, 		mode=IN, 	jdbcType=NUMERIC},
									#{debitAccCy, 		mode=IN, 	jdbcType=NUMERIC},
									#{debitAccGL, 		mode=IN, 	jdbcType=NUMERIC},
									#{debitAccCIF, 		mode=IN, 	jdbcType=NUMERIC},
									#{debitAccSL, 		mode=IN, 	jdbcType=NUMERIC},
									#{runningDate, 		mode=IN, 	jdbcType=DATE},
									#{postDatedWidrawalBal, mode=OUT, jdbcType=NUMERIC},
									#{postDatedDepositBal, 	mode=OUT, jdbcType=NUMERIC},
									#{settlementBal, 		mode=OUT, jdbcType=NUMERIC},
									#{errorCode, 			mode=OUT, jdbcType=NUMERIC},
									#{errorMessage, 		mode=OUT, jdbcType=VARCHAR})
	}
	</select>
	
	<sql id="ctsChargesUnifiedCreation">
	CREATE TABLE #CTS_CHARGES_UNIFIED
	(
	DB_SESSION_ID numeric(35,0) not null,
	LINE_NO numeric(6,0) DEFAULT 0 not null,
	COMP_CODE numeric(4,0) DEFAULT 0 not null,
	BRANCH_CODE numeric(4,0) DEFAULT 0 not null,
	ENTITY_CODE numeric(12,0) null,
	CHARGE_CODE numeric(4,0) DEFAULT 0 not null,
	TYPE_IND varchar(3) null,
	AMOUNT numeric(20,6) null,
	AMOUNT_NEW numeric(20,6) null,
	AMOUNT_FC_NEW numeric(20,6) null,
	ORIGINAL_AMOUNT numeric(20,6) null,
	OPT_TYPE varchar(2) null,
	CREDIT_ACC_BR numeric(4,0) null,
	CREDIT_ACC_CY numeric(3,0) null,
	CREDIT_ACC_GL numeric(6,0) null,
	CREDIT_ACC_CIF numeric(8,0) null,
	CREDIT_ACC_SL numeric(3,0) null,
	APPLY_TVA varchar(1) DEFAULT '0' null,
	CHARGE_PERC numeric(7,3) null,
	DEBIT_ACC_BR numeric(4,0) null,
	DEBIT_ACC_CY numeric(3,0) null,
	DEBIT_ACC_GL numeric(6,0) null,
	DEBIT_ACC_CIF numeric(8,0) null,
	DEBIT_ACC_SL numeric(3,0) null,
	BRIEF_DESC_ENG varchar(50) null,
	BRIEF_DESC_ARAB varchar(50) null,
	DR_ACC_GL numeric(6,0) DEFAULT 0 not null,
	DR_ACC_CIF numeric(8,0) DEFAULT 0 not null,
	DR_ACC_SL numeric(3,0) DEFAULT 0 not null,
	DR_CRITERIA varchar(1) DEFAULT '1' not null,
	PASS_SEPARATELY varchar(1) DEFAULT '0' not null,
	SCHEMA_CODE numeric(4,0) null,
	VAT_CODE numeric(4,0) null,
	AMOUNT_ORIGINAL numeric(20,6) null,
	AMOUNT_ORIGINAL_FC numeric(20,6) null,
	CONSIDER_ONCE varchar(1) null,
	DUES_COLLECTION_TYPE varchar(1) null,
	DUES_MODE_PAY varchar(1) null,
	PARTIAL_CHARGE_CV numeric(23,6) null,
	PARTIAL_CHARGE_FC numeric(23,6) null,
	ACTION_TYPE varchar(4) null,
	TRS_TYPE varchar(1) null,
	CB_IND varchar(1) null,
	TRS_SIGN varchar(1) null,
	EXCH_RATE numeric(20,6) null,
	UNIT numeric(10,0) null,
	SYSTEM_GEN varchar(1) null,
	BS_CONTRA varchar(1) null,
	FLAG varchar(1) null,
	TRS_DATE datetime null,
	VALUE_DATE datetime null,
	DESCRIPTION varchar(100) null,
	DESCRIPTION1 varchar(80) null,
	DESCRIPTION1_ARAB varchar(80) null,
	DESCRIPTION2 varchar(80) null,
	DESCRIPTION2_ARAB varchar(80) null,
	DESCRIPTION_ARAB varchar(80) null,
	JV_REFERENCE varchar(10) null,
	JV_TYPE numeric(3,0) null,
	USER_ID varchar(8) not null,
	CHARGE_ACC_BR numeric(4,0) null,
	CHARGE_ACC_CY numeric(3,0) null,
	CHARGE_ACC_GL numeric(6,0) null,
	CHARGE_ACC_CIF numeric(8,0) null,
	CHARGE_ACC_SL numeric(3,0) null,
	BRANCH_SO numeric(4,0) null,
	TRS_NO_SO numeric(12,0) null,
	PRODUCT_NAME varchar(50) null,
	TELLER_CODE numeric(6,0) null,
	ENTITY_TYPE_CODE numeric(10,0) null,
	DEDUCT varchar(1) null,
	CRUD varchar(3) null,
	CHQ_ISSUE_TYPE varchar(1) null,
	LEAVES numeric(4,0) null,
	TYPE numeric(3,0) null,
	TRS_CY numeric(3,0) null,
	CV_AMOUNT numeric(20,6) null,
	TRSFR_METHOD varchar(1) null,
	CTRL_CY numeric(3,0) null,
	CTRL_GL numeric(6,0) null,
	CTRL_CIF numeric(8,0) null,
	CTRL_SL numeric(3,0) null,
	ALLOW_MODIFY varchar(1) null,
	ALLOW_CLEARING varchar(1) null,
	DEDUCT_FROM_TRX varchar(1) null,
	BATCH_NO numeric(10,0) DEFAULT 0 not null,
	SERIAL_NO numeric(12,0) DEFAULT 0 not null,
	TRX_TYPE_CODE numeric(3,0) null,
	ENTRY_DEDUCT varchar(1) null,
	CHRG_ON_EXCEED varchar(1) DEFAULT 'N' not null,
	CHARGE_TYPE            VARCHAR(1)        NULL,
	ENTRY_DEDUCT_BR        NUMERIC(4)        NULL,
	ENTRY_DEDUCT_CY        NUMERIC(3)        NULL,
	ENTRY_DEDUCT_GL        NUMERIC(6)        NULL,
	ENTRY_DEDUCT_CIF       NUMERIC(8)        NULL,
	ENTRY_DEDUCT_SL        NUMERIC(3)        NULL,
	AVAIL_BAL_FC   numeric(20,6) null,
	constraint PK_CTS_CHARGES_UNIFIED primary key clustered ( DB_SESSION_ID, LINE_NO,
	COMP_CODE, BRANCH_CODE, BATCH_NO, SERIAL_NO, USER_ID )
	)
	</sql>
	
	<sql id="createCtsUsrRundateTmp">
	 	create table #CTS_USR_RUNDATE_TMP 
	 	(
	 		USER_DATE DATETIME NULL
	 	)
	</sql>
	
	<select id="fillAccRestricted" parameterType="accRestrictedSC" statementType="CALLABLE">
	                                          
	      { CALL P_FILL_ACC_RESTRICTED 
						 		( #{compCode,          mode=IN, jdbcType=NUMERIC},
								  #{branchCode,        mode=IN, jdbcType=NUMERIC},
	                              #{frAcBr,            mode=IN, jdbcType=NUMERIC},
	                              #{frAcCy,            mode=IN, jdbcType=NUMERIC},
	                              #{frAcGl,            mode=IN, jdbcType=NUMERIC},
	                              #{frAcCif,           mode=IN, jdbcType=NUMERIC},
	                              #{frAcSl,            mode=IN, jdbcType=NUMERIC},
	                              #{toAcBr,            mode=IN, jdbcType=NUMERIC},
	                              #{toAcCy,            mode=IN, jdbcType=NUMERIC},
	                              #{toAcGl,            mode=IN, jdbcType=NUMERIC},
	                              #{toAcCif,           mode=IN, jdbcType=NUMERIC},
	                              #{toAcSl,            mode=IN, jdbcType=NUMERIC},
	                              #{appName,           mode=IN, jdbcType=VARCHAR},
	                              #{progRef,           mode=IN, jdbcType=VARCHAR},
	                              #{userId,            mode=IN, jdbcType=VARCHAR},
	                              #{errorMessage,      mode=OUT, jdbcType=VARCHAR},
	                              #{errorCode,         mode=OUT, jdbcType=NUMERIC},
	                              #{errorCode,         mode=OUT, jdbcType=NUMERIC},
	                              #{errorMessage,      mode=OUT, jdbcType=VARCHAR})
	                }
	</select>
	
	<select id="callCheckValidateFomData" parameterType="cifSC" statementType="CALLABLE">
      { CALL P_RET_CHECK_VALIDATE_FOM_DATA( 
												#{compCode, 		mode=IN, 	jdbcType=NUMERIC},
												#{branchCode,		mode=IN, 	jdbcType=NUMERIC},
												#{userId,       	mode=IN, 	jdbcType=VARCHAR},
												#{cifCode,			mode=IN, 	jdbcType=NUMERIC},
												#{raFlag,			mode=IN, 	jdbcType=NUMERIC},
												#{errorType,		mode=OUT, 	jdbcType=VARCHAR},
												#{errorCode,		mode=OUT, 	jdbcType=NUMERIC},
												#{errorMessage,	    mode=OUT, 	jdbcType=VARCHAR})
                        	}
    </select>
    
    <select id="checkOnClosingAccount" parameterType="accountSC" statementType="CALLABLE">
    { CALL P_RET_CHECK_ACC_CLOSING( #{compCode,		 	mode=IN,    jdbcType=NUMERIC},
				    			    #{branchCode,		mode=IN,    jdbcType=NUMERIC},
				    			    #{currencyCode,	 	mode=IN,    jdbcType=NUMERIC},
				    			    #{glCode,			mode=IN,    jdbcType=NUMERIC},
				    			    #{cifCode,	 		mode=IN,    jdbcType=NUMERIC},
				    			    #{slNbr,			mode=IN,    jdbcType=NUMERIC},
				    			    #{userId,			mode=IN,    jdbcType=NUMERIC},
				    			    #{runningDate, 		mode=IN, 	jdbcType=TIMESTAMP},
				    			 	#{errorCode,		mode=OUT, 	jdbcType=NUMERIC},
									#{errorMessage,	    mode=OUT, 	jdbcType=VARCHAR})
                        		}
    </select>
	
	<select id="callCheckDataLostFound" 	parameterType="trxMgntSC" statementType="CALLABLE">
			   { CALL P_RET_CHECK_DATA_LOSTFOUND(#{compCode, 	 	   mode=IN, jdbcType=NUMERIC},
				                               		#{branchCode,	 	   mode=IN, jdbcType=NUMERIC},
				                               		#{trsNo,	   	   	   mode=IN, jdbcType=NUMERIC},
				                               		#{errorCode,		   mode=OUT,jdbcType=NUMERIC},
				                               		#{errorMessage,	       mode=OUT,jdbcType=VARCHAR} )}  
	</select>
	
	<select id="checkDataTransferAccount" 	parameterType="trxMgntSC" statementType="CALLABLE">
			   { CALL P_RET_CHECK_DATA_TRANSFER_ACCOUNT(#{compCode, 	 	   mode=IN, jdbcType=NUMERIC},
					                               		#{batchNo,	 	   	   mode=IN, jdbcType=NUMERIC},
					                               		#{errorCode,		   mode=OUT,jdbcType=NUMERIC},
					                               		#{errorMessage,	       mode=OUT,jdbcType=VARCHAR} )}  
	</select>
	
	<select id="checkDataDuesMgnt" 	parameterType="trxMgntSC" statementType="CALLABLE">
			   { CALL P_RET_CHECK_DATA_DUES(#{compCode, 	 	   mode=IN, jdbcType=NUMERIC},
		                               		#{branchCode,	 	   mode=IN, jdbcType=NUMERIC},
		                               		#{debitAccBr,	 	   mode=IN, jdbcType=NUMERIC},
		                               		#{debitAccCy,	 	   mode=IN, jdbcType=NUMERIC},
		                               		#{debitAccGL,	 	   mode=IN, jdbcType=NUMERIC},
		                               		#{debitAccCIF,	 	   mode=IN, jdbcType=NUMERIC},
		                               		#{debitAccSL,	 	   mode=IN, jdbcType=NUMERIC},
		                               		#{dueCode,		 	   mode=IN, jdbcType=NUMERIC},
		                               		#{errorCode,		   mode=OUT,jdbcType=NUMERIC},
		                               		#{errorMessage,	       mode=OUT,jdbcType=VARCHAR} )}  
	</select>
	
	
	<select id="checkVaultRemittance" parameterType="transferCashSC" statementType="CALLABLE">
    { CALL P_RET_CHECK_VAULT_REMITTANCE( 	
		#{compCode ,mode=IN ,jdbcType=NUMERIC},
		#{branchCode ,mode=IN ,jdbcType=NUMERIC},
		#{remittanceType ,mode=IN ,jdbcType=NUMERIC},
		#{remittType ,mode=IN ,jdbcType=VARCHAR},
		#{currencyCode ,mode=IN ,jdbcType=NUMERIC},
		#{vaultNo ,mode=IN ,jdbcType=NUMERIC},
		#{trsNo ,mode=IN ,jdbcType=NUMERIC},
		#{userId ,mode=IN ,jdbcType=VARCHAR},
		#{errorCode ,mode=OUT ,jdbcType=NUMERIC},
		#{errorMessage ,mode=OUT ,jdbcType=VARCHAR} )}
				
	</select>


	<select id="checkEtlIdentProcess" parameterType="cifSC" statementType="CALLABLE" >
	    { CALL P_ITR_WRAP_ETL_IDENT_PROCESSES(   
   			#{compCode		, mode=IN		,jdbcType=NUMERIC},
		    #{branchCode	, mode=IN		,jdbcType=NUMERIC},
		    #{userId		, mode=IN		,jdbcType=VARCHAR},
		    #{cif_no		, mode=IN		,jdbcType=NUMERIC},
		    #{runningDate	, mode=IN		,jdbcType=DATE},
			#{errorCode 	, mode=OUT 		,jdbcType=NUMERIC},
			#{errorMessage	, mode=OUT 		,jdbcType=LONGVARCHAR,typeHandler=com.path.lib.common.base.ibatis3.handlers.PathLongVarcharHandler}
		)}
	</select>
	

	<sql id="dropCtsDynBankCorrTmp">
		IF OBJECT_ID('#CTS_DYN_BANK_CORR_TMP') IS NOT NULL
		BEGIN
			DROP TABLE #CTS_DYN_BANK_CORR_TMP
		END	
	</sql>
	<sql id="dropCtsDynIntermediateBankTmp">
		IF OBJECT_ID('#CTS_DYN_INTERMEDIATE_BANK_TMP') IS NOT NULL
		BEGIN
			DROP TABLE #CTS_DYN_INTERMEDIATE_BANK_TMP
		END	
	</sql>
	
	<select id="callGetAmfBalanceFC" parameterType="accountSC" statementType="CALLABLE" >
	    { CALL P_RET_GET_AVLBAL_BR( 
   			#{compCode			, mode=IN	,jdbcType=NUMERIC},
		    #{baseCurrencyCode	, mode=IN	,jdbcType=NUMERIC},
		    #{branchCode		, mode=IN	,jdbcType=NUMERIC},
		    #{currencyCode		, mode=IN	,jdbcType=NUMERIC},
		    #{glCode			, mode=IN	,jdbcType=NUMERIC},
		    #{cifCode			, mode=IN	,jdbcType=NUMERIC},
		    #{slNbr				, mode=IN	,jdbcType=NUMERIC},
		    #{flag				, mode=IN	,jdbcType=NUMERIC},
		    #{balance			, mode=OUT	,jdbcType=NUMERIC}
		)}
	</select>
	
	<select id="callInsertCtstrs" parameterType="trxMgntSC" statementType="CALLABLE" >
    	{ CALL 
    	<choose>
    		<when test="isSybase == 1" >
           		P_RET_INSERT_CTSTRS		
	        </when>
	        <otherwise >
	           	P_RET_INSERT_CTSTRS_NEW	
	       	</otherwise>
	    </choose> 
	    (
   			#{compCode			, mode=IN	,jdbcType=NUMERIC},
		    #{branchCode		, mode=IN	,jdbcType=NUMERIC},
		    #{trxType			, mode=IN	,jdbcType=NUMERIC},
		    #{userId			, mode=IN	,jdbcType=VARCHAR},
		    #{runningDate		, mode=IN	,jdbcType=DATE},
		    #{trsAcBr    		, mode=IN	,jdbcType=NUMERIC},
		    #{trsAcCy    		, mode=IN	,jdbcType=NUMERIC},
		    #{trsAcGl    		, mode=IN	,jdbcType=NUMERIC},
		    #{trsAcCif   		, mode=IN	,jdbcType=NUMERIC},
		    #{trsAcSl    		, mode=IN	,jdbcType=NUMERIC},
		    #{toTrsAcBr  		, mode=IN	,jdbcType=NUMERIC},
		    #{toTrsAcCy  		, mode=IN	,jdbcType=NUMERIC},
		    #{toTrsAcGl  		, mode=IN	,jdbcType=NUMERIC},
		    #{toTrsAcCif 		, mode=IN	,jdbcType=NUMERIC},
		    #{toTrsAcSl  		, mode=IN	,jdbcType=NUMERIC},
		    #{amount			, mode=IN	,jdbcType=NUMERIC},
		    #{trsAcAmount		, mode=IN	,jdbcType=NUMERIC},
		    #{charges			, mode=IN	,jdbcType=NUMERIC},
		    #{baseCurrencyCode	, mode=IN	,jdbcType=NUMERIC},
		    #{reference			, mode=IN	,jdbcType=VARCHAR},
		    #{releaseDays		, mode=IN	,jdbcType=NUMERIC},
		    #{alPos				, mode=IN	,jdbcType=NUMERIC},
		    #{trsNo				, mode=OUT	,jdbcType=NUMERIC},
			#{errorCode 		, mode=OUT 	,jdbcType=NUMERIC},
			#{errorMessage		, mode=OUT 	,jdbcType=VARCHAR}
		)}
	</select>
	
	<select id="callAccEntry" parameterType="trxMgntSC" statementType="CALLABLE" >
	    	{ CALL 
    	<choose>
    		<when test="isSybase == 1" >
           		P_RET_ACC_ENTRY		
	        </when>
	        <otherwise >
	           	P_RET_ACC_ENTRY_NEW	
	       	</otherwise>
	    </choose> 
	    (
   			#{compCode			, mode=IN	,jdbcType=NUMERIC},
		    #{branchCode		, mode=IN	,jdbcType=NUMERIC},
		    #{trxType			, mode=IN	,jdbcType=NUMERIC},
		    #{trsNo				, mode=IN	,jdbcType=NUMERIC},
			#{errorCode 		, mode=OUT 	,jdbcType=NUMERIC},
			#{errorMessage		, mode=OUT 	,jdbcType=LONGVARCHAR,typeHandler=com.path.lib.common.base.ibatis3.handlers.PathLongVarcharHandler}
		)}
	</select>
	
	<select id="callConvertTrsAmount" parameterType="trxMgntSC" statementType="CALLABLE" >
	    { CALL P_RET_CONVERT_TRS_AMOUNT(   
   			#{compCode		, mode=IN		,jdbcType=NUMERIC},
		    #{trxType		, mode=IN		,jdbcType=NUMERIC},
		    #{trsDate		, mode=IN		,jdbcType=DATE},
		    #{trsAcCy		, mode=IN		,jdbcType=NUMERIC},
		    #{toTrsAcCy		, mode=IN		,jdbcType=NUMERIC},
		    #{branchCode	, mode=IN		,jdbcType=NUMERIC},
		    #{trsAcCif		, mode=IN		,jdbcType=NUMERIC},
		    #{amount		, mode=INOUT	,jdbcType=NUMERIC},
		    #{trxAmount		, mode=INOUT	,jdbcType=NUMERIC},
		    #{cvAmount		, mode=INOUT	,jdbcType=NUMERIC},
		    #{trsCy			, mode=IN		,jdbcType=NUMERIC},
			#{errorCode 	, mode=OUT 		,jdbcType=NUMERIC},
			#{errorMessage	, mode=OUT 		,jdbcType=LONGVARCHAR,typeHandler=com.path.lib.common.base.ibatis3.handlers.PathLongVarcharHandler}
		)}
	</select>
	
	<select id="callCtsCtrTimeout" parameterType="trxMgntSC" statementType="CALLABLE" >
	    { CALL P_RET_GET_CTSCTR_TIMEOUT(   
   			#{compCode		, mode=IN		,jdbcType=NUMERIC},
		    #{branchCode	, mode=IN		,jdbcType=NUMERIC},
		    #{trsType		, mode=IN		,jdbcType=VARCHAR},
		    #{cbInd			, mode=IN		,jdbcType=VARCHAR},
		    <if test="isOracle == 1">
		    #{closeTime		, mode=IN		,jdbcType=NUMERIC},
		    </if>
		    #{trsNo			, mode=OUT		,jdbcType=NUMERIC},
			#{errorCode 	, mode=OUT 		,jdbcType=NUMERIC},
			#{errorMessage	, mode=OUT 		,jdbcType=LONGVARCHAR,typeHandler=com.path.lib.common.base.ibatis3.handlers.PathLongVarcharHandler}
		)}
	</select>
	
	<select id="retInsertStatus" parameterType="trxMgntSC" statementType="CALLABLE" >
	    { CALL P_RET_INSERT_STATUS(   
   			#{compCode		, mode=IN		,jdbcType=NUMERIC},
		    #{branchCode	, mode=IN		,jdbcType=NUMERIC},
		    #{trsNo			, mode=IN		,jdbcType=NUMERIC},
		    #{trxType		, mode=IN		,jdbcType=NUMERIC},
			#{errorCode 	, mode=OUT 		,jdbcType=NUMERIC},
			#{errorMessage	, mode=OUT 		,jdbcType=LONGVARCHAR,typeHandler=com.path.lib.common.base.ibatis3.handlers.PathLongVarcharHandler}
		)}
	</select>
	
	<select id="retGetTrsNo" parameterType="trxMgntSC" statementType="CALLABLE" >
		{ CALL P_RET_GET_TRSNO(
								#{compCode,		 		mode=IN, 	jdbcType=NUMERIC},
								#{branchCode,			mode=IN, 	jdbcType=NUMERIC},
								#{trsType,				mode=IN,	jdbcType=VARCHAR},
					    		#{cbInd,				mode=IN,	jdbcType=VARCHAR},
								#{trsNo, 				mode=OUT, 	jdbcType=NUMERIC},
								#{errorCode,			mode=OUT, 	jdbcType=NUMERIC},
								#{errorMessage,			mode=OUT, 	jdbcType=VARCHAR}
    	)}
	</select>
	
	
	<select id="clearTrsNo" parameterType="trxMgntSC" statementType="CALLABLE" >
		{ CALL P_RET_CLEAR_TRSNO(
								#{errorCode,			mode=OUT, 	jdbcType=NUMERIC},
								#{errorMessage,			mode=OUT, 	jdbcType=VARCHAR}
    	)}
	</select>
	
	
	<select id="checkOneObligorLimit" 	parameterType="trxMgntSC" statementType="CALLABLE">
    	{ CALL P_IIS_WRAP_CHECK_OBLIGOR_LIMIT(
   							#{compCode, 				mode=IN, jdbcType=NUMERIC},
   							#{branchCode, 				mode=IN, jdbcType=NUMERIC},
							#{cif, 						mode=IN, jdbcType=NUMERIC},
							#{action, 					mode=IN, jdbcType=VARCHAR},
							#{trsDate, 					mode=IN, jdbcType=DATE},
							#{trsType, 					mode=IN, jdbcType=VARCHAR},
							#{trsNo, 					mode=IN, jdbcType=NUMERIC},
							#{trsCy, 					mode=IN, jdbcType=NUMERIC},
							#{trxAmount, 				mode=IN, jdbcType=NUMERIC},
							#{oldTrxAmount, 			mode=IN, jdbcType=NUMERIC},
							#{productClass, 			mode=IN, jdbcType=NUMERIC},
							#{currAppName, 				mode=IN, jdbcType=VARCHAR},
							#{userId, 					mode=IN, jdbcType=VARCHAR},
							#{remainingLimit, 			mode=OUT, jdbcType=NUMERIC},
							#{errorCode, 				mode=OUT, jdbcType=NUMERIC},
                            #{errorMessage, 			mode=OUT, jdbcType=VARCHAR} )}
	</select>
	
	
	<sql id="dropOneObligorLimit">
		IF OBJECT_ID('#ONE_OBLIGOR_LIMIT') IS NOT NULL
		BEGIN
			DROP TABLE #ONE_OBLIGOR_LIMIT
		END	
	</sql>
	
	
	<sql id="createObligorLimitCreation">
	
		CREATE TABLE #ONE_OBLIGOR_LIMIT
		(	COMP_CODE				NUMERIC(4)		NOT NULL,		
			CIF_NO					NUMERIC(8)		NOT NULL,
			ONE_OBLIGOR				NUMERIC(8)		NOT NULL,					
			IIS_UTILIZED			NUMERIC(20,3)	NULL,	
			IIS_UN_UTILIZED			NUMERIC(20,3)	NULL,	
			ASSET_UTILIZED			NUMERIC(20,3)	NULL,
			CSM_UTILIZED			NUMERIC(26,6)	NULL,
			LC_UTILIZED				NUMERIC(20,3)	NULL,
			LG_UTILIZED				NUMERIC(20,3)	NULL,
			ACCEPTANCE_UTILIZED		NUMERIC(20,3)	NULL,
			FX_UTILIZED				NUMERIC(20,3)	NULL,
			SECURITIES_AMT			NUMERIC(20,3)	NULL,
			CASH_MARGIN_AMT			NUMERIC(20,3)	NULL,
			CASH_FD_COLLATERALS_AMT	NUMERIC(20,3)	NULL		
		)
	</sql>
	
	
	<sql id="dropOneObligorTransactions">
		IF OBJECT_ID('#ONE_OBLG_TRANSACTIONS') IS NOT NULL
		BEGIN
			DROP TABLE #ONE_OBLG_TRANSACTIONS
		END	
	</sql>
	
	<sql id="createObligorTransactionsCreation">
	
		CREATE TABLE #ONE_OBLG_TRANSACTIONS
		(	
			CIF_NO						NUMERIC(8)		NOT NULL,
			TRS_TYPE					VARCHAR(3)		NOT NULL,
			CURRENCY					NUMERIC(3)		NOT NULL,
			IIS_UTILIZED				NUMERIC(20,3)	NULL,	
			IIS_UN_UTILIZED				NUMERIC(20,3)	NULL,	
			LC_UTILIZED					NUMERIC(20,3)	NULL,
			LG_UTILIZED					NUMERIC(20,3)	NULL,
			ACCEPTANCE_UTILIZED			NUMERIC(20,3)	NULL,
			FX_UTILIZED					NUMERIC(20,3)	NULL,
			SECURITIES_AMT				NUMERIC(20,3)	NULL,
			CASH_MARGIN_AMT				NUMERIC(20,3)	NULL,
			CASH_FD_COLLATERALS_AMT 	NUMERIC(20,3)	NULL,
			EXCH_RATE					NUMERIC(18,13)	NULL,
			IIS_UTILIZED_CV				NUMERIC(20,3)	NULL,
			IIS_UN_UTILIZED_CV			NUMERIC(20,3)	NULL,	
			LC_UTILIZED_CV				NUMERIC(20,3)	NULL,
			LG_UTILIZED_CV				NUMERIC(20,3)	NULL,
			ACCEPTANCE_UTILIZED_CV		NUMERIC(20,3)	NULL,
			FX_UTILIZED_CV				NUMERIC(20,3)	NULL,
			SECURITIES_AMT_CV			NUMERIC(20,3)	NULL,
			CASH_MARGIN_AMT_CV			NUMERIC(20,3)	NULL,
			CASH_FD_COLLATERALS_AMT_CV 	NUMERIC(20,3)	NULL,
			MULT_DIV_IND				VARCHAR(1)		NULL,
			UNIT						NUMERIC(10)		NULL	
		)
	</sql>
	
	<sql id="dropExchRateOneObligor">
		IF OBJECT_ID('#EXCH_RATE_ONE_OBLIGOR') IS NOT NULL
		BEGIN
			DROP TABLE #EXCH_RATE_ONE_OBLIGOR
		END	
	</sql>
	
	<sql id="createExchRateOneObligor">
	
		CREATE TABLE #EXCH_RATE_ONE_OBLIGOR
		(		
			CURRENCY_CODE			NUMERIC(3)		NOT NULL,
			M_RATE					NUMERIC(20,6)	NULL
		)
	</sql>
	
	<sql id="dropCTSCIFObligor">
		IF OBJECT_ID('#CTS_CIF_OBLIGOR') IS NOT NULL
		BEGIN
			DROP TABLE #CTS_CIF_OBLIGOR
		END	
	</sql>
	
	<sql id="dropErrorTmp">
		IF OBJECT_ID('#ERROR_TMP') IS NOT NULL
		BEGIN
			DROP TABLE #ERROR_TMP
		END	
	</sql>
	
	<sql id="createCTSCIFObligor">
	
		CREATE TABLE #CTS_CIF_OBLIGOR
		(		
			CIF_NO					NUMERIC(8)		NULL,
			ONE_OBLIGOR				NUMERIC(8)		NULL,
			AMOUNT					NUMERIC(26,6) 	NULL
		)
	</sql>
	
	<sql id="createErrorTmp">
	
		CREATE  TABLE #ERROR_TMP 
		(
		COMPANY 			NUMERIC(4)   NULL ,
		LINE_NUM			NUMERIC(6)   NULL ,
		TRS_AC_BR			NUMERIC(4)   NULL ,
		TRS_AC_CY 			NUMERIC(3)   NULL ,
		TRS_AC_GL 			NUMERIC(6)   NULL ,
		TRS_AC_CIF	 		NUMERIC(8)   NULL ,
		TRS_AC_SL 			NUMERIC(3)   NULL ,
		POST_DATE 			DATETIME     NULL ,
		CARD_NO 			VARCHAR(600)  NULL ,
		TRX_TYPE 			VARCHAR(10)  NULL ,
		ERROR_CODE          NUMERIC(6,0) NULL ,
		ERROR_MSG           VARCHAR(255) NULL
		)
	</sql>
	
	<update id="dropOneObligorTables">
		<include refid="coreCommonProcedureMapper.dropTmpExchrat"/>
		<include refid="coreCommonProcedureMapper.dropOneObligorLimit"/>
		<include refid="coreCommonProcedureMapper.dropOneObligorTransactions"/>
		<include refid="coreCommonProcedureMapper.dropExchRateOneObligor"/>
		<include refid="coreCommonProcedureMapper.dropCTSCIFObligor"/>
		<include refid="coreCommonProcedureMapper.dropTmpSecPrice"/>
	</update>
	
	<update id ="createOneObligorTables">
		<include refid="coreCommonProcedureMapper.createTmpExchrat"/>
		<include refid="coreCommonProcedureMapper.createObligorLimitCreation"/>
		<include refid="coreCommonProcedureMapper.createObligorTransactionsCreation"/>
		<include refid="coreCommonProcedureMapper.createExchRateOneObligor"/>
		<include refid="coreCommonProcedureMapper.createCTSCIFObligor"/>
		<include refid="coreCommonProcedureMapper.createTmpSecPrice"/>
		<include refid="coreCommonProcedureMapper.beginTans"/>
	</update>
	
	
	<sql id="dropTmpExchrat">
		IF OBJECT_ID('#TMP_EXCHRAT') IS NOT NULL
		BEGIN
			DROP TABLE #TMP_EXCHRAT
		END	
	</sql>
	
	
	<sql id="createTmpExchrat">
	
		CREATE TABLE #TMP_EXCHRAT
		(
			COMP_CODE   			NUMERIC(4,0)  	NOT NULL,
			CURRENCY_CODE   		NUMERIC(3,0)  	NOT NULL,
			RATE   					NUMERIC(18,10)  NOT NULL,
			USER_ID   				VARCHAR(8)  	NOT NULL,
			EXCH_RATE   			NUMERIC(20,6)  	NULL,
			DEC_POINT   			NUMERIC(1,0)  	NULL,
			BRIEF_NAME   			VARCHAR(4)  	NULL,
			LONG_NAME   			VARCHAR(20)  	NULL,
			UNIT   					NUMERIC(10,0)  	NULL,
			MULT_DIV_IND   			VARCHAR(1)  	NULL,
			POINT_METHOD   			NUMERIC(3,0)  	NULL,
			CONSTRAINT #PK_TMPEXCHRAT PRIMARY KEY CLUSTERED ( COMP_CODE, CURRENCY_CODE, USER_ID )
		)
		
	</sql>
	
	
	<sql id="dropTmpSecPrice">
		IF OBJECT_ID('#TMP_SECPRICE') IS NOT NULL
		BEGIN
			DROP TABLE #TMP_SECPRICE
		END	
	</sql>
	
	
	<sql id ="createTmpSecPrice">

		CREATE  TABLE #TMP_SECPRICE
		(
			COMP_CODE   			NUMERIC(4,0)  	NULL,
			BRANCH   				NUMERIC(4,0)  	NULL,
			USER_ID   				VARCHAR(10)  	NULL,
			SECURITY_CODE1   		NUMERIC(8,0)  	NULL,
			SECURITY_CODE2   		NUMERIC(8,0)  	NULL,
			CLOSING_PRICE   		NUMERIC(24,10)  NULL,
			CLOSING_PRICE_CV   		NUMERIC(20,6)  	NULL,
			MARKET_DATE   			DATETIME  		NULL,
			PREV_CLOSING_PRICE   	NUMERIC(20,6) 	NULL,
			PREV_CLOSING_PRICE_CV   NUMERIC(20,6)  	NULL,
			PREV_MARKET_DATE   		DATETIME  		NULL,
			MAXIMUM_PRICE   		NUMERIC(20,6)  	NULL,
			MINIMUM_PRICE   		NUMERIC(20,6)  	NULL
		)
		CREATE NONCLUSTERED INDEX TMP_SECPRICE_IDX1 ON #TMP_SECPRICE ( COMP_CODE ASC,BRANCH ASC,USER_ID ASC,SECURITY_CODE1 ASC,SECURITY_CODE2 ASC)

	</sql>
  
  
	<select id="iisOneObligorLimitReport" 	parameterType="trxMgntSC" statementType="CALLABLE">
	{
		CALL P_IIS_WRAP_OBLGOR_LIMIT_REPORT(
			   							#{compCode, 				mode=IN, jdbcType=NUMERIC},
			   							#{branchCode, 				mode=IN, jdbcType=NUMERIC},
										#{trsAcCif, 				mode=IN, jdbcType=NUMERIC},
										#{toTrsAcCif, 				mode=IN, jdbcType=NUMERIC},
										#{typeFrTo, 				mode=IN, jdbcType=VARCHAR},
										#{type, 					mode=IN, jdbcType=VARCHAR},
										#{trsDate, 					mode=IN, jdbcType=DATE},
										#{appName,					mode=IN, jdbcType=VARCHAR},
										#{userId, 					mode=IN, jdbcType=VARCHAR},
										#{errorCode, 				mode=OUT, jdbcType=NUMERIC},
			                            #{errorMessage, 			mode=OUT, jdbcType=VARCHAR} )}
	</select>

	
	<update id ="dropSironHashTables">
		<include refid="coreCommonProcedureMapper.dropSironPersonDataCreation"/>
		<include refid="coreCommonProcedureMapper.dropSironPdBirthdateCreation"/>
		<include refid="coreCommonProcedureMapper.dropSironPdPassportCreation"/>
		<include refid="coreCommonProcedureMapper.dropSironPdCustomFieldsCreation"/>
		<include refid="coreCommonProcedureMapper.dropSironBoDataCreation"/>		
	</update>
	
	<update id ="createSironHashTables">
		<include refid="coreCommonProcedureMapper.sironPersonDataCreation"/>
		<include refid="coreCommonProcedureMapper.sironPdBirthdateCreation"/>
		<include refid="coreCommonProcedureMapper.sironPdPassportCreation"/>
		<include refid="coreCommonProcedureMapper.sironPdCustomFieldsCreation"/>
		<include refid="coreCommonProcedureMapper.sironBoDataCreation"/>		
	</update>
	
	<sql id="sironPersonDataCreation">
	CREATE TABLE #SIRON_PERSON_DATA ( LINE NUMERIC(10), 
									PERSONID  VARCHAR(250) NULL, 
									LASTNAME  VARCHAR(250) NULL,
									FIRSTNAME VARCHAR(250) NULL,
									STREET   VARCHAR(250) NULL,
									ZIPCODE  VARCHAR(250) NULL,
									CITY VARCHAR(250) NULL,
									HCOUNTRY  VARCHAR(250) NULL,
									RISKCLASS VARCHAR(250) NULL,
									NATCOUNTRY VARCHAR (250) NULL,
									INDUSTRY  VARCHAR(250) NULL,
									CUSY VARCHAR(250) NULL,
									CSMNO  VARCHAR(250) NULL,
									BIRTHDATE NUMERIC(10) NULL,
									CUSTTYPE VARCHAR(250) NULL,
									PASSNO  NUMERIC(10) NULL,
									BIRTHCOUNTRY VARCHAR(250) NULL,
									BIRTHCITY VARCHAR(250) NULL,
									GENDER VARCHAR(250) NULL
									)
									
	</sql>
	
	<sql id="sironPdBirthdateCreation">
	CREATE TABLE #SIRON_PD_BIRTHDATE ( 
									LINE NUMERIC(10),BIRTHDATE VARCHAR(10) NULL
									)
	</sql>
	
	<sql id="sironPdPassportCreation">
	CREATE TABLE #SIRON_PD_PASSPORT( 
									LINE NUMERIC(10),
									PASSPORT VARCHAR(250) NULL
									)
	</sql>
	
	<sql id="sironPdCustomFieldsCreation">
	CREATE TABLE #SIRON_PD_CUSTOMFIELDS(
										LINE_NO NUMERIC(10),
										NAME VARCHAR(250) NULL,
										VALUE VARCHAR(250)NULL
										)
	</sql>
	
	<sql id="sironBoDataCreation">
	CREATE TABLE #SIRON_BODATA (
								MAIN_CIF VARCHAR(250),
								CIF_REF VARCHAR(250) NULL ,
								TYPE VARCHAR(250) NULL,
								SHAR_PERC DECIMAL(5,2) NULL,
								FLAG1 VARCHAR(250) NULL,
								FLAG2 VARCHAR(250)NULL,
								FLAG3 VARCHAR(250)NULL,
								COMMENT  VARCHAR(250)NULL,
								DELETEFLAG	VARCHAR(250) NULL
							)
	</sql>
	
	<sql id="dropSironPersonDataCreation">	
		IF OBJECT_ID('#SIRON_PERSON_DATA') IS NOT NULL
			BEGIN
				DROP TABLE #SIRON_PERSON_DATA
			END						
	</sql>
	
	<sql id="dropSironPdBirthdateCreation">
	IF OBJECT_ID('#SIRON_PD_BIRTHDATE') IS NOT NULL
		BEGIN
			DROP TABLE #SIRON_PD_BIRTHDATE
		END
	</sql>
	
	<sql id="dropSironPdPassportCreation">
	IF OBJECT_ID('#SIRON_PD_PASSPORT') IS NOT NULL
		BEGIN
			DROP TABLE #SIRON_PD_PASSPORT
		END
	</sql>
	
	<sql id="dropSironPdCustomFieldsCreation">
	IF OBJECT_ID('#SIRON_PD_CUSTOMFIELDS') IS NOT NULL
		BEGIN
			DROP TABLE #SIRON_PD_CUSTOMFIELDS
		END
	</sql>
	
	<sql id="dropSironBoDataCreation">
	IF OBJECT_ID('#SIRON_BODATA') IS NOT NULL
		BEGIN
			DROP TABLE #SIRON_BODATA
		END
	</sql>
	
	 <select id="callMappingSiron" parameterType="cifSC" statementType="CALLABLE">
     { CALL P_RET_MAPPING_SIRON( 
   								 #{compCode, 			mode=IN, jdbcType=NUMERIC},
   								 #{cif_no,				mode=IN, jdbcType=NUMERIC},
   								 #{errorCode,			mode=OUT, jdbcType=NUMERIC},
                       	  		 #{errorMessage,	    mode=OUT, jdbcType=VARCHAR})
                        	  	}
    							  
    							  
    							  
    </select>

	<update id ="createHashAuditDetails">
		<include refid="coreCommonProcedureMapper.createAudit_Details_Temp"/>
		<include refid="coreCommonProcedureMapper.beginTans"/>
	</update>
	
	<sql id ="createAudit_Details_Temp">
		
		CREATE TABLE #AUDIT_DETAILS_TMP
		( 
		  APP_NAME    VARCHAR(4) NULL,
		  TRX_NUMBER  VARCHAR(80) NULL,
		  LINE_NUMBER NUMERIC(6) NULL,
		  FIELD_NAME  VARCHAR(100) NULL,
		  OLD_VALUE   VARCHAR(500) NULL,
		  NEW_VALUE   VARCHAR(500) NULL,
		  ACTION_DATE DATE NULL ,
		  PROG_REF    VARCHAR(15)NULL ,
		  ACTION_TYPE VARCHAR(1) NULL,
		)
	</sql>


    <select id="callScoreSiron" parameterType="cifSC" statementType="CALLABLE">
     { CALL P_RET_SCORE_SIRON( 
   								 #{compCode, 			mode=INOUT, jdbcType=NUMERIC},
   								 #{kycCode,				mode=IN, jdbcType=NUMERIC},
   								 #{sironGrade,			mode=OUT, jdbcType=NUMERIC},
   								 #{pepDescription,	    mode=OUT, jdbcType=VARCHAR}),
   								 #{errorCode,			mode=OUT, jdbcType=NUMERIC},
                       	  		 #{errorMessage,	    mode=OUT, jdbcType=VARCHAR})
                        	  	}
    </select>
	
	<update id ="dropHashAuditDetails">
		<include refid="coreCommonProcedureMapper.dropAudit_Details_Temp"/>
	</update>	
	
	
	<sql id="dropAudit_Details_Temp">
		IF OBJECT_ID('#AUDIT_DETAILS_TMP') IS NOT NULL
		BEGIN
			DROP TABLE #AUDIT_DETAILS_TMP
		END	
	</sql>
	
	
	<select id="callProcVisaImport" parameterType="trxMgntSC" statementType="CALLABLE">
	{ CALL P_RET_IMPORT_VISA(
		#{compCode				,mode=IN, 	jdbcType=NUMERIC},
		#{branchCode			,mode=IN, 	jdbcType=NUMERIC},
		#{userId				,mode=IN, 	jdbcType=VARCHAR},
		#{isoInterface    		,mode=IN, 	jdbcType=NUMERIC},
		#{is_tc_92          	,mode=IN, 	jdbcType=VARCHAR},
		#{fileName          	,mode=IN, 	jdbcType=VARCHAR},
		#{fileCode          	,mode=IN, 	jdbcType=VARCHAR},
		#{baseCurrencyCode    	,mode=IN, 	jdbcType=NUMERIC},
		#{runningDate			,mode=IN, 	jdbcType=DATE},
		#{batchNo				,mode=OUT,	jdbcType=VARCHAR},
		#{errorCode,		mode=OUT, 	jdbcType=NUMERIC},
		#{errorMessage,		mode=OUT, 	jdbcType=VARCHAR}
	)}
	</select>


	<select id="callProcVisaMatch" parameterType="trxMgntSC" statementType="CALLABLE">
	{ CALL P_RET_MATCH_VISA(
		#{compCode				,mode=IN, 	jdbcType=NUMERIC},
		#{branchCode			,mode=IN, 	jdbcType=NUMERIC},
		#{userId				,mode=IN, 	jdbcType=VARCHAR},
		#{isoInterface    		,mode=IN, 	jdbcType=NUMERIC},
		#{runningDate			,mode=IN, 	jdbcType=DATE},
		#{batchNo				,mode=IN,	jdbcType=VARCHAR},
		#{action				,mode=IN,	jdbcType=VARCHAR},
		#{sequence_no			,mode=IN,	jdbcType=NUMERIC},
		#{trsNo					,mode=IN,	jdbcType=NUMERIC},
		#{errorCode,		mode=OUT, 	jdbcType=NUMERIC},
		#{errorMessage,		mode=OUT, 	jdbcType=VARCHAR}
	)}
	</select>
	

	<sql id ="createCTSTRSTemp">

		CREATE  TABLE #CTSTRS_TEMP
		(
			COMP_CODE                   NUMERIC(4) 		NOT NULL,
			BRANCH_CODE                 NUMERIC(4) 		NOT NULL,
			TRS_TYPE                    VARCHAR(1) 		NOT NULL,
			CB_IND                      VARCHAR(1) 		NOT NULL,
			TRS_NO                      NUMERIC(12) 	NOT NULL,
			STATUS                      VARCHAR(1) 		NOT NULL,
			TRS_DATE                    DATE 			NULL,
			VALUE_DATE                  DATE 			NULL,
			DATE_REQUESTED              DATE 			NULL,
			RELEASE_DATE                DATE 			NULL,
			TRS_AC_BR                   NUMERIC(4) 		NULL,
			TRS_AC_CY                   NUMERIC(3)  	NULL,
			TRS_AC_GL                   NUMERIC(6)  	NULL,
			TRS_AC_CIF                  NUMERIC(8)  	NULL,
			TRS_AC_SL                   NUMERIC(3)  	NULL,
			AMOUNT                      NUMERIC(20,3) 	NULL,
			TRS_CY                      NUMERIC(3) 		NULL,
			EXCHANGE_RATE               NUMERIC(20,12) 	NULL,
			TRS_METHOD                  VARCHAR(1) 		NULL,
			BANK_CIF                    NUMERIC(8) 		NULL,
			INSTRUCTIONS1               VARCHAR(40)		NULL,
			INSTRUCTIONS2               VARCHAR(56)		NULL,
			INSTRUCTIONS3               VARCHAR(40)		NULL,
			INSTRUCTIONS4               VARCHAR(40)		NULL,
			CHARGE                      NUMERIC(20,3)	NULL,
			CASH_DEDUCT_IND             VARCHAR(1)		NULL,
			CTRL_CY                     NUMERIC(3)		NULL,
			CTRL_GL                     NUMERIC(6)		NULL,
			CTRL_CIF                    NUMERIC(8)		NULL,
			CTRL_SL                     NUMERIC(3)		NULL,
			REMARKS1                    VARCHAR(40)		NULL,
			REMARKS2                    VARCHAR(40)		NULL,
			REMARKS3                    VARCHAR(40)		NULL,
			REFERENCE1                  VARCHAR(40)		NULL,
			REFERENCE2                  VARCHAR(40)		NULL,
			REFERENCE3                  VARCHAR(40)		NULL,
			CREATED_BY                  VARCHAR(8)		NULL,
			MODIFIED_BY                 VARCHAR(8)		NULL,
			DATE_MODIFIED               DATE			NULL,
			DELETED_BY                  VARCHAR(8)		NULL,
			DATE_DELETED                DATE			NULL,
			REVERSED_BY                 VARCHAR(8)		NULL,
			DATE_REVERSED               DATE			NULL,
			AUTH_BY                     VARCHAR(8)		NULL,
			DATE_AUTH                   DATE			NULL,
			REJECTED_BY                 VARCHAR(8)		NULL,
			DATE_REJECTED               DATE			NULL,
			FACILITY_REF                NUMERIC(12)		NULL,
			RECEIPT_NO                  NUMERIC(12)		NULL,
			TRS_AC_AMOUNT               NUMERIC(20,3)	NULL,
			PRINT_DR_ADVICE             VARCHAR(1)		NULL,
			PRINT_CR_ADVICE             VARCHAR(1)		NULL,
			BANK_CIF_NAME               VARCHAR(40)		NULL,
			CLEAR_STATUS                VARCHAR(1)		NULL,
			CLEARED_BY                  VARCHAR(8)		NULL,
			DATE_CLEARED                DATE			NULL,
			CLEAR_AUTH_BY               VARCHAR(8)		NULL,
			DATE_CLEAR_AUTH             DATE			NULL,
			VOID_REASON                 VARCHAR(60)		NULL,
			ORIGIN                      VARCHAR(1)		NULL,
			CV_AMOUNT                   NUMERIC(20,3)	NULL,
			TRADE_TRX_TYPE              NUMERIC(4)		NULL,
			TRADE_TRX_NO                NUMERIC(10)		NULL,
			DOC_LANG                    VARCHAR(1)		NULL,
			MULT_DIV_IND                VARCHAR(1)		NULL,
			TO_TRS_AC_BR                NUMERIC(4)		NULL,
			TO_TRS_AC_CY                NUMERIC(3)		NULL,
			TO_TRS_AC_GL                NUMERIC(6)		NULL,
			TO_TRS_AC_CIF               NUMERIC(8)		NULL,
			TO_TRS_AC_SL                NUMERIC(3)		NULL,
			DEPOSIT_TRS_NO              NUMERIC(12)		NULL,
			WITHDRAWAL_TRS_NO           NUMERIC(12)		NULL,
			TRADE_DOC_TYPE              VARCHAR(1)		NULL,
			TRADE_IND                   VARCHAR(1)		NULL,
			SWIFT_TRX_NO                NUMERIC(10)		NULL,
			TEST_KEY                    VARCHAR(20)		NULL,
			PARTY_BANK                  NUMERIC(8)		NULL,
			PARTY_ACCNO                 VARCHAR(70)		NULL,
			INSTRUCTION_TYPE            NUMERIC(3)		NULL,
			COUNTER_PARTY               NUMERIC(8)		NULL,
			FACILITY_APPLICATION_REF    NUMERIC(12)		NULL,
			FACILITY_COLLATERAL_REF     NUMERIC(12)		NULL,
			DATE_POSTED                 DATE			NULL,
			OBJ_CODE                    NUMERIC(15)		NULL,
			STOCK_FREE                  VARCHAR(1)		NULL,
			PARTY_BANK_BIC_CODE         VARCHAR(20)		NULL,
			TRSFR_METHOD                VARCHAR(1)		NULL,
			DEAL_NUMBER                 NUMERIC(10)		NULL,
			TRANSFER_TO_FROM_ACC        VARCHAR(1)		NULL,
			TRX_TYPE                    NUMERIC(3)		NULL,
			CORR_BANK                   NUMERIC(8)		NULL,
			CORR_BANK_NAME              VARCHAR(20)		NULL,
			BENEF_BANK                  NUMERIC(8)		NULL,
			BENEF_BANK_NAME             VARCHAR(50)		NULL,
			BENEF_ACC                   VARCHAR(40)		NULL,
			BENEF_NAME                  VARCHAR(200)	NULL,
			DESTIN_COUNTRY              NUMERIC(3)		NULL,
			ACC_ADDITIONAL_REFERENCE    VARCHAR(35)		NULL,
			TELLER_CODE                 NUMERIC(6)		NULL,
			CHQ_NUM                     NUMERIC(10)		NULL,
			CHQ_ACC_NUM                 VARCHAR(35)		NULL,
			CHQ_DATE                    DATE			NULL,
			FC_CHARGES                  NUMERIC(20,6)	NULL,
			ORIGIN_BR_I                 NUMERIC(4)		NULL,
			ORIGIN_BR_U                 NUMERIC(4)		NULL,
			ORIGIN_BR_D                 NUMERIC(4)		NULL,
			JV_OP_NO                    NUMERIC(9)		NULL,
			TEMPLATE_CODE               NUMERIC(6)		NULL,
			BENEF_BANK_BIC_CODE         VARCHAR(12)		NULL,
			AMOUNT_RECEIVED             NUMERIC(20,3)	NULL,
			CREATED_DATE                DATE			NULL,
			SIGN_GROUP_ID               VARCHAR(1)		NULL,
			BANK_CIF_BR                 VARCHAR(15)		NULL,
			SO_FROM_DAY                 NUMERIC(2)		NULL,
			SO_TO_DAY                   NUMERIC(2)		NULL,
			ATM_REFERENCE               VARCHAR(50)		NULL,
			SERVER_APPROVED_DATE        DATE			NULL,
			SERVER_CREATED_DATE         DATE			NULL,
			SERVER_REVERSED_DATE        DATE			NULL,
			DEPOSITER_ID                VARCHAR(40)		NULL,
			DEPOSITER_NAME              VARCHAR(40)		NULL,
			CHQ_SETTL_FLAG              VARCHAR(1)		NULL,
			TRS_AC_BALANCE              NUMERIC(20,3)	NULL,
			TO_TRS_AC_BALANCE           NUMERIC(20,3)	NULL,
			EXCH_REFERENCE              VARCHAR(50)		NULL,
			TEL                         VARCHAR(30)		NULL,
			ID_TYPE                     NUMERIC(3)		NULL,
			BENEF_BANK_BR               VARCHAR(40)		NULL,
			DATE_CANCELED               DATE			NULL,
			CANCELED_BY                 VARCHAR(8)		NULL,
			REMITTANCE_FR_NUM           NUMERIC(10)		NULL,
			REMITTANCE_TO_NUM           NUMERIC(10)		NULL,
			BENEF_ADDRESS               VARCHAR(50)		NULL,
			BENEF_CITY                  NUMERIC(6)		NULL,
			LINKTOOTHER_TRXNO           NUMERIC(12)		NULL,
			EXCEP_APP                   VARCHAR(30)		NULL,
			CH_AC_BR                    NUMERIC(4)		NULL,
			CH_AC_CY                    NUMERIC(3)		NULL,
			CH_AC_GL                    NUMERIC(6)		NULL,
			CH_AC_CIF                   NUMERIC(8)		NULL,
			CH_AC_SL                    NUMERIC(3)		NULL,
			PAYLAY_BATCHNO              NUMERIC(8)		NULL,
			PAYLAY_SEQNO                NUMERIC(3)		NULL,
			TO_CANCEL_DATE              DATE			NULL,
			TO_CANCEL_BY                VARCHAR(8)		NULL,
			TO_REVERSE_DATE             DATE			NULL,
			TO_REVERSE_BY               VARCHAR(8)		NULL,
			TO_RELEASE_DATE             DATE			NULL,
			TO_RELEASE_BY               VARCHAR(8)		NULL,
			BENEF_ADDRESS_2             VARCHAR(50)		NULL,
			BENEF_ADDRESS_3             VARCHAR(50)		NULL,
			ORIGINAL_EXCH_RATE          NUMERIC(20,12)	NULL,
			AC_CURRENT_BAL              NUMERIC(22,6)	NULL,
			TO_ACC_ADD_REF              VARCHAR(35)		NULL,
			MULTI_CHQ_CODE              NUMERIC(12)		NULL,
			TO_BE_STOPPED_SO_BY         VARCHAR(8)		NULL,
			TO_BE_STOPPED_SO_DATE       DATE			NULL,
			STOPPED_SO_BY               VARCHAR(8)		NULL,
			STOPPED_SO_DATE             DATE			NULL,
			REACTIVATED_SO_BY           VARCHAR(8)		NULL,
			REACTIVATED_SO_DATE         DATE			NULL,
			CARD_NO                     VARCHAR(600)	NULL,
			TO_BE_SENT_NI               VARCHAR(1)		NULL,
			BENEF_ADDRESS_4             VARCHAR(50)		NULL,
			INTERM_BANK                 NUMERIC(8)		NULL,
			INTERM_BANK_ACC             VARCHAR(40)		NULL,
			INTERM_BANK_BIC             VARCHAR(40)		NULL,
			BENEF_BANK_ADDRESS          VARCHAR(40)		NULL,
			INTERM_BANK_ADDRESS_1       VARCHAR(40)		NULL,
			INTERM_BANK_ADDRESS_2       VARCHAR(40)		NULL,
			INTERM_BANK_NAME            VARCHAR(40)		NULL,
			SWIFT_CHARGE                VARCHAR(3)		NULL,
			DEPOSITER_ADDRESS_1         VARCHAR(50)		NULL,
			DEPOSITER_ADDRESS_2         VARCHAR(50)		NULL,
			DEPOSITER_ADDRESS_3         VARCHAR(50)		NULL,
			BENEF_BANK_ADDRESS_1        VARCHAR(40)		NULL,
			BENEF_BANK_ADDRESS_2        VARCHAR(40)		NULL,
			INTERM_BANK_BR              VARCHAR(40)		NULL,
			INTERM_BANK_ADDRESS         VARCHAR(40)		NULL,
			BENEF_BANK_ACC              VARCHAR(40)		NULL,
			SWIFT_SEND_RECEIVE          VARCHAR(10)		NULL,
			SWIFT_MESS                  VARCHAR(40)		NULL,
			SWIFT_SEND_RECEIVE1         VARCHAR(10)		NULL,
			SWIFT_MESS1                 VARCHAR(40)		NULL,
			REV_JV_OPNO                 NUMERIC(9)		NULL,
			SO_PERIODICITY              VARCHAR(1)		NULL,
			SO_PERIODICITY_TYPE         VARCHAR(1)		NULL,
			SO_PERIOD_DAY               NUMERIC(2)		NULL,
			SO_NUM_PAY                  NUMERIC(6)		NULL,
			SO_REFERENCE                VARCHAR(50)		NULL,
			STATUS_REASON_DESC          VARCHAR(250)	NULL,
			SUP_CIF                     NUMERIC(8) 		DEFAULT 0		NULL,
			TRS_DATE_HIJRI              DATE			NULL,
			VALUE_DATE_HIJRI            DATE			NULL,
			FACILITY_NO                 NUMERIC(12)		NULL,
			PAYEE_NAME                  VARCHAR(60)		NULL,
			SO_FIRST_PAYMENT            NUMERIC(20,3)	NULL,
			SO_LAST_PAYMENT             NUMERIC(20,3)	NULL,
			OVERDRAW_AMOUNT             NUMERIC(20,3)	NULL,
			DEPOSITER_NATIONALITY       NUMERIC(3)		NULL,
			REMITT_CY                   VARCHAR(1)		NULL,
			TO_VOID_BY                  VARCHAR(8)		NULL,
			TO_VOID_DATE                DATE			NULL,
			REMARKS_TAG72               VARCHAR(140)	NULL,
			ADDITIONAL_REFERENCE        VARCHAR(50)		NULL,
			DEAL_NO_TRX                 VARCHAR(25)		NULL,
			SWIFT_SEND_RECEIVE2         VARCHAR(10)		NULL,
			SWIFT_MESS2                 VARCHAR(40)		NULL,
			SWIFT_SEND_RECEIVE3         VARCHAR(10)		NULL,
			SWIFT_MESS3                 VARCHAR(40)		NULL,
			RECEIVER_CORR_BANK_BIC_CODE VARCHAR(12)		NULL,
			RECEIVER_CORR_BANK_ADDRESS  VARCHAR(40)		NULL,
			RECEIVER_CORR_BANK_ADDRESS1 VARCHAR(40)		NULL,
			RECEIVER_CORR_BANK_ADDRESS2 VARCHAR(40)		NULL,
			RECEIVER_CORR_BANK_ADDRESS3 VARCHAR(40)		NULL,
			TO_BE_SENT_TO_NI            VARCHAR(1)		NULL,
			NI_POSTING_COUNTER          NUMERIC(2)		NULL,
			SO_PERIOD_MONTH             NUMERIC(2)		NULL,
			LINKTOOTHER_TRXNO_BR        NUMERIC(4)		NULL,
			START_CREATED_DATE          DATE			NULL,
			PROCESSED_BY                VARCHAR(8)		NULL,
			DATE_PROCESSED              DATE			NULL,
			SEND_TO_OBC_BY              VARCHAR(8)		NULL,
			DATE_SEND_TO_OBC            DATE			NULL,
			RETURNED_BY                 VARCHAR(8)		NULL,
			DATE_RETURNED               DATE			NULL,
			TO_BE_RETURNED_BY           VARCHAR(8)		NULL,
			DATE_TO_BE_RETURNED         DATE			NULL,
			SO_PERIOD_INTERVAL          NUMERIC(3)		NULL,
			SO_PERC                     NUMERIC(10,6)	NULL,
			SO_PERC_MIN                 NUMERIC(20,3)	NULL,
			SO_PERC_MAX                 NUMERIC(20,3)	NULL,
			TRX_TEMPLATE                NUMERIC(6)		NULL,
			SWIFT_DATE_ACTIVE           DATE			NULL,
			MT202_FIELD21               VARCHAR(16)		NULL,
			MT202_FIELD72_1             VARCHAR(35)		NULL,
			MT202_FIELD72_2             VARCHAR(35)		NULL,
			MT202_FIELD72_3             VARCHAR(35)		NULL,
			MT202_FIELD72_4             VARCHAR(35)		NULL,
			MT202_FIELD72_5             VARCHAR(35)		NULL,
			MT202_FIELD72_6             VARCHAR(35)		NULL,
			MT103_FIELD70_1             VARCHAR(35)		NULL,
			MT103_FIELD70_2             VARCHAR(35)		NULL,
			MT103_FIELD70_3             VARCHAR(35)		NULL,
			MT103_FIELD70_4             VARCHAR(35)		NULL,
			MT103_FIELD72_1             VARCHAR(35)		NULL,
			MT103_FIELD72_2             VARCHAR(35)		NULL,
			MT103_FIELD72_3             VARCHAR(35)		NULL,
			MT103_FIELD72_4             VARCHAR(35)		NULL,
			MT103_FIELD72_5             VARCHAR(35)		NULL,
			MT103_FIELD72_6             VARCHAR(35)		NULL,
			MT103_FIELD71F              NUMERIC(20,3)	NULL,
			SWIFT_TYPE                  VARCHAR(1)		NULL,
			REALIZED_AMT                NUMERIC(20,3)	NULL,
			RECEIVER_BANK               NUMERIC(8)		NULL,
			RECEIVER_BANK_NAME          VARCHAR(40)		NULL,
			VERIFY_STATUS               VARCHAR(2)		NULL,
			VERIFIED_BY                 VARCHAR(10)		NULL,
			DATE_VERIFIED               DATE			NULL,
			USER_EXCH_RATE              NUMERIC(20,6)	NULL,
			TO_BE_CLOSED_SO_BY          VARCHAR(8)		NULL,
			TO_BE_CLOSED_SO_DATE        DATE			NULL,
			CLOSED_SO_BY                VARCHAR(8)		NULL,
			CLOSED_SO_DATE              DATE			NULL,
			OLD_STATUS                  VARCHAR(1)		NULL,
			APPROVE_REACTIVATE_SO_BY    VARCHAR(8)		NULL,
			APPROVE_REACTIVATE_SO_DATE  DATE			NULL,
			SO_PERC_CR                  NUMERIC(10,6)	NULL,
			RECEIVER_CORR_BANK_BR       VARCHAR(35)		NULL,
			RECEIVER_CORR_BANK_ACC      VARCHAR(34)		NULL,
			PARTY_BANK_BR               VARCHAR(35)		NULL,
			RECEIVER_CHARGES            NUMERIC(20,3)	NULL,
			SWIFT_SEND_RECEIVE4         VARCHAR(10)		NULL,
			SWIFT_MESS4                 VARCHAR(40)		NULL,
			SWIFT_SEND_RECEIVE5         VARCHAR(10)		NULL,
			SWIFT_MESS5                 VARCHAR(40)		NULL,
			INSTRUCTIONS5               VARCHAR(40)		NULL,
			SENDER_CHARGES              NUMERIC(20,3)	NULL,
			BILL_TYPE                   NUMERIC(4)		NULL,
			DATE_UPDATED                DATE			NULL,
			BENEF_COUNTRY_CODE          NUMERIC(3)		NULL,
			FORCE_POST_YN				VARCHAR(1)		NULL,
			ALLOW_FROM_ACC_SAME_TO_ACC 	VARCHAR(1) 		DEFAULT '0'		NULL, 
			ERROR_CODE 					NUMERIC(6)		NULL, 
			ERROR_DESC 					VARCHAR(500)	NULL,
			CONSTRAINT PK_CTSTRS_TEMP PRIMARY KEY CLUSTERED (COMP_CODE, BRANCH_CODE, TRS_TYPE, CB_IND, TRS_NO)
			
		)
		lock datarows
		
	</sql>

	<sql id="dropRunTimeProcArgTable">
		IF OBJECT_ID('#SYS_RUNTIME_PROC_ARG_TMP') IS NOT NULL
		BEGIN
			DROP TABLE #SYS_RUNTIME_PROC_ARG_TMP
		END	
	</sql>
	
	<sql id ="createRunTimeProcArgTable">
		CREATE TABLE #SYS_RUNTIME_PROC_ARG_TMP(
		      PROC_NAME               VARCHAR(30),
		      ARG_NAME                VARCHAR(120),
		      ARG_VAL_NUMERIC         NUMERIC(24,6) NULL,
		      ARG_VAL_STRING          VARCHAR(4000) NULL,
		      ARG_VAL_DATE            DATE NULL)
	</sql>
	
	
	
	<select id="callProcExecDynFilesStatement" 	parameterType="dynFilesSC" statementType="CALLABLE">
    
    { CALL P_EXE_DYN_FILES_STATEMENTS_THR(#{userId, 			mode=IN,jdbcType=VARCHAR},
		                               		#{fileCode, 	 	mode=IN,jdbcType=VARCHAR},
		                               		#{proceed,	 	    mode=IN,jdbcType=NUMERIC},
		                               		#{threadId,	 	    mode=IN,jdbcType=NUMERIC},                                		
		                               		#{errorCode,	    mode=OUT, jdbcType=NUMERIC},
		                               		#{errorMessage,	    mode=OUT, jdbcType=VARCHAR}
		                               		)}  
    </select>

	
	<select id="updateFxDeal" 	parameterType="com.path.vo.core.trxmgnt.fxdeal.TrxMgntFxDealSC" statementType="CALLABLE">
    	{CALL P_IIS_UPDATE_FX_LINKED_UTIL(#{compCode,    			mode=IN,jdbcType=NUMERIC},
											#{branchCode,        	mode=IN,jdbcType=NUMERIC},
											#{trsNo,            	mode=IN,jdbcType=NUMERIC},
											#{currAppName,       	mode=IN,jdbcType=VARCHAR},
											#{dealBrCode,  		    mode=IN,jdbcType=NUMERIC},
											#{dealNo,  			    mode=IN,jdbcType=NUMERIC},
											#{utilAmount,           mode=IN,jdbcType=NUMERIC},
											#{utilAmountCV,         mode=IN,jdbcType=NUMERIC},
											#{rate,                 mode=IN ,jdbcType=NUMERIC},
											#{status, 				mode=IN ,jdbcType=VARCHAR},
											#{trxDate,          	mode=IN ,jdbcType=DATE},
											#{userId,             	mode=IN,jdbcType=VARCHAR},
											#{trxOrigin,           	mode=IN,jdbcType=VARCHAR},
											#{errorCode,           	mode=OUT,jdbcType=NUMERIC},
											#{errorMessage,         mode=OUT ,jdbcType=VARCHAR}
											)}  
    </select>
    
     <!-- Habib Baalbaki accocunt restriction 372747	-->
    <select id="callP_SADS_WRAP_PPL_ACC_REST" parameterType="accountSC" statementType="CALLABLE" >
		{ CALL P_SADS_WRAP_PPL_ACC_REST(
                       		  #{compCode 	,  			 mode=IN,jdbcType=NUMERIC},
				              #{currAppName ,			 mode=IN,jdbcType=VARCHAR},
				              #{pageRef     ,			 mode=IN,jdbcType=VARCHAR},
				              #{userId      ,			 mode=IN,jdbcType=VARCHAR},
				              #{errType    	,			 mode=OUT,jdbcType=VARCHAR},
				              #{rtrnVal    	,			 mode=OUT,jdbcType=NUMERIC},
				              #{errCode    	,			 mode=OUT,jdbcType=NUMERIC},
				              #{errMsg     	,			 mode=OUT,jdbcType=VARCHAR}
                       		 )
		}
	</select>
	
	<sql id="dropSqlACC_RESTRICTION_TEMP">
		IF OBJECT_ID('#ACC_RESTRICTION_TEMP') IS NOT NULL
		BEGIN
			DROP TABLE #ACC_RESTRICTION_TEMP
		END	
	</sql>
	
	<update id="dropACC_RESTRICTION_TEMP"  statementType="STATEMENT">
		<include refid="coreCommonProcedureMapper.dropSqlACC_RESTRICTION_TEMP"/>	
	</update>
	

	<sql id="createSqlACC_RESTRICTION_TEMP" >
		CREATE TABLE  #ACC_RESTRICTION_TEMP (
			COMP_CODE          		NUMERIC(4) NOT NULL,
			BRANCH_CODE           	NUMERIC(4) NOT NULL,
			USER_ID           		VARCHAR(8) 	 NOT NULL,
			APP_NAME 				VARCHAR(4) 	 NOT NULL,
			PROG_REF   				VARCHAR(15)  NOT NULL,
			CURRENCY_CODE   		NUMERIC(3,0)  NULL,
			GL_CODE   				NUMERIC(6,0)  NULL,
			CIF_SUB_NO   			NUMERIC(8,0)  NULL,
			SL_NO   				NUMERIC(3,0)  NULL,
			CIF_TYPE   				NUMERIC(4,0)  NULL
		)
	</sql>
	
	<update id="createACC_RESTRICTION_TEMP"  statementType="STATEMENT" parameterType="accountSC">
		<include refid="coreCommonProcedureMapper.createSqlACC_RESTRICTION_TEMP"/>
		<include refid="coreCommonProcedureMapper.beginTans"/>	
	</update>


	<update id="createAlertFillDetailsTemp"  statementType="STATEMENT" parameterType="accountSC">
		<include refid="coreCommonProcedureMapper.createALRT_FILL_DETAILS_TMP"/>
		<include refid="coreCommonProcedureMapper.beginTans"/>	
	</update>
	<update id ="dropAlertFillDetailsTemp">
		<include refid="coreCommonProcedureMapper.dropALRT_FILL_DETAILS_TMP"/>
	</update>


	<sql id="dropALRT_FILL_DETAILS_TMP">
		IF OBJECT_ID('#ALRT_FILL_DETAILS_TMP') IS NOT NULL
		BEGIN
			DROP TABLE #ALRT_FILL_DETAILS_TMP
		END	
	</sql>

	<sql id="createALRT_FILL_DETAILS_TMP">
	CREATE TABLE #ALRT_FILL_DETAILS_TMP(
		COMP_CODE			NUMERIC(4,0)	NULL,
		BRANCH_CODE			NUMERIC(4,0)	NULL,
		
		DB_SESSION_ID		numeric(35,0) 	NULL,
		CIF_NO				NUMERIC(8) 		NULL,
		
		ACC_BRANCH_CODE    	NUMERIC(4)		NULL,
		ACC_CURRENCY_CODE   NUMERIC(3)		NULL,
		ACC_GL_CODE    		NUMERIC(6)		NULL,
		ACC_CIF_SUB_NO    	NUMERIC(8)		NULL,
		ACC_SL_NO    		NUMERIC(3)		NULL,
	
		CTS_CB_IND			VARCHAR(1)		NULL,
		CTS_TRS_TYPE		VARCHAR(1)		NULL,
		CTS_TRS_BR			NUMERIC(4)		NULL,
		CTS_TRS_NO			NUMERIC(12)		NULL,
		TRX_NO   			NUMERIC(12,0)	NULL,
	
		TRX_CURRENCY		VARCHAR(3)		NULL,
		SETTL_CURRENCY		VARCHAR(3)		NULL,
		TRX_AMT				VARCHAR(18)		NULL,
		SETTL_AMT			VARCHAR(18)		NULL,
		CARD_NO				VARCHAR(20)		NULL,
		LOCAL_TIME			VARCHAR(12)		NULL,
		LOCAL_DATE			VARCHAR(12)		NULL,
		SETTL_DATE			VARCHAR(12)		NULL,
		TRX_TYPE			VARCHAR(1)		NULL,
		ACCEPTOR_TERM_ID	VARCHAR(16)		NULL,
		ACCEPTOR_ID_CODE	VARCHAR(15)		NULL,
		ACCEPTOR_NAME		VARCHAR(40)		NULL,
		FROM_ACC			VARCHAR(35)		NULL,
		TO_ACC				VARCHAR(35)		NULL,
		M_TYPE				VARCHAR(4)		NULL,
		ACQ_INST_CODE		VARCHAR(3)		NULL,
		STATUS				VARCHAR(3)		NULL,
		PROCESS_CODE		VARCHAR(6)		NULL,
		POS					NUMERIC(2)		NULL
	)
	</sql>



	 <select id="accLimitValidationChecking" parameterType="accountSC" statementType="CALLABLE">
    { CALL P_RET_ACC_LIMITS_VALIDATION( #{compCode,		 	mode=IN, jdbcType=NUMERIC},
						    			 #{loginBranchCode,		mode=IN, jdbcType=NUMERIC},
						    			 #{runningDate,	 		mode=IN, jdbcType=DATE},
						    			 #{userId,			 	mode=IN, jdbcType=VARCHAR},
						    			 #{appName,			 	mode=IN, jdbcType=VARCHAR},						    			 
						    			 #{callingIndicator,	mode=IN, jdbcType=VARCHAR},
						    			 #{accTierNOChar,		mode=IN, jdbcType=VARCHAR},
						    			 #{nullable,			mode=IN, jdbcType=VARCHAR},
						    			 #{nullableDecimal,		mode=IN, jdbcType=NUMERIC},
						    			 #{nullableDecimal,		mode=IN, jdbcType=NUMERIC},
						    			 #{branchCode,			mode=IN, jdbcType=NUMERIC},
						    			 #{currencyCode,	 	mode=IN, jdbcType=NUMERIC},
						    			 #{glCode,			 	mode=IN, jdbcType=NUMERIC},
						    			 #{cifCode,	 			mode=IN, jdbcType=NUMERIC},
						    			 #{slNbr,			 	mode=IN, jdbcType=NUMERIC},
						    			 #{nullableDecimal,		mode=IN, jdbcType=NUMERIC},
						    			 #{amount,				mode=IN, jdbcType=NUMERIC},
						    			 #{errorType,    		mode=OUT, jdbcType=VARCHAR},
						    			 #{errorCode,			mode=OUT, jdbcType=NUMERIC},
		                       			 #{errorMessage,    	mode=OUT, jdbcType=VARCHAR})
		                        		}
    </select>
    
    
    
    <select id="recalculatePointsAccruals" 	parameterType="accountSC" statementType="CALLABLE">
    	{CALL P_CORE_ADJUST_FMA_PT_ACCRUALS (#{compCode,    	    mode=IN,jdbcType=NUMERIC},
											#{brCode,        		mode=IN,jdbcType=NUMERIC},
											#{currencyCode,         mode=IN,jdbcType=NUMERIC},
											#{glCode,       		mode=IN,jdbcType=NUMERIC},
											#{cifCode,  		    mode=IN,jdbcType=NUMERIC},
											#{slNbr,  			    mode=IN,jdbcType=NUMERIC},
											#{lineNb,           	mode=IN,jdbcType=NUMERIC},
											#{proceedFlag,         	mode=IN,jdbcType=NUMERIC},
											#{baseCurrencyCode,     mode=IN ,jdbcType=NUMERIC},
											#{userId, 				mode=IN ,jdbcType=VARCHAR},
											#{runningDate,          mode=IN ,jdbcType=DATE},
											#{langCode,             mode=IN,jdbcType=VARCHAR},
											#{errorCode,           	mode=OUT,jdbcType=NUMERIC},
											#{errorMessage,         mode=OUT ,jdbcType=VARCHAR}
											)}  
    </select>
    
    	<select id="createHashTables" parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL P_CREATE_HASH_TABLES(    #{compCode ,mode=IN ,jdbcType=NUMERIC},
			                        #{branchCode ,mode=IN,jdbcType=NUMERIC },
								    #{errorCode ,mode=OUT ,jdbcType=NUMERIC},
		                            #{errorMessage ,mode=OUT ,jdbcType=VARCHAR}	)}
	</select>



	<select id="callCheckAccountData" parameterType="accountSC" statementType="CALLABLE">
      { CALL P_RET_CHECK_ACCOUNT_DATA( 
								#{compCode, 		mode=IN, 	jdbcType=NUMERIC},
								#{userId,         	mode=IN, 	jdbcType=VARCHAR},
								#{branchCode,  		mode=IN, 	jdbcType=NUMERIC},
								#{currencyCode, 	mode=IN, 	jdbcType=NUMERIC},
								#{glCode, 			mode=IN, 	jdbcType=NUMERIC},
								#{cifCode,      	mode=IN, 	jdbcType=NUMERIC},
								#{slNbr, 			mode=IN, 	jdbcType=NUMERIC},
								#{flag, 			mode=IN, 	jdbcType=VARCHAR},
								#{errorType,		mode=OUT, 	jdbcType=VARCHAR},
								#{errorCode,		mode=OUT, 	jdbcType=NUMERIC},
								#{errorMessage,		mode=OUT, 	jdbcType=VARCHAR})
                        	}
    </select>	
    
    <select id="callFmsFillShadowAccount" 	parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL 
	    P_FMS_WRAP_FILL_SHADOW_ACC(	#{compCode,			mode=IN,	jdbcType=NUMERIC},
									#{cardNo,			mode=IN,	jdbcType=VARCHAR},
									#{shadowAccountBr,	mode=OUT,	jdbcType=NUMERIC},
									#{shadowAccountCy,	mode=OUT,	jdbcType=NUMERIC},
									#{shadowAccountGl,	mode=OUT,	jdbcType=NUMERIC},
									#{shadowAccountCif,	mode=OUT,	jdbcType=NUMERIC},
									#{shadowAccountSl,	mode=OUT,	jdbcType=NUMERIC},
									#{fundingAccountBr,	mode=OUT,	jdbcType=NUMERIC},
									#{fundingAccountCy,	mode=OUT,	jdbcType=NUMERIC},
									#{fundingAccountGl,	mode=OUT,	jdbcType=NUMERIC},
									#{fundingAccountCif,mode=OUT,	jdbcType=NUMERIC},
									#{fundingAccountSl, mode=OUT,	jdbcType=NUMERIC},
									#{errorCode,		mode=OUT, 	jdbcType=NUMERIC},
									#{errorMessage,		mode=OUT, 	jdbcType=VARCHAR})
	}				                   	
   </select>
   
   <select id="callPcsGetAdvanceAmount" parameterType="accountsManagementCO" statementType="CALLABLE">
    { CALL 
	    P_PCS_WRAP_ADVANCE_PAYMENT (#{loginCompCode,									mode=IN,	jdbcType=NUMERIC},
	    							#{loginBraCode,										mode=IN,	jdbcType=NUMERIC},
	    							#{amfVO.CURRENCY_CODE,								mode=IN,	jdbcType=NUMERIC},
	    							#{amfVO.GL_CODE,									mode=IN,	jdbcType=NUMERIC},
	    							#{amfVO.CIF_SUB_NO,									mode=IN,	jdbcType=NUMERIC},
	    							#{amfVO.SL_NO,										mode=IN,	jdbcType=NUMERIC},
	    							#{amfExtendedVO.ADVANCE_PROFIT_PAY_BR,				mode=IN,	jdbcType=NUMERIC},
	    							#{amfExtendedVO.ADVANCE_PROFIT_PAY_CY,				mode=IN,	jdbcType=NUMERIC},
	    							#{amfExtendedVO.ADVANCE_PROFIT_PAY_GL,				mode=IN,	jdbcType=NUMERIC},
	    							#{amfExtendedVO.ADVANCE_PROFIT_PAY_CIF,				mode=IN,	jdbcType=NUMERIC},
	    							#{amfExtendedVO.ADVANCE_PROFIT_PAY_SL,				mode=IN,	jdbcType=NUMERIC},
	    							#{amfVO.OPEN_DEP_AMOUNT,							mode=IN,	jdbcType=NUMERIC},
									#{advanceRate,										mode=IN,	jdbcType=NUMERIC},
									#{amfVO.PT_METHOD_DAYS,								mode=IN,	jdbcType=NUMERIC},
									#{runningDate,										mode=IN,	jdbcType=DATE},
									#{amfVO.DATE_OPND,									mode=IN,	jdbcType=DATE},
									#{loginUserId,										mode=IN,	jdbcType=VARCHAR},
									#{infoErrorCode,									mode=OUT,	jdbcType=NUMERIC},
									#{errorText,										mode=OUT,	jdbcType=VARCHAR}
									)
	}				                   	
   </select>
   
   
   <select id="checkCollateralizedCD" parameterType="trxMgntSC" statementType="CALLABLE">
    {CALL P_RET_CHECK_COLLATERALIZED_CD ( #{compCode,			mode=IN,	jdbcType=NUMERIC},
		    						      #{loginBraCode,		mode=IN,	jdbcType=NUMERIC},
		    						      #{fromRemit,			mode=IN,	jdbcType=NUMERIC},
		    						      #{toRemit,			mode=IN,	jdbcType=NUMERIC},
		    						      #{remittanceType,		mode=IN,	jdbcType=NUMERIC},
		    							  #{remitSerial,		mode=IN,	jdbcType=NUMERIC},
		    							  #{trsCy,				mode=IN,	jdbcType=NUMERIC},
	    							      #{remitCy,		 	mode=IN,	jdbcType=VARCHAR},
	    							      #{linkToTrsNo,		mode=IN,	jdbcType=NUMERIC},
	    							      #{linkToTrsNoBr,		mode=IN,	jdbcType=NUMERIC},
	    							 	  #{isCollateralized,	mode=OUT,	jdbcType=VARCHAR},
	    							      #{errorCode,			mode=OUT,	jdbcType=NUMERIC},
										  #{errorMessage,		mode=OUT,	jdbcType=VARCHAR}
										)
	}				                   	
   </select>
   
   <select id="getOverdrawLimit" parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL 
	       P_RET_GET_OVERDRAW_LIMIT (#{compCode,										mode=IN,	jdbcType=NUMERIC},
	    							#{baseCurrencyCode,									mode=IN,	jdbcType=NUMERIC},
	    							#{trsAcBr,											mode=IN,	jdbcType=NUMERIC},
	    							#{trsAcCy,											mode=IN,	jdbcType=NUMERIC},
	    							#{trsAcGl,											mode=IN,	jdbcType=NUMERIC},
	    							#{trsAcCif,											mode=IN,	jdbcType=NUMERIC},
	    							#{trsAcSl,											mode=IN,	jdbcType=NUMERIC},
									#{runningDate,										mode=IN,	jdbcType=DATE},
									#{mcashLimit,										mode=OUT,	jdbcType=NUMERIC},
									#{errorCode,										mode=OUT,	jdbcType=NUMERIC},
									#{errorMessage,										mode=OUT,	jdbcType=VARCHAR}
									)
	}				                   	
   </select>
   
   <select id="retIbChargeUnified"	parameterType="trxMgntChargesSC" statementType="CALLABLE">
	{ CALL P_RET_IB_CHARGE_UNIFIED (
			#{compCode			,mode=IN	,jdbcType=NUMERIC},
			#{branchCode		,mode=IN	,jdbcType=NUMERIC},
			#{entityTypeCode	,mode=IN	,jdbcType=VARCHAR},
			#{productName		,mode=IN	,jdbcType=NUMERIC},
			#{entityCode		,mode=IN	,jdbcType=NUMERIC},
			#{deductAcBr		,mode=IN	,jdbcType=NUMERIC},
			#{deductAcCy		,mode=IN	,jdbcType=NUMERIC},
			#{deductAcCif		,mode=IN	,jdbcType=NUMERIC},
			#{deductAcRef		,mode=IN	,jdbcType=NUMERIC},
			#{trsCy				,mode=IN	,jdbcType=NUMERIC},
			#{trxAmount			,mode=IN	,jdbcType=NUMERIC},
			#{date				,mode=IN	,jdbcType=NUMERIC},
			#{exchangeRate		,mode=IN	,jdbcType=NUMERIC},
			#{cashDeductInd		,mode=IN	,jdbcType=NUMERIC},
			#{showSavedCharges	,mode=IN	,jdbcType=NUMERIC},
			#{chargeMsg			,mode=OUT	,jdbcType=NUMERIC},
			#{cvAmount			,mode=OUT	,jdbcType=NUMERIC},
			#{fcAmount			,mode=OUT	,jdbcType=NUMERIC},
			#{error 			,mode=OUT	,jdbcType=NUMERIC},
			#{errorMessage		,mode=OUT	,jdbcType=LONGVARCHAR,typeHandler=com.path.lib.common.base.ibatis3.handlers.PathLongVarcharHandler} 
		)}
	</select>
	
	<select id="retProcessHofWithCharge"	parameterType="trxMgntChargesSC" statementType="CALLABLE">
	{ CALL P_RET_PROCESS_HOF_WITH_CHARGE (
			#{compCode			,mode=IN	,jdbcType=NUMERIC},
			#{branchCode		,mode=IN	,jdbcType=NUMERIC},
			#{trxType			,mode=IN	,jdbcType=NUMERIC},
			#{hofReason			,mode=IN	,jdbcType=VARCHAR},
			#{trsType			,mode=IN	,jdbcType=VARCHAR},
			#{userId			,mode=IN	,jdbcType=VARCHAR},
			#{runningDate		,mode=IN	,jdbcType=DATE},
			#{deductAcBr		,mode=IN	,jdbcType=NUMERIC},
			#{deductAcCy		,mode=IN	,jdbcType=NUMERIC},
			#{deductAcGl		,mode=IN	,jdbcType=NUMERIC},
			#{deductAcCif		,mode=IN	,jdbcType=NUMERIC},
			#{deductAcSl		,mode=IN	,jdbcType=NUMERIC},
			#{amount			,mode=IN	,jdbcType=NUMERIC},
			#{trxAmount			,mode=IN	,jdbcType=NUMERIC},
			#{cvAmount			,mode=IN	,jdbcType=NUMERIC},
			#{trsCy				,mode=IN	,jdbcType=NUMERIC},
			#{releaseDays		,mode=IN	,jdbcType=NUMERIC},
			#{linkToOtherTrxNo	,mode=IN	,jdbcType=NUMERIC},
			#{cb_ind			,mode=IN	,jdbcType=VARCHAR},
			#{addString			,mode=IN	,jdbcType=VARCHAR},
			#{addNumber			,mode=IN	,jdbcType=NUMERIC},
			#{addDate			,mode=IN	,jdbcType=DATE},
			#{trsNo				,mode=OUT	,jdbcType=NUMERIC},
			#{error 			,mode=OUT	,jdbcType=NUMERIC},
			#{errorMessage		,mode=OUT	,jdbcType=LONGVARCHAR,typeHandler=com.path.lib.common.base.ibatis3.handlers.PathLongVarcharHandler} 
		)}
	</select>

   
   <select id="createPkgSms" parameterType="fomSC" statementType="CALLABLE">
      { CALL P_ALRT_SBT_SUB_PKG( 
								#{compCode, 		mode=IN, 	jdbcType=NUMERIC},
								#{accAddRef,        mode=IN, 	jdbcType=VARCHAR},
								#{accBR,    		mode=IN, 	jdbcType=NUMERIC},
								#{accCY, 			mode=IN, 	jdbcType=NUMERIC},
								#{accGL, 			mode=IN, 	jdbcType=NUMERIC},
								#{cifNo,      		mode=IN, 	jdbcType=NUMERIC},
								#{accSL, 			mode=IN, 	jdbcType=NUMERIC},
								#{cifNo,      		mode=IN, 	jdbcType=NUMERIC},
								#{accAddRef,        mode=IN, 	jdbcType=VARCHAR},
								#{subscriberType,   mode=IN, 	jdbcType=VARCHAR},
								#{mobile, 			mode=IN, 	jdbcType=VARCHAR},
								#{email, 			mode=IN, 	jdbcType=VARCHAR},
								#{eventCode, 		mode=IN, 	jdbcType=NUMERIC},
								#{packageCode,		mode=IN, 	jdbcType=NUMERIC},
								#{runningDate,		mode=IN, 	jdbcType=DATE},
								#{userId,			mode=IN, 	jdbcType=VARCHAR},
								#{maxSp,			mode=OUT, 	jdbcType=NUMERIC},
								#{errorCode,		mode=OUT, 	jdbcType=NUMERIC},
								#{errorMessage,		mode=OUT, 	jdbcType=VARCHAR})
                        	}
    </select>
    
    <select id="callFillBillReport" parameterType="trxMgntSC" statementType="CALLABLE">
      { CALL P_RET_FILL_BILL_REPORT( 
								#{compCode, 		mode=IN, 	jdbcType=NUMERIC},
								#{branchCode,       mode=IN, 	jdbcType=NUMERIC},
								#{runningDate,    	mode=IN, 	jdbcType=DATE},
								#{trxMethod,		mode=IN, 	jdbcType=VARCHAR},
								#{errorCode,		mode=OUT, 	jdbcType=NUMERIC},
								#{errorMessage,		mode=OUT, 	jdbcType=VARCHAR})
                        	}
    </select>
    
    <select id="callCheckChequeBookData" parameterType="chequeBookSC" statementType="CALLABLE">
    { CALL P_RET_CHECK_CHQBOOK_DATA(   #{compCode, mode=IN,jdbcType=NUMERIC},
								    #{branchCode, mode=IN,jdbcType=NUMERIC},
								    #{userName, mode=IN,jdbcType=VARCHAR},
								    #{lang, mode=IN,jdbcType=VARCHAR},
								    #{runningDate , mode=IN, jdbcType=TIMESTAMP},
								    #{CODE, mode=IN,jdbcType=NUMERIC},
								    #{errorCode, mode=OUT,jdbcType=NUMERIC},
								    #{errorMessage, mode=OUT,jdbcType=LONGVARCHAR,typeHandler=com.path.lib.common.base.ibatis3.handlers.PathLongVarcharHandler}	)}
	</select>
	
	<select id="callRetReverseProfit" parameterType="trxMgntSC" statementType="CALLABLE">
    {
    	CALL P_RET_REVERSE_PROFIT(	
                                 #{compCode, 				mode=IN, jdbcType=NUMERIC},
                                 #{branchCode, 				mode=IN, jdbcType=NUMERIC},
                                 #{trsNo, 					mode=IN, jdbcType=NUMERIC},
                                 #{errorCode, 				mode=OUT, jdbcType=NUMERIC},
                                 #{errorMessage, 			mode=OUT, jdbcType=VARCHAR} )
	}
	</select>
	
	<select id="callFmsGetOverDraftLimit" parameterType="accountsManagementCO" statementType="CALLABLE">
	    { CALL 
		    P_FMS_WRAP_GET_OVERDRAFT_LIMIT (#{loginCompCode,									mode=IN,	jdbcType=NUMERIC},
		    								#{runningDate,										mode=IN,	jdbcType=DATE},	 
											#{amfVO.FACILITY_NO,								mode=IN,	jdbcType=NUMERIC},
			    							#{amfVO.FACILITY_BRANCH,					    	mode=IN,	jdbcType=NUMERIC},
			    							#{amfVO.FACILITY_SUB_LIMIT,							mode=IN,	jdbcType=NUMERIC},
			    							#{loginBraCode,										mode=IN,	jdbcType=NUMERIC},
			    							#{amfVO.CURRENCY_CODE,								mode=IN,	jdbcType=NUMERIC},
			    							#{amfVO.GL_CODE,									mode=IN,	jdbcType=NUMERIC},
			    							#{amfVO.CIF_SUB_NO,									mode=IN,	jdbcType=NUMERIC},
			    							#{amfVO.SL_NO,										mode=IN,	jdbcType=NUMERIC},
			    							#{overDraftLimit,									mode=OUT,	jdbcType=NUMERIC},
											#{infoErrorCode,									mode=OUT,	jdbcType=NUMERIC},
											#{errorText,										mode=OUT,	jdbcType=VARCHAR}
											)
		}				                   	
    </select>
   
   <select id="runTrialScoringProcess" parameterType="com.path.vo.core.segmentation.CustSegmentationSC" statementType="CALLABLE">
    	{ CALL P_AML_WRAP_SCORING_PROCESS(
    									#{compCode,		 		mode=IN, jdbcType=NUMERIC},
    									#{branchCode,			mode=IN, jdbcType=NUMERIC},
    									#{userId,			 	mode=IN, jdbcType=VARCHAR},
    									#{segment_code,			mode=IN, jdbcType=NUMERIC},
										#{cifNo,				mode=IN,jdbcType=NUMERIC},
										#{runningDate,			mode=IN,jdbcType=DATE},
										#{currAppName,			mode=IN,jdbcType=VARCHAR},
										#{language,				mode=IN,jdbcType=VARCHAR},
    									#{score,				mode=OUT,jdbcType=NUMERIC},
    									#{errorCode,		 	mode=OUT,jdbcType=NUMERIC},
    									#{errorMessage, 		mode=OUT,jdbcType=VARCHAR}
    							)}
    	
    </select>
    
    <select id="runAlertSegmentGrouping" parameterType="com.path.vo.core.grouping.SegmentGroupingSC" statementType="CALLABLE">
    	{ CALL P_RET_ALERT_SEGMENT_GROUPING(
    									#{compCode,		 		mode=IN, jdbcType=NUMERIC},
    									#{groupCode,			mode=IN, jdbcType=NUMERIC},
    									#{ivCrud,				mode=IN, jdbcType=VARCHAR},
    									#{isRejected,			mode=IN, jdbcType=NUMERIC},
    									#{errorCode,		 	mode=OUT,jdbcType=NUMERIC},
    									#{errorMessage, 		mode=OUT,jdbcType=VARCHAR}
    							)} 
    	
    </select>

	<select id="runAlertSegmentation" parameterType="com.path.vo.core.segmentation.CustSegmentationSC" statementType="CALLABLE">
    	{ CALL P_RET_ALERT_SEGMENTATION(
    									#{compCode,		 		mode=IN, jdbcType=NUMERIC},
    									#{segment_code,			mode=IN, jdbcType=NUMERIC},
    									#{isSegmentationScore,	mode=IN, jdbcType=VARCHAR},
    									#{ivCrud,				mode=IN, jdbcType=VARCHAR},
    									#{isRejected,			mode=IN, jdbcType=NUMERIC},
    									#{errorCode,		 	mode=OUT,jdbcType=NUMERIC},
    									#{errorMessage, 		mode=OUT,jdbcType=VARCHAR}
    							)} 
    	
    </select>
    
    <select id="createStandingOrder" parameterType="trxMgntSC" statementType="CALLABLE">
		{CALL P_RET_API_CREATE_SO(#{compCode , 				mode=IN, jdbcType=NUMERIC}, 
 								#{branchCode , 					mode=IN, jdbcType=NUMERIC}, 
 								#{userId , 						mode=IN, jdbcType=VARCHAR}, 
 								#{operation , 					mode=IN, jdbcType=VARCHAR}, 
 								#{trxType , 			mode=IN, jdbcType=NUMERIC}, 
 								#{trsNo , 			mode=IN, jdbcType=NUMERIC}, 
 								#{benefAcc , mode=IN, jdbcType=VARCHAR}, 
 								#{toAccAddRef , 	 	mode=IN, jdbcType=VARCHAR}, 
 								#{cyISO , 	  			mode=IN, jdbcType=VARCHAR}, 
 								#{trxAmount , 			mode=IN, jdbcType=NUMERIC}, 
 								#{amount , 	mode=IN, jdbcType=NUMERIC}, 
 								#{exchangeRate , 				mode=IN, jdbcType=NUMERIC}, 
 								#{periodicityType , 	  			mode=IN, jdbcType=VARCHAR}, 
 								#{trsDate , 	  			mode=IN, jdbcType=DATE}, 
 								#{valueDate , 	  				mode=IN, jdbcType=DATE}, 
 								#{dayNum , 						mode=IN, jdbcType=NUMERIC}, 
 								#{fromDay , 					mode=IN, jdbcType=NUMERIC}, 
 								#{toDay , 						mode=IN, jdbcType=NUMERIC}, 
 								#{month , 						mode=IN, jdbcType=NUMERIC}, 
 								#{soPeriodInterval , mode=IN, jdbcType=NUMERIC}, 
 								#{narration , 	  				mode=IN, jdbcType=VARCHAR},	 
 								#{soReference , 	  				mode=IN, jdbcType=VARCHAR},	 
 								#{intermediateBankName , 	  	mode=IN, jdbcType=VARCHAR},	 
 								#{intermediateBankBicCode , 	mode=IN, jdbcType=VARCHAR},	 
 								#{intermediateBankAddress1 , 	mode=IN, jdbcType=VARCHAR},	 
 								#{intermediateBankAddress2 , 	mode=IN, jdbcType=VARCHAR},	 
 								#{intermediateBankAddress3 , 	mode=IN, jdbcType=VARCHAR},	 
 								#{intermediateBankAccount , 	mode=IN, jdbcType=VARCHAR},	 
 								#{beneficiaryBank , 			mode=IN, jdbcType=NUMERIC}, 
 								#{beneficiaryBankName , 	  	mode=IN, jdbcType=VARCHAR}, 
 								#{beneficiaryBankBicCode , 	  	mode=IN, jdbcType=VARCHAR}, 
 								#{beneficiaryBankBranch , 	  	mode=IN, jdbcType=VARCHAR},	 
 								#{beneficiaryBankAddress1 , 	mode=IN, jdbcType=VARCHAR},	 
 								#{beneficiaryBankAddress2 , 	mode=IN, jdbcType=VARCHAR},	 
 								#{beneficiaryBankAddress3 , 	mode=IN, jdbcType=VARCHAR},	 
 								#{beneficiaryBankAccount , 	  	mode=IN, jdbcType=VARCHAR},	 
 								#{beneficiaryName , 	  		mode=IN, jdbcType=VARCHAR},	 
 								#{beneficiaryAccount , 	  		mode=IN, jdbcType=VARCHAR},	 
 								#{beneficiaryAddress1 , 	  	mode=IN, jdbcType=VARCHAR},	 
 								#{beneficiaryAddress2 , 	  	mode=IN, jdbcType=VARCHAR},	 
 								#{beneficiaryAddress3 , 	  	mode=IN, jdbcType=VARCHAR},	 
 								#{instructions1 , 	  			mode=IN, jdbcType=VARCHAR},	 
 								#{instructions2 , 	  			mode=IN, jdbcType=VARCHAR},	 
 								#{instructions3 , 	  			mode=IN, jdbcType=VARCHAR},	 
 								#{instructions4 , 	  			mode=IN, jdbcType=VARCHAR},	 
 								#{swiftInfo , 	  			mode=IN, jdbcType=VARCHAR},	 
 								#{swiftMess1 , 	  			mode=IN, jdbcType=VARCHAR},	 
 								#{swiftMess2 , 	  			mode=IN, jdbcType=VARCHAR},	 
 								#{swiftMess3 , 	 			mode=IN, jdbcType=VARCHAR},	 
 								#{swiftMess4 , 	  			mode=IN, jdbcType=VARCHAR},	 
 								#{intermediateBankCode , 	  	mode=IN, jdbcType=NUMERIC},	 
 								#{intermediateBankBranch , 	  	mode=IN, jdbcType=VARCHAR},	 
 								#{beneficiaryCorrespondentBank, mode=IN, jdbcType=NUMERIC},	 
 								#{beneficiaryCity , 	  		mode=IN, jdbcType=NUMERIC},	 
 								#{destinCountry , 	  		mode=IN, jdbcType=NUMERIC},	 
 								#{recCorrespondentBankBicCode, 	mode=IN, jdbcType=VARCHAR},	 
 								#{recCorrespondentBankAddress, 	mode=IN, jdbcType=VARCHAR},	 
 								#{recCorrespondentBankAddress1, mode=IN, jdbcType=VARCHAR},	 
 								#{recCorrespondentBankAddress2, mode=IN, jdbcType=VARCHAR},	 
 								#{recCorrespondentBankAddress3, mode=IN, jdbcType=VARCHAR},	 
 								#{swiftSendReceive , 	  		mode=IN, jdbcType=VARCHAR},	 
 								#{swiftSendReceive1 , 	  		mode=IN, jdbcType=VARCHAR},	 
 								#{swiftSendReceive2 , 	  		mode=IN, jdbcType=VARCHAR},	 
 								#{swiftSendReceive3 , 	  		mode=IN, jdbcType=VARCHAR},	 
 								#{icNo , 	  					mode=IN, jdbcType=VARCHAR},	 
 								#{soPercMin , 	  			mode=IN, jdbcType=NUMERIC}, 
 								#{soPercMax , 	  			mode=IN, jdbcType=NUMERIC}, 
 								#{soPerc , 	mode=IN, jdbcType=NUMERIC}, 
 								#{soPercCr , 	mode=IN, jdbcType=NUMERIC}, 
 								#{soFirstPayment , 	  			mode=IN, jdbcType=NUMERIC}, 
 								#{soLastPayment , 	  			mode=IN, jdbcType=NUMERIC}, 
 								#{reference1 , 	  				mode=IN, jdbcType=VARCHAR},	 
 								#{reference2 , 	  				mode=IN, jdbcType=VARCHAR},	 
 								#{reference3 , 	  				mode=IN, jdbcType=VARCHAR},	 
 								#{statusReasonDesc , 	mode=IN, jdbcType=VARCHAR},	 
 								#{benefAddress , 	  		mode=IN, jdbcType=VARCHAR},	 
 								#{outTrsno , 			mode=OUT, jdbcType=NUMERIC}, 
 								#{errorCode , 					mode=OUT, jdbcType=NUMERIC}, 
 								#{errorMessage , 					mode=OUT , jdbcType=VARCHAR}) 
 		} 
	</select>
	
	<select id="createAMF" parameterType="accountSC" statementType="CALLABLE">
    { CALL P_RET_CREATE_AMF( #{compCode,		 	mode=IN, jdbcType=NUMERIC},
				    		 #{branchCode,			mode=IN, jdbcType=NUMERIC},
				    		 #{runningDate,	 		mode=IN, jdbcType=DATE},
							 #{userId,			 	mode=IN, jdbcType=VARCHAR},				    			
				    		 #{currencyCode,	 	mode=IN, jdbcType=NUMERIC},
				    		 #{glCode,			 	mode=IN, jdbcType=NUMERIC},
				    		 #{cifCode,	 			mode=IN, jdbcType=NUMERIC},
			    			 #{GMI_FLAG,	 		mode=IN, jdbcType=VARCHAR},
			    			 #{ACC_BC,	 			mode=IN, jdbcType=VARCHAR},
		    				 #{accDiv,				mode=IN, jdbcType=NUMERIC},
		    				 #{accDept,				mode=IN, jdbcType=NUMERIC},
			    			 #{status,	 			mode=IN, jdbcType=VARCHAR},
			    			 #{addRef,	 			mode=IN, jdbcType=VARCHAR},
			    			 #{unit,	 			mode=IN, jdbcType=NUMERIC},
                    		 #{slNbr,				mode=INOUT, jdbcType=NUMERIC},
                    		 #{errorMessage,		mode=OUT, jdbcType=VARCHAR})}
    </select>
    
	<select id="callCheckSpCondData" parameterType="specialConditionsSC" statementType="CALLABLE">
      { CALL P_RET_CHECK_SPCOND_DATA( 
				#{compCode, 		mode=IN, 	jdbcType=NUMERIC},
				#{branchCode,		mode=IN, 	jdbcType=NUMERIC},
				#{userId,       	mode=IN, 	jdbcType=VARCHAR},
				#{lineNo,			mode=IN, 	jdbcType=NUMERIC},
				#{crudMode,			mode=IN, 	jdbcType=VARCHAR},
				#{errorCode,		mode=OUT, 	jdbcType=NUMERIC},
				#{errorMessage,	    mode=OUT, 	jdbcType=VARCHAR})
      }
    </select>
	
	
	<select id="collectRemittance" parameterType="trxMgntSC" statementType="CALLABLE">
		{CALL P_RET_API_REMIT_COLLECTION(
				#{compCode, 				mode=IN, jdbcType=NUMERIC},
				#{branchCode, 				mode=IN, jdbcType=NUMERIC},
				#{userId, 					mode=IN, jdbcType=VARCHAR},
				#{trsDate, 					mode=IN, jdbcType=DATE},
				#{trxType, 					mode=IN, jdbcType=NUMERIC},
				#{linkToTrsNoBr, 			mode=IN, jdbcType=NUMERIC},
				#{linkToTrsNo, 				mode=IN, jdbcType=NUMERIC},
				#{trsAcBr, 					mode=IN, jdbcType=NUMERIC},
				#{trsAcCy, 					mode=IN, jdbcType=NUMERIC},
				#{trsAcGl, 					mode=IN, jdbcType=NUMERIC},
				#{trsAcCif, 				mode=IN, jdbcType=NUMERIC},
				#{trsAcSl, 					mode=IN, jdbcType=NUMERIC},
				#{accAddRef, 				mode=IN, jdbcType=VARCHAR},
				#{iban, 					mode=IN, jdbcType=VARCHAR},
				#{cardNo, 					mode=IN, jdbcType=VARCHAR},
				#{useCard, 					mode=IN, jdbcType=NUMERIC},
				#{toTrsAcBr, 				mode=IN, jdbcType=NUMERIC},
				#{toTrsAcCy, 				mode=IN, jdbcType=NUMERIC},
				#{toTrsAcGl, 				mode=IN, jdbcType=NUMERIC},
				#{toTrsAcCif, 				mode=IN, jdbcType=NUMERIC},
				#{toTrsAcSl, 				mode=IN, jdbcType=NUMERIC},
				#{toAccAddRef, 				mode=IN, jdbcType=VARCHAR},
				#{toAccIban, 				mode=IN, jdbcType=VARCHAR},
				#{valueDate, 				mode=IN, jdbcType=DATE},
		 		#{instructions1 , 			mode=IN, jdbcType=VARCHAR},
				#{instructions2 ,			mode=IN, jdbcType=VARCHAR},
				#{instructions3 ,			mode=IN, jdbcType=VARCHAR},
				#{instructions4 ,			mode=IN, jdbcType=VARCHAR},
				#{reference ,				mode=IN, jdbcType=VARCHAR},
				#{useDate ,					mode=IN, jdbcType=NUMERIC},
				#{description ,				mode=IN, jdbcType=VARCHAR},
				#{description1 ,			mode=IN, jdbcType=VARCHAR},
				#{description2 ,			mode=IN, jdbcType=VARCHAR},
				#{descriptionAr, 			mode=IN, jdbcType=VARCHAR},
				#{descriptionAr1, 			mode=IN, jdbcType=VARCHAR},
				#{descriptionAr2, 			mode=IN, jdbcType=VARCHAR},
				#{adecBal , 				mode=OUT, jdbcType=NUMERIC},
				#{trsNo , 					mode=OUT, jdbcType=NUMERIC},
				#{errorCode , 				mode=OUT, jdbcType=NUMERIC}, 
				#{errorMessage , 			mode=OUT, jdbcType=VARCHAR}
			)
		}
	</select>
	
	
	<select id="createRemittance" parameterType="trxMgntSC" statementType="CALLABLE">
		{CALL P_RET_API_REMIT_ISSUANCE(
				#{compCode, 				mode=IN, jdbcType=NUMERIC},
				#{branchCode, 				mode=IN, jdbcType=NUMERIC},
				#{userId, 					mode=IN, jdbcType=VARCHAR},
				#{trsDate, 					mode=IN, jdbcType=DATE},
				#{trxType, 					mode=IN, jdbcType=NUMERIC},
				#{cyISO, 					mode=IN, jdbcType=VARCHAR},
				#{amount, 					mode=IN, jdbcType=NUMERIC},
				#{trsAcBr, 					mode=IN, jdbcType=NUMERIC},
				#{trsAcCy, 					mode=IN, jdbcType=NUMERIC},
				#{trsAcGl, 					mode=IN, jdbcType=NUMERIC},
				#{trsAcCif, 				mode=IN, jdbcType=NUMERIC},
				#{trsAcSl, 					mode=IN, jdbcType=NUMERIC},
				#{accAddRef, 				mode=IN, jdbcType=VARCHAR},
				#{iban, 					mode=IN, jdbcType=VARCHAR},
				#{cardNo, 					mode=IN, jdbcType=VARCHAR},
				#{useCard, 					mode=IN, jdbcType=NUMERIC},
				#{toTrsAcBr, 				mode=IN, jdbcType=NUMERIC},
				#{toTrsAcCy, 				mode=IN, jdbcType=NUMERIC},
				#{toTrsAcGl, 				mode=IN, jdbcType=NUMERIC},
				#{toTrsAcCif, 				mode=IN, jdbcType=NUMERIC},
				#{toTrsAcSl, 				mode=IN, jdbcType=NUMERIC},
				#{toAccAddRef, 				mode=IN, jdbcType=VARCHAR},
				#{toAccIban, 				mode=IN, jdbcType=VARCHAR},
				#{valueDate, 				mode=IN, jdbcType=DATE},
				#{bankCif, 					mode=IN, jdbcType=NUMERIC},
				#{beneficiaryName, 			mode=IN, jdbcType=VARCHAR},
				#{fromRemit,				mode=IN, jdbcType=NUMERIC},
				#{toRemit, 					mode=IN, jdbcType=NUMERIC},
				#{remittanceDesc, 			mode=IN, jdbcType=VARCHAR},
				#{remittanceCurrencyIso,	mode=IN, jdbcType=VARCHAR},
				#{remittanceType, 			mode=IN, jdbcType=NUMERIC},
				#{useRemittance, 			mode=IN, jdbcType=NUMERIC},
		 		#{instructions1 , 			mode=IN, jdbcType=VARCHAR},
				#{instructions2 ,			mode=IN, jdbcType=VARCHAR},
				#{instructions3 ,			mode=IN, jdbcType=VARCHAR},
				#{instructions4 ,			mode=IN, jdbcType=VARCHAR},
				#{reference ,				mode=IN, jdbcType=VARCHAR},
				#{useDate ,					mode=IN, jdbcType=NUMERIC},
				#{description ,				mode=IN, jdbcType=VARCHAR},
				#{description1 ,			mode=IN, jdbcType=VARCHAR},
				#{description2 ,			mode=IN, jdbcType=VARCHAR},
				#{descriptionAr, 			mode=IN, jdbcType=VARCHAR},
				#{descriptionAr1, 			mode=IN, jdbcType=VARCHAR},
				#{descriptionAr2, 			mode=IN, jdbcType=VARCHAR},
				#{adecBal , 				mode=OUT, jdbcType=NUMERIC},
				#{trsNo , 					mode=OUT, jdbcType=NUMERIC},
				#{errorCode , 				mode=OUT, jdbcType=NUMERIC}, 
				#{errorMessage , 			mode=OUT, jdbcType=VARCHAR}
			)
		}
	</select>
	
	
	<select id="createChequeDeposit" parameterType="trxMgntSC" statementType="CALLABLE">
 		{CALL P_RET_API_CHEQUE_TRANSACTION(
						#{compCode , 						mode=IN, jdbcType=NUMERIC}, 
						#{branchCode , 						mode=IN, jdbcType=NUMERIC}, 
						#{userId , 							mode=IN, jdbcType=VARCHAR},
				 		#{trsDate ,							mode=IN, jdbcType=DATE}, 
						#{trxType , 						mode=IN, jdbcType=NUMERIC},
				 		#{amount , 							mode=IN, jdbcType=NUMERIC},
				 		#{cyISO ,							mode=IN, jdbcType=VARCHAR},
						#{trsAcBr, 							mode=IN, jdbcType=NUMERIC},
						#{trsAcCy, 							mode=IN, jdbcType=NUMERIC},
						#{trsAcGl, 							mode=IN, jdbcType=NUMERIC},
						#{trsAcCif, 						mode=IN, jdbcType=NUMERIC},
						#{trsAcSl, 							mode=IN, jdbcType=NUMERIC},
						#{accAddRef, 						mode=IN, jdbcType=VARCHAR},
						#{iban, 							mode=IN, jdbcType=VARCHAR},
						#{cardNo, 							mode=IN, jdbcType=VARCHAR},
						#{useCard, 							mode=IN, jdbcType=NUMERIC},
						#{toTrsAcBr, 						mode=IN, jdbcType=NUMERIC},
						#{toTrsAcCy, 						mode=IN, jdbcType=NUMERIC},
						#{toTrsAcGl, 						mode=IN, jdbcType=NUMERIC},
						#{toTrsAcCif, 						mode=IN, jdbcType=NUMERIC},
						#{toTrsAcSl, 						mode=IN, jdbcType=NUMERIC},
						#{toAccAddRef, 						mode=IN, jdbcType=VARCHAR},
						#{toAccIban, 						mode=IN, jdbcType=VARCHAR},
						#{valueDate, 						mode=IN, jdbcType=DATE},
				 		#{chqNum ,							mode=IN, jdbcType=NUMERIC}, 
				 		#{chqDate ,							mode=IN, jdbcType=DATE},
				 		#{chequePayeeName ,					mode=IN, jdbcType=VARCHAR},
				 		#{chequeAccountNumber ,				mode=IN, jdbcType=VARCHAR},
				 		#{operation , 						mode=IN, jdbcType=VARCHAR},
				 		#{instructions1 , 					mode=IN, jdbcType=VARCHAR},
						#{instructions2 ,					mode=IN, jdbcType=VARCHAR},
						#{instructions3 ,					mode=IN, jdbcType=VARCHAR},
						#{instructions4 ,					mode=IN, jdbcType=VARCHAR},
						#{reference ,						mode=IN, jdbcType=VARCHAR},
						#{useDate ,							mode=IN, jdbcType=NUMERIC},
						#{description ,						mode=IN, jdbcType=VARCHAR},
						#{description1 ,					mode=IN, jdbcType=VARCHAR},
						#{description2 ,					mode=IN, jdbcType=VARCHAR},
						#{descriptionAr, 					mode=IN, jdbcType=VARCHAR},
						#{descriptionAr1, 					mode=IN, jdbcType=VARCHAR},
						#{descriptionAr2, 					mode=IN, jdbcType=VARCHAR},
						#{adecBal , 						mode=OUT, jdbcType=NUMERIC},
						#{trsNo , 							mode=OUT, jdbcType=NUMERIC},
						#{errorCode , 						mode=OUT, jdbcType=NUMERIC}, 
						#{errorMessage , 					mode=OUT, jdbcType=VARCHAR}
 					)
 		} 
	</select>
	
	<select id="checkHOFSpecialConditions"	parameterType="trxMgntChargesSC" statementType="CALLABLE">
    { CALL P_RET_CHECK_SPCOND	( 	#{compCode			,mode=IN	,jdbcType=NUMERIC},
                               		#{deductAcBr		,mode=IN	,jdbcType=NUMERIC},
									#{deductAcCy		,mode=IN	,jdbcType=NUMERIC},
									#{deductAcGl		,mode=IN	,jdbcType=NUMERIC},
									#{deductAcCif		,mode=IN	,jdbcType=NUMERIC},
									#{deductAcSl		,mode=IN	,jdbcType=NUMERIC},
			                   		#{type				,mode=IN	,jdbcType=VARCHAR},
			                   		#{branchCode		,mode=IN	,jdbcType=NUMERIC},
									#{userId			,mode=IN	,jdbcType=VARCHAR},		
				                   	#{error 			,mode=OUT	,jdbcType=NUMERIC},
									#{errorMessage		,mode=OUT	,jdbcType=VARCHAR} )}  
				
	</select>
	
	<select id="callCheckFomData" parameterType="cifSC" statementType="CALLABLE">
      { CALL P_RET_CHECK_FOM_DATA( 
								#{compCode, 		mode=IN, 	jdbcType=NUMERIC},
								#{branchCode,		mode=IN, 	jdbcType=NUMERIC},
								#{userId,       	mode=IN, 	jdbcType=VARCHAR},
								#{cifCode,			mode=IN, 	jdbcType=NUMERIC},
								#{raFlag,			mode=IN, 	jdbcType=NUMERIC},
								#{errorType,		mode=OUT, 	jdbcType=VARCHAR},
								#{errorCode,		mode=OUT, 	jdbcType=NUMERIC},
								#{errorMessage,	    mode=OUT, 	jdbcType=VARCHAR})
                        	}
    </select>
    
	<select id="wrapSpecialCondition" parameterType="accountCO" statementType="CALLABLE">
	    { CALL P_RET_WRAP_SPECIAL_COND_EXCEP( #{loginCompCode, 		 		mode=IN,jdbcType=NUMERIC},
			                               		#{loginBraCode, 		 		mode=IN,jdbcType=NUMERIC},
			                               		#{reasonEng,					mode=IN,jdbcType=VARCHAR},
						                   		#{toBranchCode, 		 		mode=IN,jdbcType=NUMERIC},
						                   		#{toCurrencyCode, 		 		mode=IN,jdbcType=NUMERIC},
						                   		#{toGlCode, 	 				mode=IN,jdbcType=NUMERIC},
						                   		#{toCifSubNo, 		 			mode=IN,jdbcType=NUMERIC},   
						                   		#{toSlNo, 	 					mode=IN,jdbcType=NUMERIC},  
						                   		#{toAccountSign,				mode=IN,jdbcType=VARCHAR},
						                   		#{multiTrx, 		 			mode=IN,jdbcType=VARCHAR},
			                               		#{loginTellerCode, 				mode=IN,jdbcType=NUMERIC},		
						                   		#{FORBID_TRX,					mode=INOUT,jdbcType=VARCHAR},
							                   	#{errorCode,					mode=OUT,jdbcType=NUMERIC},
							                   	#{errorMsg, 					mode=OUT,jdbcType=VARCHAR} )}  		                
							
	</select>
    
    <select id="pcsWrapAnniversaryAccDep" parameterType="trxMgntCO" statementType="CALLABLE">
	    { CALL P_PCS_WRAP_ANNIV_ACC_DEP( #{loginCompCode, 		 								mode=IN,jdbcType=NUMERIC},
			                             #{loginBraCode, 		 								mode=IN,jdbcType=NUMERIC},			                             
			                             #{ctstrsVO.TO_TRS_AC_BR, 								mode=IN,jdbcType=NUMERIC},
			                             #{ctstrsVO.TO_TRS_AC_CY, 								mode=IN,jdbcType=NUMERIC},
			                             #{ctstrsVO.TO_TRS_AC_GL, 								mode=IN,jdbcType=NUMERIC},
			                             #{ctstrsVO.TO_TRS_AC_CIF, 								mode=IN,jdbcType=NUMERIC},
			                             #{ctstrsVO.TO_TRS_AC_SL, 								mode=IN,jdbcType=NUMERIC},
			                             #{ctstrxtypeVO.TYPE, 									mode=IN,jdbcType=VARCHAR},
			                             #{ctstrxtypeExtendedVO.PROFIT_DISTRIB_ON_ANVRSRY_YN, 	mode=IN,jdbcType=NUMERIC},
			                             #{ctstrxtypeVO.CR_DR_FOREX, 							mode=IN,jdbcType=NUMERIC},
			                             #{ctstrxtypeVO.TRSFR_TYPE, 							mode=IN,jdbcType=NUMERIC},
			                             #{openDate, 											mode=IN,jdbcType=DATE},
			                             #{runningDateRET, 										mode=IN,jdbcType=DATE},
			                             #{outstdngProfitCV, 									mode=OUT,jdbcType=NUMERIC},
			                             #{outstdngProfitFC, 									mode=OUT,jdbcType=NUMERIC},
			                             #{taxCV, 												mode=OUT,jdbcType=NUMERIC},
			                             #{taxFC, 												mode=OUT,jdbcType=NUMERIC},
					                   	 #{errorMsg, 											mode=OUT,jdbcType=VARCHAR},  		                
					                   	 #{errorCode,											mode=OUT,jdbcType=NUMERIC})}
							
	</select>
	
	<select id="processInvPoints" parameterType="trxMgntSC" statementType="CALLABLE">
    { 
    	CALL P_RET_PROCESS_INV_POINTS (
										#{compCode, 				mode=IN, jdbcType=NUMERIC},
										#{branchCode, 				mode=IN, jdbcType=NUMERIC},
										#{trsAcBr, 					mode=IN, jdbcType=NUMERIC},
										#{trsAcCy, 					mode=IN, jdbcType=NUMERIC},
										#{trsAcGl, 					mode=IN, jdbcType=NUMERIC},
										#{trsAcCif, 				mode=IN, jdbcType=NUMERIC},
										#{trsAcSl, 					mode=IN, jdbcType=NUMERIC},
										#{entriesLevel,				mode=IN, jdbcType=VARCHAR},
										#{trsNo, 					mode=IN, jdbcType=NUMERIC},
										#{ivCrud,					mode=IN, jdbcType=VARCHAR},
										#{userId,					mode=IN, jdbcType=VARCHAR},
										#{runningDate,				mode=IN, jdbcType=DATE},
										#{cvAmount,					mode=OUT,jdbcType=NUMERIC},
										#{fcAmount,					mode=OUT,jdbcType=NUMERIC},
										#{errorCode,				mode=OUT,jdbcType=NUMERIC},
										#{errorMessage,				mode=OUT,jdbcType=VARCHAR}
    	)
	}				                   	
   </select> 
   
   <select id="commonPosting" 	parameterType="trxMgntSC" statementType="CALLABLE">
	{ CALL P_COMMON_POSTING    (#{compCode			,mode=IN, 	jdbcType=NUMERIC},
								#{branchCode		,mode=IN, 	jdbcType=NUMERIC},
								#{systemDate 		,mode=IN, 	jdbcType=DATE 	},
								#{systemDate 		,mode=IN, 	jdbcType=DATE 	},								
								#{appName			,mode=IN, 	jdbcType=VARCHAR},
								#{flag				,mode=IN, 	jdbcType=VARCHAR},
								#{langCode			,mode=IN, 	jdbcType=VARCHAR},
								#{key				,mode=IN, 	jdbcType=VARCHAR},
								#{trsNo				,mode=IN, 	jdbcType=NUMERIC},
								#{baseCurrencyCode	,mode=IN, 	jdbcType=NUMERIC},
								#{systemDate 		,mode=IN, 	jdbcType=DATE 	},
								#{valid				,mode=IN, 	jdbcType=NUMERIC},
								#{reason			,mode=IN, 	jdbcType=VARCHAR},
								#{batchNo			,mode=OUT, 	jdbcType=NUMERIC},
								#{opNo				,mode=OUT, 	jdbcType=NUMERIC},
								#{branchesOut		,mode=OUT,	jdbcType=VARCHAR},
								#{errorMessage		,mode=OUT,	jdbcType=VARCHAR},
								#{errorCode 		,mode=OUT,	jdbcType=NUMERIC})}
	</select>
	
	<select id="returnCheckAllowedCYs" parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL P_RET_CHECK_ALLOWED_FILER_CY(  #{compCode, 						mode=IN,  jdbcType=NUMERIC},
                                 		  #{branchCode, 				    mode=IN,  jdbcType=NUMERIC},
                                 		  #{userId, 				    	mode=IN,  jdbcType=VARCHAR},
                                 		  #{trxType,						mode=IN,  jdbcType=NUMERIC},
                                 		  #{trsAcCy,						mode=IN,  jdbcType=NUMERIC},
                                 		  #{trsAcCif,						mode=IN,  jdbcType=NUMERIC},
                                 		  #{sign,							mode=IN,  jdbcType=VARCHAR},
                                 		  #{errType,						mode=OUT, jdbcType=VARCHAR},
                                 		  #{errorCode ,						mode=OUT, jdbcType=NUMERIC},
                                 		  #{errorMessage ,					mode=OUT, jdbcType=VARCHAR} )}
		                   	
	</select>
	<select id="callFmsWrapGetMosharakaDetails" parameterType="accountsManagementCO" statementType="CALLABLE">
	{ CALL P_FMS_WRAP_GET_MOSHARAKA_DTLS(  #{loginCompCode,						mode=IN,  jdbcType=NUMERIC},
  										   #{loginBraCode,						mode=IN,  jdbcType=NUMERIC},
                              		   	   #{amfVO.FACILITY_NO,					mode=IN,  jdbcType=NUMERIC},
		                   				   #{amfVO.FACILITY_SUB_LIMIT,    		mode=IN,  jdbcType=NUMERIC},
										   #{nullDec, 							mode=IN,  jdbcType=NUMERIC},
										   #{nullDec, 							mode=IN,  jdbcType=NUMERIC},
										   #{nullDate,							mode=IN,  jdbcType=DATE   },	
		                   				   #{fmsFacilityDetVO.MARGIN_RATE,		mode=OUT, jdbcType=NUMERIC},		
		                   				   #{fmsFacilityDetVO.FLOATING_RATE, 	mode=OUT, jdbcType=NUMERIC},
										   #{nullDec, 							mode=OUT, jdbcType=NUMERIC},
										   #{nullDec, 							mode=OUT, jdbcType=NUMERIC},
										   #{nullDate,							mode=OUT, jdbcType=DATE   },		
										   #{nullStr,			   				mode=OUT, jdbcType=VARCHAR},												 
										   #{nullDec, 							mode=OUT, jdbcType=NUMERIC},
										   #{nullDec, 							mode=OUT, jdbcType=NUMERIC},
										   #{nullDec, 							mode=OUT, jdbcType=NUMERIC},
										   #{infoErrorCode,				 		mode=OUT,jdbcType=NUMERIC},
			             		      	   #{errorText, 					 	mode=OUT,jdbcType=VARCHAR} )}				             		      						             		     
	</select>
	
	<select id="callChecksumDigit" parameterType="cifSC" statementType="CALLABLE" >
		{ CALL P_RET_CHECKSUM_LUHN(
				              #{checksumDigit ,			 mode=IN,jdbcType=VARCHAR},
				              #{code ,			 		 mode=OUT,jdbcType=NUMERIC}
                       		 )
		}
	</select>
	
	<select id="callCheckRecRemittanceData" parameterType="trxMgntSC" statementType="CALLABLE">
      { CALL P_RET_CHECK_REC_REMIT_DATA
      	(
      		#{compCode, 					mode=IN, jdbcType=NUMERIC},
			#{branchCode, 				    mode=IN, jdbcType=NUMERIC},
			#{trsNo, 				    	mode=IN, jdbcType=NUMERIC},
			#{userId, 						mode=IN, jdbcType=VARCHAR},
			#{systemDate,					mode=IN, jdbcType=DATE},
			#{type, 						mode=IN, jdbcType=VARCHAR},
			#{errType,						mode=OUT,jdbcType=VARCHAR},
			#{errorCode,					mode=OUT,jdbcType=NUMERIC},
			#{errorMessage,					mode=OUT,jdbcType=VARCHAR} )
	  }
	
    </select>
    
   <select id="getTransactionAccount" parameterType="trxMgntSC" statementType="CALLABLE">
      { CALL P_ATM_GET_TRX_ACCOUNT_EXT
      	(
      		#{compCode, 					mode=IN, jdbcType=NUMERIC},
			#{branchCode, 				    mode=IN, jdbcType=NUMERIC},
			#{trxType, 				    	mode=IN, jdbcType=NUMERIC},
			#{trsCy, 						mode=IN, jdbcType=NUMERIC},
			#{drCrType,						mode=IN, jdbcType=VARCHAR},
			#{trsAcBr, 						mode=OUT, jdbcType=NUMERIC},
			#{trsAcCy, 						mode=OUT, jdbcType=NUMERIC},
			#{trsAcGl, 						mode=OUT, jdbcType=NUMERIC},
			#{trsAcCif, 					mode=OUT, jdbcType=NUMERIC},
			#{trsAcSl, 						mode=OUT, jdbcType=NUMERIC},
			#{status, 						mode=OUT, jdbcType=VARCHAR},
			#{sign, 						mode=OUT, jdbcType=VARCHAR},
			#{accAddRef, 					mode=OUT, jdbcType=VARCHAR},
			#{errorCode,					mode=OUT,jdbcType=NUMERIC},
			#{errorMessage,					mode=OUT,jdbcType=VARCHAR} )
	  }
	
    </select>
     <select id="getCheckIdVal" parameterType="trxMgntSC" statementType="CALLABLE">
    {	CALL P_RET_GET_CHECKID
    	(
      		#{idNo, 					mode=IN, jdbcType=VARCHAR},
			#{idNoReturnVal, 			mode=OUT, jdbcType=NUMERIC})
	}
    </select>
    
    
    <select id="callRetRetriveSegCharges" parameterType="accountChargesSC" statementType="CALLABLE">
    { CALL P_RET_SEGMENTATION_RETRIEVE(	  #{compCode, 			mode=IN, jdbcType=NUMERIC},
										  #{branchCode,			mode=IN, jdbcType=NUMERIC},
										  #{ivCrud,				mode=IN, jdbcType=VARCHAR},
										  #{userId,				mode=IN, jdbcType=VARCHAR},
										  #{runningDate,		mode=IN, jdbcType=TIMESTAMP},
										  #{action,				mode=IN, jdbcType=VARCHAR},
										  #{screenSrc,			mode=IN, jdbcType=VARCHAR},
										  #{entityType,			mode=IN, jdbcType=VARCHAR},
										  #{entityCode,			mode=IN, jdbcType=NUMERIC},
										  #{productType,		mode=IN, jdbcType=VARCHAR},
										  #{productCode,		mode=IN, jdbcType=VARCHAR},
										  #{accBr,				mode=IN, jdbcType=NUMERIC},
										  #{accCy,				mode=IN, jdbcType=NUMERIC},
										  #{accGl,				mode=IN, jdbcType=NUMERIC},
										  #{accCif,				mode=IN, jdbcType=NUMERIC},
										  #{accSl,				mode=IN, jdbcType=NUMERIC},										  
				                   		  #{errType, 			mode=OUT,jdbcType=VARCHAR},
				                   		  #{errorCode,			mode=OUT,jdbcType=NUMERIC}, 
				                   		  #{errorMessage, 		mode=OUT,jdbcType=VARCHAR}
				                )}
	</select>
	
	<select id="callSaveSegmentationCharges" parameterType="accountChargesSC" statementType="CALLABLE">
    { CALL P_RET_SEGMENTATION_SAVE	(	  #{compCode, 			mode=IN, jdbcType=NUMERIC},
										  #{branchCode,			mode=IN, jdbcType=NUMERIC},
										  #{ivCrud,				mode=IN, jdbcType=VARCHAR},
										  #{userId,				mode=IN, jdbcType=VARCHAR},
										  #{runningDate,		mode=IN, jdbcType=TIMESTAMP},
										  #{screenSrc,			mode=IN, jdbcType=VARCHAR},
										  #{action,				mode=IN, jdbcType=VARCHAR},
										  #{segStartDate,		mode=IN, jdbcType=TIMESTAMP},
										  #{entityType,			mode=IN, jdbcType=VARCHAR},
										  #{entityCode,			mode=IN, jdbcType=NUMERIC},								
										  #{accBr,				mode=IN, jdbcType=NUMERIC},
										  #{accCy,				mode=IN, jdbcType=NUMERIC},
										  #{accGl,				mode=IN, jdbcType=NUMERIC},
										  #{accCif,				mode=IN, jdbcType=NUMERIC},
										  #{accSl,				mode=IN, jdbcType=NUMERIC},										  
				                   		  #{errType, 			mode=OUT,jdbcType=VARCHAR},
				                   		  #{errorCode,			mode=OUT,jdbcType=NUMERIC}, 
				                   		  #{errorMessage, 		mode=OUT,jdbcType=VARCHAR}
				                )}
	</select>
	
    
	<select id="checkBlackListRestriction" parameterType="BlackListSC" statementType="CALLABLE">
      { CALL P_RET_CHECK_BLACKLIST_RESTRICT( 
								#{compCode, 				mode=IN, 	jdbcType=NUMERIC},
								#{branchCode, 				mode=IN, 	jdbcType=NUMERIC},
								#{restrictFactor,   		mode=IN, 	jdbcType=VARCHAR},
								#{entityCode,    			mode=IN, 	jdbcType=NUMERIC},
								#{cif, 						mode=IN, 	jdbcType=NUMERIC},
								#{userId, 					mode=IN, 	jdbcType=VARCHAR},
								#{cardType, 				mode=IN, 	jdbcType=VARCHAR},
								#{reasonCode,				mode=OUT, 	jdbcType=NUMERIC},
								#{returnedValue,			mode=OUT, 	jdbcType=NUMERIC},
								#{restrictionPeriod,		mode=OUT, 	jdbcType=NUMERIC},
								#{restrictionPeriodType,	mode=OUT, 	jdbcType=VARCHAR},
								#{errorCode,				mode=OUT, 	jdbcType=NUMERIC},
								#{errorMessage,				mode=OUT, 	jdbcType=VARCHAR},
								#{errorMessage2,			mode=OUT, 	jdbcType=VARCHAR})
                        	}
    </select>   
    <select id="checkClosingPeriod" parameterType="trxMgntSC" statementType="CALLABLE">
		{ CALL P_RET_CHECK_CLOSED_PERIOD(
		#{compCode ,mode=IN ,jdbcType=NUMERIC},
		#{branchCode ,mode=IN,jdbcType=NUMERIC },	
		#{reference,mode=IN ,jdbcType=VARCHAR },	
		#{status,mode=IN ,jdbcType=VARCHAR },
		#{action,mode=IN  ,jdbcType=VARCHAR},
		#{trsDate ,mode=IN , jdbcType=DATE},
		#{systemDate ,mode=IN, jdbcType=TIMESTAMP },
		#{errType,mode=OUT,jdbcType=VARCHAR  },
		#{errorCode ,mode=OUT ,jdbcType=NUMERIC},
		#{errorMessage	,mode=OUT ,jdbcType=LONGVARCHAR,typeHandler=com.path.lib.common.base.ibatis3.handlers.PathLongVarcharHandler} )}
	</select>
	
	<select id="retRestrictAccCifCreate" parameterType="accountsManagementCO"
		statementType="CALLABLE">
		{ CALL P_RET_RESTRICT_ACCCIF_CREATION(
			#{amfVO.COMP_CODE,       mode=IN,    jdbcType=NUMERIC},
			#{amfVO.BRANCH_CODE,     mode=IN, 	jdbcType=NUMERIC},
			#{runningDate,  	 	 mode=IN, 	jdbcType=DATE},
			#{loginUserId, 	 		 mode=IN, 	jdbcType=VARCHAR},
			#{origin, 	     		 mode=IN, 	jdbcType=VARCHAR},
			#{amfVO.BRANCH_CODE, 	 mode=IN, 	jdbcType=NUMERIC},
			#{amfVO.CURRENCY_CODE,   mode=IN, 	jdbcType=NUMERIC},
			#{amfVO.GL_CODE, 	     mode=IN, 	jdbcType=NUMERIC},
			#{amfVO.CIF_SUB_NO, 	 mode=IN, 	jdbcType=NUMERIC},
			#{amfVO.SL_NO, 	   	     mode=IN, 	jdbcType=NUMERIC},
			#{errorType,             mode=OUT, 	jdbcType=VARCHAR},
			#{errorCode,   			 mode=OUT, 	jdbcType=NUMERIC},
			#{errorMsg,   			 mode=OUT, 	jdbcType=VARCHAR})
		}

	</select>
	
	

	<select id="retApiCreateAccount" parameterType="accountCO"
		statementType="CALLABLE">
		{ CALL P_RET_API_CREATE_ACCOUNT(
			#{amfVO.COMP_CODE, 		 		mode=IN,jdbcType=NUMERIC},
			#{amfVO.BRANCH_CODE, 		 	mode=IN,jdbcType=NUMERIC},
			#{amfVO.DATE_OPND, 		 		mode=IN,jdbcType=DATE},
			#{amfVO.ENTERED_BY, 		 	mode=IN,jdbcType=VARCHAR},
			#{amfVO.CURRENCY_CODE, 		 	mode=IN,jdbcType=NUMERIC},
			#{amfVO.GL_CODE, 		 		mode=IN,jdbcType=NUMERIC},
			#{amfVO.CIF_SUB_NO, 	 		mode=IN,jdbcType=NUMERIC},
			#{amfVO.RENEW, 		 			mode=IN,jdbcType=VARCHAR},
			#{amfVO.PFT_POST_TO, 			mode=IN,jdbcType=VARCHAR},
			#{amfVO.EXT_TRF, 		 		mode=IN,jdbcType=VARCHAR},
			#{amfVO.DIV, 		 			mode=IN,jdbcType=NUMERIC},
			#{amfVO.DEPT, 		 			mode=IN,jdbcType=NUMERIC},
			#{amfVO.STATUS, 		 		mode=IN,jdbcType=VARCHAR},
			#{amfVO.UNIT_CODE, 	   			mode=IN,jdbcType=NUMERIC},
			#{amfVO.ADDITIONAL_REFERENCE,	mode=IN,jdbcType=VARCHAR},
			#{createFrom,					mode=IN,jdbcType=VARCHAR},
			#{pointRate, 		 			mode=OUT,jdbcType=NUMERIC},
			#{amfVO.MATURITY_DTE, 		 	mode=OUT,jdbcType=DATE},
			#{newBS, 		 				mode=OUT,jdbcType=NUMERIC},
			#{amfVO.BRIEF_NAME_ENG,			mode=OUT,jdbcType=VARCHAR},
			#{sl_no, 		 				mode=OUT,jdbcType=NUMERIC},
			#{error_type,       			mode=OUT,jdbcType=VARCHAR}, 
			#{errorCode,					mode=OUT,jdbcType=NUMERIC},
			#{errorMsg, 					mode=OUT,jdbcType=VARCHAR}
			)
		}

	</select>
	
    	<select id="wrapCoreGetVatDetails" parameterType="accountCO"
		statementType="CALLABLE">
		{ CALL P_WRAP_CORE_GET_VAT_DETAILS(
			#{amfVO.COMP_CODE, 		 	mode=IN,jdbcType=NUMERIC},
			#{amfVO.BRANCH_CODE, 		mode=IN,jdbcType=NUMERIC},
			#{loginUserId, 				mode=OUT,jdbcType=VARCHAR},
			#{runningDate, 		 		mode=IN,jdbcType=DATE},
			#{taxVatCode, 		 		mode=IN,jdbcType=NUMERIC},
			#{amfVO.BRANCH_CODE, 		mode=IN,jdbcType=NUMERIC},
			#{amfVO.CURRENCY_CODE, 		mode=IN,jdbcType=NUMERIC},
			#{amfVO.GL_CODE, 			mode=IN,jdbcType=NUMERIC},
			#{amfVO.CIF_SUB_NO, 	 	mode=IN,jdbcType=NUMERIC},
			#{vatPercentage, 			mode=OUT,jdbcType=NUMERIC},
			#{vatMinAmount, 		 	mode=OUT,jdbcType=NUMERIC},
			#{vatMaxAmount, 		 	mode=OUT,jdbcType=NUMERIC},
			#{vatInputCy,				mode=OUT,jdbcType=NUMERIC},
			#{vatInputGl,				mode=OUT,jdbcType=NUMERIC},
			#{vatInputCif, 		 		mode=OUT,jdbcType=NUMERIC},
			#{vatInputSl,       		mode=OUT,jdbcType=NUMERIC},
			#{amfSC.CURRENCY_CODE,		mode=OUT,jdbcType=NUMERIC},
			#{amfSC.GL_CODE,			mode=OUT,jdbcType=NUMERIC},
			#{amfSC.CIF_SUB_NO, 		mode=OUT,jdbcType=NUMERIC},
			#{amfSC.SL_NO,       		mode=OUT,jdbcType=NUMERIC}, 
			#{errorCode,				mode=OUT,jdbcType=NUMERIC},
			#{errorMsg, 				mode=OUT,jdbcType=VARCHAR}
			)
		}

	</select>

	<select id="returnFMSWrapGetCardFacDet" parameterType="cardsManagementCO" statementType="CALLABLE">
		{ CALL P_FMS_WRAP_GET_CARD_FAC_DET(
			#{cardsMgtVO.COMP_CODE,                   	mode=IN,jdbcType=NUMERIC},
			#{cardsMgtVO.BRANCH_CODE,                 	mode=IN,jdbcType=NUMERIC},
			#{cardsMgtVO.CIF, 			              	mode=IN,jdbcType=NUMERIC},
			#{cardsMgtVO.CARD_TYPE,                   	mode=IN,jdbcType=NUMERIC},
			#{fmsCreditCardDetailsVO.BRANCH_CODE,     	mode=OUT,jdbcType=NUMERIC},
			#{fmsFacilityDetVO.CODE, 		          	mode=OUT,jdbcType=NUMERIC},
			#{fmsCreditCardDetailsVO.SUBLIMIT_LINE_NBR,	mode=OUT,jdbcType=NUMERIC},
			#{fmsCreditCardDetailsVO.LINE_NBR,  		mode=OUT,jdbcType=NUMERIC},
			#{errorCode,				              	mode=OUT,jdbcType=NUMERIC},
			#{errorMessage, 				          	mode=OUT,jdbcType=VARCHAR}
			
			)
		}
	</select>
	
	<select id="executeSegmentationProcess" parameterType="com.path.vo.core.segmentation.CustSegmentationSC" statementType="CALLABLE">
    	{ CALL P_RET_EXECUTE_SEGMENT_PROCESS(
    									#{compCode,		 		mode=IN, jdbcType=NUMERIC},
    									#{branchCode,			mode=IN, jdbcType=NUMERIC},
    									#{cifNo,				mode=IN, jdbcType=NUMERIC},    									
    									#{userId,			 	mode=IN, jdbcType=VARCHAR},
    									#{runType,			 	mode=IN, jdbcType=VARCHAR},
    									#{runningDate,			mode=IN,	jdbcType=DATE},
    									#{isClassified,			mode=OUT, jdbcType=NUMERIC},
    									#{errorCode,		 	mode=OUT,jdbcType=NUMERIC},
    									#{errorMessage, 		mode=OUT,jdbcType=VARCHAR}
    							)}
    	
    </select>
	
	<select id="updateRealBenefRecords" parameterType="com.path.vo.core.csmfom.FOMRealBeneficiariesCO" statementType="CALLABLE">
    {	CALL P_RET_UPDATE_REALBENEF_RECORDS
    	   (#{cifProxyBenfVO.COMP_CODE, 	mode=IN, jdbcType=NUMERIC},
      		#{cifProxyBenfVO.CIF_NO, 		mode=IN, jdbcType=NUMERIC},
      		#{cifProxyBenfVO.LINE_NO, 		mode=IN, jdbcType=NUMERIC},
      		#{cifProxyBenfVO.NICKNAME, 		mode=IN, jdbcType=VARCHAR},
      		#{cifProxyBenfVO.NICKNAME, 		mode=IN, jdbcType=VARCHAR},
      		#{cifProxyBenfVO.STATUS, 		mode=IN, jdbcType=VARCHAR},
      		#{loginUserId, 					mode=IN, jdbcType=VARCHAR},
      		#{cancelDeleteDate, 			mode=IN, jdbcType=DATE},
      		#{olErrorCode, 					mode=OUT, jdbcType=NUMERIC},
      		#{osErrorDesc, 					mode=OUT, jdbcType=VARCHAR})
	}
    </select>
    
     <select id="callIncidentReportAlertProcedure" parameterType="incidentReportSC" statementType="CALLABLE">
    { CALL P_RET_ALERT_INCIDENT_REPORT( 
    						#{compCode,mode=IN,jdbcType=NUMERIC},
					    	#{branchCode,mode=IN,jdbcType=NUMERIC},
					    	#{incdCode,mode=IN,jdbcType=NUMERIC},
					    	#{alertStatus,mode=IN,jdbcType=VARCHAR},
					    	#{errorCode,mode=OUT,jdbcType=NUMERIC},
                        	#{errorMessage,mode=OUT,jdbcType=VARCHAR})
                        	}
  	</select>
	<select id="checkEftDebitTransaction"	parameterType="trxMgntSC"	statementType="CALLABLE">
    { CALL  P_RET_CHECK_EFT_DEBIT_TRX( #{compCode, 	 	 	mode=IN,jdbcType=NUMERIC},
                                       #{systemDate,       	mode=IN,jdbcType=DATE},
                                       #{benefBank,			mode=IN,jdbcType=NUMERIC},
                                       #{trsAcBr,           mode=IN, jdbcType=NUMERIC},
		                               #{trsAcCy,            mode=IN, jdbcType=NUMERIC},
		                               #{trsAcGl,            mode=IN, jdbcType=NUMERIC},
		                               #{trsAcCif,           mode=IN, jdbcType=NUMERIC},
		                               #{trsAcSl,            mode=IN, jdbcType=NUMERIC},
		                               #{trxType,           mode=IN ,jdbcType=NUMERIC},
		                               #{reference,	 		mode=IN, jdbcType=VARCHAR},
		                               #{trxAmount,			mode=IN, jdbcType=NUMERIC},
				                   	   #{errorCode,	  		mode=OUT, jdbcType=NUMERIC},		   
								  	   #{errorMessage,	  	mode=OUT, jdbcType=VARCHAR}		                               
				                   )}
	</select> 
	
	<select id="balanceSettlement" parameterType="trxMgntSC"	statementType="CALLABLE">
	{CALL  P_RET_SETTLEMENT( 		#{compCode, 	 	 	mode=IN,jdbcType=NUMERIC},
	                              	#{branchCode,	 		mode=IN,jdbcType=NUMERIC},
	                              	#{trsNo,	 	  		mode=IN,jdbcType=NUMERIC},
	                              	#{runningDate , 		mode=IN, jdbcType=TIMESTAMP},
	                              	#{errorCode,	  		mode=OUT, jdbcType=NUMERIC},		   
								  	#{errorMessage,	  		mode=OUT, jdbcType=VARCHAR}
	                              	)}
	</select> 


	<select id="checkCertificateCreation" parameterType="trxMgntSC" statementType="CALLABLE">
    { CALL P_RET_CHECK_CERTIFICATE( #{compCode,		 	mode=IN,    jdbcType=NUMERIC},
				    			    #{branchCode,		mode=IN,    jdbcType=NUMERIC},
				    			    #{code,				mode=IN,    jdbcType=NUMERIC},
				    			    #{userId, 			mode=IN, 	jdbcType=VARCHAR},
				    			    #{runningDate,		mode=IN,	jdbcType=DATE},
				    			 	#{errorCode,		mode=OUT, 	jdbcType=NUMERIC},
									#{errorMessage,	    mode=OUT, 	jdbcType=VARCHAR},
									#{errType,			mode=OUT, 	jdbcType=VARCHAR})
                        		}
    </select>
	<select id="callCheckCertificateData" parameterType="accountSC" statementType="CALLABLE">
      { CALL P_RET_CHECK_CERTIFICATE_DATA( 
								#{compCode, 				mode=IN, 	jdbcType=NUMERIC},
								#{userId,         			mode=IN, 	jdbcType=VARCHAR},
								#{branchCode,  				mode=IN, 	jdbcType=NUMERIC},
								#{certificateCode, 			mode=IN, 	jdbcType=NUMERIC},
								#{errorType,				mode=OUT, 	jdbcType=VARCHAR},
								#{errorCode,				mode=OUT, 	jdbcType=NUMERIC},
								#{errorMessage,				mode=OUT, 	jdbcType=VARCHAR})
                        	}
    </select>  
    
    
       <select id="executeScoringProcess" parameterType="fomCO" statementType="CALLABLE">
    	{ CALL P_RET_WRAP_EXEC_SCORE_PROCESS(
    									#{loginCompCode,		mode=IN, jdbcType=NUMERIC},
    									#{loginBraCode,			mode=IN, jdbcType=NUMERIC},
										#{cifVO.CIF_NO,			mode=IN,jdbcType=NUMERIC},
										#{loginUserId,			mode=IN, jdbcType=VARCHAR},
										#{runType,				mode=IN, jdbcType=VARCHAR},
										#{runningDate, 			mode=IN, jdbcType=DATE},
										#{appName,				mode=IN, jdbcType=VARCHAR},
										#{scoreRiskValue,		mode=OUT, 	jdbcType=NUMERIC},
										#{errorCode,			mode=OUT, 	jdbcType=NUMERIC},
										#{errorDesc,			mode=OUT, 	jdbcType=VARCHAR})}
    	
    </select>
    
    <select id="returnIisChargeDetails" parameterType="com.path.vo.core.chargesrefund.ChargesRefundSC" statementType="CALLABLE">
	{ CALL P_API_IIS_WRAP_GET_CHARGE_DET (	#{compCode,        	mode=IN, jdbcType=NUMERIC},
											#{branchCode,		mode=IN, jdbcType=NUMERIC},
		 									 #{entityType,      mode=IN, jdbcType=VARCHAR},
		 									 #{custAccCif,      mode=IN, jdbcType=NUMERIC},	 									 
										  	 #{custAccBr,      	mode=IN, jdbcType=NUMERIC},
										  	 #{custAccCy,      	mode=IN, jdbcType=NUMERIC},
										  	 #{custAccGl,    	mode=IN, jdbcType=NUMERIC},
										  	 #{custAccCif,      mode=IN, jdbcType=NUMERIC},
										     #{custAccSl,     	mode=IN, jdbcType=NUMERIC},
										     #{fromDate,        mode=IN, jdbcType=DATE}, 
										     #{enableLogging,	mode=IN, jdbcType=VARCHAR},
										     #{userId,			mode=IN, jdbcType=VARCHAR},
										     #{runningDate, 	mode=IN, jdbcType=DATE}, 
										     #{appName, 		mode=IN, jdbcType=VARCHAR},
										     <if test="isSybase != 1">
										     
										       #{sysRefCursor, mode=OUT, jdbcType=CURSOR, javaType=java.sql.ResultSet, resultMap=chargesRefundMapper.chargeDetailsListMap},
										      
										      </if> 
										     #{errorCode,       mode=OUT,jdbcType=NUMERIC},
										     #{errorDesc,    mode=OUT,jdbcType=VARCHAR}
 
									     )  }
	</select>
</mapper>
